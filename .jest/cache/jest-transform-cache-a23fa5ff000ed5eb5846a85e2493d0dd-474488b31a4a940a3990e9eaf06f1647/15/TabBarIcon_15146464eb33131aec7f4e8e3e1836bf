7fd3ee0ddc4c1809d3ce1c5dbb92c468
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = TabBarIcon;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _Badge = _interopRequireDefault(require("./Badge"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function TabBarIcon(_ref) {
  var _ = _ref.route,
    horizontal = _ref.horizontal,
    badge = _ref.badge,
    badgeStyle = _ref.badgeStyle,
    activeOpacity = _ref.activeOpacity,
    inactiveOpacity = _ref.inactiveOpacity,
    activeTintColor = _ref.activeTintColor,
    inactiveTintColor = _ref.inactiveTintColor,
    renderIcon = _ref.renderIcon,
    style = _ref.style;
  var size = 25;
  return _react.default.createElement(_reactNative.View, {
    style: [horizontal ? styles.iconHorizontal : styles.iconVertical, style]
  }, _react.default.createElement(_reactNative.View, {
    style: [styles.icon, {
      opacity: activeOpacity
    }]
  }, renderIcon({
    focused: true,
    size: size,
    color: activeTintColor
  })), _react.default.createElement(_reactNative.View, {
    style: [styles.icon, {
      opacity: inactiveOpacity
    }]
  }, renderIcon({
    focused: false,
    size: size,
    color: inactiveTintColor
  })), _react.default.createElement(_Badge.default, {
    visible: badge != null,
    style: [styles.badge, horizontal ? styles.badgeHorizontal : styles.badgeVertical, badgeStyle],
    size: size * 3 / 4
  }, badge));
}
var styles = _reactNative.StyleSheet.create({
  icon: {
    position: 'absolute',
    alignSelf: 'center',
    alignItems: 'center',
    justifyContent: 'center',
    height: '100%',
    width: '100%',
    minWidth: 25
  },
  iconVertical: {
    flex: 1
  },
  iconHorizontal: {
    height: '100%',
    marginTop: 3
  },
  badge: {
    position: 'absolute',
    left: 3
  },
  badgeVertical: {
    top: 3
  },
  badgeHorizontal: {
    top: 7
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9CYWRnZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiVGFiQmFySWNvbiIsIl9yZWYiLCJfIiwicm91dGUiLCJob3Jpem9udGFsIiwiYmFkZ2UiLCJiYWRnZVN0eWxlIiwiYWN0aXZlT3BhY2l0eSIsImluYWN0aXZlT3BhY2l0eSIsImFjdGl2ZVRpbnRDb2xvciIsImluYWN0aXZlVGludENvbG9yIiwicmVuZGVySWNvbiIsInN0eWxlIiwic2l6ZSIsImNyZWF0ZUVsZW1lbnQiLCJWaWV3Iiwic3R5bGVzIiwiaWNvbkhvcml6b250YWwiLCJpY29uVmVydGljYWwiLCJpY29uIiwib3BhY2l0eSIsImZvY3VzZWQiLCJjb2xvciIsInZpc2libGUiLCJiYWRnZUhvcml6b250YWwiLCJiYWRnZVZlcnRpY2FsIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsInBvc2l0aW9uIiwiYWxpZ25TZWxmIiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiaGVpZ2h0Iiwid2lkdGgiLCJtaW5XaWR0aCIsImZsZXgiLCJtYXJnaW5Ub3AiLCJsZWZ0IiwidG9wIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3ZpZXdzL1RhYkJhckljb24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFDQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFRQSxJQUFBRSxNQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFBNEIsU0FBQUQsdUJBQUFJLEdBQUE7RUFBQSxPQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBO0lBQUFFLE9BQUEsRUFBQUY7RUFBQTtBQUFBO0FBbUJiLFNBQVNHLFVBQVVBLENBQUFDLElBQUEsRUFXeEI7RUFBQSxJ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