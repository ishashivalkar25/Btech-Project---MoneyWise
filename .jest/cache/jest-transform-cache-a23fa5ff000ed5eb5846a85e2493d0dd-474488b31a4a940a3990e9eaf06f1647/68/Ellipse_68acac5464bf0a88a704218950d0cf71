5bdf4faea7ee850e3eccf56b6245a2c8
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault2(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault2(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault2(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault2(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault2(require("@babel/runtime/helpers/getPrototypeOf"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _extractProps = require("../lib/extract/extractProps");
var _Shape = _interopRequireDefault(require("./Shape"));
var _EllipseNativeComponent = _interopRequireDefault(require("../fabric/EllipseNativeComponent"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var Ellipse = function (_Shape$default) {
  (0, _inherits2.default)(Ellipse, _Shape$default);
  var _super = _createSuper(Ellipse);
  function Ellipse() {
    (0, _classCallCheck2.default)(this, Ellipse);
    return _super.apply(this, arguments);
  }
  (0, _createClass2.default)(Ellipse, [{
    key: "render",
    value: function render() {
      var _this = this;
      var props = this.props;
      var cx = props.cx,
        cy = props.cy,
        rx = props.rx,
        ry = props.ry;
      var ellipseProps = Object.assign({}, (0, _extractProps.extract)(this, props), (0, _extractProps.stringifyPropsForFabric)({
        cx: cx,
        cy: cy,
        rx: rx,
        ry: ry
      }));
      return _react.default.createElement(_EllipseNativeComponent.default, _extends({
        ref: function ref(_ref) {
          return _this.refMethod(_ref);
        }
      }, ellipseProps));
    }
  }]);
  return Ellipse;
}(_Shape.default);
Ellipse.displayName = 'Ellipse';
Ellipse.defaultProps = {
  cx: 0,
  cy: 0,
  rx: 0,
  ry: 0
};
exports.default = Ellipse;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9leHRyYWN0UHJvcHMiLCJfU2hhcGUiLCJfRWxsaXBzZU5hdGl2ZUNvbXBvbmVudCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX2V4dGVuZHMiLCJPYmplY3QiLCJhc3NpZ24iLCJiaW5kIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImFwcGx5IiwiRWxsaXBzZSIsIl9TaGFwZSRkZWZhdWx0IiwiX2luaGVyaXRzMiIsIl9zdXBlciIsIl9jcmVhdGVTdXBlciIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwidmFsdWUiLCJyZW5kZXIiLCJfdGhpcyIsInByb3BzIiwiY3giLCJjeSIsInJ4IiwicnkiLCJlbGxpcHNlUHJvcHMiLCJleHRyYWN0Iiwic3RyaW5naWZ5UHJvcHNGb3JGYWJyaWMiLCJjcmVhdGVFbGVtZW50IiwicmVmIiwicmVmTWV0aG9kIiwiZGlzcGxheU5hbWUiLCJkZWZhdWx0UHJvcHMiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2VsZW1lbnRzL0VsbGlwc2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGFBQUEsR0FBQUQsT0FBQTtBQUVBLElBQUFFLE1BQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFHLHVCQUFBLEdBQUFKLHNCQUFBLENBQUFDLE9BQUE7QUFBNEQsU0FBQUQsdUJBQUFLLEdBQUE7RUFBQSxPQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBO0lBQUFFLE9BQUEsRUFBQUY7RUFBQTtBQUFBO0FBQUEs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