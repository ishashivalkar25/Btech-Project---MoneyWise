7a9de86fe3a640efc9ef43c0c035c18f
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RootSiblingParent = RootSiblingParent;
exports.RootSiblingPortal = RootSiblingPortal;
exports.default = void 0;
exports.setSiblingWrapper = setSiblingWrapper;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _ChildrenWrapper = _interopRequireDefault(require("./ChildrenWrapper"));
var _wrapRootComponent3 = _interopRequireDefault(require("./wrapRootComponent"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var siblingWrapper = function siblingWrapper(sibling) {
  return sibling;
};
function renderSibling(sibling) {
  return siblingWrapper(sibling);
}
if (!global.__rootSiblingsInjected && !global.__rootSiblingsDisabled) {
  _reactNative.AppRegistry.setWrapperComponentProvider(function () {
    return Root;
  });
  global.__rootSiblingsInjected = true;
}
function setSiblingWrapper(wrapper) {
  siblingWrapper = wrapper;
}
var _wrapRootComponent = (0, _wrapRootComponent3.default)(_ChildrenWrapper.default, renderSibling),
  Root = _wrapRootComponent.Root,
  defaultManager = _wrapRootComponent.manager;
var uuid = 0;
var managerStack = [defaultManager];
var inactiveManagers = new Set();
function getActiveManager() {
  for (var i = managerStack.length - 1; i >= 0; i--) {
    var manager = managerStack[i];
    if (!inactiveManagers.has(manager)) {
      return manager;
    }
  }
  return defaultManager;
}
var RootSiblingsManager = function () {
  function RootSiblingsManager(element, callback) {
    (0, _classCallCheck2.default)(this, RootSiblingsManager);
    this.id = "root-sibling-" + (uuid + 1);
    this.manager = getActiveManager();
    this.manager.update(this.id, element, callback);
    uuid++;
  }
  (0, _createClass2.default)(RootSiblingsManager, [{
    key: "update",
    value: function update(element, callback) {
      this.manager.update(this.id, element, callback);
    }
  }, {
    key: "destroy",
    value: function destroy(callback) {
      this.manager.destroy(this.id, callback);
    }
  }]);
  return RootSiblingsManager;
}();
exports.default = RootSiblingsManager;
function RootSiblingParent(props) {
  var inactive = props.inactive;
  var _useState = (0, _react.useState)(function () {
      var _wrapRootComponent2 = (0, _wrapRootComponent3.default)(_ChildrenWrapper.default, renderSibling),
        parentRoot = _wrapRootComponent2.Root,
        parentManager = _wrapRootComponent2.manager;
      managerStack.push(parentManager);
      if (inactive) {
        inactiveManagers.add(parentManager);
      }
      return {
        Root: parentRoot,
        manager: parentManager
      };
    }),
    _useState2 = (0, _slicedToArray2.default)(_useState, 1),
    sibling = _useState2[0];
  (0, _react.useEffect)(function () {
    return function () {
      if (sibling) {
        var index = managerStack.indexOf(sibling.manager);
        if (index > 0) {
          managerStack.splice(index, 1);
        }
      }
    };
  }, [sibling]);
  if (inactive && sibling && !inactiveManagers.has(sibling.manager)) {
    inactiveManagers.add(sibling.manager);
  } else if (!inactive && sibling && inactiveManagers.has(sibling.manager)) {
    inactiveManagers.delete(sibling.manager);
  }
  var Parent = sibling.Root;
  return (0, _jsxRuntime.jsx)(Parent, {
    children: props.children
  });
}
function RootSiblingPortal(props) {
  var _useState3 = (0, _react.useState)(function () {
      return new RootSiblingsManager(null);
    }),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 1),
    sibling = _useState4[0];
  sibling.update(props.children);
  (0, _react.useEffect)(function () {
    if (sibling) {
      return function () {
        return sibling.destroy();
      };
    }
  }, [sibling]);
  return null;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcmVhY3ROYXRpdmUiLCJfQ2hpbGRyZW5XcmFwcGVyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl93cmFwUm9vdENvbXBvbmVudDMiLCJfanN4UnVudGltZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJzaWJsaW5nV3JhcHBlciIsInNpYmxpbmciLCJyZW5kZXJTaWJsaW5nIiwiZ2xvYmFsIiwiX19yb290U2libGluZ3NJbmplY3RlZCIsIl9fcm9vdFNpYmxpbmdzRGlzYWJsZWQiLCJBcHBSZWdpc3RyeSIsInNldFdyYXBwZXJDb21wb25lbnRQcm92aWRlciIsIlJvb3QiLCJzZXRTaWJsaW5nV3JhcHBlciIsIndyYXBwZXIiLCJfd3JhcFJvb3RDb21wb25lbnQiLCJ3cmFwUm9vdENvbXBvbmVudCIsIkNoaWxkcmVuV3JhcHBlciIsImRlZmF1bHRNYW5hZ2VyIiwibWFuYWdlciIsInV1aWQiLCJtYW5hZ2VyU3RhY2siLCJpbmFjdGl2ZU1hbmFnZXJzIiwiU2V0IiwiZ2V0QWN0aXZlTWFuYWdlciIsImkiLCJsZW5ndGgiLCJSb290U2libGluZ3NNYW5hZ2VyIiwiZWxlbWVudCIsImNhbGxiYWNrIiwiX2NsYXNzQ2FsbENoZWNrMiIsImlkIiwidXBkYXRlIiwiX2NyZWF0ZUNsYXNzMiIsInZhbHVlIiwiZGVzdHJveSIsImV4cG9ydHMiLCJSb290U2libGluZ1BhcmVudCIsInByb3BzIiwiaW5hY3RpdmUiLCJfdXNlU3RhdGUiLCJ1c2VTdGF0ZSIsIl93cmFwUm9vdENvbXBvbmVudDIiLCJwYXJlbnRSb290IiwicGFyZW50TWFuYWdlciIsInB1c2giLCJhZGQiLCJfdXNlU3RhdGUyIiwiX3NsaWNlZFRvQXJyYXkyIiwidXNlRWZmZWN0IiwiaW5kZXgiLCJpbmRleE9mIiwic3BsaWNlIiwiZGVsZXRlIiwiUGFyZW50IiwianN4IiwiY2hpbGRyZW4iLCJSb290U2libGluZ1BvcnRhbCIsIl91c2VTdGF0ZTMiLCJfdXNlU3RhdGU0Il0sInNvdXJjZXMiOlsiLi4vc3JjL1Jvb3RTaWJsaW5nc01hbmFnZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQU1BLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUVBLElBQUFFLGdCQUFBLEdBQUFDLHNCQUFBLENBQUFILE9BQUE7QUFDQSxJQUFBSSxtQkFBQSxHQUFBRCxzQkFBQSxDQUFBSCxPQUFBO0FBQTRFLElBQUFLLFdBQUEsR0FBQUwsT0FBQTtBQUFBLFNBQUFNLHlCQUFBQyxXQUFBLGVBQUFDLE9BQUEsa0NBQUFDLGlCQUFBLE9BQUFELE9BQUEsUUFBQUUsZ0JBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsV0FBQSxXQUFBQSxXQUFBLEdBQUFHLGdCQUFBLEdBQUFELGlCQUFBLEtBQUFGLFdBQUE7QUFBQSxTQUFBUix3QkFBQVksR0FBQSxFQUFBSixXQUFBLFNBQUFBLFdBQUEsSUFBQUksR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsV0FBQUQsR0FBQSxRQUFBQSxHQUFBLG9CQUFBQSxHQUFBLHdCQUFBQSxHQUFBLDRCQUFBRSxPQUFBLEVBQUFGLEdBQUEsVUFBQUcsS0FBQSxHQUFBUix3QkFBQSxDQUFBQyxXQUFBLE9BQUFPLEtBQUEsSUFBQUEsS0FBQSxDQUFBQyxHQUFBLENBQUFKLEdBQUEsWUFBQUcsS0FBQSxDQUFBRSxHQUFBLENBQUFMLEdBQUEsU0FBQU0sTUFBQSxXQUFBQyxxQkFBQSxHQUFBQyxNQUFBLENBQUFDLGNBQUEsSUFBQUQsTUFBQSxDQUFBRSx3QkFBQSxXQUFBQyxHQUFBLElBQUFYLEdBQUEsUUFBQVcsR0FBQSxrQkFBQUgsTUFBQSxDQUFBSSxTQUFBLENBQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBZCxHQUFBLEVBQUFXLEdBQUEsU0FBQUksSUFBQSxHQUFBUixxQkFBQSxHQUFBQyxNQUFBLENBQUFFLHdCQUFBLENBQUFWLEdBQUEsRUFBQVcsR0FBQSxjQUFBSSxJQUFBLEtBQUFBLElBQUEsQ0FBQVYsR0FBQSxJQUFBVSxJQUFBLENBQUFDLEdBQUEsS0FBQVIsTUFBQSxDQUFBQyxjQUFBLENBQUFILE1BQUEsRUFBQUssR0FBQSxFQUFBSSxJQUFBLFlBQUFULE1BQUEsQ0FBQUssR0FBQSxJQUFBWCxHQUFBLENBQUFXLEdBQUEsU0FBQUwsTUFBQSxDQUFBSixPQUFBLEdBQUFGLEdBQUEsTUFBQUcsS0FBQSxJQUFBQSxLQUFBLENBQUFhLEdBQUEsQ0FBQWhCLEdBQUEsRUFBQU0sTUFBQSxZQUFBQSxNQUFBO0FBRTVFLElBQUlXLGNBQWMsR0FBc0MsU0FBQUEsZUFBQUMsT0FBTztFQUFBLE9BQUlBLE9BQU87QUFBQTtBQUUxRSxTQUFTQyxhQUFhQSxDQUFDRCxPQUFrQjtFQUN2QyxPQUFPRCxjQUFjLENBQUNDLE9BQU8sQ0FBQztBQUNoQztBQUVBLElBQUksQ0FBQ0UsTUFBTSxDQUFDQyxzQkFBc0IsSUFBSSxDQUFDRCxNQUFNLENBQUNFLHNCQUFzQixFQUFFO0VBQ3BFQyx3QkFBVyxDQUFDQywyQkFBMkIsQ0FBQyxZQUFLO0lBQzNDLE9BQU9DLElBQUk7RUFDYixDQUFDLENBQUM7RUFDRkwsTUFBTSxDQUFDQyxzQkFBc0IsR0FBRyxJQUFJOztBQUdoQyxTQUFVSyxpQkFBaUJBLENBQUNDLE9BQTBDO0VBQzFFVixjQUFjLEdBQUdVLE9BQU87QUFDMUI7QUFFQSxJQUFBQyxrQkFBQSxHQUEwQyxJQUFBQywyQkFBaUIsRUFDekRDLHdCQUFlLEVBQ2ZYLGFBQWEsQ0FDZDtFQUhPTSxJQUFJLEdBQUFHLGtCQUFBLENBQUpILElBQUk7RUFBV00sY0FBYyxHQUFBSCxrQkFBQSxDQUF2QkksT0FBTztBQUlyQixJQUFJQyxJQUFJLEdBQVcsQ0FBQztBQUNwQixJQUFNQyxZQUFZLEdBQXlCLENBQUNILGNBQWMsQ0FBQztBQUMzRCxJQUFNSSxnQkFBZ0IsR0FBNEIsSUFBSUMsR0FBRyxFQUFFO0FBRTNELFNBQVNDLGdCQUFnQkEsQ0FBQTtFQUN2QixLQUFLLElBQUlDLENBQUMsR0FBR0osWUFBWSxDQUFDSyxNQUFNLEdBQUcsQ0FBQyxFQUFFRCxDQUFDLElBQUksQ0FBQyxFQUFFQSxDQUFDLEVBQUUsRUFBRTtJQUNqRCxJQUFNTixPQUFPLEdBQUdFLFlBQVksQ0FBQ0ksQ0FBQyxDQUFDO0lBQy9CLElBQUksQ0FBQ0gsZ0JBQWdCLENBQUMvQixHQUFHLENBQUM0QixPQUFPLENBQUMsRUFBRTtNQUNsQyxPQUFPQSxPQUFPOzs7RUFJbEIsT0FBT0QsY0FBYztBQUN2QjtBQUFDLElBRW9CUyxtQkFBbUI7RUFJdEMsU0FBQUEsb0JBQVlDLE9BQWtCLEVBQUVDLFFBQXFCO0lBQUEsSUFBQUMsZ0JBQUEsQ0FBQXpDLE9BQUEsUUFBQXNDLG1CQUFBO0lBQ25ELElBQUksQ0FBQ0ksRUFBRSxzQkFBbUJYLElBQUksR0FBRyxDQUFDLENBQUU7SUFDcEMsSUFBSSxDQUFDRCxPQUFPLEdBQUdLLGdCQUFnQixFQUFFO0lBQ2pDLElBQUksQ0FBQ0wsT0FBTyxDQUFDYSxNQUFNLENBQUMsSUFBSSxDQUFDRCxFQUFFLEVBQUVILE9BQU8sRUFBRUMsUUFBUSxDQUFDO0lBQy9DVCxJQUFJLEVBQUU7RUFDUjtFQUFDLElBQUFhLGFBQUEsQ0FBQTVDLE9BQUEsRUFBQXNDLG1CQUFBO0lBQUE3QixHQUFBO0lBQUFvQyxLQUFBLEVBRU0sU0FBQUYsT0FBT0osT0FBa0IsRUFBRUMsUUFBcUI7TUFDckQsSUFBSSxDQUFDVixPQUFPLENBQUNhLE1BQU0sQ0FBQyxJQUFJLENBQUNELEVBQUUsRUFBRUgsT0FBTyxFQUFFQyxRQUFRLENBQUM7SUFDakQ7RUFBQztJQUFBL0IsR0FBQTtJQUFBb0MsS0FBQSxFQUVNLFNBQUFDLFFBQVFOLFFBQXFCO01BQ2xDLElBQUksQ0FBQ1YsT0FBTyxDQUFDZ0IsT0FBTyxDQUFDLElBQUksQ0FBQ0osRUFBRSxFQUFFRixRQUFRLENBQUM7SUFDekM7RUFBQztFQUFBLE9BQUFGLG1CQUFBO0FBQUE7QUFBQVMsT0FBQSxDQUFBL0MsT0FBQSxHQUFBc0MsbUJBQUE7QUFHRyxTQUFVVSxpQkFBaUJBLENBQUNDLEtBR2pDO0VBQ0MsSUFBUUMsUUFBUSxHQUFLRCxLQUFLLENBQWxCQyxRQUFRO0VBQ2hCLElBQUFDLFNBQUEsR0FBa0IsSUFBQUMsZUFBUSxFQUd2QixZQUFLO01BQ04sSUFBQUMsbUJBQUEsR0FBcUQsSUFBQTFCLDJCQUFpQixFQUNwRUMsd0JBQWUsRUFDZlgsYUFBYSxDQUNkO1FBSGFxQyxVQUFVLEdBQUFELG1CQUFBLENBQWhCOUIsSUFBSTtRQUF1QmdDLGFBQWEsR0FBQUYsbUJBQUEsQ0FBdEJ2QixPQUFPO01BS2pDRSxZQUFZLENBQUN3QixJQUFJLENBQUNELGFBQWEsQ0FBQztNQUNoQyxJQUFJTCxRQUFRLEVBQUU7UUFDWmpCLGdCQUFnQixDQUFDd0IsR0FBRyxDQUFDRixhQUFhLENBQUM7O01BR3JDLE9BQU87UUFDTGhDLElBQUksRUFBRStCLFVBQVU7UUFDaEJ4QixPQUFPLEVBQUV5QjtPQUNWO0lBQ0gsQ0FBQyxDQUFDO0lBQUFHLFVBQUEsT0FBQUMsZUFBQSxDQUFBM0QsT0FBQSxFQUFBbUQsU0FBQTtJQWxCS25DLE9BQU8sR0FBQTBDLFVBQUE7RUFvQmQsSUFBQUUsZ0JBQVMsRUFBQyxZQUFLO0lBQ2IsT0FBTyxZQUFLO01BQ1YsSUFBSTVDLE9BQU8sRUFBRTtRQUNYLElBQU02QyxLQUFLLEdBQUc3QixZQUFZLENBQUM4QixPQUFPLENBQUM5QyxPQUFPLENBQUNjLE9BQU8sQ0FBQztRQUNuRCxJQUFJK0IsS0FBSyxHQUFHLENBQUMsRUFBRTtVQUNiN0IsWUFBWSxDQUFDK0IsTUFBTSxDQUFDRixLQUFLLEVBQUUsQ0FBQyxDQUFDOzs7SUFHbkMsQ0FBQztFQUNILENBQUMsRUFBRSxDQUFDN0MsT0FBTyxDQUFDLENBQUM7RUFFYixJQUFJa0MsUUFBUSxJQUFJbEMsT0FBTyxJQUFJLENBQUNpQixnQkFBZ0IsQ0FBQy9CLEdBQUcsQ0FBQ2MsT0FBTyxDQUFDYyxPQUFPLENBQUMsRUFBRTtJQUNqRUcsZ0JBQWdCLENBQUN3QixHQUFHLENBQUN6QyxPQUFPLENBQUNjLE9BQU8sQ0FBQztHQUN0QyxNQUFNLElBQUksQ0FBQ29CLFFBQVEsSUFBSWxDLE9BQU8sSUFBSWlCLGdCQUFnQixDQUFDL0IsR0FBRyxDQUFDYyxPQUFPLENBQUNjLE9BQU8sQ0FBQyxFQUFFO0lBQ3hFRyxnQkFBZ0IsQ0FBQytCLE1BQU0sQ0FBQ2hELE9BQU8sQ0FBQ2MsT0FBTyxDQUFDOztFQUcxQyxJQUFNbUMsTUFBTSxHQUFHakQsT0FBTyxDQUFDTyxJQUFJO0VBQzNCLE9BQU8sSUFBQS9CLFdBQUEsQ0FBQTBFLEdBQUEsRUFBQ0QsTUFBTTtJQUFBRSxRQUFBLEVBQUVsQixLQUFLLENBQUNrQjtFQUFRLENBQVMsQ0FBQztBQUMxQztBQUVNLFNBQVVDLGlCQUFpQkEsQ0FBQ25CLEtBQThCO0VBQzlELElBQUFvQixVQUFBLEdBQWtCLElBQUFqQixlQUFRLEVBQ3hCO01BQUEsT0FBTSxJQUFJZCxtQkFBbUIsQ0FBQyxJQUFJLENBQUM7SUFBQSxFQUNwQztJQUFBZ0MsVUFBQSxPQUFBWCxlQUFBLENBQUEzRCxPQUFBLEVBQUFxRSxVQUFBO0lBRk1yRCxPQUFPLEdBQUFzRCxVQUFBO0VBSWR0RCxPQUFPLENBQUMyQixNQUFNLENBQUNNLEtBQUssQ0FBQ2tCLFFBQVEsQ0FBQztFQUU5QixJQUFBUCxnQkFBUyxFQUFDLFlBQUs7SUFDYixJQUFJNUMsT0FBTyxFQUFFO01BQ1gsT0FBTztRQUFBLE9BQU1BLE9BQU8sQ0FBQzhCLE9BQU8sRUFBRTtNQUFBOztFQUVsQyxDQUFDLEVBQUUsQ0FBQzlCLE9BQU8sQ0FBQyxDQUFDO0VBRWIsT0FBTyxJQUFJO0FBQ2IifQ==