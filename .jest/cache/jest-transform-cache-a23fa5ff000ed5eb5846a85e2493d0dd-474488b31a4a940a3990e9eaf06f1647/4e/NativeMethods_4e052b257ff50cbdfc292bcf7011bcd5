ab69d47cae9bc8c6b89681c493eb2867
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dispatchCommand = dispatchCommand;
exports.getTag = getTag;
exports.scrollTo = exports.measure = void 0;
exports.setGestureState = setGestureState;
var _reactNative = require("react-native");
var _PlatformChecker = require("./PlatformChecker");
function getTag(view) {
  return (0, _reactNative.findNodeHandle)(view);
}
var isNative = !(0, _PlatformChecker.shouldBeUseWeb)();
var measure;
exports.measure = measure;
var _worklet_11817396515318_init_data = {
  code: "function anonymous(animatedRef) {\n  if (!_WORKLET) {\n    console.warn('[Reanimated] measure() was called from the main JS context. Measure is ' + 'only available in the UI runtime. This may also happen if measure() ' + 'was called by a worklet in the useAnimatedStyle hook, because useAnimatedStyle ' + 'calls the given worklet on the JS runtime during render. If you want to ' + 'prevent this warning then wrap the call with `if (_WORKLET)`. Then it will ' + 'only be called on the UI runtime after the render has been completed.');\n    return null;\n  }\n  const viewTag = animatedRef();\n  if (viewTag === -1) {\n    console.warn(\"[Reanimated] The view with tag \" + viewTag + \" is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).\");\n    return null;\n  }\n  const measured = _measure(viewTag);\n  if (measured === null) {\n    console.warn(\"[Reanimated] The view with tag \" + viewTag + \" has some undefined, not-yet-computed or meaningless value of `LayoutMetrics` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).\");\n    return null;\n  } else if (measured.x === -1234567) {\n    console.warn(\"[Reanimated] The view with tag \" + viewTag + \" returned an invalid measurement response.\");\n    return null;\n  } else if (isNaN(measured.x)) {\n    console.warn(\"[Reanimated] The view with tag \" + viewTag + \" gets view-flattened on Android. To disable view-flattening, set `collapsable={false}` on this component.\");\n    return null;\n  } else {\n    return measured;\n  }\n}",
  location: "node_modules\\react-native-reanimated\\lib\\commonjs\\reanimated2\\NativeMethods.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"animatedRef\",\"_WORKLET\",\"console\",\"warn\",\"viewTag\",\"measured\",\"_measure\",\"x\",\"isNaN\"],\"sources\":[\"C:/Users/ishas/Web Technology - Copy/ReactNative/Final Project/MoneyWise/node_modules/react-native-reanimated/lib/commonjs/reanimated2/NativeMethods.js\"],\"mappings\":\"AAsC8B,SAAAA,UAAAC,WAAe;EAGzC,IAAI,CAACC,QAAQ,EAAE;IACbC,OAAO,CAACC,IAAI,CAAC,yEAAyE,GAAG,sEAAsE,GAAG,iFAAiF,GAAG,0EAA0E,GAAG,6EAA6E,GAAG,uEAAuE,CAAC;IAC3d,OAAO,IAAI;EACb;EACA,MAAMC,OAAO,GAAGJ,WAAW,CAAC,CAAC;EAC7B,IAAII,OAAO,KAAK,CAAC,CAAC,EAAE;IAClBF,OAAO,CAACC,IAAI,qCAAmCC,OAAQ,+JAA2J,CAAC;IACnN,OAAO,IAAI;EACb;EACA,MAAMC,QAAQ,GAAGC,QAAQ,CAACF,OAAO,CAAC;EAClC,IAAIC,QAAQ,KAAK,IAAI,EAAE;IACrBH,OAAO,CAACC,IAAI,qCAAmCC,OAAQ,2MAAyM,CAAC;IACjQ,OAAO,IAAI;EACb,CAAC,MAAM,IAAIC,QAAQ,CAACE,CAAC,KAAK,CAAC,OAAO,EAAE;IAClCL,OAAO,CAACC,IAAI,qCAAmCC,OAAQ,+CAA2C,CAAC;IACnG,OAAO,IAAI;EACb,CAAC,MAAM,IAAII,KAAK,CAACH,QAAQ,CAACE,CAAC,CAAC,EAAE;IAC5BL,OAAO,CAACC,IAAI,qCAAmCC,OAAQ,8GAA4G,CAAC;IACpK,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OAAOC,QAAQ;EACjB;AACF\"}"
};
if ((0, _PlatformChecker.isWeb)()) {
  exports.measure = measure = function measure(animatedRef) {
    var element = animatedRef();
    var viewportOffset = element.getBoundingClientRect();
    return {
      width: element.offsetWidth,
      height: element.offsetHeight,
      x: element.offsetLeft,
      y: element.offsetTop,
      pageX: viewportOffset.left,
      pageY: viewportOffset.top
    };
  };
} else if ((0, _PlatformChecker.isChromeDebugger)()) {
  exports.measure = measure = function measure(_animatedRef) {
    console.warn('[Reanimated] measure() cannot be used with Chrome Debugger.');
    return null;
  };
} else {
  exports.measure = measure = function () {
    var _e = [new global.Error(), 1, -27];
    var _f = function _f(animatedRef) {
      if (!_WORKLET) {
        console.warn('[Reanimated] measure() was called from the main JS context. Measure is ' + 'only available in the UI runtime. This may also happen if measure() ' + 'was called by a worklet in the useAnimatedStyle hook, because useAnimatedStyle ' + 'calls the given worklet on the JS runtime during render. If you want to ' + 'prevent this warning then wrap the call with `if (_WORKLET)`. Then it will ' + 'only be called on the UI runtime after the render has been completed.');
        return null;
      }
      var viewTag = animatedRef();
      if (viewTag === -1) {
        console.warn("[Reanimated] The view with tag " + viewTag + " is not a valid argument for measure(). This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).");
        return null;
      }
      var measured = _measure(viewTag);
      if (measured === null) {
        console.warn("[Reanimated] The view with tag " + viewTag + " has some undefined, not-yet-computed or meaningless value of `LayoutMetrics` type. This may be because the view is not currently rendered, which may not be a bug (e.g. an off-screen FlatList item).");
        return null;
      } else if (measured.x === -1234567) {
        console.warn("[Reanimated] The view with tag " + viewTag + " returned an invalid measurement response.");
        return null;
      } else if (isNaN(measured.x)) {
        console.warn("[Reanimated] The view with tag " + viewTag + " gets view-flattened on Android. To disable view-flattening, set `collapsable={false}` on this component.");
        return null;
      } else {
        return measured;
      }
    };
    _f._closure = {};
    _f.__initData = _worklet_11817396515318_init_data;
    _f.__workletHash = 11817396515318;
    _f.__stackDetails = _e;
    _f.__version = "3.1.0";
    return _f;
  }();
}
var _worklet_4512985215126_init_data = {
  code: "function dispatchCommand(animatedRef, commandName, args) {\n  const {\n    isNative\n  } = this._closure;\n  if (!_WORKLET || !isNative) {\n    return;\n  }\n  const shadowNodeWrapper = animatedRef();\n  _dispatchCommand(shadowNodeWrapper, commandName, args);\n}",
  location: "node_modules\\react-native-reanimated\\lib\\commonjs\\reanimated2\\NativeMethods.js",
  sourceMap: "{\"version\":3,\"names\":[\"dispatchCommand\",\"animatedRef\",\"commandName\",\"args\",\"isNative\",\"_closure\",\"_WORKLET\",\"shadowNodeWrapper\",\"_dispatchCommand\"],\"sources\":[\"C:/Users/ishas/Web Technology - Copy/ReactNative/Final Project/MoneyWise/node_modules/react-native-reanimated/lib/commonjs/reanimated2/NativeMethods.js\"],\"mappings\":\"AAiEA,SAAAA,eAASA,CAAgBC,WAAA,EAAWC,WAAE,EAAWC,IAAE,EAAI;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGrD,IAAI,CAACC,QAAQ,IAAI,CAACF,QAAQ,EAAE;IAC1B;EACF;EAIA,MAAMG,iBAAiB,GAAGN,WAAW,CAAC,CAAC;EACvCO,gBAAgB,CAACD,iBAAiB,EAAEL,WAAW,EAAEC,IAAI,CAAC;AACxD\"}"
};
var dispatchCommand = function () {
  var _e = [new global.Error(), -2, -27];
  var _f = function _f(animatedRef, commandName, args) {
    if (!_WORKLET || !isNative) {
      return;
    }
    var shadowNodeWrapper = animatedRef();
    _dispatchCommand(shadowNodeWrapper, commandName, args);
  };
  _f._closure = {
    isNative: isNative
  };
  _f.__initData = _worklet_4512985215126_init_data;
  _f.__workletHash = 4512985215126;
  _f.__stackDetails = _e;
  _f.__version = "3.1.0";
  return _f;
}();
var scrollTo;
exports.scrollTo = scrollTo;
var _worklet_17208598284085_init_data = {
  code: "function anonymous(animatedRef, x, y, animated) {\n  const element = animatedRef();\n  element.scrollTo({\n    x: x,\n    y: y,\n    animated: animated\n  });\n}",
  location: "node_modules\\react-native-reanimated\\lib\\commonjs\\reanimated2\\NativeMethods.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"animatedRef\",\"x\",\"y\",\"animated\",\"element\",\"scrollTo\"],\"sources\":[\"C:/Users/ishas/Web Technology - Copy/ReactNative/Final Project/MoneyWise/node_modules/react-native-reanimated/lib/commonjs/reanimated2/NativeMethods.js\"],\"mappings\":\"AAgFgC,SAACA,UAAAC,WAAmB,EAAAC,CAAA,EAAAC,CAAA,EAAQC,QAAK;EAG7D,MAAMC,OAAO,GAAGJ,WAAW,CAAC,CAAC;EAE7BI,OAAO,CAACC,QAAQ,CAAC;IACfJ,CAAC,EAADA,CAAC;IACDC,CAAC,EAADA,CAAC;IACDC,QAAA,EAAAA;EACF,CAAC,CAAC;AACJ\"}"
};
var _worklet_3232161124638_init_data = {
  code: "function anonymous(animatedRef, x, y, animated) {\n  const {\n    dispatchCommand\n  } = this._closure;\n  dispatchCommand(animatedRef, 'scrollTo', [x, y, animated]);\n}",
  location: "node_modules\\react-native-reanimated\\lib\\commonjs\\reanimated2\\NativeMethods.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"animatedRef\",\"x\",\"y\",\"animated\",\"dispatchCommand\",\"_closure\"],\"sources\":[\"C:/Users/ishas/Web Technology - Copy/ReactNative/Final Project/MoneyWise/node_modules/react-native-reanimated/lib/commonjs/reanimated2/NativeMethods.js\"],\"mappings\":\"AA4FgC,SAACA,UAAAC,WAAmB,EAAAC,CAAA,EAAAC,CAAA,EAAQC,QAAK;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAG7DD,eAAe,CAACJ,WAAW,EAAE,UAAU,EAAE,CAACC,CAAC,EAAEC,CAAC,EAAEC,QAAQ,CAAC,CAAC;AAC5D\"}"
};
var _worklet_5482870920827_init_data = {
  code: "function anonymous(animatedRef, x, y, animated) {\n  if (!_WORKLET) {\n    return;\n  }\n  const viewTag = animatedRef();\n  _scrollTo(viewTag, x, y, animated);\n}",
  location: "node_modules\\react-native-reanimated\\lib\\commonjs\\reanimated2\\NativeMethods.js",
  sourceMap: "{\"version\":3,\"names\":[\"anonymous\",\"animatedRef\",\"x\",\"y\",\"animated\",\"_WORKLET\",\"viewTag\",\"_scrollTo\"],\"sources\":[\"C:/Users/ishas/Web Technology - Copy/ReactNative/Final Project/MoneyWise/node_modules/react-native-reanimated/lib/commonjs/reanimated2/NativeMethods.js\"],\"mappings\":\"AAkGgC,SAACA,UAAAC,WAAmB,EAAAC,CAAA,EAAAC,CAAA,EAAQC,QAAK;EAG7D,IAAI,CAACC,QAAQ,EAAE;IACb;EACF;EAGA,MAAMC,OAAO,GAAGL,WAAW,CAAC,CAAC;EAC7BM,SAAS,CAACD,OAAO,EAAEJ,CAAC,EAAEC,CAAC,EAAEC,QAAQ,CAAC;AACpC\"}"
};
if ((0, _PlatformChecker.isWeb)()) {
  exports.scrollTo = scrollTo = function () {
    var _e = [new global.Error(), 1, -27];
    var _f = function _f(animatedRef, x, y, animated) {
      var element = animatedRef();
      element.scrollTo({
        x: x,
        y: y,
        animated: animated
      });
    };
    _f._closure = {};
    _f.__initData = _worklet_17208598284085_init_data;
    _f.__workletHash = 17208598284085;
    _f.__stackDetails = _e;
    _f.__version = "3.1.0";
    return _f;
  }();
} else if (isNative && global._IS_FABRIC) {
  exports.scrollTo = scrollTo = function () {
    var _e = [new global.Error(), -2, -27];
    var _f = function _f(animatedRef, x, y, animated) {
      dispatchCommand(animatedRef, 'scrollTo', [x, y, animated]);
    };
    _f._closure = {
      dispatchCommand: dispatchCommand
    };
    _f.__initData = _worklet_3232161124638_init_data;
    _f.__workletHash = 3232161124638;
    _f.__stackDetails = _e;
    _f.__version = "3.1.0";
    return _f;
  }();
} else if (isNative) {
  exports.scrollTo = scrollTo = function () {
    var _e = [new global.Error(), 1, -27];
    var _f = function _f(animatedRef, x, y, animated) {
      if (!_WORKLET) {
        return;
      }
      var viewTag = animatedRef();
      _scrollTo(viewTag, x, y, animated);
    };
    _f._closure = {};
    _f.__initData = _worklet_5482870920827_init_data;
    _f.__workletHash = 5482870920827;
    _f.__stackDetails = _e;
    _f.__version = "3.1.0";
    return _f;
  }();
} else {
  exports.scrollTo = scrollTo = function scrollTo(_animatedRef, _x, _y) {};
}
var _worklet_17450441994509_init_data = {
  code: "function setGestureState(handlerTag, newState) {\n  const {\n    isNative\n  } = this._closure;\n  if (!_WORKLET || !isNative) {\n    console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');\n    return;\n  }\n  _setGestureState(handlerTag, newState);\n}",
  location: "node_modules\\react-native-reanimated\\lib\\commonjs\\reanimated2\\NativeMethods.js",
  sourceMap: "{\"version\":3,\"names\":[\"setGestureState\",\"handlerTag\",\"newState\",\"isNative\",\"_closure\",\"_WORKLET\",\"console\",\"warn\",\"_setGestureState\"],\"sources\":[\"C:/Users/ishas/Web Technology - Copy/ReactNative/Final Project/MoneyWise/node_modules/react-native-reanimated/lib/commonjs/reanimated2/NativeMethods.js\"],\"mappings\":\"AAkHA,SAAAA,eAASA,CAAgBC,UAAA,EAAUC,QAAE,EAAQ;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAG3C,IAAI,CAACC,QAAQ,IAAI,CAACF,QAAQ,EAAE;IAC1BG,OAAO,CAACC,IAAI,CAAC,uEAAuE,CAAC;IACrF;EACF;EACAC,gBAAgB,CAACP,UAAU,EAAEC,QAAQ,CAAC;AACxC\"}"
};
var setGestureState = function () {
  var _e = [new global.Error(), -2, -27];
  var _f = function _f(handlerTag, newState) {
    if (!_WORKLET || !isNative) {
      console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');
      return;
    }
    _setGestureState(handlerTag, newState);
  };
  _f._closure = {
    isNative: isNative
  };
  _f.__initData = _worklet_17450441994509_init_data;
  _f.__workletHash = 17450441994509;
  _f.__stackDetails = _e;
  _f.__version = "3.1.0";
  return _f;
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,