06db20f5391754a2729843f5689c0ab8
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LegendItem = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNativeSvg = require("react-native-svg");
var _jsxRuntime = require("react/jsx-runtime");
var CIRCLE_WIDTH = 16;
var PADDING_LEFT = 4;
var CHARACTER_WIDTH = 6;
var LegendItem = function LegendItem(props) {
  var baseLegendItemX = props.baseLegendItemX,
    index = props.index;
  var centerAlignedCircle = props.legendOffset / 2 - CIRCLE_WIDTH / 2;
  var centerAlignedText = props.legendOffset * 0.65;
  var textLengthOffset = props.legendText.length * CHARACTER_WIDTH / 2;
  var legendItemNumber = index + 1;
  return (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
    children: [(0, _jsxRuntime.jsx)(_reactNativeSvg.Rect, {
      width: CIRCLE_WIDTH,
      height: CIRCLE_WIDTH,
      fill: props.iconColor,
      rx: 8,
      ry: 8,
      x: baseLegendItemX * legendItemNumber - (CIRCLE_WIDTH + textLengthOffset),
      y: centerAlignedCircle
    }), (0, _jsxRuntime.jsx)(_reactNativeSvg.Text, Object.assign({
      x: baseLegendItemX * legendItemNumber + (PADDING_LEFT - textLengthOffset),
      y: centerAlignedText
    }, props.labelProps, {
      children: props.legendText
    }))]
  });
};
exports.LegendItem = LegendItem;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZVN2ZyIsIl9qc3hSdW50aW1lIiwiQ0lSQ0xFX1dJRFRIIiwiUEFERElOR19MRUZUIiwiQ0hBUkFDVEVSX1dJRFRIIiwiTGVnZW5kSXRlbSIsInByb3BzIiwiYmFzZUxlZ2VuZEl0ZW1YIiwiaW5kZXgiLCJjZW50ZXJBbGlnbmVkQ2lyY2xlIiwibGVnZW5kT2Zmc2V0IiwiY2VudGVyQWxpZ25lZFRleHQiLCJ0ZXh0TGVuZ3RoT2Zmc2V0IiwibGVnZW5kVGV4dCIsImxlbmd0aCIsImxlZ2VuZEl0ZW1OdW1iZXIiLCJqc3hzIiwiRnJhZ21lbnQiLCJjaGlsZHJlbiIsImpzeCIsIlJlY3QiLCJ3aWR0aCIsImhlaWdodCIsImZpbGwiLCJpY29uQ29sb3IiLCJyeCIsInJ5IiwieCIsInkiLCJUZXh0IiwiT2JqZWN0IiwiYXNzaWduIiwibGFiZWxQcm9wcyIsImV4cG9ydHMiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvbGluZS1jaGFydC9MZWdlbmRJdGVtLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBDb2xvciwgUmVjdCwgVGV4dCwgVGV4dFByb3BzIH0gZnJvbSBcInJlYWN0LW5hdGl2ZS1zdmdcIjtcblxuY29uc3QgQ0lSQ0xFX1dJRFRIID0gMTY7XG5jb25zdCBQQURESU5HX0xFRlQgPSA0O1xuY29uc3QgQ0hBUkFDVEVSX1dJRFRIID0gNjtcblxuZXhwb3J0IHR5cGUgTGVnZW5kSXRlbVByb3BzID0ge1xuICBiYXNlTGVnZW5kSXRlbVg6IG51bWJlcjtcbiAgaW5kZXg6IG51bWJlcjtcbiAgbGVnZW5kT2Zmc2V0OiBudW1iZXI7XG4gIGxlZ2VuZFRleHQ6IHN0cmluZztcbiAgaWNvbkNvbG9yOiBDb2xvcjtcbiAgbGFiZWxQcm9wczogVGV4dFByb3BzO1xufTtcblxuZXhwb3J0IGNvbnN0IExlZ2VuZEl0ZW0gPSAocHJvcHM6IExlZ2VuZEl0ZW1Qcm9wcykgPT4ge1xuICBjb25zdCB7IGJhc2VMZWdlbmRJdGVtWCwgaW5kZXggfSA9IHByb3BzO1xuICAvKiBoYWxmIHRoZSBoZWlnaHQgb2YgdGhlIGxlZ2VuZCBSZWN0LCBtaW51cyBoYWxmIHRoZSBoZWlnaHQgb2YgdGhlIGNpcmNsZSB0byBhbGlnbiB0aGVcbiAgICAgY2lyY2xlIGZyb20gaXRzIGNlbnRlciwgcmF0aGVyIHRoYW4gaXRzIHRvcC4gKi9cbiAgY29uc3QgY2VudGVyQWxpZ25lZENpcmNsZSA9IHByb3BzLmxlZ2VuZE9mZnNldCAvIDIgLSBDSVJDTEVfV0lEVEggLyAyO1xuICAvLyA2NSUgb2YgdGhlIGxlZ2VuZCBjb250YWluZXIgaGVpZ2h0IGNlbnRlcnMgdGhlIHRleHQgaW4gcmVsYXRpb24gdG8gdGhlIGNpcmNsZXNcbiAgY29uc3QgY2VudGVyQWxpZ25lZFRleHQgPSBwcm9wcy5sZWdlbmRPZmZzZXQgKiAwLjY1O1xuICAvLyB0byBjZW50ZXIgdGhlIGxlZ2VuZEl0ZW0gb24gdGhlIGJhc2VMZWdlbmRJdGVtWFxuICBjb25zdCB0ZXh0TGVuZ3RoT2Zmc2V0ID0gKHByb3BzLmxlZ2VuZFRleHQubGVuZ3RoICogQ0hBUkFDVEVSX1dJRFRIKSAvIDI7XG4gIGNvbnN0IGxlZ2VuZEl0ZW1OdW1iZXIgPSBpbmRleCArIDE7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPFJlY3RcbiAgICAgICAgd2lkdGg9e0NJUkNMRV9XSURUSH1cbiAgICAgICAgaGVpZ2h0PXtDSVJDTEVfV0lEVEh9XG4gICAgICAgIGZpbGw9e3Byb3BzLmljb25Db2xvcn1cbiAgICAgICAgcng9ezh9XG4gICAgICAgIHJ5PXs4fVxuICAgICAgICB4PXtcbiAgICAgICAgICBiYXNlTGVnZW5kSXRlbVggKiBsZWdlbmRJdGVtTnVtYmVyIC0gKENJUkNMRV9XSURUSCArIHRleHRMZW5ndGhPZmZzZXQpXG4gICAgICAgIH1cbiAgICAgICAgeT17Y2VudGVyQWxpZ25lZENpcmNsZX1cbiAgICAgIC8+XG4gICAgICA8VGV4dFxuICAgICAgICB4PXtcbiAgICAgICAgICBiYXNlTGVnZW5kSXRlbVggKiBsZWdlbmRJdGVtTnVtYmVyICsgKFBBRERJTkdfTEVGVCAtIHRleHRMZW5ndGhPZmZzZXQpXG4gICAgICAgIH1cbiAgICAgICAgeT17Y2VudGVyQWxpZ25lZFRleHR9XG4gICAgICAgIHsuLi5wcm9wcy5sYWJlbFByb3BzfVxuICAgICAgPlxuICAgICAgICB7cHJvcHMubGVnZW5kVGV4dH1cbiAgICAgIDwvVGV4dD5cbiAgICA8Lz5cbiAgKTtcbn07XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsZUFBQSxHQUFBRCxPQUFBO0FBQWdFLElBQUFFLFdBQUEsR0FBQUYsT0FBQTtBQUVoRSxJQUFNRyxZQUFZLEdBQUcsRUFBRTtBQUN2QixJQUFNQyxZQUFZLEdBQUcsQ0FBQztBQUN0QixJQUFNQyxlQUFlLEdBQUcsQ0FBQztBQVdsQixJQUFNQyxVQUFVLEdBQUcsU0FBYkEsVUFBVUEsQ0FBSUMsS0FBc0I7RUFDdkMsSUFBQUMsZUFBZSxHQUFZRCxLQUFLLENBQUFDLGVBQWpCO0lBQUVDLEtBQUssR0FBS0YsS0FBSyxDQUFBRSxLQUFWO0VBRzlCLElBQU1DLG1CQUFtQixHQUFHSCxLQUFLLENBQUNJLFlBQVksR0FBRyxDQUFDLEdBQUdSLFlBQVksR0FBRyxDQUFDO0VBRXJFLElBQU1TLGlCQUFpQixHQUFHTCxLQUFLLENBQUNJLFlBQVksR0FBRyxJQUFJO0VBRW5ELElBQU1FLGdCQUFnQixHQUFJTixLQUFLLENBQUNPLFVBQVUsQ0FBQ0MsTUFBTSxHQUFHVixlQUFlLEdBQUksQ0FBQztFQUN4RSxJQUFNVyxnQkFBZ0IsR0FBR1AsS0FBSyxHQUFHLENBQUM7RUFFbEMsT0FDRSxJQUFBUCxXQUFBLENBQUFlLElBQUEsRUFBQWYsV0FBQSxDQUFBZ0IsUUFBQTtJQUFBQyxRQUFBLEdBQ0UsSUFBQWpCLFdBQUEsQ0FBQWtCLEdBQUEsRUFBQ25CLGVBQUEsQ0FBQW9CLElBQUk7TUFDSEMsS0FBSyxFQUFFbkIsWUFBYTtNQUNwQm9CLE1BQU0sRUFBRXBCLFlBQWE7TUFDckJxQixJQUFJLEVBQUVqQixLQUFLLENBQUNrQixTQUFVO01BQ3RCQyxFQUFFLEVBQUUsQ0FBRTtNQUNOQyxFQUFFLEVBQUUsQ0FBRTtNQUNOQyxDQUFDLEVBQ0NwQixlQUFlLEdBQUdRLGdCQUFnQixJQUFJYixZQUFZLEdBQUdVLGdCQUFnQixDQUN0RTtNQUNEZ0IsQ0FBQyxFQUFFbkI7SUFBb0IsRUFFekIsTUFBQVIsV0FBQSxDQUFBa0IsR0FBQSxFQUFDbkIsZUFBQSxDQUFBNkIsSUFBSSxFQUFBQyxNQUFBLENBQUFDLE1BQUE7TUFDSEosQ0FBQyxFQUNDcEIsZUFBZSxHQUFHUSxnQkFBZ0IsSUFBSVosWUFBWSxHQUFHUyxnQkFBZ0IsQ0FDdEU7TUFDRGdCLENBQUMsRUFBRWpCO0lBQWtCLEdBQ2pCTCxLQUFLLENBQUMwQixVQUFVO01BQUFkLFFBQUEsRUFFbkJaLEtBQUssQ0FBQ087SUFBVSxFQUNiLENBQ1I7RUFBQSxFQUFHO0FBRVAsQ0FBQztBQUFDb0IsT0FBQSxDQUFBNUIsVUFBQSxHQUFBQSxVQUFBIn0=