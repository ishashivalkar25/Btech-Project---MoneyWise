{"version":3,"names":["_Easing","require","_animation","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","_worklet_10494110474751_init_data","code","location","sourceMap","_worklet_3737494808179_init_data","Keyframe","definitions","_this","_classCallCheck2","default","delay","delayV","delayFunction","getDelayFunction","_this$parseDefinition","parseDefinitions","keyframes","initialValues","callback","callbackV","_e","global","Error","_f","_targetValues","animations","addAnimation","keyframePoints","length","animation","withTiming","duration","easing","Easing","linear","withSequence","apply","map","keyframePoint","includes","_animations$transform","transform","push","_defineProperty3","split","keys","forEach","transformProp","index","transformPropKey","toString","_closure","__initData","__workletHash","__stackDetails","__version","_createClass2","_this2","parsedKeyframes","from","to","styleProp","_initialValues$styleP","transformStyle","durationV","animationKeyPoints","Array","getAnimationDuration","currentKeyPoint","maxDuration","currentDuration","reduce","acc","addKeyPoint","_ref","filter","parseInt","sort","a","b","keyPoint","keyframe","addKeyPointWith","_keyframe$key","durationMs","delayMs","withCallback","withDelay","_","exports"],"sources":["Keyframe.ts"],"sourcesContent":["import { Easing, EasingFn } from '../../Easing';\nimport { withDelay, withSequence, withTiming } from '../../animation';\nimport {\n  AnimationFunction,\n  EntryExitAnimationFunction,\n  IEntryExitAnimationBuilder,\n  KeyframeProps,\n} from './commonTypes';\nimport { TransformProperty, StyleProps } from '../../commonTypes';\nexport interface KeyframePoint {\n  duration: number;\n  value: number | string;\n  easing?: EasingFn;\n}\nexport interface ParsedKeyframesDefinition {\n  initialValues: StyleProps;\n  keyframes: Record<string, KeyframePoint[]>;\n}\nexport class Keyframe implements IEntryExitAnimationBuilder {\n  durationV?: number;\n  delayV?: number;\n  callbackV?: (finished: boolean) => void;\n  definitions: Record<string, KeyframeProps>;\n\n  /*\n    Keyframe definition should be passed in the constructor as the map\n    which keys are between range 0 - 100 (%) and correspond to the point in the animation progress.\n  */\n  constructor(definitions: Record<string, KeyframeProps>) {\n    this.definitions = definitions;\n  }\n\n  private parseDefinitions(): ParsedKeyframesDefinition {\n    /* \n        Each style property contain an array with all their key points: \n        value, duration of transition to that value, and optional easing function (defaults to Linear)\n    */\n    const parsedKeyframes: Record<string, KeyframePoint[]> = {};\n    /*\n      Parsing keyframes 'from' and 'to'.\n    */\n    if (this.definitions.from) {\n      if (this.definitions['0']) {\n        throw Error(\n          \"You cannot provide both keyframe 0 and 'from' as they both specified initial values\"\n        );\n      }\n      this.definitions['0'] = this.definitions.from;\n      delete this.definitions.from;\n    }\n    if (this.definitions.to) {\n      if (this.definitions['100']) {\n        throw Error(\n          \"You cannot provide both keyframe 100 and 'to' as they both specified values at the end of the animation.\"\n        );\n      }\n      this.definitions['100'] = this.definitions.to;\n      delete this.definitions.to;\n    }\n    /* \n       One of the assumptions is that keyframe  0 is required to properly set initial values.\n       Every other keyframe should contain properties from the set provided as initial values.\n    */\n    if (!this.definitions['0']) {\n      throw Error(\n        \"Please provide 0, or 'from' keyframe with initial state of your object.\"\n      );\n    }\n    const initialValues: StyleProps = this.definitions['0'] as StyleProps;\n    /*\n      Initialize parsedKeyframes for properties provided in initial keyframe\n    */\n    Object.keys(initialValues).forEach((styleProp: string) => {\n      if (styleProp === 'transform') {\n        initialValues[styleProp]?.forEach((transformStyle, index) => {\n          Object.keys(transformStyle).forEach((transformProp: string) => {\n            parsedKeyframes[index.toString() + '_transform:' + transformProp] =\n              [];\n          });\n        });\n      } else {\n        parsedKeyframes[styleProp] = [];\n      }\n    });\n\n    const duration: number = this.durationV ? this.durationV : 500;\n    const animationKeyPoints: Array<string> = Array.from(\n      Object.keys(this.definitions)\n    );\n\n    const getAnimationDuration = (\n      key: string,\n      currentKeyPoint: number\n    ): number => {\n      const maxDuration = (currentKeyPoint / 100) * duration;\n      const currentDuration = parsedKeyframes[key].reduce(\n        (acc: number, value: KeyframePoint) => acc + value.duration,\n        0\n      );\n      return maxDuration - currentDuration;\n    };\n\n    /* \n       Other keyframes can't contain properties that were not specified in initial keyframe.\n    */\n    const addKeyPoint = ({\n      key,\n      value,\n      currentKeyPoint,\n      easing,\n    }: {\n      key: string;\n      value: string | number;\n      currentKeyPoint: number;\n      easing?: EasingFn;\n    }): void => {\n      if (!(key in parsedKeyframes)) {\n        throw Error(\n          \"Keyframe can contain only that set of properties that were provide with initial values (keyframe 0 or 'from')\"\n        );\n      }\n      parsedKeyframes[key].push({\n        duration: getAnimationDuration(key, currentKeyPoint),\n        value: value,\n        easing: easing,\n      });\n    };\n    animationKeyPoints\n      .filter((value: string) => parseInt(value) !== 0)\n      .sort((a: string, b: string) => parseInt(a) - parseInt(b))\n      .forEach((keyPoint: string) => {\n        if (parseInt(keyPoint) < 0 || parseInt(keyPoint) > 100) {\n          throw Error('Keyframe should be in between range 0 - 100.');\n        }\n        const keyframe: KeyframeProps = this.definitions[keyPoint];\n        const easing = keyframe.easing;\n        delete keyframe.easing;\n        const addKeyPointWith = (key: string, value: string | number) =>\n          addKeyPoint({\n            key,\n            value,\n            currentKeyPoint: parseInt(keyPoint),\n            easing,\n          });\n        Object.keys(keyframe).forEach((key: string) => {\n          if (key === 'transform') {\n            keyframe[key]?.forEach(\n              (transformStyle: { [key: string]: any }, index) => {\n                Object.keys(transformStyle).forEach((transformProp: string) => {\n                  addKeyPointWith(\n                    index.toString() + '_transform:' + transformProp,\n                    transformStyle[transformProp]\n                  );\n                });\n              }\n            );\n          } else {\n            addKeyPointWith(key, keyframe[key]);\n          }\n        });\n      });\n    return { initialValues: initialValues, keyframes: parsedKeyframes };\n  }\n\n  duration(durationMs: number): Keyframe {\n    this.durationV = durationMs;\n    return this;\n  }\n\n  delay(delayMs: number): Keyframe {\n    this.delayV = delayMs;\n    return this;\n  }\n\n  withCallback(callback: (finsihed: boolean) => void): Keyframe {\n    this.callbackV = callback;\n    return this;\n  }\n\n  private getDelayFunction(): AnimationFunction {\n    const delay = this.delayV;\n    return delay\n      ? withDelay\n      : (_, animation) => {\n          'worklet';\n          return animation;\n        };\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delay = this.delayV;\n    const delayFunction = this.getDelayFunction();\n    const { keyframes, initialValues } = this.parseDefinitions();\n    const callback = this.callbackV;\n\n    return (_targetValues) => {\n      'worklet';\n      const animations: StyleProps = {};\n\n      /* \n            For each style property, an animations sequence is created that corresponds with its key points.\n            Transform style properties require special handling because of their nested structure.\n      */\n      const addAnimation = (key: string) => {\n        const keyframePoints = keyframes[key];\n        // in case if property was only passed as initial value\n        if (keyframePoints.length === 0) return;\n        const animation = delayFunction(\n          delay,\n          keyframePoints.length === 1\n            ? withTiming(keyframePoints[0].value, {\n                duration: keyframePoints[0].duration,\n                easing: keyframePoints[0].easing\n                  ? keyframePoints[0].easing\n                  : Easing.linear,\n              })\n            : withSequence.apply(\n                this,\n                keyframePoints.map((keyframePoint: KeyframePoint) =>\n                  withTiming(keyframePoint.value, {\n                    duration: keyframePoint.duration,\n                    easing: keyframePoint.easing\n                      ? keyframePoint.easing\n                      : Easing.linear,\n                  })\n                )\n              )\n        );\n        if (key.includes('transform')) {\n          if (!('transform' in animations)) {\n            animations.transform = [];\n          }\n          animations.transform?.push(<TransformProperty>{\n            [key.split(':')[1]]: animation,\n          });\n        } else {\n          animations[key] = animation;\n        }\n      };\n      Object.keys(initialValues).forEach((key: string) => {\n        if (key.includes('transform')) {\n          initialValues[key].forEach(\n            (transformProp: Record<string, number | string>, index: number) => {\n              Object.keys(transformProp).forEach((transformPropKey: string) => {\n                addAnimation(\n                  index.toString() + '_transform:' + transformPropKey\n                );\n              });\n            }\n          );\n        } else {\n          addAnimation(key);\n        }\n      });\n      return {\n        animations: animations,\n        initialValues: initialValues,\n        callback: callback,\n      };\n    };\n  };\n}\n"],"mappings":"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"}