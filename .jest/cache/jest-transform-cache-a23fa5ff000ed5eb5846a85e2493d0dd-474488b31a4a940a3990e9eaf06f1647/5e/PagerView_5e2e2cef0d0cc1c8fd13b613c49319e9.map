{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_utils","_PagerViewNativeComponent","_interopRequireWildcard","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","_defineProperty","value","enumerable","configurable","writable","PagerView","_react$default$Compon","_inherits2","_super","_createSuper","_this","_classCallCheck2","_assertThisInitialized2","e","props","onPageScroll","Platform","OS","keyboardDismissMode","Keyboard","dismiss","onPageScrollStateChanged","isScrolling","nativeEvent","pageScrollState","onPageSelected","selectedPage","pagerView","Commands","setPage","setPageWithoutAnimation","scrollEnabled","setScrollEnabledImperatively","_createClass2","layoutDirection","I18nManager","isRTL","render","_this2","createElement","ref","style","deducedLayoutDirection","_onPageScroll","_onPageScrollStateChanged","_onPageSelected","onMoveShouldSetResponderCapture","_onMoveShouldSetResponderCapture","children","childrenWithOverriddenStyle","Component","exports"],"sources":["PagerView.tsx"],"sourcesContent":["import React from 'react';\nimport { Platform, Keyboard } from 'react-native';\nimport { I18nManager } from 'react-native';\nimport type {\n  OnPageScrollEventData,\n  OnPageScrollStateChangedEventData,\n  OnPageSelectedEventData,\n} from './PagerViewNativeComponent';\nimport type * as ReactNative from 'react-native';\n\nimport type { NativeProps as PagerViewProps } from './PagerViewNativeComponent';\nimport { childrenWithOverriddenStyle } from './utils';\nimport PagerViewView, {\n  Commands as PagerViewCommands,\n} from './PagerViewNativeComponent';\n\n/**\n * Container that allows to flip left and right between child views. Each\n * child view of the `PagerView` will be treated as a separate page\n * and will be stretched to fill the `PagerView`.\n *\n * It is important all children are `<View>`s and not composite components.\n * You can set style properties like `padding` or `backgroundColor` for each\n * child. It is also important that each child have a `key` prop.\n *\n * Example:\n *\n * ```\n * render: function() {\n *   return (\n *     <PagerView\n *       style={styles.PagerView}\n *       initialPage={0}>\n *       <View style={styles.pageStyle} key=\"1\">\n *         <Text>First page</Text>\n *       </View>\n *       <View style={styles.pageStyle} key=\"2\">\n *         <Text>Second page</Text>\n *       </View>\n *     </PagerView>\n *   );\n * }\n *\n * ...\n *\n * var styles = {\n *   ...\n *   PagerView: {\n *     flex: 1\n *   },\n *   pageStyle: {\n *     alignItems: 'center',\n *     padding: 20,\n *   }\n * }\n * ```\n */\n\nexport class PagerView extends React.Component<PagerViewProps> {\n  private isScrolling = false;\n  pagerView: React.ElementRef<typeof PagerViewView> | null = null;\n\n  private _onPageScroll = (\n    e: ReactNative.NativeSyntheticEvent<OnPageScrollEventData>\n  ) => {\n    if (this.props.onPageScroll) {\n      this.props.onPageScroll(e);\n    }\n\n    // Not implemented on iOS yet\n    if (Platform.OS === 'android') {\n      if (this.props.keyboardDismissMode === 'on-drag') {\n        Keyboard.dismiss();\n      }\n    }\n  };\n\n  private _onPageScrollStateChanged = (\n    e: ReactNative.NativeSyntheticEvent<OnPageScrollStateChangedEventData>\n  ) => {\n    if (this.props.onPageScrollStateChanged) {\n      this.props.onPageScrollStateChanged(e);\n    }\n    this.isScrolling = e.nativeEvent.pageScrollState === 'dragging';\n  };\n\n  private _onPageSelected = (\n    e: ReactNative.NativeSyntheticEvent<OnPageSelectedEventData>\n  ) => {\n    if (this.props.onPageSelected) {\n      this.props.onPageSelected(e);\n    }\n  };\n\n  /**\n   * A helper function to scroll to a specific page in the PagerView.\n   * The transition between pages will be animated.\n   */\n  public setPage = (selectedPage: number) => {\n    if (this.pagerView) {\n      PagerViewCommands.setPage(this.pagerView, selectedPage);\n    }\n  };\n\n  /**\n   * A helper function to scroll to a specific page in the PagerView.\n   * The transition between pages will *not* be animated.\n   */\n  public setPageWithoutAnimation = (selectedPage: number) => {\n    if (this.pagerView) {\n      PagerViewCommands.setPageWithoutAnimation(this.pagerView, selectedPage);\n    }\n  };\n\n  /**\n   * A helper function to enable/disable scroll imperatively\n   * The recommended way is using the scrollEnabled prop, however, there might be a case where a\n   * imperative solution is more useful (e.g. for not blocking an animation)\n   */\n  public setScrollEnabled = (scrollEnabled: boolean) => {\n    if (this.pagerView) {\n      PagerViewCommands.setScrollEnabledImperatively(\n        this.pagerView,\n        scrollEnabled\n      );\n    }\n  };\n\n  private _onMoveShouldSetResponderCapture = () => {\n    return this.isScrolling;\n  };\n\n  private get deducedLayoutDirection() {\n    if (\n      !this.props.layoutDirection ||\n      //@ts-ignore fix it\n      this.props.layoutDirection === 'locale'\n    ) {\n      return I18nManager.isRTL ? 'rtl' : 'ltr';\n    } else {\n      return this.props.layoutDirection;\n    }\n  }\n\n  render() {\n    return (\n      <PagerViewView\n        {...this.props}\n        ref={(ref) => {\n          this.pagerView = ref;\n        }}\n        style={this.props.style}\n        layoutDirection={this.deducedLayoutDirection}\n        onPageScroll={this._onPageScroll}\n        onPageScrollStateChanged={this._onPageScrollStateChanged}\n        onPageSelected={this._onPageSelected}\n        onMoveShouldSetResponderCapture={this._onMoveShouldSetResponderCapture}\n        children={childrenWithOverriddenStyle(this.props.children)}\n      />\n    );\n  }\n}\n"],"mappings":"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"}