{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_Login","_jsxRuntime","describe","it","_asyncToGenerator2","default","navigationMock","replace","jest","fn","navigate","global","alert","_render","render","jsx","navigation","queryByPlaceholderText","getByTestId","waitFor","emailInput","passwordInput","expect","toBeTruthy","fireEvent","changeText","loginButton","press","toHaveBeenCalledWith","not","toHaveBeenCalled","_render2","getByText","forgotPasswordButton"],"sources":["Login-test.js"],"sourcesContent":["import React from 'react';\r\nimport { render, fireEvent } from '@testing-library/react-native';\r\nimport Login from '../Components/Login';\r\n\r\ndescribe('Login', () => {\r\n    it('should handle login with valid credentials', async () => {\r\n        const navigationMock = {\r\n            replace: jest.fn(),\r\n            navigate: jest.fn(),\r\n        };\r\n\r\n        // Mock the alert function\r\n        global.alert = jest.fn();\r\n\r\n        const { queryByPlaceholderText, getByTestId, waitFor } = render(\r\n            <Login navigation={navigationMock} />\r\n        );\r\n\r\n        // Fill in the login form fields\r\n        const emailInput = queryByPlaceholderText('Email / Username');\r\n        const passwordInput = queryByPlaceholderText('Password');\r\n\r\n        expect(emailInput).toBeTruthy();\r\n        expect(passwordInput).toBeTruthy();\r\n\r\n        fireEvent.changeText(emailInput, 'test@example.com');\r\n        fireEvent.changeText(passwordInput, 'password');\r\n\r\n\r\n        // Trigger the login action\r\n        const loginButton = getByTestId('LoginBtn');\r\n        fireEvent.press(loginButton);\r\n\r\n        // Assert that the navigation method is called\r\n        await waitFor(() => {\r\n            // Assert that the navigation method is called\r\n            expect(navigationMock.replace).toHaveBeenCalledWith('Root');\r\n        });\r\n         // Assert that the alert function was not called\r\n         expect(global.alert).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it('should handle forgot password', async () => {\r\n        const navigationMock = {\r\n            replace: jest.fn(),\r\n            navigate: jest.fn(),\r\n        };\r\n\r\n        const { getByText } = render(<Login navigation={navigationMock} />);\r\n\r\n        // Trigger the forgot password action\r\n        const forgotPasswordButton = getByText('Forgot Password ?');\r\n        fireEvent.press(forgotPasswordButton);\r\n\r\n        // Assert that the dialog box visibility state is updated\r\n        // For example, you can assert that the dialog box becomes visible\r\n        // by checking for its existence or a specific UI element within it\r\n        // expect(...) assertions for dialog box visibility\r\n    });\r\n\r\n    // Add more test cases for other user interactions and edge cases\r\n});\r\n"],"mappings":";;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAwC,IAAAG,WAAA,GAAAH,OAAA;AAExCI,QAAQ,CAAC,OAAO,EAAE,YAAM;EACpBC,EAAE,CAAC,4CAA4C,MAAAC,kBAAA,CAAAC,OAAA,EAAE,aAAY;IACzD,IAAMC,cAAc,GAAG;MACnBC,OAAO,EAAEC,IAAI,CAACC,EAAE,CAAC,CAAC;MAClBC,QAAQ,EAAEF,IAAI,CAACC,EAAE,CAAC;IACtB,CAAC;IAGDE,MAAM,CAACC,KAAK,GAAGJ,IAAI,CAACC,EAAE,CAAC,CAAC;IAExB,IAAAI,OAAA,GAAyD,IAAAC,mBAAM,EAC3D,IAAAb,WAAA,CAAAc,GAAA,EAACf,MAAA,CAAAK,OAAK;QAACW,UAAU,EAAEV;MAAe,CAAE,CACxC,CAAC;MAFOW,sBAAsB,GAAAJ,OAAA,CAAtBI,sBAAsB;MAAEC,WAAW,GAAAL,OAAA,CAAXK,WAAW;MAAEC,OAAO,GAAAN,OAAA,CAAPM,OAAO;IAKpD,IAAMC,UAAU,GAAGH,sBAAsB,CAAC,kBAAkB,CAAC;IAC7D,IAAMI,aAAa,GAAGJ,sBAAsB,CAAC,UAAU,CAAC;IAExDK,MAAM,CAACF,UAAU,CAAC,CAACG,UAAU,CAAC,CAAC;IAC/BD,MAAM,CAACD,aAAa,CAAC,CAACE,UAAU,CAAC,CAAC;IAElCC,sBAAS,CAACC,UAAU,CAACL,UAAU,EAAE,kBAAkB,CAAC;IACpDI,sBAAS,CAACC,UAAU,CAACJ,aAAa,EAAE,UAAU,CAAC;IAI/C,IAAMK,WAAW,GAAGR,WAAW,CAAC,UAAU,CAAC;IAC3CM,sBAAS,CAACG,KAAK,CAACD,WAAW,CAAC;IAG5B,MAAMP,OAAO,CAAC,YAAM;MAEhBG,MAAM,CAAChB,cAAc,CAACC,OAAO,CAAC,CAACqB,oBAAoB,CAAC,MAAM,CAAC;IAC/D,CAAC,CAAC;IAEDN,MAAM,CAACX,MAAM,CAACC,KAAK,CAAC,CAACiB,GAAG,CAACC,gBAAgB,CAAC,CAAC;EAChD,CAAC,EAAC;EAEF3B,EAAE,CAAC,+BAA+B,MAAAC,kBAAA,CAAAC,OAAA,EAAE,aAAY;IAC5C,IAAMC,cAAc,GAAG;MACnBC,OAAO,EAAEC,IAAI,CAACC,EAAE,CAAC,CAAC;MAClBC,QAAQ,EAAEF,IAAI,CAACC,EAAE,CAAC;IACtB,CAAC;IAED,IAAAsB,QAAA,GAAsB,IAAAjB,mBAAM,EAAC,IAAAb,WAAA,CAAAc,GAAA,EAACf,MAAA,CAAAK,OAAK;QAACW,UAAU,EAAEV;MAAe,CAAE,CAAC,CAAC;MAA3D0B,SAAS,GAAAD,QAAA,CAATC,SAAS;IAGjB,IAAMC,oBAAoB,GAAGD,SAAS,CAAC,mBAAmB,CAAC;IAC3DR,sBAAS,CAACG,KAAK,CAACM,oBAAoB,CAAC;EAMzC,CAAC,EAAC;AAGN,CAAC,CAAC"}