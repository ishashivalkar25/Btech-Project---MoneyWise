{"version":3,"names":["PlatformLoggerServiceImpl","container","prototype","getPlatformInfoString","providers","getProviders","map","provider","isVersionServiceProvider","service","getImmediate","concat","library","version","filter","logString","join","component","getComponent","type","logger","logger$1","Logger","DEFAULT_ENTRY_NAME","PLATFORM_LOG_STRING","_a$1","name$o","name$n","name$l","name$m","name$j","name$k","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$2","name$1","name","_apps","Map","_components","_addComponent","app","addComponent","e","debug","_addOrOverwriteComponent","addOrOverwriteComponent","_registerComponent","componentName","has","set","_b","tslib","__values","values","_c","next","done","value","_getProvider","heartbeatController","getProvider","optional","triggerHeartbeat","_removeServiceInstance","instanceIdentifier","clearInstance","_clearComponents","clear","ERRORS","_a","ERROR_FACTORY","util","ErrorFactory","FirebaseAppImpl","options","config","_this","_isDeleted","_options","__assign","_config","_name","_automaticDataCollectionEnabled","automaticDataCollectionEnabled","_container","Component","Object","defineProperty","get","checkDestroyed","val","isDeleted","create","appName","SDK_VERSION","initializeApp","rawConfig","name_1","String","getDefaultAppConfig","existingApp","deepEqual","ComponentContainer","component$1","newApp","getApp","getApps","Array","from","deleteApp","delete","Promise","all","sent","registerVersion","libraryKeyOrName","variant","libraryMismatch","match","versionMismatch","warning","push","warn","onLog","logCallback","setUserLogHandler","setLogLevel","logLevel","DB_NAME","DB_VERSION","STORE_NAME","dbPromise","getDbPromise","idb","openDB","upgrade","db","oldVersion","createObjectStore","catch","originalErrorMessage","message","readHeartbeatsFromIndexedDB","transaction","objectStore","computeKey","e_1","FirebaseError","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","tx","put","e_2","appId","MAX_HEADER_BYTES","STORED_HEARTBEAT_RETENTION_MAX_MILLIS","HeartbeatServiceImpl","_heartbeatsCache","_storage","HeartbeatStorageImpl","_heartbeatsCachePromise","read","then","result","platformLogger","agent","date","getUTCDateString","lastSentHeartbeatDate","heartbeats","some","singleDateHeartbeat","hbTimestamp","Date","valueOf","now","overwrite","getHeartbeatsHeader","length","extractHeartbeatsForHeader","heartbeatsToSend","unsentEntries","headerString","base64urlEncodeWithoutPadding","JSON","stringify","today","toISOString","substring","heartbeatsCache","maxSize","slice","heartbeatEntry","find","hb","dates","countBytes","pop","heartbeatsCache_1","heartbeatsCache_1_1","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","isIndexedDBAvailable","validateIndexedDBOpenable","canUseIndexedDB","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","add","__spreadArray","__read","registerCoreComponents","version$1"],"sources":["../src/platformLoggerService.ts","../src/logger.ts","../src/constants.ts","../src/internal.ts","../src/errors.ts","../src/firebaseApp.ts","../src/api.ts","../src/indexeddb.ts","../src/heartbeatService.ts","../src/registerCoreComponents.ts","../src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  const heartbeatController = (app as FirebaseAppImpl).container\n    .getProvider('heartbeat')\n    .getImmediate({ optional: true });\n  if (heartbeatController) {\n    void heartbeatController.triggerHeartbeat();\n  }\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  NO_OPTIONS = 'no-options',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument',\n  IDB_OPEN = 'idb-open',\n  IDB_GET = 'idb-get',\n  IDB_WRITE = 'idb-set',\n  IDB_DELETE = 'idb-delete'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.NO_OPTIONS]:\n    'Need to provide options, when not being deployed to hosting via source.',\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.',\n  [AppError.IDB_OPEN]:\n    'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_GET]:\n    'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_WRITE]:\n    'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\n  [AppError.IDB_DELETE]:\n    'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n  [AppError.IDB_OPEN]: { originalErrorMessage?: string };\n  [AppError.IDB_GET]: { originalErrorMessage?: string };\n  [AppError.IDB_WRITE]: { originalErrorMessage?: string };\n  [AppError.IDB_DELETE]: { originalErrorMessage?: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual, getDefaultAppConfig } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @public\n */\nexport function initializeApp(): FirebaseApp;\nexport function initializeApp(\n  _options?: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  let options = _options;\n\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  options ||= getDefaultAppConfig();\n\n  if (!options) {\n    throw ERROR_FACTORY.create(AppError.NO_OPTIONS);\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app && name === DEFAULT_ENTRY_NAME) {\n    return initializeApp();\n  }\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { DBSchema, openDB, IDBPDatabase } from 'idb';\nimport { AppError, ERROR_FACTORY } from './errors';\nimport { FirebaseApp } from './public-types';\nimport { HeartbeatsInIndexedDB } from './types';\nimport { logger } from './logger';\n\nconst DB_NAME = 'firebase-heartbeat-database';\nconst DB_VERSION = 1;\nconst STORE_NAME = 'firebase-heartbeat-store';\n\ninterface AppDB extends DBSchema {\n  'firebase-heartbeat-store': {\n    key: string;\n    value: HeartbeatsInIndexedDB;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<AppDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<AppDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB<AppDB>(DB_NAME, DB_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME);\n        }\n      }\n    }).catch(e => {\n      throw ERROR_FACTORY.create(AppError.IDB_OPEN, {\n        originalErrorMessage: e.message\n      });\n    });\n  }\n  return dbPromise;\n}\n\nexport async function readHeartbeatsFromIndexedDB(\n  app: FirebaseApp\n): Promise<HeartbeatsInIndexedDB | undefined> {\n  try {\n    const db = await getDbPromise();\n    return db\n      .transaction(STORE_NAME)\n      .objectStore(STORE_NAME)\n      .get(computeKey(app)) as Promise<HeartbeatsInIndexedDB | undefined>;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_GET, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nexport async function writeHeartbeatsToIndexedDB(\n  app: FirebaseApp,\n  heartbeatObject: HeartbeatsInIndexedDB\n): Promise<void> {\n  try {\n    const db = await getDbPromise();\n    const tx = db.transaction(STORE_NAME, 'readwrite');\n    const objectStore = tx.objectStore(STORE_NAME);\n    await objectStore.put(heartbeatObject, computeKey(app));\n    return tx.done;\n  } catch (e) {\n    if (e instanceof FirebaseError) {\n      logger.warn(e.message);\n    } else {\n      const idbGetError = ERROR_FACTORY.create(AppError.IDB_WRITE, {\n        originalErrorMessage: (e as Error)?.message\n      });\n      logger.warn(idbGetError.message);\n    }\n  }\n}\n\nfunction computeKey(app: FirebaseApp): string {\n  return `${app.name}!${app.options.appId}`;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ComponentContainer } from '@firebase/component';\nimport {\n  base64urlEncodeWithoutPadding,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\nimport {\n  readHeartbeatsFromIndexedDB,\n  writeHeartbeatsToIndexedDB\n} from './indexeddb';\nimport { FirebaseApp } from './public-types';\nimport {\n  HeartbeatsByUserAgent,\n  HeartbeatService,\n  HeartbeatsInIndexedDB,\n  HeartbeatStorage,\n  SingleDateHeartbeat\n} from './types';\n\nconst MAX_HEADER_BYTES = 1024;\n// 30 days\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\n\nexport class HeartbeatServiceImpl implements HeartbeatService {\n  /**\n   * The persistence layer for heartbeats\n   * Leave public for easier testing.\n   */\n  _storage: HeartbeatStorageImpl;\n\n  /**\n   * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\n   * the header string.\n   * Stores one record per date. This will be consolidated into the standard\n   * format of one record per user agent string before being sent as a header.\n   * Populated from indexedDB when the controller is instantiated and should\n   * be kept in sync with indexedDB.\n   * Leave public for easier testing.\n   */\n  _heartbeatsCache: HeartbeatsInIndexedDB | null = null;\n\n  /**\n   * the initialization promise for populating heartbeatCache.\n   * If getHeartbeatsHeader() is called before the promise resolves\n   * (hearbeatsCache == null), it should wait for this promise\n   * Leave public for easier testing.\n   */\n  _heartbeatsCachePromise: Promise<HeartbeatsInIndexedDB>;\n  constructor(private readonly container: ComponentContainer) {\n    const app = this.container.getProvider('app').getImmediate();\n    this._storage = new HeartbeatStorageImpl(app);\n    this._heartbeatsCachePromise = this._storage.read().then(result => {\n      this._heartbeatsCache = result;\n      return result;\n    });\n  }\n\n  /**\n   * Called to report a heartbeat. The function will generate\n   * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\n   * to IndexedDB.\n   * Note that we only store one heartbeat per day. So if a heartbeat for today is\n   * already logged, subsequent calls to this function in the same day will be ignored.\n   */\n  async triggerHeartbeat(): Promise<void> {\n    const platformLogger = this.container\n      .getProvider('platform-logger')\n      .getImmediate();\n\n    // This is the \"Firebase user agent\" string from the platform logger\n    // service, not the browser user agent.\n    const agent = platformLogger.getPlatformInfoString();\n    const date = getUTCDateString();\n    if (this._heartbeatsCache === null) {\n      this._heartbeatsCache = await this._heartbeatsCachePromise;\n    }\n    // Do not store a heartbeat if one is already stored for this day\n    // or if a header has already been sent today.\n    if (\n      this._heartbeatsCache.lastSentHeartbeatDate === date ||\n      this._heartbeatsCache.heartbeats.some(\n        singleDateHeartbeat => singleDateHeartbeat.date === date\n      )\n    ) {\n      return;\n    } else {\n      // There is no entry for this date. Create one.\n      this._heartbeatsCache.heartbeats.push({ date, agent });\n    }\n    // Remove entries older than 30 days.\n    this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(\n      singleDateHeartbeat => {\n        const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\n        const now = Date.now();\n        return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\n      }\n    );\n    return this._storage.overwrite(this._heartbeatsCache);\n  }\n\n  /**\n   * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\n   * It also clears all heartbeats from memory as well as in IndexedDB.\n   *\n   * NOTE: Consuming product SDKs should not send the header if this method\n   * returns an empty string.\n   */\n  async getHeartbeatsHeader(): Promise<string> {\n    if (this._heartbeatsCache === null) {\n      await this._heartbeatsCachePromise;\n    }\n    // If it's still null or the array is empty, there is no data to send.\n    if (\n      this._heartbeatsCache === null ||\n      this._heartbeatsCache.heartbeats.length === 0\n    ) {\n      return '';\n    }\n    const date = getUTCDateString();\n    // Extract as many heartbeats from the cache as will fit under the size limit.\n    const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(\n      this._heartbeatsCache.heartbeats\n    );\n    const headerString = base64urlEncodeWithoutPadding(\n      JSON.stringify({ version: 2, heartbeats: heartbeatsToSend })\n    );\n    // Store last sent date to prevent another being logged/sent for the same day.\n    this._heartbeatsCache.lastSentHeartbeatDate = date;\n    if (unsentEntries.length > 0) {\n      // Store any unsent entries if they exist.\n      this._heartbeatsCache.heartbeats = unsentEntries;\n      // This seems more likely than emptying the array (below) to lead to some odd state\n      // since the cache isn't empty and this will be called again on the next request,\n      // and is probably safest if we await it.\n      await this._storage.overwrite(this._heartbeatsCache);\n    } else {\n      this._heartbeatsCache.heartbeats = [];\n      // Do not wait for this, to reduce latency.\n      void this._storage.overwrite(this._heartbeatsCache);\n    }\n    return headerString;\n  }\n}\n\nfunction getUTCDateString(): string {\n  const today = new Date();\n  // Returns date format 'YYYY-MM-DD'\n  return today.toISOString().substring(0, 10);\n}\n\nexport function extractHeartbeatsForHeader(\n  heartbeatsCache: SingleDateHeartbeat[],\n  maxSize = MAX_HEADER_BYTES\n): {\n  heartbeatsToSend: HeartbeatsByUserAgent[];\n  unsentEntries: SingleDateHeartbeat[];\n} {\n  // Heartbeats grouped by user agent in the standard format to be sent in\n  // the header.\n  const heartbeatsToSend: HeartbeatsByUserAgent[] = [];\n  // Single date format heartbeats that are not sent.\n  let unsentEntries = heartbeatsCache.slice();\n  for (const singleDateHeartbeat of heartbeatsCache) {\n    // Look for an existing entry with the same user agent.\n    const heartbeatEntry = heartbeatsToSend.find(\n      hb => hb.agent === singleDateHeartbeat.agent\n    );\n    if (!heartbeatEntry) {\n      // If no entry for this user agent exists, create one.\n      heartbeatsToSend.push({\n        agent: singleDateHeartbeat.agent,\n        dates: [singleDateHeartbeat.date]\n      });\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        // If the header would exceed max size, remove the added heartbeat\n        // entry and stop adding to the header.\n        heartbeatsToSend.pop();\n        break;\n      }\n    } else {\n      heartbeatEntry.dates.push(singleDateHeartbeat.date);\n      // If the header would exceed max size, remove the added date\n      // and stop adding to the header.\n      if (countBytes(heartbeatsToSend) > maxSize) {\n        heartbeatEntry.dates.pop();\n        break;\n      }\n    }\n    // Pop unsent entry from queue. (Skipped if adding the entry exceeded\n    // quota and the loop breaks early.)\n    unsentEntries = unsentEntries.slice(1);\n  }\n  return {\n    heartbeatsToSend,\n    unsentEntries\n  };\n}\n\nexport class HeartbeatStorageImpl implements HeartbeatStorage {\n  private _canUseIndexedDBPromise: Promise<boolean>;\n  constructor(public app: FirebaseApp) {\n    this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\n  }\n  async runIndexedDBEnvironmentCheck(): Promise<boolean> {\n    if (!isIndexedDBAvailable()) {\n      return false;\n    } else {\n      return validateIndexedDBOpenable()\n        .then(() => true)\n        .catch(() => false);\n    }\n  }\n  /**\n   * Read all heartbeats.\n   */\n  async read(): Promise<HeartbeatsInIndexedDB> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return { heartbeats: [] };\n    } else {\n      const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\n      return idbHeartbeatObject || { heartbeats: [] };\n    }\n  }\n  // overwrite the storage with the provided heartbeats\n  async overwrite(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: heartbeatsObject.heartbeats\n      });\n    }\n  }\n  // add heartbeats\n  async add(heartbeatsObject: HeartbeatsInIndexedDB): Promise<void> {\n    const canUseIndexedDB = await this._canUseIndexedDBPromise;\n    if (!canUseIndexedDB) {\n      return;\n    } else {\n      const existingHeartbeatsObject = await this.read();\n      return writeHeartbeatsToIndexedDB(this.app, {\n        lastSentHeartbeatDate:\n          heartbeatsObject.lastSentHeartbeatDate ??\n          existingHeartbeatsObject.lastSentHeartbeatDate,\n        heartbeats: [\n          ...existingHeartbeatsObject.heartbeats,\n          ...heartbeatsObject.heartbeats\n        ]\n      });\n    }\n  }\n}\n\n/**\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\n * in a platform logging header JSON object, stringified, and converted\n * to base 64.\n */\nexport function countBytes(heartbeatsCache: HeartbeatsByUserAgent[]): number {\n  // base64 has a restricted set of characters, all of which should be 1 byte.\n  return base64urlEncodeWithoutPadding(\n    // heartbeatsCache wrapper properties\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })\n  ).length;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\nimport { HeartbeatServiceImpl } from './heartbeatService';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n  _registerComponent(\n    new Component(\n      'heartbeat',\n      container => new HeartbeatServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n"],"mappings":"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"}