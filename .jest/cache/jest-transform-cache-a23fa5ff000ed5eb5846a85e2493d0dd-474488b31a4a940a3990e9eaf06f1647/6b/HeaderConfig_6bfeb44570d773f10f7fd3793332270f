968679ea49b39982dff689b156aefb96
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = HeaderConfig;
var _elements = require("@react-navigation/elements");
var _native = require("@react-navigation/native");
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeScreens = require("react-native-screens");
var _FontProcessor = require("./FontProcessor");
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function HeaderConfig(_ref) {
  var _ref5, _headerTitleStyleFlat, _headerStyleFlattened;
  var headerHeight = _ref.headerHeight,
    headerBackImageSource = _ref.headerBackImageSource,
    headerBackButtonMenuEnabled = _ref.headerBackButtonMenuEnabled,
    headerBackTitle = _ref.headerBackTitle,
    headerBackTitleStyle = _ref.headerBackTitleStyle,
    _ref$headerBackTitleV = _ref.headerBackTitleVisible,
    headerBackTitleVisible = _ref$headerBackTitleV === void 0 ? true : _ref$headerBackTitleV,
    headerBackVisible = _ref.headerBackVisible,
    headerShadowVisible = _ref.headerShadowVisible,
    headerLargeStyle = _ref.headerLargeStyle,
    headerLargeTitle = _ref.headerLargeTitle,
    headerLargeTitleShadowVisible = _ref.headerLargeTitleShadowVisible,
    headerLargeTitleStyle = _ref.headerLargeTitleStyle,
    headerBackground = _ref.headerBackground,
    headerLeft = _ref.headerLeft,
    headerRight = _ref.headerRight,
    headerShown = _ref.headerShown,
    headerStyle = _ref.headerStyle,
    headerBlurEffect = _ref.headerBlurEffect,
    headerTintColor = _ref.headerTintColor,
    headerTitle = _ref.headerTitle,
    headerTitleAlign = _ref.headerTitleAlign,
    headerTitleStyle = _ref.headerTitleStyle,
    headerTransparent = _ref.headerTransparent,
    headerSearchBarOptions = _ref.headerSearchBarOptions,
    headerTopInsetEnabled = _ref.headerTopInsetEnabled,
    route = _ref.route,
    title = _ref.title,
    canGoBack = _ref.canGoBack;
  var _ref2 = (0, _native.useTheme)(),
    colors = _ref2.colors;
  var tintColor = headerTintColor != null ? headerTintColor : _reactNative.Platform.OS === 'ios' ? colors.primary : colors.text;
  var headerBackTitleStyleFlattened = _reactNative.StyleSheet.flatten(headerBackTitleStyle) || {};
  var headerLargeTitleStyleFlattened = _reactNative.StyleSheet.flatten(headerLargeTitleStyle) || {};
  var headerTitleStyleFlattened = _reactNative.StyleSheet.flatten(headerTitleStyle) || {};
  var headerStyleFlattened = _reactNative.StyleSheet.flatten(headerStyle) || {};
  var headerLargeStyleFlattened = _reactNative.StyleSheet.flatten(headerLargeStyle) || {};
  var _ref3 = (0, _FontProcessor.processFonts)([headerBackTitleStyleFlattened.fontFamily, headerLargeTitleStyleFlattened.fontFamily, headerTitleStyleFlattened.fontFamily]),
    _ref4 = (0, _slicedToArray2.default)(_ref3, 3),
    backTitleFontFamily = _ref4[0],
    largeTitleFontFamily = _ref4[1],
    titleFontFamily = _ref4[2];
  var titleText = (0, _elements.getHeaderTitle)({
    title: title,
    headerTitle: headerTitle
  }, route.name);
  var titleColor = (_ref5 = (_headerTitleStyleFlat = headerTitleStyleFlattened.color) != null ? _headerTitleStyleFlat : headerTintColor) != null ? _ref5 : colors.text;
  var titleFontSize = headerTitleStyleFlattened.fontSize;
  var titleFontWeight = headerTitleStyleFlattened.fontWeight;
  var headerTitleStyleSupported = {
    color: titleColor
  };
  if (headerTitleStyleFlattened.fontFamily != null) {
    headerTitleStyleSupported.fontFamily = headerTitleStyleFlattened.fontFamily;
  }
  if (titleFontSize != null) {
    headerTitleStyleSupported.fontSize = titleFontSize;
  }
  if (titleFontWeight != null) {
    headerTitleStyleSupported.fontWeight = titleFontWeight;
  }
  var headerLeftElement = headerLeft === null || headerLeft === void 0 ? void 0 : headerLeft({
    tintColor: tintColor,
    canGoBack: canGoBack,
    label: headerBackTitle
  });
  var headerRightElement = headerRight === null || headerRight === void 0 ? void 0 : headerRight({
    tintColor: tintColor,
    canGoBack: canGoBack
  });
  var headerTitleElement = typeof headerTitle === 'function' ? headerTitle({
    tintColor: tintColor,
    children: titleText
  }) : null;
  var supportsHeaderSearchBar = typeof _reactNativeScreens.isSearchBarAvailableForCurrentPlatform === 'boolean' ? _reactNativeScreens.isSearchBarAvailableForCurrentPlatform : _reactNative.Platform.OS === 'ios' && _reactNativeScreens.SearchBar != null;
  var hasHeaderSearchBar = supportsHeaderSearchBar && headerSearchBarOptions != null;
  if (headerSearchBarOptions != null && !supportsHeaderSearchBar) {
    throw new Error("The current version of 'react-native-screens' doesn't support SearchBar in the header. Please update to the latest version to use this option.");
  }
  var backButtonInCustomView = headerBackVisible ? headerLeftElement != null : _reactNative.Platform.OS === 'android' && headerTitleElement != null;
  var translucent = headerBackground != null || headerTransparent || (hasHeaderSearchBar || headerLargeTitle) && _reactNative.Platform.OS === 'ios' && headerTransparent !== false;
  return React.createElement(React.Fragment, null, headerBackground != null ? React.createElement(_reactNative.View, {
    style: [styles.background, headerTransparent ? styles.translucent : null, {
      height: headerHeight
    }]
  }, headerBackground()) : null, React.createElement(_reactNativeScreens.ScreenStackHeaderConfig, {
    backButtonInCustomView: backButtonInCustomView,
    backgroundColor: (_headerStyleFlattened = headerStyleFlattened.backgroundColor) != null ? _headerStyleFlattened : headerBackground != null || headerTransparent ? 'transparent' : colors.card,
    backTitle: headerBackTitleVisible ? headerBackTitle : ' ',
    backTitleFontFamily: backTitleFontFamily,
    backTitleFontSize: headerBackTitleStyleFlattened.fontSize,
    blurEffect: headerBlurEffect,
    color: tintColor,
    direction: _reactNative.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr',
    disableBackButtonMenu: headerBackButtonMenuEnabled === false,
    hidden: headerShown === false,
    hideBackButton: headerBackVisible === false,
    hideShadow: headerShadowVisible === false || headerBackground != null || headerTransparent && headerShadowVisible !== true,
    largeTitle: headerLargeTitle,
    largeTitleBackgroundColor: headerLargeStyleFlattened.backgroundColor,
    largeTitleColor: headerLargeTitleStyleFlattened.color,
    largeTitleFontFamily: largeTitleFontFamily,
    largeTitleFontSize: headerLargeTitleStyleFlattened.fontSize,
    largeTitleFontWeight: headerLargeTitleStyleFlattened.fontWeight,
    largeTitleHideShadow: headerLargeTitleShadowVisible === false,
    title: titleText,
    titleColor: titleColor,
    titleFontFamily: titleFontFamily,
    titleFontSize: titleFontSize,
    titleFontWeight: titleFontWeight,
    topInsetEnabled: headerTopInsetEnabled,
    translucent: translucent === true
  }, _reactNative.Platform.OS === 'ios' ? React.createElement(React.Fragment, null, headerLeftElement != null ? React.createElement(_reactNativeScreens.ScreenStackHeaderLeftView, null, headerLeftElement) : null, headerTitleElement != null ? React.createElement(_reactNativeScreens.ScreenStackHeaderCenterView, null, headerTitleElement) : null) : React.createElement(React.Fragment, null, headerLeftElement != null || typeof headerTitle === 'function' ? React.createElement(_reactNativeScreens.ScreenStackHeaderLeftView, null, React.createElement(_reactNative.View, {
    style: styles.row
  }, headerLeftElement, headerTitleAlign !== 'center' ? typeof headerTitle === 'function' ? headerTitleElement : React.createElement(_elements.HeaderTitle, {
    tintColor: tintColor,
    style: headerTitleStyleSupported
  }, titleText) : null)) : null, headerTitleAlign === 'center' ? React.createElement(_reactNativeScreens.ScreenStackHeaderCenterView, null, typeof headerTitle === 'function' ? headerTitleElement : React.createElement(_elements.HeaderTitle, {
    tintColor: tintColor,
    style: headerTitleStyleSupported
  }, titleText)) : null), headerBackImageSource !== undefined ? React.createElement(_reactNativeScreens.ScreenStackHeaderBackButtonImage, {
    source: headerBackImageSource
  }) : null, headerRightElement != null ? React.createElement(_reactNativeScreens.ScreenStackHeaderRightView, null, headerRightElement) : null, hasHeaderSearchBar ? React.createElement(_reactNativeScreens.ScreenStackHeaderSearchBarView, null, React.createElement(_reactNativeScreens.SearchBar, headerSearchBarOptions)) : null));
}
var styles = _reactNative.StyleSheet.create({
  row: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  translucent: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    zIndex: 1,
    elevation: 1
  },
  background: {
    overflow: 'hidden'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,