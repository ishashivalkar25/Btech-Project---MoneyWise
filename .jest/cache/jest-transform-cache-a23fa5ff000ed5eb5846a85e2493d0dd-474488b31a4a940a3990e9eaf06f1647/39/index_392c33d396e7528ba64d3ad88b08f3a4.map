{"version":3,"names":["n","aa","a","b","length","done","value","q","Symbol","iterator","call","next","ba","Object","create","prototype","ca","defineProperties","defineProperty","c","Array","da","globalThis","window","self","global","Math","Error","r","u","split","d","e","configurable","writable","ea","setPrototypeOf","fa","ha","ia","__proto__","TypeError","ja","h","f","g","toString","random","ka","i","o","k","j","resolve","reject","l","push","setTimeout","m","p","B","D","A","then","G","s","C","v","console","error","CustomEvent","Event","dispatchEvent","cancelable","document","createEvent","initCustomEvent","promise","reason","la","E","H","S","Z","t","catch","race","all","String","hasOwnProperty","set","isExtensible","seal","get","delete","has","V","head","key","id","list","index","J","size","entries","x","WeakMap","splice","clear","keys","values","forEach","Map","add","goog","w","ma","na","isArray","oa","pa","qa","ra","sa","apply","bind","arguments","ta","slice","unshift","Function","indexOf","ua","y","tempCtor","constructor","dc","z","va","wa","O","shift","xa","ya","toArray","za","extend","type","target","defaultPrevented","Aa","addEventListener","removeEventListener","Ba","test","Ca","trim","exec","Da","Ea","getNativeUserAgentString","navigator","userAgent","matchUserAgent","Fa","Ga","Ha","Ia","Ja","Ka","La","toLowerCase","Ma","Na","documentMode","Oa","Pa","Qa","Ra","parseFloat","Sa","Ta","max","parseInt","Ua","Va","Wa","Xa","relatedTarget","button","screenY","screenX","clientY","clientX","metaKey","shiftKey","altKey","ctrlKey","state","pointerId","pointerType","changedTouches","srcElement","nodeName","fromElement","toElement","pageX","pageY","Ya","preventDefault","returnValue","Za","$a","ab","listener","proxy","src","capture","bb","cb","db","clone","eb","fb","gb","hb","ib","jb","kb","lb","mb","once","nb","ob","P","pb","qb","rb","attachEvent","sb","addListener","removeListener","tb","R","ub","vb","detachEvent","wb","handleEvent","T","K","xb","concat","yb","JSON","stringify","zb","Ab","WorkQueue","Bb","Cb","Db","Eb","reset","WorkItem","Fb","throwException","Gb","Hb","Ib","Jb","Promise","Kb","Lb","Date","now","U","clearTimeout","Mb","start","Nb","Number","F","Throttle","Ob","Pb","getOwnPropertyDescriptor","Qb","Rb","Sb","Tb","Ub","Vb","Wb","info","Xb","Yb","Zb","$b","parse","ac","bc","cc","STAT_EVENT","ec","stat","I","fc","gc","hc","NO_ERROR","TIMEOUT","ic","jc","kc","lc","mc","OPEN","nc","oc","pc","qc","XMLHttpRequest","rc","Y","W","sc","X","M","N","L","tc","uc","vc","wc","xc","yc","zc","Ac","Bc","Cc","Dc","Ec","TextDecoder","Fc","decode","stream","getResponseHeader","Gc","Hc","Ic","Jc","Kc","substring","isNaN","substr","cancel","Lc","abort","Mc","Wc","Nc","Oc","Pc","Qc","Set","Rc","Sc","Tc","Uc","Vc","Xc","Yc","from","Zc","$c","ad","RegExp","bd","decodeURIComponent","replace","cd","dd","ed","fd","match","gd","hd","jd","encodeURIComponent","charAt","kd","ld","md","join","lastIndexOf","pop","nd","od","floor","abs","decodeURI","encodeURI","pd","charCodeAt","qd","rd","sd","td","ud","vd","PerformanceNavigationTiming","performance","getEntriesByType","nextHopProtocol","wd","xd","yd","zd","Ad","Bd","Image","onload","Cd","onerror","onabort","ontimeout","Dd","Ed","readyState","Fd","status","responseType","responseText","response","statusText","onreadystatechange","Headers","open","Gd","send","headers","method","credentials","cache","body","fetch","Request","Hd","arrayBuffer","ReadableStream","getReader","Id","text","read","Uint8Array","setRequestHeader","append","getAllResponseHeaders","Jd","Q","Kd","Ld","Md","toUpperCase","Nd","getPrototypeOf","find","FormData","withCredentials","Od","Pd","timeout","Qd","Rd","Sd","location","protocol","mozResponseArrayBuffer","Td","Ud","Vd","internalChannelParams","Wd","xmlHttpFactory","supportsCrossDomainXhr","concurrentRequestLimit","fastHandshake","encodeInitMessageHeaders","forceLongPolling","detectBufferingProxy","Xd","Yd","sendBeacon","Zd","$d","ae","__data__","be","ce","round","min","de","hostname","port","ee","fe","messageUrlParams","messageHeaders","clientProtocolHeaderRequired","initMessageHeaders","messageContentType","sendRawJson","httpSessionIdParam","ge","close","he","__sm__","data","ie","je","blockSize","ke","le","me","isFinite","ne","oe","pe","pow","qe","re","ga","se","te","$","ue","ve","we","xe","ceil","log","LN2","and","or","xor","createWebChannel","HTTP_ERROR","COMPLETE","EventType","CLOSE","ERROR","MESSAGE","listen","listenOnce","getLastError","getLastErrorCode","getStatus","getResponseJson","getResponseText","setWithCredentials","digest","update","multiply","modulo","compare","toNumber","getBits","fromNumber","fromString","exports","createWebChannelTransport","module","getStatEventTarget","ErrorCode","Stat","PROXY","NOPROXY","FetchXmlHttpFactory","WebChannel","XhrIo","Md5","Integer"],"sources":["../../node_modules/google-closure-library/closure/goog/base.js","src/com/google/javascript/jscomp/js/es6/util/arrayiterator.js","src/com/google/javascript/jscomp/js/es6/util/makeiterator.js","src/com/google/javascript/jscomp/js/util/objectcreate.js","src/com/google/javascript/jscomp/js/util/defineproperty.js","src/com/google/javascript/jscomp/js/util/global.js","src/com/google/javascript/jscomp/js/util/polyfill.js","src/com/google/javascript/jscomp/js/es6/util/setprototypeof.js","src/com/google/javascript/jscomp/js/es6/symbol.js","src/com/google/javascript/jscomp/js/es6/promise/promise.js","src/com/google/javascript/jscomp/js/es6/util/iteratorfromarray.js","src/com/google/javascript/jscomp/js/es6/array/values.js","src/com/google/javascript/jscomp/js/es6/array/keys.js","src/com/google/javascript/jscomp/js/util/owns.js","src/com/google/javascript/jscomp/js/es6/weakmap.js","src/com/google/javascript/jscomp/js/es6/map.js","src/com/google/javascript/jscomp/js/es6/array/find.js","src/com/google/javascript/jscomp/js/util/findinternal.js","src/com/google/javascript/jscomp/js/es6/array/entries.js","src/com/google/javascript/jscomp/js/es6/array/from.js","src/com/google/javascript/jscomp/js/es6/set.js","../../node_modules/google-closure-library/closure/goog/disposable/disposable.js","../../node_modules/google-closure-library/closure/goog/array/array.js","../../node_modules/google-closure-library/closure/goog/events/event.js","../../node_modules/google-closure-library/closure/goog/events/browserfeature.js","../../node_modules/google-closure-library/closure/goog/string/internal.js","../../node_modules/google-closure-library/closure/goog/labs/useragent/util.js","../../node_modules/google-closure-library/closure/goog/reflect/reflect.js","../../node_modules/google-closure-library/closure/goog/useragent/useragent.js","../../node_modules/google-closure-library/closure/goog/labs/useragent/browser.js","../../node_modules/google-closure-library/closure/goog/labs/useragent/engine.js","../../node_modules/google-closure-library/closure/goog/net/xhrio.js","../../node_modules/google-closure-library/closure/goog/events/browserevent.js","../../node_modules/google-closure-library/closure/goog/events/eventtype.js","../../node_modules/google-closure-library/closure/goog/events/listenable.js","../../node_modules/google-closure-library/closure/goog/events/listenablekey.js","../../node_modules/google-closure-library/closure/goog/events/listener.js","../../node_modules/google-closure-library/closure/goog/events/listenermap.js","../../node_modules/google-closure-library/closure/goog/object/object.js","../../node_modules/google-closure-library/closure/goog/events/events.js","../../node_modules/google-closure-library/closure/goog/events/eventtarget.js","../../node_modules/google-closure-library/closure/goog/json/json.js","../../node_modules/google-closure-library/closure/goog/async/freelist.js","../../node_modules/google-closure-library/closure/goog/async/workqueue.js","../../node_modules/google-closure-library/closure/goog/async/run.js","../../node_modules/google-closure-library/closure/goog/async/throwexception.js","../../node_modules/google-closure-library/closure/goog/timer/timer.js","../../node_modules/google-closure-library/closure/goog/async/throttle.js","src/com/google/javascript/jscomp/js/es6/util/inherits.js","../../node_modules/google-closure-library/closure/goog/events/eventhandler.js","../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/webchanneldebug.js","../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/requeststats.js","../../node_modules/google-closure-library/closure/goog/net/errorcode.js","../../node_modules/google-closure-library/closure/goog/net/eventtype.js","../../node_modules/google-closure-library/closure/goog/net/xmlhttpfactory.js","../../node_modules/google-closure-library/closure/goog/labs/net/webchannel.js","../../node_modules/google-closure-library/closure/goog/net/xmlhttp.js","../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/channelrequest.js","../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/environment.js","../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/webchannelbase.js","../../node_modules/google-closure-library/closure/goog/uri/uri.js","../../node_modules/google-closure-library/closure/goog/string/string.js","../../node_modules/google-closure-library/closure/goog/disposable/dispose.js","../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/wirev8.js","../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/forwardchannelrequestpool.js","../../node_modules/google-closure-library/closure/goog/structs/structs.js","../../node_modules/google-closure-library/closure/goog/uri/utils.js","../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/wire.js","../../node_modules/google-closure-library/closure/goog/json/nativejsonprocessor.js","../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/netutils.js","../../node_modules/google-closure-library/closure/goog/net/fetchxmlhttpfactory.js","../../node_modules/google-closure-library/closure/goog/functions/functions.js","../../node_modules/google-closure-library/closure/goog/json/hybrid.js","../../node_modules/google-closure-library/closure/goog/net/httpstatus.js","../../node_modules/google-closure-library/closure/goog/net/rpc/httpcors.js","../../node_modules/google-closure-library/closure/goog/labs/net/webchanneltransport.js","../../node_modules/google-closure-library/closure/goog/labs/net/webchannel/webchannelbasetransport.js","../../node_modules/google-closure-library/closure/goog/crypt/hash.js","../../node_modules/google-closure-library/closure/goog/crypt/md5.js","../../node_modules/google-closure-library/closure/goog/math/integer.js","src/index.js","../../node_modules/google-closure-library/closure/goog/labs/net/webchanneltransportfactory.js"],"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Bootstrap for the Google JS Library (Closure).\n *\n * In uncompiled mode base.js will attempt to load Closure's deps file, unless\n * the global <code>CLOSURE_NO_DEPS</code> is set to true.  This allows projects\n * to include their own deps file(s) from different locations.\n *\n * Avoid including base.js more than once. This is strictly discouraged and not\n * supported. goog.require(...) won't work properly in that case.\n *\n * @provideGoog\n */\n\n\n/**\n * @define {boolean} Overridden to true by the compiler.\n */\nvar COMPILED = false;\n\n\n/**\n * Base namespace for the Closure library.  Checks to see goog is already\n * defined in the current scope before assigning to prevent clobbering if\n * base.js is loaded more than once.\n *\n * @const\n */\nvar goog = goog || {};\n\n/**\n * Reference to the global object.\n * https://www.ecma-international.org/ecma-262/9.0/index.html#sec-global-object\n *\n * More info on this implementation here:\n * https://docs.google.com/document/d/1NAeW4Wk7I7FV0Y2tcUFvQdGMc89k2vdgSXInw8_nvCI/edit\n *\n * @const\n * @suppress {undefinedVars} self won't be referenced unless `this` is falsy.\n * @type {!Global}\n */\ngoog.global =\n    // Check `this` first for backwards compatibility.\n    // Valid unless running as an ES module or in a function wrapper called\n    //   without setting `this` properly.\n    // Note that base.js can't usefully be imported as an ES module, but it may\n    // be compiled into bundles that are loadable as ES modules.\n    this ||\n    // https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n    // For in-page browser environments and workers.\n    self;\n\n\n/**\n * A hook for overriding the define values in uncompiled mode.\n *\n * In uncompiled mode, `CLOSURE_UNCOMPILED_DEFINES` may be defined before\n * loading base.js.  If a key is defined in `CLOSURE_UNCOMPILED_DEFINES`,\n * `goog.define` will use the value instead of the default value.  This\n * allows flags to be overwritten without compilation (this is normally\n * accomplished with the compiler's \"define\" flag).\n *\n * Example:\n * <pre>\n *   var CLOSURE_UNCOMPILED_DEFINES = {'goog.DEBUG': false};\n * </pre>\n *\n * @type {Object<string, (string|number|boolean)>|undefined}\n */\ngoog.global.CLOSURE_UNCOMPILED_DEFINES;\n\n\n/**\n * A hook for overriding the define values in uncompiled or compiled mode,\n * like CLOSURE_UNCOMPILED_DEFINES but effective in compiled code.  In\n * uncompiled code CLOSURE_UNCOMPILED_DEFINES takes precedence.\n *\n * Also unlike CLOSURE_UNCOMPILED_DEFINES the values must be number, boolean or\n * string literals or the compiler will emit an error.\n *\n * While any @define value may be set, only those set with goog.define will be\n * effective for uncompiled code.\n *\n * Example:\n * <pre>\n *   var CLOSURE_DEFINES = {'goog.DEBUG': false} ;\n * </pre>\n *\n * Currently the Closure Compiler will only recognize very simple definitions of\n * this value when looking for values to apply to compiled code and ignore all\n * other references.  Specifically, it looks the value defined at the variable\n * declaration, as with the example above.\n *\n * TODO(user): Improve the recognized definitions.\n *\n * @type {!Object<string, (string|number|boolean)>|null|undefined}\n */\ngoog.global.CLOSURE_DEFINES;\n\n\n/**\n * Builds an object structure for the provided namespace path, ensuring that\n * names that already exist are not overwritten. For example:\n * \"a.b.c\" -> a = {};a.b={};a.b.c={};\n * Used by goog.provide and goog.exportSymbol.\n * @param {string} name The name of the object that this file defines.\n * @param {*=} object The object to expose at the end of the path.\n * @param {boolean=} overwriteImplicit If object is set and a previous call\n *     implicitly constructed the namespace given by name, this parameter\n *     controls whether object should overwrite the implicitly constructed\n *     namespace or be merged into it. Defaults to false.\n * @param {?Object=} objectToExportTo The object to add the path to; if this\n *     field is not specified, its value defaults to `goog.global`.\n * @private\n */\ngoog.exportPath_ = function(name, object, overwriteImplicit, objectToExportTo) {\n  var parts = name.split('.');\n  var cur = objectToExportTo || goog.global;\n\n  // Internet Explorer exhibits strange behavior when throwing errors from\n  // methods externed in this manner.  See the testExportSymbolExceptions in\n  // base_test.html for an example.\n  if (!(parts[0] in cur) && typeof cur.execScript != 'undefined') {\n    cur.execScript('var ' + parts[0]);\n  }\n\n  for (var part; parts.length && (part = parts.shift());) {\n    if (!parts.length && object !== undefined) {\n      if (!overwriteImplicit && goog.isObject(object) &&\n          goog.isObject(cur[part])) {\n        // Merge properties on object (the input parameter) with the existing\n        // implicitly defined namespace, so as to not clobber previously\n        // defined child namespaces.\n        for (var prop in object) {\n          if (object.hasOwnProperty(prop)) {\n            cur[part][prop] = object[prop];\n          }\n        }\n      } else {\n        // Either there is no existing implicit namespace, or overwriteImplicit\n        // is set to true, so directly assign object (the input parameter) to\n        // the namespace.\n        cur[part] = object;\n      }\n    } else if (cur[part] && cur[part] !== Object.prototype[part]) {\n      cur = cur[part];\n    } else {\n      cur = cur[part] = {};\n    }\n  }\n};\n\n\n/**\n * Defines a named value. In uncompiled mode, the value is retrieved from\n * CLOSURE_DEFINES or CLOSURE_UNCOMPILED_DEFINES if the object is defined and\n * has the property specified, and otherwise used the defined defaultValue.\n * When compiled the default can be overridden using the compiler options or the\n * value set in the CLOSURE_DEFINES object. Returns the defined value so that it\n * can be used safely in modules. Note that the value type MUST be either\n * boolean, number, or string.\n *\n * @param {string} name The distinguished name to provide.\n * @param {T} defaultValue\n * @return {T} The defined value.\n * @template T\n */\ngoog.define = function(name, defaultValue) {\n  var value = defaultValue;\n  if (!COMPILED) {\n    var uncompiledDefines = goog.global.CLOSURE_UNCOMPILED_DEFINES;\n    var defines = goog.global.CLOSURE_DEFINES;\n    if (uncompiledDefines &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        /** @type {?} */ (uncompiledDefines).nodeType === undefined &&\n        Object.prototype.hasOwnProperty.call(uncompiledDefines, name)) {\n      value = uncompiledDefines[name];\n    } else if (\n        defines &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        /** @type {?} */ (defines).nodeType === undefined &&\n        Object.prototype.hasOwnProperty.call(defines, name)) {\n      value = defines[name];\n    }\n  }\n  return value;\n};\n\n\n/**\n * @define {number} Integer year indicating the set of browser features that are\n * guaranteed to be present.  This is defined to include exactly features that\n * work correctly on all \"modern\" browsers that are stable on January 1 of the\n * specified year.  For example,\n * ```js\n * if (goog.FEATURESET_YEAR >= 2019) {\n *   // use APIs known to be available on all major stable browsers Jan 1, 2019\n * } else {\n *   // polyfill for older browsers\n * }\n * ```\n * This is intended to be the primary define for removing\n * unnecessary browser compatibility code (such as ponyfills and workarounds),\n * and should inform the default value for most other defines:\n * ```js\n * const ASSUME_NATIVE_PROMISE =\n *     goog.define('ASSUME_NATIVE_PROMISE', goog.FEATURESET_YEAR >= 2016);\n * ```\n *\n * The default assumption is that IE9 is the lowest supported browser, which was\n * first available Jan 1, 2012.\n *\n * TODO(user): Reference more thorough documentation when it's available.\n */\ngoog.FEATURESET_YEAR = goog.define('goog.FEATURESET_YEAR', 2012);\n\n\n/**\n * @define {boolean} DEBUG is provided as a convenience so that debugging code\n * that should not be included in a production. It can be easily stripped\n * by specifying --define goog.DEBUG=false to the Closure Compiler aka\n * JSCompiler. For example, most toString() methods should be declared inside an\n * \"if (goog.DEBUG)\" conditional because they are generally used for debugging\n * purposes and it is difficult for the JSCompiler to statically determine\n * whether they are used.\n */\ngoog.DEBUG = goog.define('goog.DEBUG', true);\n\n\n/**\n * @define {string} LOCALE defines the locale being used for compilation. It is\n * used to select locale specific data to be compiled in js binary. BUILD rule\n * can specify this value by \"--define goog.LOCALE=<locale_name>\" as a compiler\n * option.\n *\n * Take into account that the locale code format is important. You should use\n * the canonical Unicode format with hyphen as a delimiter. Language must be\n * lowercase, Language Script - Capitalized, Region - UPPERCASE.\n * There are few examples: pt-BR, en, en-US, sr-Latin-BO, zh-Hans-CN.\n *\n * See more info about locale codes here:\n * http://www.unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers\n *\n * For language codes you should use values defined by ISO 693-1. See it here\n * http://www.w3.org/WAI/ER/IG/ert/iso639.htm. There is only one exception from\n * this rule: the Hebrew language. For legacy reasons the old code (iw) should\n * be used instead of the new code (he).\n *\n */\ngoog.LOCALE = goog.define('goog.LOCALE', 'en');  // default to en\n\n\n/**\n * This method is intended to be used for bookkeeping purposes.  We would\n * like to distinguish uses of goog.LOCALE used for code stripping purposes\n * and uses of goog.LOCALE for other uses (such as URL parameters).\n *\n * This allows us to ban direct uses of goog.LOCALE and to ensure that all\n * code has been transformed to our new localization build scheme.\n *\n * @return {string}\n *\n */\ngoog.getLocale = function() {\n  return goog.LOCALE;\n};\n\n\n/**\n * @define {boolean} Whether this code is running on trusted sites.\n *\n * On untrusted sites, several native functions can be defined or overridden by\n * external libraries like Prototype, Datejs, and JQuery and setting this flag\n * to false forces closure to use its own implementations when possible.\n *\n * If your JavaScript can be loaded by a third party site and you are wary about\n * relying on non-standard implementations, specify\n * \"--define goog.TRUSTED_SITE=false\" to the compiler.\n */\ngoog.TRUSTED_SITE = goog.define('goog.TRUSTED_SITE', true);\n\n\n/**\n * @define {boolean} Whether code that calls {@link goog.setTestOnly} should\n *     be disallowed in the compilation unit.\n */\ngoog.DISALLOW_TEST_ONLY_CODE =\n    goog.define('goog.DISALLOW_TEST_ONLY_CODE', COMPILED && !goog.DEBUG);\n\n\n/**\n * @define {boolean} Whether to use a Chrome app CSP-compliant method for\n *     loading scripts via goog.require. @see appendScriptSrcNode_.\n */\ngoog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING =\n    goog.define('goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING', false);\n\n\n/**\n * Defines a namespace in Closure.\n *\n * A namespace may only be defined once in a codebase. It may be defined using\n * goog.provide() or goog.module().\n *\n * The presence of one or more goog.provide() calls in a file indicates\n * that the file defines the given objects/namespaces.\n * Provided symbols must not be null or undefined.\n *\n * In addition, goog.provide() creates the object stubs for a namespace\n * (for example, goog.provide(\"goog.foo.bar\") will create the object\n * goog.foo.bar if it does not already exist).\n *\n * Build tools also scan for provide/require/module statements\n * to discern dependencies, build dependency files (see deps.js), etc.\n *\n * @see goog.require\n * @see goog.module\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n * deprecated Use goog.module (see b/159289405)\n */\ngoog.provide = function(name) {\n  if (goog.isInModuleLoader_()) {\n    throw new Error('goog.provide cannot be used within a module.');\n  }\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw new Error('Namespace \"' + name + '\" already declared.');\n    }\n  }\n\n  goog.constructNamespace_(name);\n};\n\n\n/**\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n * @param {?Object=} object The object to embed in the namespace.\n * @param {boolean=} overwriteImplicit If object is set and a previous call\n *     implicitly constructed the namespace given by name, this parameter\n *     controls whether opt_obj should overwrite the implicitly constructed\n *     namespace or be merged into it. Defaults to false.\n * @private\n */\ngoog.constructNamespace_ = function(name, object, overwriteImplicit) {\n  if (!COMPILED) {\n    delete goog.implicitNamespaces_[name];\n\n    var namespace = name;\n    while ((namespace = namespace.substring(0, namespace.lastIndexOf('.')))) {\n      if (goog.getObjectByName(namespace)) {\n        break;\n      }\n      goog.implicitNamespaces_[namespace] = true;\n    }\n  }\n\n  goog.exportPath_(name, object, overwriteImplicit);\n};\n\n\n/**\n * According to the CSP3 spec a nonce must be a valid base64 string.\n * @see https://www.w3.org/TR/CSP3/#grammardef-base64-value\n * @private @const\n */\ngoog.NONCE_PATTERN_ = /^[\\w+/_-]+[=]{0,2}$/;\n\n\n/**\n * Returns CSP nonce, if set for any script tag.\n * @param {?Window=} opt_window The window context used to retrieve the nonce.\n *     Defaults to global context.\n * @return {string} CSP nonce or empty string if no nonce is present.\n * @private\n */\ngoog.getScriptNonce_ = function(opt_window) {\n  var doc = (opt_window || goog.global).document;\n  var script = doc.querySelector && doc.querySelector('script[nonce]');\n  if (script) {\n    // Try to get the nonce from the IDL property first, because browsers that\n    // implement additional nonce protection features (currently only Chrome) to\n    // prevent nonce stealing via CSS do not expose the nonce via attributes.\n    // See https://github.com/whatwg/html/issues/2369\n    var nonce = script['nonce'] || script.getAttribute('nonce');\n    if (nonce && goog.NONCE_PATTERN_.test(nonce)) {\n      return nonce;\n    }\n  }\n  return '';\n};\n\n\n/**\n * Module identifier validation regexp.\n * Note: This is a conservative check, it is very possible to be more lenient,\n *   the primary exclusion here is \"/\" and \"\\\" and a leading \".\", these\n *   restrictions are intended to leave the door open for using goog.require\n *   with relative file paths rather than module identifiers.\n * @private\n */\ngoog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\n\n\n/**\n * Defines a module in Closure.\n *\n * Marks that this file must be loaded as a module and claims the namespace.\n *\n * A namespace may only be defined once in a codebase. It may be defined using\n * goog.provide() or goog.module().\n *\n * goog.module() has three requirements:\n * - goog.module may not be used in the same file as goog.provide.\n * - goog.module must be the first statement in the file.\n * - only one goog.module is allowed per file.\n *\n * When a goog.module annotated file is loaded, it is enclosed in\n * a strict function closure. This means that:\n * - any variables declared in a goog.module file are private to the file\n * (not global), though the compiler is expected to inline the module.\n * - The code must obey all the rules of \"strict\" JavaScript.\n * - the file will be marked as \"use strict\"\n *\n * NOTE: unlike goog.provide, goog.module does not declare any symbols by\n * itself. If declared symbols are desired, use\n * goog.module.declareLegacyNamespace().\n *\n *\n * See the public goog.module proposal: http://goo.gl/Va1hin\n *\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\", is expected but not required.\n * @return {void}\n */\ngoog.module = function(name) {\n  if (typeof name !== 'string' || !name ||\n      name.search(goog.VALID_MODULE_RE_) == -1) {\n    throw new Error('Invalid module identifier');\n  }\n  if (!goog.isInGoogModuleLoader_()) {\n    throw new Error(\n        'Module ' + name + ' has been loaded incorrectly. Note, ' +\n        'modules cannot be loaded as normal scripts. They require some kind of ' +\n        'pre-processing step. You\\'re likely trying to load a module via a ' +\n        'script tag or as a part of a concatenated bundle without rewriting the ' +\n        'module. For more info see: ' +\n        'https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.');\n  }\n  if (goog.moduleLoaderState_.moduleName) {\n    throw new Error('goog.module may only be called once per module.');\n  }\n\n  // Store the module name for the loader.\n  goog.moduleLoaderState_.moduleName = name;\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw new Error('Namespace \"' + name + '\" already declared.');\n    }\n    delete goog.implicitNamespaces_[name];\n  }\n};\n\n\n/**\n * @param {string} name The module identifier.\n * @return {?} The module exports for an already loaded module or null.\n *\n * Note: This is not an alternative to goog.require, it does not\n * indicate a hard dependency, instead it is used to indicate\n * an optional dependency or to access the exports of a module\n * that has already been loaded.\n * @suppress {missingProvide}\n */\ngoog.module.get = function(name) {\n  return goog.module.getInternal_(name);\n};\n\n\n/**\n * @param {string} name The module identifier.\n * @return {?} The module exports for an already loaded module or null.\n * @private\n */\ngoog.module.getInternal_ = function(name) {\n  if (!COMPILED) {\n    if (name in goog.loadedModules_) {\n      return goog.loadedModules_[name].exports;\n    } else if (!goog.implicitNamespaces_[name]) {\n      var ns = goog.getObjectByName(name);\n      return ns != null ? ns : null;\n    }\n  }\n  return null;\n};\n\n\n/**\n * Types of modules the debug loader can load.\n * @enum {string}\n */\ngoog.ModuleType = {\n  ES6: 'es6',\n  GOOG: 'goog'\n};\n\n\n/**\n * @private {?{\n *   moduleName: (string|undefined),\n *   declareLegacyNamespace:boolean,\n *   type: ?goog.ModuleType\n * }}\n */\ngoog.moduleLoaderState_ = null;\n\n\n/**\n * @private\n * @return {boolean} Whether a goog.module or an es6 module is currently being\n *     initialized.\n */\ngoog.isInModuleLoader_ = function() {\n  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();\n};\n\n\n/**\n * @private\n * @return {boolean} Whether a goog.module is currently being initialized.\n */\ngoog.isInGoogModuleLoader_ = function() {\n  return !!goog.moduleLoaderState_ &&\n      goog.moduleLoaderState_.type == goog.ModuleType.GOOG;\n};\n\n\n/**\n * @private\n * @return {boolean} Whether an es6 module is currently being initialized.\n */\ngoog.isInEs6ModuleLoader_ = function() {\n  var inLoader = !!goog.moduleLoaderState_ &&\n      goog.moduleLoaderState_.type == goog.ModuleType.ES6;\n\n  if (inLoader) {\n    return true;\n  }\n\n  var jscomp = goog.global['$jscomp'];\n\n  if (jscomp) {\n    // jscomp may not have getCurrentModulePath if this is a compiled bundle\n    // that has some of the runtime, but not all of it. This can happen if\n    // optimizations are turned on so the unused runtime is removed but renaming\n    // and Closure pass are off (so $jscomp is still named $jscomp and the\n    // goog.provide/require calls still exist).\n    if (typeof jscomp.getCurrentModulePath != 'function') {\n      return false;\n    }\n\n    // Bundled ES6 module.\n    return !!jscomp.getCurrentModulePath();\n  }\n\n  return false;\n};\n\n\n/**\n * Provide the module's exports as a globally accessible object under the\n * module's declared name.  This is intended to ease migration to goog.module\n * for files that have existing usages.\n * @suppress {missingProvide}\n */\ngoog.module.declareLegacyNamespace = function() {\n  if (!COMPILED && !goog.isInGoogModuleLoader_()) {\n    throw new Error(\n        'goog.module.declareLegacyNamespace must be called from ' +\n        'within a goog.module');\n  }\n  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {\n    throw new Error(\n        'goog.module must be called prior to ' +\n        'goog.module.declareLegacyNamespace.');\n  }\n  goog.moduleLoaderState_.declareLegacyNamespace = true;\n};\n\n\n/**\n * Associates an ES6 module with a Closure module ID so that is available via\n * goog.require. The associated ID  acts like a goog.module ID - it does not\n * create any global names, it is merely available via goog.require /\n * goog.module.get / goog.forwardDeclare / goog.requireType. goog.require and\n * goog.module.get will return the entire module as if it was import *'d. This\n * allows Closure files to reference ES6 modules for the sake of migration.\n *\n * @param {string} namespace\n * @suppress {missingProvide}\n */\ngoog.declareModuleId = function(namespace) {\n  if (!COMPILED) {\n    if (!goog.isInEs6ModuleLoader_()) {\n      throw new Error(\n          'goog.declareModuleId may only be called from ' +\n          'within an ES6 module');\n    }\n    if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName) {\n      throw new Error(\n          'goog.declareModuleId may only be called once per module.');\n    }\n    if (namespace in goog.loadedModules_) {\n      throw new Error(\n          'Module with namespace \"' + namespace + '\" already exists.');\n    }\n  }\n  if (goog.moduleLoaderState_) {\n    // Not bundled - debug loading.\n    goog.moduleLoaderState_.moduleName = namespace;\n  } else {\n    // Bundled - not debug loading, no module loader state.\n    var jscomp = goog.global['$jscomp'];\n    if (!jscomp || typeof jscomp.getCurrentModulePath != 'function') {\n      throw new Error(\n          'Module with namespace \"' + namespace +\n          '\" has been loaded incorrectly.');\n    }\n    var exports = jscomp.require(jscomp.getCurrentModulePath());\n    goog.loadedModules_[namespace] = {\n      exports: exports,\n      type: goog.ModuleType.ES6,\n      moduleId: namespace\n    };\n  }\n};\n\n\n/**\n * Marks that the current file should only be used for testing, and never for\n * live code in production.\n *\n * In the case of unit tests, the message may optionally be an exact namespace\n * for the test (e.g. 'goog.stringTest'). The linter will then ignore the extra\n * provide (if not explicitly defined in the code).\n *\n * @param {string=} opt_message Optional message to add to the error that's\n *     raised when used in production code.\n */\ngoog.setTestOnly = function(opt_message) {\n  if (goog.DISALLOW_TEST_ONLY_CODE) {\n    opt_message = opt_message || '';\n    throw new Error(\n        'Importing test-only code into non-debug environment' +\n        (opt_message ? ': ' + opt_message : '.'));\n  }\n};\n\n\n/**\n * Forward declares a symbol. This is an indication to the compiler that the\n * symbol may be used in the source yet is not required and may not be provided\n * in compilation.\n *\n * The most common usage of forward declaration is code that takes a type as a\n * function parameter but does not need to require it. By forward declaring\n * instead of requiring, no hard dependency is made, and (if not required\n * elsewhere) the namespace may never be required and thus, not be pulled\n * into the JavaScript binary. If it is required elsewhere, it will be type\n * checked as normal.\n *\n * Before using goog.forwardDeclare, please read the documentation at\n * https://github.com/google/closure-compiler/wiki/Bad-Type-Annotation to\n * understand the options and tradeoffs when working with forward declarations.\n *\n * @param {string} name The namespace to forward declare in the form of\n *     \"goog.package.part\".\n * @deprecated See go/noforwarddeclaration, Use `goog.requireType` instead.\n */\ngoog.forwardDeclare = function(name) {};\n\n\n/**\n * Forward declare type information. Used to assign types to goog.global\n * referenced object that would otherwise result in unknown type references\n * and thus block property disambiguation.\n */\ngoog.forwardDeclare('Document');\ngoog.forwardDeclare('HTMLScriptElement');\ngoog.forwardDeclare('XMLHttpRequest');\n\n\nif (!COMPILED) {\n  /**\n   * Check if the given name has been goog.provided. This will return false for\n   * names that are available only as implicit namespaces.\n   * @param {string} name name of the object to look for.\n   * @return {boolean} Whether the name has been provided.\n   * @private\n   */\n  goog.isProvided_ = function(name) {\n    return (name in goog.loadedModules_) ||\n        (!goog.implicitNamespaces_[name] && goog.getObjectByName(name) != null);\n  };\n\n  /**\n   * Namespaces implicitly defined by goog.provide. For example,\n   * goog.provide('goog.events.Event') implicitly declares that 'goog' and\n   * 'goog.events' must be namespaces.\n   *\n   * @type {!Object<string, (boolean|undefined)>}\n   * @private\n   */\n  goog.implicitNamespaces_ = {'goog.module': true};\n\n  // NOTE: We add goog.module as an implicit namespace as goog.module is defined\n  // here and because the existing module package has not been moved yet out of\n  // the goog.module namespace. This satisifies both the debug loader and\n  // ahead-of-time dependency management.\n}\n\n\n/**\n * Returns an object based on its fully qualified external name.  The object\n * is not found if null or undefined.  If you are using a compilation pass that\n * renames property names beware that using this function will not find renamed\n * properties.\n *\n * @param {string} name The fully qualified name.\n * @param {Object=} opt_obj The object within which to look; default is\n *     |goog.global|.\n * @return {?} The value (object or primitive) or, if not found, null.\n */\ngoog.getObjectByName = function(name, opt_obj) {\n  var parts = name.split('.');\n  var cur = opt_obj || goog.global;\n  for (var i = 0; i < parts.length; i++) {\n    cur = cur[parts[i]];\n    if (cur == null) {\n      return null;\n    }\n  }\n  return cur;\n};\n\n\n/**\n * Adds a dependency from a file to the files it requires.\n * @param {string} relPath The path to the js file.\n * @param {!Array<string>} provides An array of strings with\n *     the names of the objects this file provides.\n * @param {!Array<string>} requires An array of strings with\n *     the names of the objects this file requires.\n * @param {boolean|!Object<string>=} opt_loadFlags Parameters indicating\n *     how the file must be loaded.  The boolean 'true' is equivalent\n *     to {'module': 'goog'} for backwards-compatibility.  Valid properties\n *     and values include {'module': 'goog'} and {'lang': 'es6'}.\n */\ngoog.addDependency = function(relPath, provides, requires, opt_loadFlags) {\n  if (!COMPILED && goog.DEPENDENCIES_ENABLED) {\n    goog.debugLoader_.addDependency(relPath, provides, requires, opt_loadFlags);\n  }\n};\n\n\n// NOTE(nnaze): The debug DOM loader was included in base.js as an original way\n// to do \"debug-mode\" development.  The dependency system can sometimes be\n// confusing, as can the debug DOM loader's asynchronous nature.\n//\n// With the DOM loader, a call to goog.require() is not blocking -- the script\n// will not load until some point after the current script.  If a namespace is\n// needed at runtime, it needs to be defined in a previous script, or loaded via\n// require() with its registered dependencies.\n//\n// User-defined namespaces may need their own deps file. For a reference on\n// creating a deps file, see:\n// Externally: https://developers.google.com/closure/library/docs/depswriter\n//\n// Because of legacy clients, the DOM loader can't be easily removed from\n// base.js.  Work was done to make it disableable or replaceable for\n// different environments (DOM-less JavaScript interpreters like Rhino or V8,\n// for example). See bootstrap/ for more information.\n\n\n/**\n * @define {boolean} Whether to enable the debug loader.\n *\n * If enabled, a call to goog.require() will attempt to load the namespace by\n * appending a script tag to the DOM (if the namespace has been registered).\n *\n * If disabled, goog.require() will simply assert that the namespace has been\n * provided (and depend on the fact that some outside tool correctly ordered\n * the script).\n */\ngoog.ENABLE_DEBUG_LOADER = goog.define('goog.ENABLE_DEBUG_LOADER', true);\n\n\n/**\n * @param {string} msg\n * @private\n */\ngoog.logToConsole_ = function(msg) {\n  if (goog.global.console) {\n    goog.global.console['error'](msg);\n  }\n};\n\n\n/**\n * Implements a system for the dynamic resolution of dependencies that works in\n * parallel with the BUILD system.\n *\n * Note that all calls to goog.require will be stripped by the compiler.\n *\n * @see goog.provide\n * @param {string} namespace Namespace (as was given in goog.provide,\n *     goog.module, or goog.declareModuleId) in the form\n *     \"goog.package.part\".\n * @return {?} If called within a goog.module or ES6 module file, the associated\n *     namespace or module otherwise null.\n */\ngoog.require = function(namespace) {\n  if (!COMPILED) {\n    // Might need to lazy load on old IE.\n    if (goog.ENABLE_DEBUG_LOADER) {\n      goog.debugLoader_.requested(namespace);\n    }\n\n    // If the object already exists we do not need to do anything.\n    if (goog.isProvided_(namespace)) {\n      if (goog.isInModuleLoader_()) {\n        return goog.module.getInternal_(namespace);\n      }\n    } else if (goog.ENABLE_DEBUG_LOADER) {\n      var moduleLoaderState = goog.moduleLoaderState_;\n      goog.moduleLoaderState_ = null;\n      try {\n        goog.debugLoader_.load_(namespace);\n      } finally {\n        goog.moduleLoaderState_ = moduleLoaderState;\n      }\n    }\n\n    return null;\n  }\n};\n\n\n/**\n * Requires a symbol for its type information. This is an indication to the\n * compiler that the symbol may appear in type annotations, yet it is not\n * referenced at runtime.\n *\n * When called within a goog.module or ES6 module file, the return value may be\n * assigned to or destructured into a variable, but it may not be otherwise used\n * in code outside of a type annotation.\n *\n * Note that all calls to goog.requireType will be stripped by the compiler.\n *\n * @param {string} namespace Namespace (as was given in goog.provide,\n *     goog.module, or goog.declareModuleId) in the form\n *     \"goog.package.part\".\n * @return {?}\n */\ngoog.requireType = function(namespace) {\n  // Return an empty object so that single-level destructuring of the return\n  // value doesn't crash at runtime when using the debug loader. Multi-level\n  // destructuring isn't supported.\n  return {};\n};\n\n\n/**\n * Path for included scripts.\n * @type {string}\n */\ngoog.basePath = '';\n\n\n/**\n * A hook for overriding the base path.\n * @type {string|undefined}\n */\ngoog.global.CLOSURE_BASE_PATH;\n\n\n/**\n * Whether to attempt to load Closure's deps file. By default, when uncompiled,\n * deps files will attempt to be loaded.\n * @type {boolean|undefined}\n */\ngoog.global.CLOSURE_NO_DEPS;\n\n\n/**\n * A function to import a single script. This is meant to be overridden when\n * Closure is being run in non-HTML contexts, such as web workers. It's defined\n * in the global scope so that it can be set before base.js is loaded, which\n * allows deps.js to be imported properly.\n *\n * The first parameter the script source, which is a relative URI. The second,\n * optional parameter is the script contents, in the event the script needed\n * transformation. It should return true if the script was imported, false\n * otherwise.\n * @type {(function(string, string=): boolean)|undefined}\n */\ngoog.global.CLOSURE_IMPORT_SCRIPT;\n\n\n/**\n * Null function used for default values of callbacks, etc.\n * @return {void} Nothing.\n * @deprecated use '()=>{}' or 'function(){}' instead.\n */\ngoog.nullFunction = function() {};\n\n\n/**\n * When defining a class Foo with an abstract method bar(), you can do:\n * Foo.prototype.bar = goog.abstractMethod\n *\n * Now if a subclass of Foo fails to override bar(), an error will be thrown\n * when bar() is invoked.\n *\n * @type {!Function}\n * @throws {Error} when invoked to indicate the method should be overridden.\n * @deprecated Use \"@abstract\" annotation instead of goog.abstractMethod in new\n *     code. See\n *     https://github.com/google/closure-compiler/wiki/@abstract-classes-and-methods\n */\ngoog.abstractMethod = function() {\n  throw new Error('unimplemented abstract method');\n};\n\n\n/**\n * Adds a `getInstance` static method that always returns the same\n * instance object.\n * @param {!Function} ctor The constructor for the class to add the static\n *     method to.\n * @suppress {missingProperties} 'instance_' isn't a property on 'Function'\n *     but we don't have a better type to use here.\n */\ngoog.addSingletonGetter = function(ctor) {\n  // instance_ is immediately set to prevent issues with sealed constructors\n  // such as are encountered when a constructor is returned as the export object\n  // of a goog.module in unoptimized code.\n  // Delcare type to avoid conformance violations that ctor.instance_ is unknown\n  /** @type {undefined|!Object} @suppress {underscore} */\n  ctor.instance_ = undefined;\n  ctor.getInstance = function() {\n    if (ctor.instance_) {\n      return ctor.instance_;\n    }\n    if (goog.DEBUG) {\n      // NOTE: JSCompiler can't optimize away Array#push.\n      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;\n    }\n    // Cast to avoid conformance violations that ctor.instance_ is unknown\n    return /** @type {!Object|undefined} */ (ctor.instance_) = new ctor;\n  };\n};\n\n\n/**\n * All singleton classes that have been instantiated, for testing. Don't read\n * it directly, use the `goog.testing.singleton` module. The compiler\n * removes this variable if unused.\n * @type {!Array<!Function>}\n * @private\n */\ngoog.instantiatedSingletons_ = [];\n\n\n/**\n * @define {boolean} Whether to load goog.modules using `eval` when using\n * the debug loader.  This provides a better debugging experience as the\n * source is unmodified and can be edited using Chrome Workspaces or similar.\n * However in some environments the use of `eval` is banned\n * so we provide an alternative.\n */\ngoog.LOAD_MODULE_USING_EVAL = goog.define('goog.LOAD_MODULE_USING_EVAL', true);\n\n\n/**\n * @define {boolean} Whether the exports of goog.modules should be sealed when\n * possible.\n */\ngoog.SEAL_MODULE_EXPORTS = goog.define('goog.SEAL_MODULE_EXPORTS', goog.DEBUG);\n\n\n/**\n * The registry of initialized modules:\n * The module identifier or path to module exports map.\n * @private @const {!Object<string, {exports:?,type:string,moduleId:string}>}\n */\ngoog.loadedModules_ = {};\n\n\n/**\n * True if the debug loader enabled and used.\n * @const {boolean}\n */\ngoog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\n\n\n/**\n * @define {string} How to decide whether to transpile.  Valid values\n * are 'always', 'never', and 'detect'.  The default ('detect') is to\n * use feature detection to determine which language levels need\n * transpilation.\n */\n// NOTE(sdh): we could expand this to accept a language level to bypass\n// detection: e.g. goog.TRANSPILE == 'es5' would transpile ES6 files but\n// would leave ES3 and ES5 files alone.\ngoog.TRANSPILE = goog.define('goog.TRANSPILE', 'detect');\n\n/**\n * @define {boolean} If true assume that ES modules have already been\n * transpiled by the jscompiler (in the same way that transpile.js would\n * transpile them - to jscomp modules). Useful only for servers that wish to use\n * the debug loader and transpile server side. Thus this is only respected if\n * goog.TRANSPILE is \"never\".\n */\ngoog.ASSUME_ES_MODULES_TRANSPILED =\n    goog.define('goog.ASSUME_ES_MODULES_TRANSPILED', false);\n\n\n/**\n * @define {string} If a file needs to be transpiled what the output language\n * should be. By default this is the highest language level this file detects\n * the current environment supports. Generally this flag should not be set, but\n * it could be useful to override. Example: If the current environment supports\n * ES6 then by default ES7+ files will be transpiled to ES6, unless this is\n * overridden.\n *\n * Valid values include: es3, es5, es6, es7, and es8. Anything not recognized\n * is treated as es3.\n *\n * Note that setting this value does not force transpilation. Just if\n * transpilation occurs this will be the output. So this is most useful when\n * goog.TRANSPILE is set to 'always' and then forcing the language level to be\n * something lower than what the environment detects.\n */\ngoog.TRANSPILE_TO_LANGUAGE = goog.define('goog.TRANSPILE_TO_LANGUAGE', '');\n\n\n/**\n * @define {string} Path to the transpiler.  Executing the script at this\n * path (relative to base.js) should define a function $jscomp.transpile.\n */\ngoog.TRANSPILER = goog.define('goog.TRANSPILER', 'transpile.js');\n\n\n/**\n * @define {string} Trusted Types policy name. If non-empty then Closure will\n * use Trusted Types.\n */\ngoog.TRUSTED_TYPES_POLICY_NAME =\n    goog.define('goog.TRUSTED_TYPES_POLICY_NAME', 'goog');\n\n\n/**\n * @package {?boolean}\n * Visible for testing.\n */\ngoog.hasBadLetScoping = null;\n\n\n/**\n * @param {function(?):?|string} moduleDef The module definition.\n */\ngoog.loadModule = function(moduleDef) {\n  // NOTE: we allow function definitions to be either in the from\n  // of a string to eval (which keeps the original source intact) or\n  // in a eval forbidden environment (CSP) we allow a function definition\n  // which in its body must call `goog.module`, and return the exports\n  // of the module.\n  var previousState = goog.moduleLoaderState_;\n  try {\n    goog.moduleLoaderState_ = {\n      moduleName: '',\n      declareLegacyNamespace: false,\n      type: goog.ModuleType.GOOG\n    };\n    var origExports = {};\n    var exports = origExports;\n    if (typeof moduleDef === 'function') {\n      exports = moduleDef.call(undefined, exports);\n    } else if (typeof moduleDef === 'string') {\n      exports = goog.loadModuleFromSource_.call(undefined, exports, moduleDef);\n    } else {\n      throw new Error('Invalid module definition');\n    }\n\n    var moduleName = goog.moduleLoaderState_.moduleName;\n    if (typeof moduleName === 'string' && moduleName) {\n      // Don't seal legacy namespaces as they may be used as a parent of\n      // another namespace\n      if (goog.moduleLoaderState_.declareLegacyNamespace) {\n        // Whether exports was overwritten via default export assignment.\n        // This is important for legacy namespaces as it dictates whether\n        // previously a previously loaded implicit namespace should be clobbered\n        // or not.\n        var isDefaultExport = origExports !== exports;\n        goog.constructNamespace_(moduleName, exports, isDefaultExport);\n      } else if (\n          goog.SEAL_MODULE_EXPORTS && Object.seal &&\n          typeof exports == 'object' && exports != null) {\n        Object.seal(exports);\n      }\n\n      var data = {\n        exports: exports,\n        type: goog.ModuleType.GOOG,\n        moduleId: goog.moduleLoaderState_.moduleName\n      };\n      goog.loadedModules_[moduleName] = data;\n    } else {\n      throw new Error('Invalid module name \\\"' + moduleName + '\\\"');\n    }\n  } finally {\n    goog.moduleLoaderState_ = previousState;\n  }\n};\n\n\n/**\n * @private @const\n */\ngoog.loadModuleFromSource_ =\n    /** @type {function(!Object, string):?} */ (function(exports) {\n      // NOTE: we avoid declaring parameters or local variables here to avoid\n      // masking globals or leaking values into the module definition.\n      'use strict';\n      eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(arguments[1]));\n      return exports;\n    });\n\n\n/**\n * Normalize a file path by removing redundant \"..\" and extraneous \".\" file\n * path components.\n * @param {string} path\n * @return {string}\n * @private\n */\ngoog.normalizePath_ = function(path) {\n  var components = path.split('/');\n  var i = 0;\n  while (i < components.length) {\n    if (components[i] == '.') {\n      components.splice(i, 1);\n    } else if (\n        i && components[i] == '..' && components[i - 1] &&\n        components[i - 1] != '..') {\n      components.splice(--i, 2);\n    } else {\n      i++;\n    }\n  }\n  return components.join('/');\n};\n\n\n/**\n * Provides a hook for loading a file when using Closure's goog.require() API\n * with goog.modules.  In particular this hook is provided to support Node.js.\n *\n * @type {(function(string):string)|undefined}\n */\ngoog.global.CLOSURE_LOAD_FILE_SYNC;\n\n\n/**\n * Loads file by synchronous XHR. Should not be used in production environments.\n * @param {string} src Source URL.\n * @return {?string} File contents, or null if load failed.\n * @private\n */\ngoog.loadFileSync_ = function(src) {\n  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {\n    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);\n  } else {\n    try {\n      /** @type {XMLHttpRequest} */\n      var xhr = new goog.global['XMLHttpRequest']();\n      xhr.open('get', src, false);\n      xhr.send();\n      // NOTE: Successful http: requests have a status of 200, but successful\n      // file: requests may have a status of zero.  Any other status, or a\n      // thrown exception (particularly in case of file: requests) indicates\n      // some sort of error, which we treat as a missing or unavailable file.\n      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;\n    } catch (err) {\n      // No need to rethrow or log, since errors should show up on their own.\n      return null;\n    }\n  }\n};\n\n\n/**\n * Lazily retrieves the transpiler and applies it to the source.\n * @param {string} code JS code.\n * @param {string} path Path to the code.\n * @param {string} target Language level output.\n * @return {string} The transpiled code.\n * @private\n */\ngoog.transpile_ = function(code, path, target) {\n  var jscomp = goog.global['$jscomp'];\n  if (!jscomp) {\n    goog.global['$jscomp'] = jscomp = {};\n  }\n  var transpile = jscomp.transpile;\n  if (!transpile) {\n    var transpilerPath = goog.basePath + goog.TRANSPILER;\n    var transpilerCode = goog.loadFileSync_(transpilerPath);\n    if (transpilerCode) {\n      // This must be executed synchronously, since by the time we know we\n      // need it, we're about to load and write the ES6 code synchronously,\n      // so a normal script-tag load will be too slow. Wrapped in a function\n      // so that code is eval'd in the global scope.\n      (function() {\n        (0, eval)(transpilerCode + '\\n//# sourceURL=' + transpilerPath);\n      }).call(goog.global);\n      // Even though the transpiler is optional, if $gwtExport is found, it's\n      // a sign the transpiler was loaded and the $jscomp.transpile *should*\n      // be there.\n      if (goog.global['$gwtExport'] && goog.global['$gwtExport']['$jscomp'] &&\n          !goog.global['$gwtExport']['$jscomp']['transpile']) {\n        throw new Error(\n            'The transpiler did not properly export the \"transpile\" ' +\n            'method. $gwtExport: ' + JSON.stringify(goog.global['$gwtExport']));\n      }\n      // transpile.js only exports a single $jscomp function, transpile. We\n      // grab just that and add it to the existing definition of $jscomp which\n      // contains the polyfills.\n      goog.global['$jscomp'].transpile =\n          goog.global['$gwtExport']['$jscomp']['transpile'];\n      jscomp = goog.global['$jscomp'];\n      transpile = jscomp.transpile;\n    }\n  }\n  if (!transpile) {\n    // The transpiler is an optional component.  If it's not available then\n    // replace it with a pass-through function that simply logs.\n    var suffix = ' requires transpilation but no transpiler was found.';\n    transpile = jscomp.transpile = function(code, path) {\n      // TODO(sdh): figure out some way to get this error to show up\n      // in test results, noting that the failure may occur in many\n      // different ways, including in loadModule() before the test\n      // runner even comes up.\n      goog.logToConsole_(path + suffix);\n      return code;\n    };\n  }\n  // Note: any transpilation errors/warnings will be logged to the console.\n  return transpile(code, path, target);\n};\n\n//==============================================================================\n// Language Enhancements\n//==============================================================================\n\n\n/**\n * This is a \"fixed\" version of the typeof operator.  It differs from the typeof\n * operator in such a way that null returns 'null' and arrays return 'array'.\n * @param {?} value The value to get the type of.\n * @return {string} The name of the type.\n */\ngoog.typeOf = function(value) {\n  var s = typeof value;\n\n  if (s != 'object') {\n    return s;\n  }\n\n  if (!value) {\n    return 'null';\n  }\n\n  if (Array.isArray(value)) {\n    return 'array';\n  }\n  return s;\n};\n\n\n/**\n * Returns true if the object looks like an array. To qualify as array like\n * the value needs to be either a NodeList or an object with a Number length\n * property. Note that for this function neither strings nor functions are\n * considered \"array-like\".\n *\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an array.\n */\ngoog.isArrayLike = function(val) {\n  var type = goog.typeOf(val);\n  // We do not use goog.isObject here in order to exclude function values.\n  return type == 'array' || type == 'object' && typeof val.length == 'number';\n};\n\n\n/**\n * Returns true if the object looks like a Date. To qualify as Date-like the\n * value needs to be an object and have a getFullYear() function.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a like a Date.\n */\ngoog.isDateLike = function(val) {\n  return goog.isObject(val) && typeof val.getFullYear == 'function';\n};\n\n\n/**\n * Returns true if the specified value is an object.  This includes arrays and\n * functions.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is an object.\n */\ngoog.isObject = function(val) {\n  var type = typeof val;\n  return type == 'object' && val != null || type == 'function';\n  // return Object(val) === val also works, but is slower, especially if val is\n  // not an object.\n};\n\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. The unique ID is\n * guaranteed to be unique across the current session amongst objects that are\n * passed into `getUid`. There is no guarantee that the ID is unique or\n * consistent across sessions. It is unsafe to generate unique ID for function\n * prototypes.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\ngoog.getUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n  return Object.prototype.hasOwnProperty.call(obj, goog.UID_PROPERTY_) &&\n      obj[goog.UID_PROPERTY_] ||\n      (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);\n};\n\n\n/**\n * Whether the given object is already assigned a unique ID.\n *\n * This does not modify the object.\n *\n * @param {!Object} obj The object to check.\n * @return {boolean} Whether there is an assigned unique id for the object.\n */\ngoog.hasUid = function(obj) {\n  return !!obj[goog.UID_PROPERTY_];\n};\n\n\n/**\n * Removes the unique ID from an object. This is useful if the object was\n * previously mutated using `goog.getUid` in which case the mutation is\n * undone.\n * @param {Object} obj The object to remove the unique ID field from.\n */\ngoog.removeUid = function(obj) {\n  // TODO(arv): Make the type stricter, do not accept null.\n\n  // In IE, DOM nodes are not instances of Object and throw an exception if we\n  // try to delete.  Instead we try to use removeAttribute.\n  if (obj !== null && 'removeAttribute' in obj) {\n    obj.removeAttribute(goog.UID_PROPERTY_);\n  }\n\n  try {\n    delete obj[goog.UID_PROPERTY_];\n  } catch (ex) {\n  }\n};\n\n\n/**\n * Name for unique ID property. Initialized in a way to help avoid collisions\n * with other closure JavaScript on the same page.\n * @type {string}\n * @private\n */\ngoog.UID_PROPERTY_ = 'closure_uid_' + ((Math.random() * 1e9) >>> 0);\n\n\n/**\n * Counter for UID.\n * @type {number}\n * @private\n */\ngoog.uidCounter_ = 0;\n\n\n/**\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\n * arrays will be cloned recursively.\n *\n * WARNINGS:\n * <code>goog.cloneObject</code> does not detect reference loops. Objects that\n * refer to themselves will cause infinite recursion.\n *\n * <code>goog.cloneObject</code> is unaware of unique identifiers, and copies\n * UIDs created by <code>getUid</code> into cloned results.\n *\n * @param {*} obj The value to clone.\n * @return {*} A clone of the input value.\n * @deprecated goog.cloneObject is unsafe. Prefer the goog.object methods.\n */\ngoog.cloneObject = function(obj) {\n  var type = goog.typeOf(obj);\n  if (type == 'object' || type == 'array') {\n    if (typeof obj.clone === 'function') {\n      return obj.clone();\n    }\n    if (typeof Map !== 'undefined' && obj instanceof Map) {\n      return new Map(obj);\n    } else if (typeof Set !== 'undefined' && obj instanceof Set) {\n      return new Set(obj);\n    }\n    var clone = type == 'array' ? [] : {};\n    for (var key in obj) {\n      clone[key] = goog.cloneObject(obj[key]);\n    }\n    return clone;\n  }\n\n  return obj;\n};\n\n\n/**\n * A native implementation of goog.bind.\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @private\n */\ngoog.bindNative_ = function(fn, selfObj, var_args) {\n  return /** @type {!Function} */ (fn.call.apply(fn.bind, arguments));\n};\n\n\n/**\n * A pure-JS implementation of goog.bind.\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @private\n */\ngoog.bindJs_ = function(fn, selfObj, var_args) {\n  if (!fn) {\n    throw new Error();\n  }\n\n  if (arguments.length > 2) {\n    var boundArgs = Array.prototype.slice.call(arguments, 2);\n    return function() {\n      // Prepend the bound arguments to the current arguments.\n      var newArgs = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(newArgs, boundArgs);\n      return fn.apply(selfObj, newArgs);\n    };\n\n  } else {\n    return function() {\n      return fn.apply(selfObj, arguments);\n    };\n  }\n};\n\n\n/**\n * Partially applies this function to a particular 'this object' and zero or\n * more arguments. The result is a new function with some arguments of the first\n * function pre-filled and the value of this 'pre-specified'.\n *\n * Remaining arguments specified at call-time are appended to the pre-specified\n * ones.\n *\n * Also see: {@link #partial}.\n *\n * Usage:\n * <pre>var barMethBound = goog.bind(myFunction, myObj, 'arg1', 'arg2');\n * barMethBound('arg3', 'arg4');</pre>\n *\n * @param {?function(this:T, ...)} fn A function to partially apply.\n * @param {T} selfObj Specifies the object which this should point to when the\n *     function is run.\n * @param {...*} var_args Additional arguments that are partially applied to the\n *     function.\n * @return {!Function} A partially-applied form of the function goog.bind() was\n *     invoked as a method of.\n * @template T\n * @suppress {deprecated} See above.\n * @deprecated use `=> {}` or Function.prototype.bind instead.\n */\ngoog.bind = function(fn, selfObj, var_args) {\n  // TODO(nicksantos): narrow the type signature.\n  if (Function.prototype.bind &&\n      // NOTE(nicksantos): Somebody pulled base.js into the default Chrome\n      // extension environment. This means that for Chrome extensions, they get\n      // the implementation of Function.prototype.bind that calls goog.bind\n      // instead of the native one. Even worse, we don't want to introduce a\n      // circular dependency between goog.bind and Function.prototype.bind, so\n      // we have to hack this to make sure it works correctly.\n      Function.prototype.bind.toString().indexOf('native code') != -1) {\n    goog.bind = goog.bindNative_;\n  } else {\n    goog.bind = goog.bindJs_;\n  }\n  return goog.bind.apply(null, arguments);\n};\n\n\n/**\n * Like goog.bind(), except that a 'this object' is not required. Useful when\n * the target function is already bound.\n *\n * Usage:\n * var g = goog.partial(f, arg1, arg2);\n * g(arg3, arg4);\n *\n * @param {Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn.\n * @return {!Function} A partially-applied form of the function goog.partial()\n *     was invoked as a method of.\n */\ngoog.partial = function(fn, var_args) {\n  var args = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    // Clone the array (with slice()) and append additional arguments\n    // to the existing arguments.\n    var newArgs = args.slice();\n    newArgs.push.apply(newArgs, arguments);\n    return fn.apply(/** @type {?} */ (this), newArgs);\n  };\n};\n\n\n/**\n * Copies all the members of a source object to a target object. This method\n * does not work on all browsers for all objects that contain keys such as\n * toString or hasOwnProperty. Use goog.object.extend for this purpose.\n *\n * NOTE: Some have advocated for the use of goog.mixin to setup classes\n * with multiple inheritence (traits, mixins, etc).  However, as it simply\n * uses \"for in\", this is not compatible with ES6 classes whose methods are\n * non-enumerable.  Changing this, would break cases where non-enumerable\n * properties are not expected.\n *\n * @param {Object} target Target.\n * @param {Object} source Source.\n * @deprecated Prefer Object.assign\n */\ngoog.mixin = function(target, source) {\n  for (var x in source) {\n    target[x] = source[x];\n  }\n\n  // For IE7 or lower, the for-in-loop does not contain any properties that are\n  // not enumerable on the prototype object (for example, isPrototypeOf from\n  // Object.prototype) but also it will not include 'replace' on objects that\n  // extend String and change 'replace' (not that it is common for anyone to\n  // extend anything except Object).\n};\n\n\n/**\n * @return {number} An integer value representing the number of milliseconds\n *     between midnight, January 1, 1970 and the current time.\n * @deprecated Use Date.now\n */\ngoog.now = function() {\n  return Date.now();\n};\n\n\n/**\n * Evals JavaScript in the global scope.\n *\n * Throws an exception if neither execScript or eval is defined.\n * @param {string|!TrustedScript} script JavaScript string.\n */\ngoog.globalEval = function(script) {\n  (0, eval)(script);\n};\n\n\n/**\n * Optional map of CSS class names to obfuscated names used with\n * goog.getCssName().\n * @private {!Object<string, string>|undefined}\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMapping_;\n\n\n/**\n * Optional obfuscation style for CSS class names. Should be set to either\n * 'BY_WHOLE' or 'BY_PART' if defined.\n * @type {string|undefined}\n * @private\n * @see goog.setCssNameMapping\n */\ngoog.cssNameMappingStyle_;\n\n\n\n/**\n * A hook for modifying the default behavior goog.getCssName. The function\n * if present, will receive the standard output of the goog.getCssName as\n * its input.\n *\n * @type {(function(string):string)|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAP_FN;\n\n\n/**\n * Handles strings that are intended to be used as CSS class names.\n *\n * This function works in tandem with @see goog.setCssNameMapping.\n *\n * Without any mapping set, the arguments are simple joined with a hyphen and\n * passed through unaltered.\n *\n * When there is a mapping, there are two possible styles in which these\n * mappings are used. In the BY_PART style, each part (i.e. in between hyphens)\n * of the passed in css name is rewritten according to the map. In the BY_WHOLE\n * style, the full css name is looked up in the map directly. If a rewrite is\n * not specified by the map, the compiler will output a warning.\n *\n * When the mapping is passed to the compiler, it will replace calls to\n * goog.getCssName with the strings from the mapping, e.g.\n *     var x = goog.getCssName('foo');\n *     var y = goog.getCssName(this.baseClass, 'active');\n *  becomes:\n *     var x = 'foo';\n *     var y = this.baseClass + '-active';\n *\n * If one argument is passed it will be processed, if two are passed only the\n * modifier will be processed, as it is assumed the first argument was generated\n * as a result of calling goog.getCssName.\n *\n * @param {string} className The class name.\n * @param {string=} opt_modifier A modifier to be appended to the class name.\n * @return {string} The class name or the concatenation of the class name and\n *     the modifier.\n */\ngoog.getCssName = function(className, opt_modifier) {\n  // String() is used for compatibility with compiled soy where the passed\n  // className can be non-string objects.\n  if (String(className).charAt(0) == '.') {\n    throw new Error(\n        'className passed in goog.getCssName must not start with \".\".' +\n        ' You passed: ' + className);\n  }\n\n  var getMapping = function(cssName) {\n    return goog.cssNameMapping_[cssName] || cssName;\n  };\n\n  var renameByParts = function(cssName) {\n    // Remap all the parts individually.\n    var parts = cssName.split('-');\n    var mapped = [];\n    for (var i = 0; i < parts.length; i++) {\n      mapped.push(getMapping(parts[i]));\n    }\n    return mapped.join('-');\n  };\n\n  var rename;\n  if (goog.cssNameMapping_) {\n    rename =\n        goog.cssNameMappingStyle_ == 'BY_WHOLE' ? getMapping : renameByParts;\n  } else {\n    rename = function(a) {\n      return a;\n    };\n  }\n\n  var result =\n      opt_modifier ? className + '-' + rename(opt_modifier) : rename(className);\n\n  // The special CLOSURE_CSS_NAME_MAP_FN allows users to specify further\n  // processing of the class name.\n  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {\n    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);\n  }\n\n  return result;\n};\n\n\n/**\n * Sets the map to check when returning a value from goog.getCssName(). Example:\n * <pre>\n * goog.setCssNameMapping({\n *   \"goog\": \"a\",\n *   \"disabled\": \"b\",\n * });\n *\n * var x = goog.getCssName('goog');\n * // The following evaluates to: \"a a-b\".\n * goog.getCssName('goog') + ' ' + goog.getCssName(x, 'disabled')\n * </pre>\n * When declared as a map of string literals to string literals, the JSCompiler\n * will replace all calls to goog.getCssName() using the supplied map if the\n * --process_closure_primitives flag is set.\n *\n * @param {!Object} mapping A map of strings to strings where keys are possible\n *     arguments to goog.getCssName() and values are the corresponding values\n *     that should be returned.\n * @param {string=} opt_style The style of css name mapping. There are two valid\n *     options: 'BY_PART', and 'BY_WHOLE'.\n * @see goog.getCssName for a description.\n */\ngoog.setCssNameMapping = function(mapping, opt_style) {\n  goog.cssNameMapping_ = mapping;\n  goog.cssNameMappingStyle_ = opt_style;\n};\n\n\n/**\n * To use CSS renaming in compiled mode, one of the input files should have a\n * call to goog.setCssNameMapping() with an object literal that the JSCompiler\n * can extract and use to replace all calls to goog.getCssName(). In uncompiled\n * mode, JavaScript code should be loaded before this base.js file that declares\n * a global variable, CLOSURE_CSS_NAME_MAPPING, which is used below. This is\n * to ensure that the mapping is loaded before any calls to goog.getCssName()\n * are made in uncompiled mode.\n *\n * A hook for overriding the CSS name mapping.\n * @type {!Object<string, string>|undefined}\n */\ngoog.global.CLOSURE_CSS_NAME_MAPPING;\n\n\nif (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {\n  // This does not call goog.setCssNameMapping() because the JSCompiler\n  // requires that goog.setCssNameMapping() be called with an object literal.\n  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;\n}\n\n\n/**\n * Gets a localized message.\n *\n * This function is a compiler primitive. If you give the compiler a localized\n * message bundle, it will replace the string at compile-time with a localized\n * version, and expand goog.getMsg call to a concatenated string.\n *\n * Messages must be initialized in the form:\n * <code>\n * var MSG_NAME = goog.getMsg('Hello {$placeholder}', {'placeholder': 'world'});\n * </code>\n *\n * This function produces a string which should be treated as plain text. Use\n * {@link goog.html.SafeHtmlFormatter} in conjunction with goog.getMsg to\n * produce SafeHtml.\n *\n * @param {string} str Translatable string, places holders in the form {$foo}.\n * @param {Object<string, string>=} opt_values Maps place holder name to value.\n * @param {{html: (boolean|undefined),\n *         unescapeHtmlEntities: (boolean|undefined)}=} opt_options Options:\n *     html: Escape '<' in str to '&lt;'. Used by Closure Templates where the\n *     generated code size and performance is critical which is why {@link\n *     goog.html.SafeHtmlFormatter} is not used. The value must be literal true\n *     or false.\n *     unescapeHtmlEntities: Unescape common html entities: &gt;, &lt;, &apos;,\n *     &quot; and &amp;. Used for messages not in HTML context, such as with\n *     `textContent` property.\n * @return {string} message with placeholders filled.\n */\ngoog.getMsg = function(str, opt_values, opt_options) {\n  if (opt_options && opt_options.html) {\n    // Note that '&' is not replaced because the translation can contain HTML\n    // entities.\n    str = str.replace(/</g, '&lt;');\n  }\n  if (opt_options && opt_options.unescapeHtmlEntities) {\n    // Note that \"&amp;\" must be the last to avoid \"creating\" new entities.\n    str = str.replace(/&lt;/g, '<')\n              .replace(/&gt;/g, '>')\n              .replace(/&apos;/g, '\\'')\n              .replace(/&quot;/g, '\"')\n              .replace(/&amp;/g, '&');\n  }\n  if (opt_values) {\n    str = str.replace(/\\{\\$([^}]+)}/g, function(match, key) {\n      return (opt_values != null && key in opt_values) ? opt_values[key] :\n                                                         match;\n    });\n  }\n  return str;\n};\n\n\n/**\n * Gets a localized message. If the message does not have a translation, gives a\n * fallback message.\n *\n * This is useful when introducing a new message that has not yet been\n * translated into all languages.\n *\n * This function is a compiler primitive. Must be used in the form:\n * <code>var x = goog.getMsgWithFallback(MSG_A, MSG_B);</code>\n * where MSG_A and MSG_B were initialized with goog.getMsg.\n *\n * @param {string} a The preferred message.\n * @param {string} b The fallback message.\n * @return {string} The best translated message.\n */\ngoog.getMsgWithFallback = function(a, b) {\n  return a;\n};\n\n\n/**\n * Exposes an unobfuscated global namespace path for the given object.\n * Note that fields of the exported object *will* be obfuscated, unless they are\n * exported in turn via this function or goog.exportProperty.\n *\n * Also handy for making public items that are defined in anonymous closures.\n *\n * ex. goog.exportSymbol('public.path.Foo', Foo);\n *\n * ex. goog.exportSymbol('public.path.Foo.staticFunction', Foo.staticFunction);\n *     public.path.Foo.staticFunction();\n *\n * ex. goog.exportSymbol('public.path.Foo.prototype.myMethod',\n *                       Foo.prototype.myMethod);\n *     new public.path.Foo().myMethod();\n *\n * @param {string} publicPath Unobfuscated name to export.\n * @param {*} object Object the name should point to.\n * @param {?Object=} objectToExportTo The object to add the path to; default\n *     is goog.global.\n */\ngoog.exportSymbol = function(publicPath, object, objectToExportTo) {\n  goog.exportPath_(\n      publicPath, object, /* overwriteImplicit= */ true, objectToExportTo);\n};\n\n\n/**\n * Exports a property unobfuscated into the object's namespace.\n * ex. goog.exportProperty(Foo, 'staticFunction', Foo.staticFunction);\n * ex. goog.exportProperty(Foo.prototype, 'myMethod', Foo.prototype.myMethod);\n * @param {Object} object Object whose static property is being exported.\n * @param {string} publicName Unobfuscated name to export.\n * @param {*} symbol Object the name should point to.\n */\ngoog.exportProperty = function(object, publicName, symbol) {\n  object[publicName] = symbol;\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n * <pre>\n * function ParentClass(a, b) { }\n * ParentClass.prototype.foo = function(a) { };\n *\n * function ChildClass(a, b, c) {\n *   ChildClass.base(this, 'constructor', a, b);\n * }\n * goog.inherits(ChildClass, ParentClass);\n *\n * var child = new ChildClass('a', 'b', 'see');\n * child.foo(); // This works.\n * </pre>\n *\n * @param {!Function} childCtor Child class.\n * @param {!Function} parentCtor Parent class.\n * @suppress {strictMissingProperties} superClass_ and base is not defined on\n *    Function.\n * @deprecated Use ECMAScript class syntax instead.\n */\ngoog.inherits = function(childCtor, parentCtor) {\n  /** @constructor */\n  function tempCtor() {}\n  tempCtor.prototype = parentCtor.prototype;\n  childCtor.superClass_ = parentCtor.prototype;\n  childCtor.prototype = new tempCtor();\n  /** @override */\n  childCtor.prototype.constructor = childCtor;\n\n  /**\n   * Calls superclass constructor/method.\n   *\n   * This function is only available if you use goog.inherits to\n   * express inheritance relationships between classes.\n   *\n   * NOTE: This is a replacement for goog.base and for superClass_\n   * property defined in childCtor.\n   *\n   * @param {!Object} me Should always be \"this\".\n   * @param {string} methodName The method name to call. Calling\n   *     superclass constructor can be done with the special string\n   *     'constructor'.\n   * @param {...*} var_args The arguments to pass to superclass\n   *     method/constructor.\n   * @return {*} The return value of the superclass method/constructor.\n   */\n  childCtor.base = function(me, methodName, var_args) {\n    // Copying using loop to avoid deop due to passing arguments object to\n    // function. This is faster in many JS engines as of late 2014.\n    var args = new Array(arguments.length - 2);\n    for (var i = 2; i < arguments.length; i++) {\n      args[i - 2] = arguments[i];\n    }\n    return parentCtor.prototype[methodName].apply(me, args);\n  };\n};\n\n\n/**\n * Allow for aliasing within scope functions.  This function exists for\n * uncompiled code - in compiled code the calls will be inlined and the aliases\n * applied.  In uncompiled code the function is simply run since the aliases as\n * written are valid JavaScript.\n *\n *\n * @param {function()} fn Function to call.  This function can contain aliases\n *     to namespaces (e.g. \"var dom = goog.dom\") or classes\n *     (e.g. \"var Timer = goog.Timer\").\n * @deprecated Use goog.module instead.\n */\ngoog.scope = function(fn) {\n  if (goog.isInModuleLoader_()) {\n    throw new Error('goog.scope is not supported within a module.');\n  }\n  fn.call(goog.global);\n};\n\n\n/*\n * To support uncompiled, strict mode bundles that use eval to divide source\n * like so:\n *    eval('someSource;//# sourceUrl sourcefile.js');\n * We need to export the globally defined symbols \"goog\" and \"COMPILED\".\n * Exporting \"goog\" breaks the compiler optimizations, so we required that\n * be defined externally.\n * NOTE: We don't use goog.exportSymbol here because we don't want to trigger\n * extern generation when that compiler option is enabled.\n */\nif (!COMPILED) {\n  goog.global['COMPILED'] = COMPILED;\n}\n\n\n//==============================================================================\n// goog.defineClass implementation\n//==============================================================================\n\n\n/**\n * Creates a restricted form of a Closure \"class\":\n *   - from the compiler's perspective, the instance returned from the\n *     constructor is sealed (no new properties may be added).  This enables\n *     better checks.\n *   - the compiler will rewrite this definition to a form that is optimal\n *     for type checking and optimization (initially this will be a more\n *     traditional form).\n *\n * @param {Function} superClass The superclass, Object or null.\n * @param {goog.defineClass.ClassDescriptor} def\n *     An object literal describing\n *     the class.  It may have the following properties:\n *     \"constructor\": the constructor function\n *     \"statics\": an object literal containing methods to add to the constructor\n *        as \"static\" methods or a function that will receive the constructor\n *        function as its only parameter to which static properties can\n *        be added.\n *     all other properties are added to the prototype.\n * @return {!Function} The class constructor.\n * @deprecated Use ECMAScript class syntax instead.\n */\ngoog.defineClass = function(superClass, def) {\n  // TODO(johnlenz): consider making the superClass an optional parameter.\n  var constructor = def.constructor;\n  var statics = def.statics;\n  // Wrap the constructor prior to setting up the prototype and static methods.\n  if (!constructor || constructor == Object.prototype.constructor) {\n    constructor = function() {\n      throw new Error(\n          'cannot instantiate an interface (no constructor defined).');\n    };\n  }\n\n  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);\n  if (superClass) {\n    goog.inherits(cls, superClass);\n  }\n\n  // Remove all the properties that should not be copied to the prototype.\n  delete def.constructor;\n  delete def.statics;\n\n  goog.defineClass.applyProperties_(cls.prototype, def);\n  if (statics != null) {\n    if (statics instanceof Function) {\n      statics(cls);\n    } else {\n      goog.defineClass.applyProperties_(cls, statics);\n    }\n  }\n\n  return cls;\n};\n\n\n/**\n * @typedef {{\n *   constructor: (!Function|undefined),\n *   statics: (Object|undefined|function(Function):void)\n * }}\n */\ngoog.defineClass.ClassDescriptor;\n\n\n/**\n * @define {boolean} Whether the instances returned by goog.defineClass should\n *     be sealed when possible.\n *\n * When sealing is disabled the constructor function will not be wrapped by\n * goog.defineClass, making it incompatible with ES6 class methods.\n */\ngoog.defineClass.SEAL_CLASS_INSTANCES =\n    goog.define('goog.defineClass.SEAL_CLASS_INSTANCES', goog.DEBUG);\n\n\n/**\n * If goog.defineClass.SEAL_CLASS_INSTANCES is enabled and Object.seal is\n * defined, this function will wrap the constructor in a function that seals the\n * results of the provided constructor function.\n *\n * @param {!Function} ctr The constructor whose results maybe be sealed.\n * @param {Function} superClass The superclass constructor.\n * @return {!Function} The replacement constructor.\n * @private\n */\ngoog.defineClass.createSealingConstructor_ = function(ctr, superClass) {\n  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {\n    // Do now wrap the constructor when sealing is disabled. Angular code\n    // depends on this for injection to work properly.\n    return ctr;\n  }\n\n  // NOTE: The sealing behavior has been removed\n\n  /**\n   * @this {Object}\n   * @return {?}\n   */\n  var wrappedCtr = function() {\n    // Don't seal an instance of a subclass when it calls the constructor of\n    // its super class as there is most likely still setup to do.\n    var instance = ctr.apply(this, arguments) || this;\n    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];\n\n    return instance;\n  };\n\n  return wrappedCtr;\n};\n\n\n\n// TODO(johnlenz): share these values with the goog.object\n/**\n * The names of the fields that are defined on Object.prototype.\n * @type {!Array<string>}\n * @private\n * @const\n */\ngoog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = [\n  'constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',\n  'toLocaleString', 'toString', 'valueOf'\n];\n\n\n// TODO(johnlenz): share this function with the goog.object\n/**\n * @param {!Object} target The object to add properties to.\n * @param {!Object} source The object to copy properties from.\n * @private\n */\ngoog.defineClass.applyProperties_ = function(target, source) {\n  // TODO(johnlenz): update this to support ES5 getters/setters\n\n  var key;\n  for (key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n\n  // For IE the for-in-loop does not contain any properties that are not\n  // enumerable on the prototype object (for example isPrototypeOf from\n  // Object.prototype) and it will also not include 'replace' on objects that\n  // extend String and change 'replace' (not that it is common for anyone to\n  // extend anything except Object).\n  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {\n    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n};\n\n/**\n * Returns the parameter.\n * @param {string} s\n * @return {string}\n * @private\n */\ngoog.identity_ = function(s) {\n  return s;\n};\n\n\n/**\n * Creates Trusted Types policy if Trusted Types are supported by the browser.\n * The policy just blesses any string as a Trusted Type. It is not visibility\n * restricted because anyone can also call trustedTypes.createPolicy directly.\n * However, the allowed names should be restricted by a HTTP header and the\n * reference to the created policy should be visibility restricted.\n * @param {string} name\n * @return {?TrustedTypePolicy}\n */\ngoog.createTrustedTypesPolicy = function(name) {\n  var policy = null;\n  var policyFactory = goog.global.trustedTypes;\n  if (!policyFactory || !policyFactory.createPolicy) {\n    return policy;\n  }\n  // trustedTypes.createPolicy throws if called with a name that is already\n  // registered, even in report-only mode. Until the API changes, catch the\n  // error not to break the applications functionally. In such case, the code\n  // will fall back to using regular Safe Types.\n  // TODO(koto): Remove catching once createPolicy API stops throwing.\n  try {\n    policy = policyFactory.createPolicy(name, {\n      createHTML: goog.identity_,\n      createScript: goog.identity_,\n      createScriptURL: goog.identity_\n    });\n  } catch (e) {\n    goog.logToConsole_(e.message);\n  }\n  return policy;\n};\n\n// There's a bug in the compiler where without collapse properties the\n// Closure namespace defines do not guard code correctly. To help reduce code\n// size also check for !COMPILED even though it redundant until this is fixed.\nif (!COMPILED && goog.DEPENDENCIES_ENABLED) {\n\n\n  /**\n   * Tries to detect whether the current browser is Edge, based on the user\n   * agent. This matches only pre-Chromium Edge.\n   * @see https://docs.microsoft.com/en-us/microsoft-edge/web-platform/user-agent-string\n   * @return {boolean} True if the current browser is Edge.\n   * @private\n   */\n  goog.isEdge_ = function() {\n    var userAgent = goog.global.navigator && goog.global.navigator.userAgent ?\n        goog.global.navigator.userAgent :\n        '';\n    var edgeRe = /Edge\\/(\\d+)(\\.\\d)*/i;\n    return !!userAgent.match(edgeRe);\n  };\n\n\n  /**\n   * Tries to detect whether is in the context of an HTML document.\n   * @return {boolean} True if it looks like HTML document.\n   * @private\n   */\n  goog.inHtmlDocument_ = function() {\n    /** @type {!Document} */\n    var doc = goog.global.document;\n    return doc != null && 'write' in doc;  // XULDocument misses write.\n  };\n\n\n  /**\n   * We'd like to check for if the document readyState is 'loading'; however\n   * there are bugs on IE 10 and below where the readyState being anything other\n   * than 'complete' is not reliable.\n   * @return {boolean}\n   * @private\n   */\n  goog.isDocumentLoading_ = function() {\n    // attachEvent is available on IE 6 thru 10 only, and thus can be used to\n    // detect those browsers.\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n    return doc.attachEvent ? doc.readyState != 'complete' :\n                             doc.readyState == 'loading';\n  };\n\n\n  /**\n   * Tries to detect the base path of base.js script that bootstraps Closure.\n   * @private\n   */\n  goog.findBasePath_ = function() {\n    if (goog.global.CLOSURE_BASE_PATH != undefined &&\n        // Anti DOM-clobbering runtime check (b/37736576).\n        typeof goog.global.CLOSURE_BASE_PATH === 'string') {\n      goog.basePath = goog.global.CLOSURE_BASE_PATH;\n      return;\n    } else if (!goog.inHtmlDocument_()) {\n      return;\n    }\n    /** @type {!Document} */\n    var doc = goog.global.document;\n    // If we have a currentScript available, use it exclusively.\n    var currentScript = doc.currentScript;\n    if (currentScript) {\n      var scripts = [currentScript];\n    } else {\n      var scripts = doc.getElementsByTagName('SCRIPT');\n    }\n    // Search backwards since the current script is in almost all cases the one\n    // that has base.js.\n    for (var i = scripts.length - 1; i >= 0; --i) {\n      var script = /** @type {!HTMLScriptElement} */ (scripts[i]);\n      var src = script.src;\n      var qmark = src.lastIndexOf('?');\n      var l = qmark == -1 ? src.length : qmark;\n      if (src.substr(l - 7, 7) == 'base.js') {\n        goog.basePath = src.substr(0, l - 7);\n        return;\n      }\n    }\n  };\n\n  goog.findBasePath_();\n\n  /** @struct @constructor @final */\n  goog.Transpiler = function() {\n    /** @private {?Object<string, boolean>} */\n    this.requiresTranspilation_ = null;\n    /** @private {string} */\n    this.transpilationTarget_ = goog.TRANSPILE_TO_LANGUAGE;\n  };\n  /**\n   * Returns a newly created map from language mode string to a boolean\n   * indicating whether transpilation should be done for that mode as well as\n   * the highest level language that this environment supports.\n   *\n   * Guaranteed invariant:\n   * For any two modes, l1 and l2 where l2 is a newer mode than l1,\n   * `map[l1] == true` implies that `map[l2] == true`.\n   *\n   * Note this method is extracted and used elsewhere, so it cannot rely on\n   * anything external (it should easily be able to be transformed into a\n   * standalone, top level function).\n   *\n   * @private\n   * @return {{\n   *   target: string,\n   *   map: !Object<string, boolean>\n   * }}\n   */\n  goog.Transpiler.prototype.createRequiresTranspilation_ = function() {\n    var transpilationTarget = 'es3';\n    var /** !Object<string, boolean> */ requiresTranspilation = {'es3': false};\n    var transpilationRequiredForAllLaterModes = false;\n\n    /**\n     * Adds an entry to requiresTranspliation for the given language mode.\n     *\n     * IMPORTANT: Calls must be made in order from oldest to newest language\n     * mode.\n     * @param {string} modeName\n     * @param {function(): boolean} isSupported Returns true if the JS engine\n     *     supports the given mode.\n     */\n    function addNewerLanguageTranspilationCheck(modeName, isSupported) {\n      if (transpilationRequiredForAllLaterModes) {\n        requiresTranspilation[modeName] = true;\n      } else if (isSupported()) {\n        transpilationTarget = modeName;\n        requiresTranspilation[modeName] = false;\n      } else {\n        requiresTranspilation[modeName] = true;\n        transpilationRequiredForAllLaterModes = true;\n      }\n    }\n\n    /**\n     * Does the given code evaluate without syntax errors and return a truthy\n     * result?\n     */\n    function /** boolean */ evalCheck(/** string */ code) {\n      try {\n        return !!eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(code));\n      } catch (ignored) {\n        return false;\n      }\n    }\n\n    // Identify ES3-only browsers by their incorrect treatment of commas.\n    addNewerLanguageTranspilationCheck('es5', function() {\n      return evalCheck('[1,].length==1');\n    });\n    addNewerLanguageTranspilationCheck('es6', function() {\n      // Edge has a non-deterministic (i.e., not reproducible) bug with ES6:\n      // https://github.com/Microsoft/ChakraCore/issues/1496.\n      if (goog.isEdge_()) {\n        // The Reflect.construct test below is flaky on Edge. It can sometimes\n        // pass or fail on 40 15.15063, so just exit early for Edge and treat\n        // it as ES5. Until we're on a more up to date version just always use\n        // ES5. See https://github.com/Microsoft/ChakraCore/issues/3217.\n        return false;\n      }\n      // Test es6: [FF50 (?), Edge 14 (?), Chrome 50]\n      //   (a) default params (specifically shadowing locals),\n      //   (b) destructuring, (c) block-scoped functions,\n      //   (d) for-of (const), (e) new.target/Reflect.construct\n      var es6fullTest =\n          'class X{constructor(){if(new.target!=String)throw 1;this.x=42}}' +\n          'let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof ' +\n          'String))throw 1;for(const a of[2,3]){if(a==2)continue;function ' +\n          'f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()' +\n          '==3}';\n\n      return evalCheck('(()=>{\"use strict\";' + es6fullTest + '})()');\n    });\n    // ** and **= are the only new features in 'es7'\n    addNewerLanguageTranspilationCheck('es7', function() {\n      return evalCheck('2**3==8');\n    });\n    // async functions are the only new features in 'es8'\n    addNewerLanguageTranspilationCheck('es8', function() {\n      return evalCheck('async()=>1,1');\n    });\n    addNewerLanguageTranspilationCheck('es9', function() {\n      return evalCheck('({...rest}={}),1');\n    });\n    // optional catch binding, unescaped unicode paragraph separator in strings\n    addNewerLanguageTranspilationCheck('es_2019', function() {\n      return evalCheck('let r;try{r=\"\\u2029\"}catch{};r');\n    });\n    // optional chaining, nullish coalescing\n    // untested/unsupported: bigint, import meta\n    addNewerLanguageTranspilationCheck('es_2020', function() {\n      return evalCheck('null?.x??1');\n    });\n    addNewerLanguageTranspilationCheck('es_next', function() {\n      return false;  // assume it always need to transpile\n    });\n    return {target: transpilationTarget, map: requiresTranspilation};\n  };\n\n\n  /**\n   * Determines whether the given language needs to be transpiled.\n   * @param {string} lang\n   * @param {string|undefined} module\n   * @return {boolean}\n   */\n  goog.Transpiler.prototype.needsTranspile = function(lang, module) {\n    if (goog.TRANSPILE == 'always') {\n      return true;\n    } else if (goog.TRANSPILE == 'never') {\n      return false;\n    } else if (!this.requiresTranspilation_) {\n      var obj = this.createRequiresTranspilation_();\n      this.requiresTranspilation_ = obj.map;\n      this.transpilationTarget_ = this.transpilationTarget_ || obj.target;\n    }\n    if (lang in this.requiresTranspilation_) {\n      if (this.requiresTranspilation_[lang]) {\n        return true;\n      } else if (\n          goog.inHtmlDocument_() && module == 'es6' &&\n          !('noModule' in goog.global.document.createElement('script'))) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      throw new Error('Unknown language mode: ' + lang);\n    }\n  };\n\n\n  /**\n   * Lazily retrieves the transpiler and applies it to the source.\n   * @param {string} code JS code.\n   * @param {string} path Path to the code.\n   * @return {string} The transpiled code.\n   */\n  goog.Transpiler.prototype.transpile = function(code, path) {\n    // TODO(johnplaisted): We should delete goog.transpile_ and just have this\n    // function. But there's some compile error atm where goog.global is being\n    // stripped incorrectly without this.\n    return goog.transpile_(code, path, this.transpilationTarget_);\n  };\n\n\n  /** @private @final {!goog.Transpiler} */\n  goog.transpiler_ = new goog.Transpiler();\n\n  /**\n   * Rewrites closing script tags in input to avoid ending an enclosing script\n   * tag.\n   *\n   * @param {string} str\n   * @return {string}\n   * @private\n   */\n  goog.protectScriptTag_ = function(str) {\n    return str.replace(/<\\/(SCRIPT)/ig, '\\\\x3c/$1');\n  };\n\n\n  /**\n   * A debug loader is responsible for downloading and executing javascript\n   * files in an unbundled, uncompiled environment.\n   *\n   * This can be custimized via the setDependencyFactory method, or by\n   * CLOSURE_IMPORT_SCRIPT/CLOSURE_LOAD_FILE_SYNC.\n   *\n   * @struct @constructor @final @private\n   */\n  goog.DebugLoader_ = function() {\n    /** @private @const {!Object<string, !goog.Dependency>} */\n    this.dependencies_ = {};\n    /** @private @const {!Object<string, string>} */\n    this.idToPath_ = {};\n    /** @private @const {!Object<string, boolean>} */\n    this.written_ = {};\n    /** @private @const {!Array<!goog.Dependency>} */\n    this.loadingDeps_ = [];\n    /** @private {!Array<!goog.Dependency>} */\n    this.depsToLoad_ = [];\n    /** @private {boolean} */\n    this.paused_ = false;\n    /** @private {!goog.DependencyFactory} */\n    this.factory_ = new goog.DependencyFactory(goog.transpiler_);\n    /** @private @const {!Object<string, !Function>} */\n    this.deferredCallbacks_ = {};\n    /** @private @const {!Array<string>} */\n    this.deferredQueue_ = [];\n  };\n\n  /**\n   * @param {!Array<string>} namespaces\n   * @param {function(): undefined} callback Function to call once all the\n   *     namespaces have loaded.\n   */\n  goog.DebugLoader_.prototype.bootstrap = function(namespaces, callback) {\n    var cb = callback;\n    function resolve() {\n      if (cb) {\n        goog.global.setTimeout(cb, 0);\n        cb = null;\n      }\n    }\n\n    if (!namespaces.length) {\n      resolve();\n      return;\n    }\n\n    var deps = [];\n    for (var i = 0; i < namespaces.length; i++) {\n      var path = this.getPathFromDeps_(namespaces[i]);\n      if (!path) {\n        throw new Error('Unregonized namespace: ' + namespaces[i]);\n      }\n      deps.push(this.dependencies_[path]);\n    }\n\n    var require = goog.require;\n    var loaded = 0;\n    for (var i = 0; i < namespaces.length; i++) {\n      require(namespaces[i]);\n      deps[i].onLoad(function() {\n        if (++loaded == namespaces.length) {\n          resolve();\n        }\n      });\n    }\n  };\n\n\n  /**\n   * Loads the Closure Dependency file.\n   *\n   * Exposed a public function so CLOSURE_NO_DEPS can be set to false, base\n   * loaded, setDependencyFactory called, and then this called. i.e. allows\n   * custom loading of the deps file.\n   */\n  goog.DebugLoader_.prototype.loadClosureDeps = function() {\n    // Circumvent addDependency, which would try to transpile deps.js if\n    // transpile is set to always.\n    var relPath = 'deps.js';\n    this.depsToLoad_.push(this.factory_.createDependency(\n        goog.normalizePath_(goog.basePath + relPath), relPath, [], [], {},\n        false));\n    this.loadDeps_();\n  };\n\n\n  /**\n   * Notifies the debug loader when a dependency has been requested.\n   *\n   * @param {string} absPathOrId Path of the dependency or goog id.\n   * @param {boolean=} opt_force\n   */\n  goog.DebugLoader_.prototype.requested = function(absPathOrId, opt_force) {\n    var path = this.getPathFromDeps_(absPathOrId);\n    if (path &&\n        (opt_force || this.areDepsLoaded_(this.dependencies_[path].requires))) {\n      var callback = this.deferredCallbacks_[path];\n      if (callback) {\n        delete this.deferredCallbacks_[path];\n        callback();\n      }\n    }\n  };\n\n\n  /**\n   * Sets the dependency factory, which can be used to create custom\n   * goog.Dependency implementations to control how dependencies are loaded.\n   *\n   * @param {!goog.DependencyFactory} factory\n   */\n  goog.DebugLoader_.prototype.setDependencyFactory = function(factory) {\n    this.factory_ = factory;\n  };\n\n\n  /**\n   * Travserses the dependency graph and queues the given dependency, and all of\n   * its transitive dependencies, for loading and then starts loading if not\n   * paused.\n   *\n   * @param {string} namespace\n   * @private\n   */\n  goog.DebugLoader_.prototype.load_ = function(namespace) {\n    if (!this.getPathFromDeps_(namespace)) {\n      var errorMessage = 'goog.require could not find: ' + namespace;\n      goog.logToConsole_(errorMessage);\n    } else {\n      var loader = this;\n\n      var deps = [];\n\n      /** @param {string} namespace */\n      var visit = function(namespace) {\n        var path = loader.getPathFromDeps_(namespace);\n\n        if (!path) {\n          throw new Error('Bad dependency path or symbol: ' + namespace);\n        }\n\n        if (loader.written_[path]) {\n          return;\n        }\n\n        loader.written_[path] = true;\n\n        var dep = loader.dependencies_[path];\n        for (var i = 0; i < dep.requires.length; i++) {\n          if (!goog.isProvided_(dep.requires[i])) {\n            visit(dep.requires[i]);\n          }\n        }\n\n        deps.push(dep);\n      };\n\n      visit(namespace);\n\n      var wasLoading = !!this.depsToLoad_.length;\n      this.depsToLoad_ = this.depsToLoad_.concat(deps);\n\n      if (!this.paused_ && !wasLoading) {\n        this.loadDeps_();\n      }\n    }\n  };\n\n\n  /**\n   * Loads any queued dependencies until they are all loaded or paused.\n   *\n   * @private\n   */\n  goog.DebugLoader_.prototype.loadDeps_ = function() {\n    var loader = this;\n    var paused = this.paused_;\n\n    while (this.depsToLoad_.length && !paused) {\n      (function() {\n        var loadCallDone = false;\n        var dep = loader.depsToLoad_.shift();\n\n        var loaded = false;\n        loader.loading_(dep);\n\n        var controller = {\n          pause: function() {\n            if (loadCallDone) {\n              throw new Error('Cannot call pause after the call to load.');\n            } else {\n              paused = true;\n            }\n          },\n          resume: function() {\n            if (loadCallDone) {\n              loader.resume_();\n            } else {\n              // Some dep called pause and then resume in the same load call.\n              // Just keep running this same loop.\n              paused = false;\n            }\n          },\n          loaded: function() {\n            if (loaded) {\n              throw new Error('Double call to loaded.');\n            }\n\n            loaded = true;\n            loader.loaded_(dep);\n          },\n          pending: function() {\n            // Defensive copy.\n            var pending = [];\n            for (var i = 0; i < loader.loadingDeps_.length; i++) {\n              pending.push(loader.loadingDeps_[i]);\n            }\n            return pending;\n          },\n          /**\n           * @param {goog.ModuleType} type\n           */\n          setModuleState: function(type) {\n            goog.moduleLoaderState_ = {\n              type: type,\n              moduleName: '',\n              declareLegacyNamespace: false\n            };\n          },\n          /** @type {function(string, string, string=)} */\n          registerEs6ModuleExports: function(\n              path, exports, opt_closureNamespace) {\n            if (opt_closureNamespace) {\n              goog.loadedModules_[opt_closureNamespace] = {\n                exports: exports,\n                type: goog.ModuleType.ES6,\n                moduleId: opt_closureNamespace || ''\n              };\n            }\n          },\n          /** @type {function(string, ?)} */\n          registerGoogModuleExports: function(moduleId, exports) {\n            goog.loadedModules_[moduleId] = {\n              exports: exports,\n              type: goog.ModuleType.GOOG,\n              moduleId: moduleId\n            };\n          },\n          clearModuleState: function() {\n            goog.moduleLoaderState_ = null;\n          },\n          defer: function(callback) {\n            if (loadCallDone) {\n              throw new Error(\n                  'Cannot register with defer after the call to load.');\n            }\n            loader.defer_(dep, callback);\n          },\n          areDepsLoaded: function() {\n            return loader.areDepsLoaded_(dep.requires);\n          }\n        };\n\n        try {\n          dep.load(controller);\n        } finally {\n          loadCallDone = true;\n        }\n      })();\n    }\n\n    if (paused) {\n      this.pause_();\n    }\n  };\n\n\n  /** @private */\n  goog.DebugLoader_.prototype.pause_ = function() {\n    this.paused_ = true;\n  };\n\n\n  /** @private */\n  goog.DebugLoader_.prototype.resume_ = function() {\n    if (this.paused_) {\n      this.paused_ = false;\n      this.loadDeps_();\n    }\n  };\n\n\n  /**\n   * Marks the given dependency as loading (load has been called but it has not\n   * yet marked itself as finished). Useful for dependencies that want to know\n   * what else is loading. Example: goog.modules cannot eval if there are\n   * loading dependencies.\n   *\n   * @param {!goog.Dependency} dep\n   * @private\n   */\n  goog.DebugLoader_.prototype.loading_ = function(dep) {\n    this.loadingDeps_.push(dep);\n  };\n\n\n  /**\n   * Marks the given dependency as having finished loading and being available\n   * for require.\n   *\n   * @param {!goog.Dependency} dep\n   * @private\n   */\n  goog.DebugLoader_.prototype.loaded_ = function(dep) {\n    for (var i = 0; i < this.loadingDeps_.length; i++) {\n      if (this.loadingDeps_[i] == dep) {\n        this.loadingDeps_.splice(i, 1);\n        break;\n      }\n    }\n\n    for (var i = 0; i < this.deferredQueue_.length; i++) {\n      if (this.deferredQueue_[i] == dep.path) {\n        this.deferredQueue_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (this.loadingDeps_.length == this.deferredQueue_.length &&\n        !this.depsToLoad_.length) {\n      // Something has asked to load these, but they may not be directly\n      // required again later, so load them now that we know we're done loading\n      // everything else. e.g. a goog module entry point.\n      while (this.deferredQueue_.length) {\n        this.requested(this.deferredQueue_.shift(), true);\n      }\n    }\n\n    dep.loaded();\n  };\n\n\n  /**\n   * @param {!Array<string>} pathsOrIds\n   * @return {boolean}\n   * @private\n   */\n  goog.DebugLoader_.prototype.areDepsLoaded_ = function(pathsOrIds) {\n    for (var i = 0; i < pathsOrIds.length; i++) {\n      var path = this.getPathFromDeps_(pathsOrIds[i]);\n      if (!path ||\n          (!(path in this.deferredCallbacks_) &&\n           !goog.isProvided_(pathsOrIds[i]))) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n\n  /**\n   * @param {string} absPathOrId\n   * @return {?string}\n   * @private\n   */\n  goog.DebugLoader_.prototype.getPathFromDeps_ = function(absPathOrId) {\n    if (absPathOrId in this.idToPath_) {\n      return this.idToPath_[absPathOrId];\n    } else if (absPathOrId in this.dependencies_) {\n      return absPathOrId;\n    } else {\n      return null;\n    }\n  };\n\n\n  /**\n   * @param {!goog.Dependency} dependency\n   * @param {!Function} callback\n   * @private\n   */\n  goog.DebugLoader_.prototype.defer_ = function(dependency, callback) {\n    this.deferredCallbacks_[dependency.path] = callback;\n    this.deferredQueue_.push(dependency.path);\n  };\n\n\n  /**\n   * Interface for goog.Dependency implementations to have some control over\n   * loading of dependencies.\n   *\n   * @record\n   */\n  goog.LoadController = function() {};\n\n\n  /**\n   * Tells the controller to halt loading of more dependencies.\n   */\n  goog.LoadController.prototype.pause = function() {};\n\n\n  /**\n   * Tells the controller to resume loading of more dependencies if paused.\n   */\n  goog.LoadController.prototype.resume = function() {};\n\n\n  /**\n   * Tells the controller that this dependency has finished loading.\n   *\n   * This causes this to be removed from pending() and any load callbacks to\n   * fire.\n   */\n  goog.LoadController.prototype.loaded = function() {};\n\n\n  /**\n   * List of dependencies on which load has been called but which have not\n   * called loaded on their controller. This includes the current dependency.\n   *\n   * @return {!Array<!goog.Dependency>}\n   */\n  goog.LoadController.prototype.pending = function() {};\n\n\n  /**\n   * Registers an object as an ES6 module's exports so that goog.modules may\n   * require it by path.\n   *\n   * @param {string} path Full path of the module.\n   * @param {?} exports\n   * @param {string=} opt_closureNamespace Closure namespace to associate with\n   *     this module.\n   */\n  goog.LoadController.prototype.registerEs6ModuleExports = function(\n      path, exports, opt_closureNamespace) {};\n\n\n  /**\n   * Sets the current module state.\n   *\n   * @param {goog.ModuleType} type Type of module.\n   */\n  goog.LoadController.prototype.setModuleState = function(type) {};\n\n\n  /**\n   * Clears the current module state.\n   */\n  goog.LoadController.prototype.clearModuleState = function() {};\n\n\n  /**\n   * Registers a callback to call once the dependency is actually requested\n   * via goog.require + all of the immediate dependencies have been loaded or\n   * all other files have been loaded. Allows for lazy loading until\n   * require'd without pausing dependency loading, which is needed on old IE.\n   *\n   * @param {!Function} callback\n   */\n  goog.LoadController.prototype.defer = function(callback) {};\n\n\n  /**\n   * @return {boolean}\n   */\n  goog.LoadController.prototype.areDepsLoaded = function() {};\n\n\n  /**\n   * Basic super class for all dependencies Closure Library can load.\n   *\n   * This default implementation is designed to load untranspiled, non-module\n   * scripts in a web broswer.\n   *\n   * For transpiled non-goog.module files {@see goog.TranspiledDependency}.\n   * For goog.modules see {@see goog.GoogModuleDependency}.\n   * For untranspiled ES6 modules {@see goog.Es6ModuleDependency}.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   */\n  goog.Dependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    /** @const */\n    this.path = path;\n    /** @const */\n    this.relativePath = relativePath;\n    /** @const */\n    this.provides = provides;\n    /** @const */\n    this.requires = requires;\n    /** @const */\n    this.loadFlags = loadFlags;\n    /** @private {boolean} */\n    this.loaded_ = false;\n    /** @private {!Array<function()>} */\n    this.loadCallbacks_ = [];\n  };\n\n\n  /**\n   * @return {string} The pathname part of this dependency's path if it is a\n   *     URI.\n   */\n  goog.Dependency.prototype.getPathName = function() {\n    var pathName = this.path;\n    var protocolIndex = pathName.indexOf('://');\n    if (protocolIndex >= 0) {\n      pathName = pathName.substring(protocolIndex + 3);\n      var slashIndex = pathName.indexOf('/');\n      if (slashIndex >= 0) {\n        pathName = pathName.substring(slashIndex + 1);\n      }\n    }\n    return pathName;\n  };\n\n\n  /**\n   * @param {function()} callback Callback to fire as soon as this has loaded.\n   * @final\n   */\n  goog.Dependency.prototype.onLoad = function(callback) {\n    if (this.loaded_) {\n      callback();\n    } else {\n      this.loadCallbacks_.push(callback);\n    }\n  };\n\n\n  /**\n   * Marks this dependency as loaded and fires any callbacks registered with\n   * onLoad.\n   * @final\n   */\n  goog.Dependency.prototype.loaded = function() {\n    this.loaded_ = true;\n    var callbacks = this.loadCallbacks_;\n    this.loadCallbacks_ = [];\n    for (var i = 0; i < callbacks.length; i++) {\n      callbacks[i]();\n    }\n  };\n\n\n  /**\n   * Whether or not document.written / appended script tags should be deferred.\n   *\n   * @private {boolean}\n   */\n  goog.Dependency.defer_ = false;\n\n\n  /**\n   * Map of script ready / state change callbacks. Old IE cannot handle putting\n   * these properties on goog.global.\n   *\n   * @private @const {!Object<string, function(?):undefined>}\n   */\n  goog.Dependency.callbackMap_ = {};\n\n\n  /**\n   * @param {function(...?):?} callback\n   * @return {string}\n   * @private\n   */\n  goog.Dependency.registerCallback_ = function(callback) {\n    var key = Math.random().toString(32);\n    goog.Dependency.callbackMap_[key] = callback;\n    return key;\n  };\n\n\n  /**\n   * @param {string} key\n   * @private\n   */\n  goog.Dependency.unregisterCallback_ = function(key) {\n    delete goog.Dependency.callbackMap_[key];\n  };\n\n\n  /**\n   * @param {string} key\n   * @param {...?} var_args\n   * @private\n   * @suppress {unusedPrivateMembers}\n   */\n  goog.Dependency.callback_ = function(key, var_args) {\n    if (key in goog.Dependency.callbackMap_) {\n      var callback = goog.Dependency.callbackMap_[key];\n      var args = [];\n      for (var i = 1; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n      callback.apply(undefined, args);\n    } else {\n      var errorMessage = 'Callback key ' + key +\n          ' does not exist (was base.js loaded more than once?).';\n      throw Error(errorMessage);\n    }\n  };\n\n\n  /**\n   * Starts loading this dependency. This dependency can pause loading if it\n   * needs to and resume it later via the controller interface.\n   *\n   * When this is loaded it should call controller.loaded(). Note that this will\n   * end up calling the loaded method of this dependency; there is no need to\n   * call it explicitly.\n   *\n   * @param {!goog.LoadController} controller\n   */\n  goog.Dependency.prototype.load = function(controller) {\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    if (!goog.inHtmlDocument_()) {\n      goog.logToConsole_(\n          'Cannot use default debug loader outside of HTML documents.');\n      if (this.relativePath == 'deps.js') {\n        // Some old code is relying on base.js auto loading deps.js failing with\n        // no error before later setting CLOSURE_IMPORT_SCRIPT.\n        // CLOSURE_IMPORT_SCRIPT should be set *before* base.js is loaded, or\n        // CLOSURE_NO_DEPS set to true.\n        goog.logToConsole_(\n            'Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, ' +\n            'or setting CLOSURE_NO_DEPS to true.');\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n\n    // If the user tries to require a new symbol after document load,\n    // something has gone terribly wrong. Doing a document.write would\n    // wipe out the page. This does not apply to the CSP-compliant method\n    // of writing script tags.\n    if (doc.readyState == 'complete' &&\n        !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {\n      // Certain test frameworks load base.js multiple times, which tries\n      // to write deps.js each time. If that happens, just fail silently.\n      // These frameworks wipe the page between each load of base.js, so this\n      // is OK.\n      var isDeps = /\\bdeps.js$/.test(this.path);\n      if (isDeps) {\n        controller.loaded();\n        return;\n      } else {\n        throw Error('Cannot write \"' + this.path + '\" after document load');\n      }\n    }\n\n    var nonce = goog.getScriptNonce_();\n    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING &&\n        goog.isDocumentLoading_()) {\n      var key;\n      var callback = function(script) {\n        if (script.readyState && script.readyState != 'complete') {\n          script.onload = callback;\n          return;\n        }\n        goog.Dependency.unregisterCallback_(key);\n        controller.loaded();\n      };\n      key = goog.Dependency.registerCallback_(callback);\n\n      var defer = goog.Dependency.defer_ ? ' defer' : '';\n      var nonceAttr = nonce ? ' nonce=\"' + nonce + '\"' : '';\n      var script = '<script src=\"' + this.path + '\"' + nonceAttr + defer +\n          ' id=\"script-' + key + '\"><\\/script>';\n\n      script += '<script' + nonceAttr + '>';\n\n      if (goog.Dependency.defer_) {\n        script += 'document.getElementById(\\'script-' + key +\n            '\\').onload = function() {\\n' +\n            '  goog.Dependency.callback_(\\'' + key + '\\', this);\\n' +\n            '};\\n';\n      } else {\n        script += 'goog.Dependency.callback_(\\'' + key +\n            '\\', document.getElementById(\\'script-' + key + '\\'));';\n      }\n\n      script += '<\\/script>';\n\n      doc.write(\n          goog.TRUSTED_TYPES_POLICY_ ?\n              goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n              script);\n    } else {\n      var scriptEl =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptEl.defer = goog.Dependency.defer_;\n      scriptEl.async = false;\n\n      // If CSP nonces are used, propagate them to dynamically created scripts.\n      // This is necessary to allow nonce-based CSPs without 'strict-dynamic'.\n      if (nonce) {\n        scriptEl.nonce = nonce;\n      }\n\n      scriptEl.onload = function() {\n        scriptEl.onload = null;\n        controller.loaded();\n      };\n\n      scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ?\n          goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path) :\n          this.path;\n      doc.head.appendChild(scriptEl);\n    }\n  };\n\n\n  /**\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides Should be an empty array.\n   *     TODO(johnplaisted) add support for adding closure namespaces to ES6\n   *     modules for interop purposes.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   * @extends {goog.Dependency}\n   */\n  goog.Es6ModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.Es6ModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n  };\n  goog.inherits(goog.Es6ModuleDependency, goog.Dependency);\n\n\n  /**\n   * @override\n   * @param {!goog.LoadController} controller\n   */\n  goog.Es6ModuleDependency.prototype.load = function(controller) {\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n    if (!goog.inHtmlDocument_()) {\n      goog.logToConsole_(\n          'Cannot use default debug loader outside of HTML documents.');\n      controller.pause();\n      return;\n    }\n\n    /** @type {!HTMLDocument} */\n    var doc = goog.global.document;\n\n    var dep = this;\n\n    // TODO(johnplaisted): Does document.writing really speed up anything? Any\n    // difference between this and just waiting for interactive mode and then\n    // appending?\n    function write(src, contents) {\n      var nonceAttr = '';\n      var nonce = goog.getScriptNonce_();\n      if (nonce) {\n        nonceAttr = ' nonce=\"' + nonce + '\"';\n      }\n\n      if (contents) {\n        var script = '<script type=\"module\" crossorigin' + nonceAttr + '>' +\n            contents + '</' +\n            'script>';\n        doc.write(\n            goog.TRUSTED_TYPES_POLICY_ ?\n                goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n                script);\n      } else {\n        var script = '<script type=\"module\" crossorigin src=\"' + src + '\"' +\n            nonceAttr + '></' +\n            'script>';\n        doc.write(\n            goog.TRUSTED_TYPES_POLICY_ ?\n                goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n                script);\n      }\n    }\n\n    function append(src, contents) {\n      var scriptEl =\n          /** @type {!HTMLScriptElement} */ (doc.createElement('script'));\n      scriptEl.defer = true;\n      scriptEl.async = false;\n      scriptEl.type = 'module';\n      scriptEl.setAttribute('crossorigin', true);\n\n      // If CSP nonces are used, propagate them to dynamically created scripts.\n      // This is necessary to allow nonce-based CSPs without 'strict-dynamic'.\n      var nonce = goog.getScriptNonce_();\n      if (nonce) {\n        scriptEl.nonce = nonce;\n      }\n\n      if (contents) {\n        scriptEl.text = goog.TRUSTED_TYPES_POLICY_ ?\n            goog.TRUSTED_TYPES_POLICY_.createScript(contents) :\n            contents;\n      } else {\n        scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ?\n            goog.TRUSTED_TYPES_POLICY_.createScriptURL(src) :\n            src;\n      }\n\n      doc.head.appendChild(scriptEl);\n    }\n\n    var create;\n\n    if (goog.isDocumentLoading_()) {\n      create = write;\n      // We can ONLY call document.write if we are guaranteed that any\n      // non-module script tags document.written after this are deferred.\n      // Small optimization, in theory document.writing is faster.\n      goog.Dependency.defer_ = true;\n    } else {\n      create = append;\n    }\n\n    // Write 4 separate tags here:\n    // 1) Sets the module state at the correct time (just before execution).\n    // 2) A src node for this, which just hopefully lets the browser load it a\n    //    little early (no need to parse #3).\n    // 3) Import the module and register it.\n    // 4) Clear the module state at the correct time. Guaranteed to run even\n    //    if there is an error in the module (#3 will not run if there is an\n    //    error in the module).\n    var beforeKey = goog.Dependency.registerCallback_(function() {\n      goog.Dependency.unregisterCallback_(beforeKey);\n      controller.setModuleState(goog.ModuleType.ES6);\n    });\n    create(undefined, 'goog.Dependency.callback_(\"' + beforeKey + '\")');\n\n    // TODO(johnplaisted): Does this really speed up anything?\n    create(this.path, undefined);\n\n    var registerKey = goog.Dependency.registerCallback_(function(exports) {\n      goog.Dependency.unregisterCallback_(registerKey);\n      controller.registerEs6ModuleExports(\n          dep.path, exports, goog.moduleLoaderState_.moduleName);\n    });\n    create(\n        undefined,\n        'import * as m from \"' + this.path + '\"; goog.Dependency.callback_(\"' +\n            registerKey + '\", m)');\n\n    var afterKey = goog.Dependency.registerCallback_(function() {\n      goog.Dependency.unregisterCallback_(afterKey);\n      controller.clearModuleState();\n      controller.loaded();\n    });\n    create(undefined, 'goog.Dependency.callback_(\"' + afterKey + '\")');\n  };\n\n\n  /**\n   * Superclass of any dependency that needs to be loaded into memory,\n   * transformed, and then eval'd (goog.modules and transpiled files).\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor @abstract\n   * @extends {goog.Dependency}\n   */\n  goog.TransformedDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.TransformedDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @private {?string} */\n    this.contents_ = null;\n\n    /**\n     * Whether to lazily make the synchronous XHR (when goog.require'd) or make\n     * the synchronous XHR when initially loading. On FireFox 61 there is a bug\n     * where an ES6 module cannot make a synchronous XHR (rather, it can, but if\n     * it does then no other ES6 modules will load after).\n     *\n     * tl;dr we lazy load due to bugs on older browsers and eager load due to\n     * bugs on newer ones.\n     *\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=1477090\n     *\n     * @private @const {boolean}\n     */\n    this.lazyFetch_ = !goog.inHtmlDocument_() ||\n        !('noModule' in goog.global.document.createElement('script'));\n  };\n  goog.inherits(goog.TransformedDependency, goog.Dependency);\n\n\n  /**\n   * @override\n   * @param {!goog.LoadController} controller\n   */\n  goog.TransformedDependency.prototype.load = function(controller) {\n    var dep = this;\n\n    function fetch() {\n      dep.contents_ = goog.loadFileSync_(dep.path);\n\n      if (dep.contents_) {\n        dep.contents_ = dep.transform(dep.contents_);\n        if (dep.contents_) {\n          dep.contents_ += '\\n//# sourceURL=' + dep.path;\n        }\n      }\n    }\n\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\n      fetch();\n      if (this.contents_ &&\n          goog.global.CLOSURE_IMPORT_SCRIPT('', this.contents_)) {\n        this.contents_ = null;\n        controller.loaded();\n      } else {\n        controller.pause();\n      }\n      return;\n    }\n\n\n    var isEs6 = this.loadFlags['module'] == goog.ModuleType.ES6;\n\n    if (!this.lazyFetch_) {\n      fetch();\n    }\n\n    function load() {\n      if (dep.lazyFetch_) {\n        fetch();\n      }\n\n      if (!dep.contents_) {\n        // loadFileSync_ or transform are responsible. Assume they logged an\n        // error.\n        return;\n      }\n\n      if (isEs6) {\n        controller.setModuleState(goog.ModuleType.ES6);\n      }\n\n      var namespace;\n\n      try {\n        var contents = dep.contents_;\n        dep.contents_ = null;\n        goog.globalEval(goog.CLOSURE_EVAL_PREFILTER_.createScript(contents));\n        if (isEs6) {\n          namespace = goog.moduleLoaderState_.moduleName;\n        }\n      } finally {\n        if (isEs6) {\n          controller.clearModuleState();\n        }\n      }\n\n      if (isEs6) {\n        // Due to circular dependencies this may not be available for require\n        // right now.\n        goog.global['$jscomp']['require']['ensure'](\n            [dep.getPathName()], function() {\n              controller.registerEs6ModuleExports(\n                  dep.path,\n                  goog.global['$jscomp']['require'](dep.getPathName()),\n                  namespace);\n            });\n      }\n\n      controller.loaded();\n    }\n\n    // Do not fetch now; in FireFox 47 the synchronous XHR doesn't block all\n    // events. If we fetched now and then document.write'd the contents the\n    // document.write would be an eval and would execute too soon! Instead write\n    // a script tag to fetch and eval synchronously at the correct time.\n    function fetchInOwnScriptThenLoad() {\n      /** @type {!HTMLDocument} */\n      var doc = goog.global.document;\n\n      var key = goog.Dependency.registerCallback_(function() {\n        goog.Dependency.unregisterCallback_(key);\n        load();\n      });\n\n      var nonce = goog.getScriptNonce_();\n      var nonceAttr = nonce ? ' nonce=\"' + nonce + '\"' : '';\n      var script = '<script' + nonceAttr + '>' +\n          goog.protectScriptTag_('goog.Dependency.callback_(\"' + key + '\");') +\n          '</' +\n          'script>';\n      doc.write(\n          goog.TRUSTED_TYPES_POLICY_ ?\n              goog.TRUSTED_TYPES_POLICY_.createHTML(script) :\n              script);\n    }\n\n    // If one thing is pending it is this.\n    var anythingElsePending = controller.pending().length > 1;\n\n    // Additionally if we are meant to defer scripts but the page is still\n    // loading (e.g. an ES6 module is loading) then also defer. Or if we are\n    // meant to defer and anything else is pending then defer (those may be\n    // scripts that did not need transformation and are just script tags with\n    // defer set to true, and we need to evaluate after that deferred script).\n    var needsAsyncLoading = goog.Dependency.defer_ &&\n        (anythingElsePending || goog.isDocumentLoading_());\n\n    if (needsAsyncLoading) {\n      // Note that we only defer when we have to rather than 100% of the time.\n      // Always defering would work, but then in theory the order of\n      // goog.require calls would then matter. We want to enforce that most of\n      // the time the order of the require calls does not matter.\n      controller.defer(function() {\n        load();\n      });\n      return;\n    }\n    // TODO(johnplaisted): Externs are missing onreadystatechange for\n    // HTMLDocument.\n    /** @type {?} */\n    var doc = goog.global.document;\n\n    var isInternetExplorerOrEdge = goog.inHtmlDocument_() &&\n        ('ActiveXObject' in goog.global || goog.isEdge_());\n\n    // Don't delay in any version of IE or pre-Chromium Edge. There's a bug\n    // around this that will cause out of order script execution. This means\n    // that on older IE ES6 modules will load too early (while the document is\n    // still loading + the dom is not available). The other option is to load\n    // too late (when the document is complete and the onload even will never\n    // fire). This seems to be the lesser of two evils as scripts already act\n    // like the former.\n    if (isEs6 && goog.inHtmlDocument_() && goog.isDocumentLoading_() &&\n        !isInternetExplorerOrEdge) {\n      goog.Dependency.defer_ = true;\n      // Transpiled ES6 modules still need to load like regular ES6 modules,\n      // aka only after the document is interactive.\n      controller.pause();\n      var oldCallback = doc.onreadystatechange;\n      doc.onreadystatechange = function() {\n        if (doc.readyState == 'interactive') {\n          doc.onreadystatechange = oldCallback;\n          load();\n          controller.resume();\n        }\n        if (typeof oldCallback === 'function') {\n          oldCallback.apply(undefined, arguments);\n        }\n      };\n    } else {\n      // Always eval on old IE.\n      if (!goog.inHtmlDocument_() || !goog.isDocumentLoading_()) {\n        load();\n      } else {\n        fetchInOwnScriptThenLoad();\n      }\n    }\n  };\n\n\n  /**\n   * @param {string} contents\n   * @return {string}\n   * @abstract\n   */\n  goog.TransformedDependency.prototype.transform = function(contents) {};\n\n\n  /**\n   * Any non-goog.module dependency which needs to be transpiled before eval.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @param {!goog.Transpiler} transpiler\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.TranspiledDependency = function(\n      path, relativePath, provides, requires, loadFlags, transpiler) {\n    goog.TranspiledDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @protected @const*/\n    this.transpiler = transpiler;\n  };\n  goog.inherits(goog.TranspiledDependency, goog.TransformedDependency);\n\n\n  /**\n   * @override\n   * @param {string} contents\n   * @return {string}\n   */\n  goog.TranspiledDependency.prototype.transform = function(contents) {\n    // Transpile with the pathname so that ES6 modules are domain agnostic.\n    return this.transpiler.transpile(contents, this.getPathName());\n  };\n\n\n  /**\n   * An ES6 module dependency that was transpiled to a jscomp module outside\n   * of the debug loader, e.g. server side.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.PreTranspiledEs6ModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags) {\n    goog.PreTranspiledEs6ModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n  };\n  goog.inherits(\n      goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency);\n\n\n  /**\n   * @override\n   * @param {string} contents\n   * @return {string}\n   */\n  goog.PreTranspiledEs6ModuleDependency.prototype.transform = function(\n      contents) {\n    return contents;\n  };\n\n\n  /**\n   * A goog.module, transpiled or not. Will always perform some minimal\n   * transformation even when not transpiled to wrap in a goog.loadModule\n   * statement.\n   *\n   * @param {string} path Absolute path of this script.\n   * @param {string} relativePath Path of this script relative to goog.basePath.\n   * @param {!Array<string>} provides goog.provided or goog.module symbols\n   *     in this file.\n   * @param {!Array<string>} requires goog symbols or relative paths to Closure\n   *     this depends on.\n   * @param {!Object<string, string>} loadFlags\n   * @param {boolean} needsTranspile\n   * @param {!goog.Transpiler} transpiler\n   * @struct @constructor\n   * @extends {goog.TransformedDependency}\n   */\n  goog.GoogModuleDependency = function(\n      path, relativePath, provides, requires, loadFlags, needsTranspile,\n      transpiler) {\n    goog.GoogModuleDependency.base(\n        this, 'constructor', path, relativePath, provides, requires, loadFlags);\n    /** @private @const */\n    this.needsTranspile_ = needsTranspile;\n    /** @private @const */\n    this.transpiler_ = transpiler;\n  };\n  goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency);\n\n\n  /**\n   * @override\n   * @param {string} contents\n   * @return {string}\n   */\n  goog.GoogModuleDependency.prototype.transform = function(contents) {\n    if (this.needsTranspile_) {\n      contents = this.transpiler_.transpile(contents, this.getPathName());\n    }\n\n    if (!goog.LOAD_MODULE_USING_EVAL || goog.global.JSON === undefined) {\n      return '' +\n          'goog.loadModule(function(exports) {' +\n          '\"use strict\";' + contents +\n          '\\n' +  // terminate any trailing single line comment.\n          ';return exports' +\n          '});' +\n          '\\n//# sourceURL=' + this.path + '\\n';\n    } else {\n      return '' +\n          'goog.loadModule(' +\n          goog.global.JSON.stringify(\n              contents + '\\n//# sourceURL=' + this.path + '\\n') +\n          ');';\n    }\n  };\n\n\n  /**\n   * @param {string} relPath\n   * @param {!Array<string>|undefined} provides\n   * @param {!Array<string>} requires\n   * @param {boolean|!Object<string>=} opt_loadFlags\n   * @see goog.addDependency\n   */\n  goog.DebugLoader_.prototype.addDependency = function(\n      relPath, provides, requires, opt_loadFlags) {\n    provides = provides || [];\n    relPath = relPath.replace(/\\\\/g, '/');\n    var path = goog.normalizePath_(goog.basePath + relPath);\n    if (!opt_loadFlags || typeof opt_loadFlags === 'boolean') {\n      opt_loadFlags = opt_loadFlags ? {'module': goog.ModuleType.GOOG} : {};\n    }\n    var dep = this.factory_.createDependency(\n        path, relPath, provides, requires, opt_loadFlags,\n        goog.transpiler_.needsTranspile(\n            opt_loadFlags['lang'] || 'es3', opt_loadFlags['module']));\n    this.dependencies_[path] = dep;\n    for (var i = 0; i < provides.length; i++) {\n      this.idToPath_[provides[i]] = path;\n    }\n    this.idToPath_[relPath] = path;\n  };\n\n\n  /**\n   * Creates goog.Dependency instances for the debug loader to load.\n   *\n   * Should be overridden to have the debug loader use custom subclasses of\n   * goog.Dependency.\n   *\n   * @param {!goog.Transpiler} transpiler\n   * @struct @constructor\n   */\n  goog.DependencyFactory = function(transpiler) {\n    /** @protected @const */\n    this.transpiler = transpiler;\n  };\n\n\n  /**\n   * @param {string} path Absolute path of the file.\n   * @param {string} relativePath Path relative to closure’s base.js.\n   * @param {!Array<string>} provides Array of provided goog.provide/module ids.\n   * @param {!Array<string>} requires Array of required goog.provide/module /\n   *     relative ES6 module paths.\n   * @param {!Object<string, string>} loadFlags\n   * @param {boolean} needsTranspile True if the file needs to be transpiled\n   *     per the goog.Transpiler.\n   * @return {!goog.Dependency}\n   */\n  goog.DependencyFactory.prototype.createDependency = function(\n      path, relativePath, provides, requires, loadFlags, needsTranspile) {\n\n    if (loadFlags['module'] == goog.ModuleType.GOOG) {\n      return new goog.GoogModuleDependency(\n          path, relativePath, provides, requires, loadFlags, needsTranspile,\n          this.transpiler);\n    } else if (needsTranspile) {\n      return new goog.TranspiledDependency(\n          path, relativePath, provides, requires, loadFlags, this.transpiler);\n    } else {\n      if (loadFlags['module'] == goog.ModuleType.ES6) {\n        if (goog.TRANSPILE == 'never' && goog.ASSUME_ES_MODULES_TRANSPILED) {\n          return new goog.PreTranspiledEs6ModuleDependency(\n              path, relativePath, provides, requires, loadFlags);\n        } else {\n          return new goog.Es6ModuleDependency(\n              path, relativePath, provides, requires, loadFlags);\n        }\n      } else {\n        return new goog.Dependency(\n            path, relativePath, provides, requires, loadFlags);\n      }\n    }\n  };\n\n\n  /** @private @const */\n  goog.debugLoader_ = new goog.DebugLoader_();\n\n\n  /**\n   * Loads the Closure Dependency file.\n   *\n   * Exposed a public function so CLOSURE_NO_DEPS can be set to false, base\n   * loaded, setDependencyFactory called, and then this called. i.e. allows\n   * custom loading of the deps file.\n   */\n  goog.loadClosureDeps = function() {\n    goog.debugLoader_.loadClosureDeps();\n  };\n\n\n  /**\n   * Sets the dependency factory, which can be used to create custom\n   * goog.Dependency implementations to control how dependencies are loaded.\n   *\n   * Note: if you wish to call this function and provide your own implemnetation\n   * it is a wise idea to set CLOSURE_NO_DEPS to true, otherwise the dependency\n   * file and all of its goog.addDependency calls will use the default factory.\n   * You can call goog.loadClosureDeps to load the Closure dependency file\n   * later, after your factory is injected.\n   *\n   * @param {!goog.DependencyFactory} factory\n   */\n  goog.setDependencyFactory = function(factory) {\n    goog.debugLoader_.setDependencyFactory(factory);\n  };\n\n\n  /**\n   * Trusted Types policy for the debug loader.\n   * @private @const {?TrustedTypePolicy}\n   */\n  goog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ?\n      goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + '#base') :\n      null;\n\n  if (!goog.global.CLOSURE_NO_DEPS) {\n    goog.debugLoader_.loadClosureDeps();\n  }\n\n\n  /**\n   * Bootstraps the given namespaces and calls the callback once they are\n   * available either via goog.require. This is a replacement for using\n   * `goog.require` to bootstrap Closure JavaScript. Previously a `goog.require`\n   * in an HTML file would guarantee that the require'd namespace was available\n   * in the next immediate script tag. With ES6 modules this no longer a\n   * guarantee.\n   *\n   * @param {!Array<string>} namespaces\n   * @param {function(): ?} callback Function to call once all the namespaces\n   *     have loaded. Always called asynchronously.\n   */\n  goog.bootstrap = function(namespaces, callback) {\n    goog.debugLoader_.bootstrap(namespaces, callback);\n  };\n}\n\n\nif (!COMPILED) {\n  var isChrome87 = false;\n  // Cannot run check for Chrome <87 bug in case of strict CSP environments.\n  // TODO(user): Remove once Chrome <87 bug is no longer a problem.\n  try {\n    isChrome87 = eval(goog.global.trustedTypes.emptyScript) !==\n        goog.global.trustedTypes.emptyScript;\n  } catch (err) {\n  }\n\n  /**\n   * Trusted Types for running dev servers.\n   *\n   * @private @const\n   */\n  goog.CLOSURE_EVAL_PREFILTER_ =\n      // Detect Chrome <87 bug with TT and eval.\n      goog.global.trustedTypes && isChrome87 &&\n          goog.createTrustedTypesPolicy('goog#base#devonly#eval') ||\n      {createScript: goog.identity_};\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Implements the disposable interface.\n */\n\ngoog.provide('goog.Disposable');\n\ngoog.require('goog.disposable.IDisposable');\ngoog.require('goog.dispose');\n/**\n * TODO(user): Remove this require.\n * @suppress {extraRequire}\n */\ngoog.require('goog.disposeAll');\n\n/**\n * Class that provides the basic implementation for disposable objects. If your\n * class holds references or resources that can't be collected by standard GC,\n * it should extend this class or implement the disposable interface (defined\n * in goog.disposable.IDisposable). See description of\n * goog.disposable.IDisposable for examples of cleanup.\n * @constructor\n * @implements {goog.disposable.IDisposable}\n */\ngoog.Disposable = function() {\n  'use strict';\n  /**\n   * If monitoring the goog.Disposable instances is enabled, stores the creation\n   * stack trace of the Disposable instance.\n   * @type {string|undefined}\n   */\n  this.creationStack;\n\n  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {\n    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {\n      this.creationStack = new Error().stack;\n    }\n    goog.Disposable.instances_[goog.getUid(this)] = this;\n  }\n  // Support sealing\n  this.disposed_ = this.disposed_;\n  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;\n};\n\n\n/**\n * @enum {number} Different monitoring modes for Disposable.\n */\ngoog.Disposable.MonitoringMode = {\n  /**\n   * No monitoring.\n   */\n  OFF: 0,\n  /**\n   * Creating and disposing the goog.Disposable instances is monitored. All\n   * disposable objects need to call the `goog.Disposable` base\n   * constructor. The PERMANENT mode must be switched on before creating any\n   * goog.Disposable instances.\n   */\n  PERMANENT: 1,\n  /**\n   * INTERACTIVE mode can be switched on and off on the fly without producing\n   * errors. It also doesn't warn if the disposable objects don't call the\n   * `goog.Disposable` base constructor.\n   */\n  INTERACTIVE: 2\n};\n\n\n/**\n * @define {number} The monitoring mode of the goog.Disposable\n *     instances. Default is OFF. Switching on the monitoring is only\n *     recommended for debugging because it has a significant impact on\n *     performance and memory usage. If switched off, the monitoring code\n *     compiles down to 0 bytes.\n */\ngoog.Disposable.MONITORING_MODE =\n    goog.define('goog.Disposable.MONITORING_MODE', 0);\n\n\n/**\n * @define {boolean} Whether to attach creation stack to each created disposable\n *     instance; This is only relevant for when MonitoringMode != OFF.\n */\ngoog.Disposable.INCLUDE_STACK_ON_CREATION =\n    goog.define('goog.Disposable.INCLUDE_STACK_ON_CREATION', true);\n\n\n/**\n * Maps the unique ID of every undisposed `goog.Disposable` object to\n * the object itself.\n * @type {!Object<number, !goog.Disposable>}\n * @private\n */\ngoog.Disposable.instances_ = {};\n\n\n/**\n * @return {!Array<!goog.Disposable>} All `goog.Disposable` objects that\n *     haven't been disposed of.\n */\ngoog.Disposable.getUndisposedObjects = function() {\n  'use strict';\n  var ret = [];\n  for (var id in goog.Disposable.instances_) {\n    if (goog.Disposable.instances_.hasOwnProperty(id)) {\n      ret.push(goog.Disposable.instances_[Number(id)]);\n    }\n  }\n  return ret;\n};\n\n\n/**\n * Clears the registry of undisposed objects but doesn't dispose of them.\n */\ngoog.Disposable.clearUndisposedObjects = function() {\n  'use strict';\n  goog.Disposable.instances_ = {};\n};\n\n\n/**\n * Whether the object has been disposed of.\n * @type {boolean}\n * @private\n */\ngoog.Disposable.prototype.disposed_ = false;\n\n\n/**\n * Callbacks to invoke when this object is disposed.\n * @type {Array<!Function>}\n * @private\n */\ngoog.Disposable.prototype.onDisposeCallbacks_;\n\n\n/**\n * @return {boolean} Whether the object has been disposed of.\n * @override\n */\ngoog.Disposable.prototype.isDisposed = function() {\n  'use strict';\n  return this.disposed_;\n};\n\n\n/**\n * @return {boolean} Whether the object has been disposed of.\n * @deprecated Use {@link #isDisposed} instead.\n */\ngoog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;\n\n\n/**\n * Disposes of the object. If the object hasn't already been disposed of, calls\n * {@link #disposeInternal}. Classes that extend `goog.Disposable` should\n * override {@link #disposeInternal} in order to cleanup references, resources\n * and other disposable objects. Reentrant.\n *\n * @return {void} Nothing.\n * @override\n */\ngoog.Disposable.prototype.dispose = function() {\n  'use strict';\n  if (!this.disposed_) {\n    // Set disposed_ to true first, in case during the chain of disposal this\n    // gets disposed recursively.\n    this.disposed_ = true;\n    this.disposeInternal();\n    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {\n      var uid = goog.getUid(this);\n      if (goog.Disposable.MONITORING_MODE ==\n              goog.Disposable.MonitoringMode.PERMANENT &&\n          !goog.Disposable.instances_.hasOwnProperty(uid)) {\n        throw new Error(\n            this + ' did not call the goog.Disposable base ' +\n            'constructor or was disposed of after a clearUndisposedObjects ' +\n            'call');\n      }\n      if (goog.Disposable.MONITORING_MODE !=\n              goog.Disposable.MonitoringMode.OFF &&\n          this.onDisposeCallbacks_ && this.onDisposeCallbacks_.length > 0) {\n        throw new Error(\n            this + ' did not empty its onDisposeCallbacks queue. This ' +\n            'probably means it overrode dispose() or disposeInternal() ' +\n            'without calling the superclass\\' method.');\n      }\n      delete goog.Disposable.instances_[uid];\n    }\n  }\n};\n\n\n/**\n * Associates a disposable object with this object so that they will be disposed\n * together.\n * @param {goog.disposable.IDisposable} disposable that will be disposed when\n *     this object is disposed.\n */\ngoog.Disposable.prototype.registerDisposable = function(disposable) {\n  'use strict';\n  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));\n};\n\n\n/**\n * Invokes a callback function when this object is disposed. Callbacks are\n * invoked in the order in which they were added. If a callback is added to\n * an already disposed Disposable, it will be called immediately.\n * @param {function(this:T):?} callback The callback function.\n * @param {T=} opt_scope An optional scope to call the callback in.\n * @template T\n */\ngoog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {\n  'use strict';\n  if (this.disposed_) {\n    opt_scope !== undefined ? callback.call(opt_scope) : callback();\n    return;\n  }\n  if (!this.onDisposeCallbacks_) {\n    this.onDisposeCallbacks_ = [];\n  }\n\n  this.onDisposeCallbacks_.push(\n      opt_scope !== undefined ? goog.bind(callback, opt_scope) : callback);\n};\n\n\n/**\n * Performs appropriate cleanup. See description of goog.disposable.IDisposable\n * for examples. Classes that extend `goog.Disposable` should override this\n * method. Not reentrant. To avoid calling it twice, it must only be called from\n * the subclass' `disposeInternal` method. Everywhere else the public `dispose`\n * method must be used. For example:\n *\n * <pre>\n * mypackage.MyClass = function() {\n * mypackage.MyClass.base(this, 'constructor');\n *     // Constructor logic specific to MyClass.\n *     ...\n *   };\n *   goog.inherits(mypackage.MyClass, goog.Disposable);\n *\n *   mypackage.MyClass.prototype.disposeInternal = function() {\n *     // Dispose logic specific to MyClass.\n *     ...\n *     // Call superclass's disposeInternal at the end of the subclass's, like\n *     // in C++, to avoid hard-to-catch issues.\n *     mypackage.MyClass.base(this, 'disposeInternal');\n *   };\n * </pre>\n *\n * @protected\n */\ngoog.Disposable.prototype.disposeInternal = function() {\n  'use strict';\n  if (this.onDisposeCallbacks_) {\n    while (this.onDisposeCallbacks_.length) {\n      this.onDisposeCallbacks_.shift()();\n    }\n  }\n};\n\n\n/**\n * Returns True if we can verify the object is disposed.\n * Calls `isDisposed` on the argument if it supports it.  If obj\n * is not an object with an isDisposed() method, return false.\n * @param {*} obj The object to investigate.\n * @return {boolean} True if we can verify the object is disposed.\n */\ngoog.Disposable.isDisposed = function(obj) {\n  'use strict';\n  if (obj && typeof obj.isDisposed == 'function') {\n    return obj.isDisposed();\n  }\n  return false;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utilities for manipulating arrays.\n */\n\n\ngoog.module('goog.array');\ngoog.module.declareLegacyNamespace();\n\nconst asserts = goog.require('goog.asserts');\n\n\n/**\n * @define {boolean} NATIVE_ARRAY_PROTOTYPES indicates whether the code should\n * rely on Array.prototype functions, if available.\n *\n * The Array.prototype functions can be defined by external libraries like\n * Prototype and setting this flag to false forces closure to use its own\n * goog.array implementation.\n *\n * If your javascript can be loaded by a third party site and you are wary about\n * relying on the prototype functions, specify\n * \"--define goog.NATIVE_ARRAY_PROTOTYPES=false\" to the JSCompiler.\n *\n * Setting goog.TRUSTED_SITE to false will automatically set\n * NATIVE_ARRAY_PROTOTYPES to false.\n */\ngoog.NATIVE_ARRAY_PROTOTYPES =\n    goog.define('goog.NATIVE_ARRAY_PROTOTYPES', goog.TRUSTED_SITE);\n\n\n/**\n * @define {boolean} If true, JSCompiler will use the native implementation of\n * array functions where appropriate (e.g., `Array#filter`) and remove the\n * unused pure JS implementation.\n */\nconst ASSUME_NATIVE_FUNCTIONS = goog.define(\n    'goog.array.ASSUME_NATIVE_FUNCTIONS', goog.FEATURESET_YEAR > 2012);\nexports.ASSUME_NATIVE_FUNCTIONS = ASSUME_NATIVE_FUNCTIONS;\n\n\n/**\n * Returns the last element in an array without removing it.\n * Same as {@link goog.array.last}.\n * @param {IArrayLike<T>|string} array The array.\n * @return {T} Last item in array.\n * @template T\n */\nfunction peek(array) {\n  return array[array.length - 1];\n}\nexports.peek = peek;\n\n\n/**\n * Returns the last element in an array without removing it.\n * Same as {@link goog.array.peek}.\n * @param {IArrayLike<T>|string} array The array.\n * @return {T} Last item in array.\n * @template T\n */\nexports.last = peek;\n\n// NOTE(arv): Since most of the array functions are generic it allows you to\n// pass an array-like object. Strings have a length and are considered array-\n// like. However, the 'in' operator does not work on strings so we cannot just\n// use the array path even if the browser supports indexing into strings. We\n// therefore end up splitting the string.\n\n\n/**\n * Returns the index of the first element of an array with a specified value, or\n * -1 if the element is not present in the array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-indexof}\n *\n * @param {IArrayLike<T>|string} arr The array to be searched.\n * @param {T} obj The object for which we are searching.\n * @param {number=} opt_fromIndex The index at which to start the search. If\n *     omitted the search starts at index 0.\n * @return {number} The index of the first matching array element.\n * @template T\n */\nconst indexOf = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ?\n    function(arr, obj, opt_fromIndex) {\n      asserts.assert(arr.length != null);\n\n      return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);\n    } :\n    function(arr, obj, opt_fromIndex) {\n      const fromIndex = opt_fromIndex == null ?\n          0 :\n          (opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) :\n                               opt_fromIndex);\n\n      if (typeof arr === 'string') {\n        // Array.prototype.indexOf uses === so only strings should be found.\n        if (typeof obj !== 'string' || obj.length != 1) {\n          return -1;\n        }\n        return arr.indexOf(obj, fromIndex);\n      }\n\n      for (let i = fromIndex; i < arr.length; i++) {\n        if (i in arr && arr[i] === obj) return i;\n      }\n      return -1;\n    };\nexports.indexOf = indexOf;\n\n\n/**\n * Returns the index of the last element of an array with a specified value, or\n * -1 if the element is not present in the array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-lastindexof}\n *\n * @param {!IArrayLike<T>|string} arr The array to be searched.\n * @param {T} obj The object for which we are searching.\n * @param {?number=} opt_fromIndex The index at which to start the search. If\n *     omitted the search starts at the end of the array.\n * @return {number} The index of the last matching array element.\n * @template T\n */\nconst lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ?\n    function(arr, obj, opt_fromIndex) {\n      asserts.assert(arr.length != null);\n\n      // Firefox treats undefined and null as 0 in the fromIndex argument which\n      // leads it to always return -1\n      const fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;\n      return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);\n    } :\n    function(arr, obj, opt_fromIndex) {\n      let fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;\n\n      if (fromIndex < 0) {\n        fromIndex = Math.max(0, arr.length + fromIndex);\n      }\n\n      if (typeof arr === 'string') {\n        // Array.prototype.lastIndexOf uses === so only strings should be found.\n        if (typeof obj !== 'string' || obj.length != 1) {\n          return -1;\n        }\n        return arr.lastIndexOf(obj, fromIndex);\n      }\n\n      for (let i = fromIndex; i >= 0; i--) {\n        if (i in arr && arr[i] === obj) return i;\n      }\n      return -1;\n    };\nexports.lastIndexOf = lastIndexOf;\n\n\n/**\n * Calls a function for each element in an array. Skips holes in the array.\n * See {@link http://tinyurl.com/developer-mozilla-org-array-foreach}\n *\n * @param {IArrayLike<T>|string} arr Array or array like object over\n *     which to iterate.\n * @param {?function(this: S, T, number, ?): ?} f The function to call for every\n *     element. This function takes 3 arguments (the element, the index and the\n *     array). The return value is ignored.\n * @param {S=} opt_obj The object to be used as the value of 'this' within f.\n * @template T,S\n */\nconst forEach = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ?\n    function(arr, f, opt_obj) {\n      asserts.assert(arr.length != null);\n\n      Array.prototype.forEach.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      const l = arr.length;  // must be fixed during loop... see docs\n      const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n      for (let i = 0; i < l; i++) {\n        if (i in arr2) {\n          f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr);\n        }\n      }\n    };\nexports.forEach = forEach;\n\n\n/**\n * Calls a function for each element in an array, starting from the last\n * element rather than the first.\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this: S, T, number, ?): ?} f The function to call for every\n *     element. This function\n *     takes 3 arguments (the element, the index and the array). The return\n *     value is ignored.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @template T,S\n */\nfunction forEachRight(arr, f, opt_obj) {\n  const l = arr.length;  // must be fixed during loop... see docs\n  const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n  for (let i = l - 1; i >= 0; --i) {\n    if (i in arr2) {\n      f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr);\n    }\n  }\n}\nexports.forEachRight = forEachRight;\n\n\n/**\n * Calls a function for each element in an array, and if the function returns\n * true adds the element to a new array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-filter}\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?):boolean} f The function to call for\n *     every element. This function\n *     takes 3 arguments (the element, the index and the array) and must\n *     return a Boolean. If the return value is true the element is added to the\n *     result array. If it is false the element is not included.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @return {!Array<T>} a new array in which only elements that passed the test\n *     are present.\n * @template T,S\n */\nconst filter = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ?\n    function(arr, f, opt_obj) {\n      asserts.assert(arr.length != null);\n\n      return Array.prototype.filter.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      const l = arr.length;  // must be fixed during loop... see docs\n      const res = [];\n      let resLength = 0;\n      const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n      for (let i = 0; i < l; i++) {\n        if (i in arr2) {\n          const val = arr2[i];  // in case f mutates arr2\n          if (f.call(/** @type {?} */ (opt_obj), val, i, arr)) {\n            res[resLength++] = val;\n          }\n        }\n      }\n      return res;\n    };\nexports.filter = filter;\n\n\n/**\n * Calls a function for each element in an array and inserts the result into a\n * new array.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-map}\n *\n * @param {IArrayLike<VALUE>|string} arr Array or array like object\n *     over which to iterate.\n * @param {function(this:THIS, VALUE, number, ?): RESULT} f The function to call\n *     for every element. This function takes 3 arguments (the element,\n *     the index and the array) and should return something. The result will be\n *     inserted into a new array.\n * @param {THIS=} opt_obj The object to be used as the value of 'this' within f.\n * @return {!Array<RESULT>} a new array with the results from f.\n * @template THIS, VALUE, RESULT\n */\nconst map = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ?\n    function(arr, f, opt_obj) {\n      asserts.assert(arr.length != null);\n\n      return Array.prototype.map.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      const l = arr.length;  // must be fixed during loop... see docs\n      const res = new Array(l);\n      const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n      for (let i = 0; i < l; i++) {\n        if (i in arr2) {\n          res[i] = f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr);\n        }\n      }\n      return res;\n    };\nexports.map = map;\n\n\n/**\n * Passes every element of an array into a function and accumulates the result.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-reduce}\n * Note that this implementation differs from the native Array.prototype.reduce\n * in that the initial value is assumed to be defined (the MDN docs linked above\n * recommend not omitting this parameter, although it is technically optional).\n *\n * For example:\n * var a = [1, 2, 3, 4];\n * reduce(a, function(r, v, i, arr) {return r + v;}, 0);\n * returns 10\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {function(this:S, R, T, number, ?) : R} f The function to call for\n *     every element. This function\n *     takes 4 arguments (the function's previous result or the initial value,\n *     the value of the current array element, the current array index, and the\n *     array itself)\n *     function(previousValue, currentValue, index, array).\n * @param {?} val The initial value to pass into the function on the first call.\n * @param {S=} opt_obj  The object to be used as the value of 'this'\n *     within f.\n * @return {R} Result of evaluating f repeatedly across the values of the array.\n * @template T,S,R\n */\nconst reduce = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ?\n    function(arr, f, val, opt_obj) {\n      asserts.assert(arr.length != null);\n      if (opt_obj) {\n        f = goog.bind(f, opt_obj);\n      }\n      return Array.prototype.reduce.call(arr, f, val);\n    } :\n    function(arr, f, val, opt_obj) {\n      let rval = val;\n      forEach(arr, function(val, index) {\n        rval = f.call(/** @type {?} */ (opt_obj), rval, val, index, arr);\n      });\n      return rval;\n    };\nexports.reduce = reduce;\n\n\n/**\n * Passes every element of an array into a function and accumulates the result,\n * starting from the last element and working towards the first.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-reduceright}\n *\n * For example:\n * var a = ['a', 'b', 'c'];\n * reduceRight(a, function(r, v, i, arr) {return r + v;}, '');\n * returns 'cba'\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, R, T, number, ?) : R} f The function to call for\n *     every element. This function\n *     takes 4 arguments (the function's previous result or the initial value,\n *     the value of the current array element, the current array index, and the\n *     array itself)\n *     function(previousValue, currentValue, index, array).\n * @param {?} val The initial value to pass into the function on the first call.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @return {R} Object returned as a result of evaluating f repeatedly across the\n *     values of the array.\n * @template T,S,R\n */\nconst reduceRight = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ?\n    function(arr, f, val, opt_obj) {\n      asserts.assert(arr.length != null);\n      asserts.assert(f != null);\n      if (opt_obj) {\n        f = goog.bind(f, opt_obj);\n      }\n      return Array.prototype.reduceRight.call(arr, f, val);\n    } :\n    function(arr, f, val, opt_obj) {\n      let rval = val;\n      forEachRight(arr, function(val, index) {\n        rval = f.call(/** @type {?} */ (opt_obj), rval, val, index, arr);\n      });\n      return rval;\n    };\nexports.reduceRight = reduceRight;\n\n\n/**\n * Calls f for each element of an array. If any call returns true, some()\n * returns true (without checking the remaining elements). If all calls\n * return false, some() returns false.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-some}\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call for\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a boolean.\n * @param {S=} opt_obj  The object to be used as the value of 'this'\n *     within f.\n * @return {boolean} true if any element passes the test.\n * @template T,S\n */\nconst some = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ?\n    function(arr, f, opt_obj) {\n      asserts.assert(arr.length != null);\n\n      return Array.prototype.some.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      const l = arr.length;  // must be fixed during loop... see docs\n      const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n      for (let i = 0; i < l; i++) {\n        if (i in arr2 && f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n          return true;\n        }\n      }\n      return false;\n    };\nexports.some = some;\n\n\n/**\n * Call f for each element of an array. If all calls return true, every()\n * returns true. If any call returns false, every() returns false and\n * does not continue to check the remaining elements.\n *\n * See {@link http://tinyurl.com/developer-mozilla-org-array-every}\n *\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call for\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a boolean.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within f.\n * @return {boolean} false if any element fails the test.\n * @template T,S\n */\nconst every = goog.NATIVE_ARRAY_PROTOTYPES &&\n        (ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ?\n    function(arr, f, opt_obj) {\n      asserts.assert(arr.length != null);\n\n      return Array.prototype.every.call(arr, f, opt_obj);\n    } :\n    function(arr, f, opt_obj) {\n      const l = arr.length;  // must be fixed during loop... see docs\n      const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n      for (let i = 0; i < l; i++) {\n        if (i in arr2 && !f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n          return false;\n        }\n      }\n      return true;\n    };\nexports.every = every;\n\n\n/**\n * Counts the array elements that fulfill the predicate, i.e. for which the\n * callback function returns true. Skips holes in the array.\n *\n * @param {!IArrayLike<T>|string} arr Array or array like object\n *     over which to iterate.\n * @param {function(this: S, T, number, ?): boolean} f The function to call for\n *     every element. Takes 3 arguments (the element, the index and the array).\n * @param {S=} opt_obj The object to be used as the value of 'this' within f.\n * @return {number} The number of the matching elements.\n * @template T,S\n */\nfunction count(arr, f, opt_obj) {\n  let count = 0;\n  forEach(arr, function(element, index, arr) {\n    if (f.call(/** @type {?} */ (opt_obj), element, index, arr)) {\n      ++count;\n    }\n  }, opt_obj);\n  return count;\n}\nexports.count = count;\n\n\n/**\n * Search an array for the first element that satisfies a given condition and\n * return that element.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {T|null} The first array element that passes the test, or null if no\n *     element is found.\n * @template T,S\n */\nfunction find(arr, f, opt_obj) {\n  const i = findIndex(arr, f, opt_obj);\n  return i < 0 ? null : typeof arr === 'string' ? arr.charAt(i) : arr[i];\n}\nexports.find = find;\n\n\n/**\n * Search an array for the first element that satisfies a given condition and\n * return its index.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call for\n *     every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {number} The index of the first array element that passes the test,\n *     or -1 if no element is found.\n * @template T,S\n */\nfunction findIndex(arr, f, opt_obj) {\n  const l = arr.length;  // must be fixed during loop... see docs\n  const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n  for (let i = 0; i < l; i++) {\n    if (i in arr2 && f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n      return i;\n    }\n  }\n  return -1;\n}\nexports.findIndex = findIndex;\n\n\n/**\n * Search an array (in reverse order) for the last element that satisfies a\n * given condition and return that element.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {T|null} The last array element that passes the test, or null if no\n *     element is found.\n * @template T,S\n */\nfunction findRight(arr, f, opt_obj) {\n  const i = findIndexRight(arr, f, opt_obj);\n  return i < 0 ? null : typeof arr === 'string' ? arr.charAt(i) : arr[i];\n}\nexports.findRight = findRight;\n\n\n/**\n * Search an array (in reverse order) for the last element that satisfies a\n * given condition and return its index.\n * @param {IArrayLike<T>|string} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {number} The index of the last array element that passes the test,\n *     or -1 if no element is found.\n * @template T,S\n */\nfunction findIndexRight(arr, f, opt_obj) {\n  const l = arr.length;  // must be fixed during loop... see docs\n  const arr2 = (typeof arr === 'string') ? arr.split('') : arr;\n  for (let i = l - 1; i >= 0; i--) {\n    if (i in arr2 && f.call(/** @type {?} */ (opt_obj), arr2[i], i, arr)) {\n      return i;\n    }\n  }\n  return -1;\n}\nexports.findIndexRight = findIndexRight;\n\n\n/**\n * Whether the array contains the given object.\n * @param {IArrayLike<?>|string} arr The array to test for the presence of the\n *     element.\n * @param {*} obj The object for which to test.\n * @return {boolean} true if obj is present.\n */\nfunction contains(arr, obj) {\n  return indexOf(arr, obj) >= 0;\n}\nexports.contains = contains;\n\n\n/**\n * Whether the array is empty.\n * @param {IArrayLike<?>|string} arr The array to test.\n * @return {boolean} true if empty.\n */\nfunction isEmpty(arr) {\n  return arr.length == 0;\n}\nexports.isEmpty = isEmpty;\n\n\n/**\n * Clears the array.\n * @param {IArrayLike<?>} arr Array or array like object to clear.\n */\nfunction clear(arr) {\n  // For non real arrays we don't have the magic length so we delete the\n  // indices.\n  if (!Array.isArray(arr)) {\n    for (let i = arr.length - 1; i >= 0; i--) {\n      delete arr[i];\n    }\n  }\n  arr.length = 0;\n}\nexports.clear = clear;\n\n\n/**\n * Pushes an item into an array, if it's not already in the array.\n * @param {Array<T>} arr Array into which to insert the item.\n * @param {T} obj Value to add.\n * @template T\n */\nfunction insert(arr, obj) {\n  if (!contains(arr, obj)) {\n    arr.push(obj);\n  }\n}\nexports.insert = insert;\n\n\n/**\n * Inserts an object at the given index of the array.\n * @param {IArrayLike<?>} arr The array to modify.\n * @param {*} obj The object to insert.\n * @param {number=} opt_i The index at which to insert the object. If omitted,\n *      treated as 0. A negative index is counted from the end of the array.\n */\nfunction insertAt(arr, obj, opt_i) {\n  splice(arr, opt_i, 0, obj);\n}\nexports.insertAt = insertAt;\n\n\n/**\n * Inserts at the given index of the array, all elements of another array.\n * @param {IArrayLike<?>} arr The array to modify.\n * @param {IArrayLike<?>} elementsToAdd The array of elements to add.\n * @param {number=} opt_i The index at which to insert the object. If omitted,\n *      treated as 0. A negative index is counted from the end of the array.\n */\nfunction insertArrayAt(arr, elementsToAdd, opt_i) {\n  goog.partial(splice, arr, opt_i, 0).apply(null, elementsToAdd);\n}\nexports.insertArrayAt = insertArrayAt;\n\n\n/**\n * Inserts an object into an array before a specified object.\n * @param {Array<T>} arr The array to modify.\n * @param {T} obj The object to insert.\n * @param {T=} opt_obj2 The object before which obj should be inserted. If obj2\n *     is omitted or not found, obj is inserted at the end of the array.\n * @template T\n */\nfunction insertBefore(arr, obj, opt_obj2) {\n  let i;\n  if (arguments.length == 2 || (i = indexOf(arr, opt_obj2)) < 0) {\n    arr.push(obj);\n  } else {\n    insertAt(arr, obj, i);\n  }\n}\nexports.insertBefore = insertBefore;\n\n\n/**\n * Removes the first occurrence of a particular value from an array.\n * @param {IArrayLike<T>} arr Array from which to remove\n *     value.\n * @param {T} obj Object to remove.\n * @return {boolean} True if an element was removed.\n * @template T\n */\nfunction remove(arr, obj) {\n  const i = indexOf(arr, obj);\n  let rv;\n  if ((rv = i >= 0)) {\n    removeAt(arr, i);\n  }\n  return rv;\n}\nexports.remove = remove;\n\n\n/**\n * Removes the last occurrence of a particular value from an array.\n * @param {!IArrayLike<T>} arr Array from which to remove value.\n * @param {T} obj Object to remove.\n * @return {boolean} True if an element was removed.\n * @template T\n */\nfunction removeLast(arr, obj) {\n  const i = lastIndexOf(arr, obj);\n  if (i >= 0) {\n    removeAt(arr, i);\n    return true;\n  }\n  return false;\n}\nexports.removeLast = removeLast;\n\n\n/**\n * Removes from an array the element at index i\n * @param {IArrayLike<?>} arr Array or array like object from which to\n *     remove value.\n * @param {number} i The index to remove.\n * @return {boolean} True if an element was removed.\n */\nfunction removeAt(arr, i) {\n  asserts.assert(arr.length != null);\n\n  // use generic form of splice\n  // splice returns the removed items and if successful the length of that\n  // will be 1\n  return Array.prototype.splice.call(arr, i, 1).length == 1;\n}\nexports.removeAt = removeAt;\n\n\n/**\n * Removes the first value that satisfies the given condition.\n * @param {IArrayLike<T>} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {boolean} True if an element was removed.\n * @template T,S\n */\nfunction removeIf(arr, f, opt_obj) {\n  const i = findIndex(arr, f, opt_obj);\n  if (i >= 0) {\n    removeAt(arr, i);\n    return true;\n  }\n  return false;\n}\nexports.removeIf = removeIf;\n\n\n/**\n * Removes all values that satisfy the given condition.\n * @param {IArrayLike<T>} arr Array or array\n *     like object over which to iterate.\n * @param {?function(this:S, T, number, ?) : boolean} f The function to call\n *     for every element. This function\n *     takes 3 arguments (the element, the index and the array) and should\n *     return a boolean.\n * @param {S=} opt_obj An optional \"this\" context for the function.\n * @return {number} The number of items removed\n * @template T,S\n */\nfunction removeAllIf(arr, f, opt_obj) {\n  let removedCount = 0;\n  forEachRight(arr, function(val, index) {\n    if (f.call(/** @type {?} */ (opt_obj), val, index, arr)) {\n      if (removeAt(arr, index)) {\n        removedCount++;\n      }\n    }\n  });\n  return removedCount;\n}\nexports.removeAllIf = removeAllIf;\n\n\n/**\n * Returns a new array that is the result of joining the arguments.  If arrays\n * are passed then their items are added, however, if non-arrays are passed they\n * will be added to the return array as is.\n *\n * Note that ArrayLike objects will be added as is, rather than having their\n * items added.\n *\n * concat([1, 2], [3, 4]) -> [1, 2, 3, 4]\n * concat(0, [1, 2]) -> [0, 1, 2]\n * concat([1, 2], null) -> [1, 2, null]\n *\n * There is bug in all current versions of IE (6, 7 and 8) where arrays created\n * in an iframe become corrupted soon (not immediately) after the iframe is\n * destroyed. This is common if loading data via goog.net.IframeIo, for example.\n * This corruption only affects the concat method which will start throwing\n * Catastrophic Errors (#-2147418113).\n *\n * See http://endoflow.com/scratch/corrupted-arrays.html for a test case.\n *\n * Internally goog.array should use this, so that all methods will continue to\n * work on these broken array objects.\n *\n * @param {...*} var_args Items to concatenate.  Arrays will have each item\n *     added, while primitives and objects will be added as is.\n * @return {!Array<?>} The new resultant array.\n */\nfunction concat(var_args) {\n  return Array.prototype.concat.apply([], arguments);\n}\nexports.concat = concat;\n\n\n/**\n * Returns a new array that contains the contents of all the arrays passed.\n * @param {...!Array<T>} var_args\n * @return {!Array<T>}\n * @template T\n */\nfunction join(var_args) {\n  return Array.prototype.concat.apply([], arguments);\n}\nexports.join = join;\n\n\n/**\n * Converts an object to an array.\n * @param {IArrayLike<T>|string} object  The object to convert to an\n *     array.\n * @return {!Array<T>} The object converted into an array. If object has a\n *     length property, every property indexed with a non-negative number\n *     less than length will be included in the result. If object does not\n *     have a length property, an empty array will be returned.\n * @template T\n */\nfunction toArray(object) {\n  const length = object.length;\n\n  // If length is not a number the following is false. This case is kept for\n  // backwards compatibility since there are callers that pass objects that are\n  // not array like.\n  if (length > 0) {\n    const rv = new Array(length);\n    for (let i = 0; i < length; i++) {\n      rv[i] = object[i];\n    }\n    return rv;\n  }\n  return [];\n}\nexports.toArray = toArray;\n\n\n/**\n * Does a shallow copy of an array.\n * @param {IArrayLike<T>|string} arr  Array or array-like object to\n *     clone.\n * @return {!Array<T>} Clone of the input array.\n * @template T\n */\nconst clone = toArray;\nexports.clone = clone;\n\n\n/**\n * Extends an array with another array, element, or \"array like\" object.\n * This function operates 'in-place', it does not create a new Array.\n *\n * Example:\n * var a = [];\n * extend(a, [0, 1]);\n * a; // [0, 1]\n * extend(a, 2);\n * a; // [0, 1, 2]\n *\n * @param {Array<VALUE>} arr1  The array to modify.\n * @param {...(IArrayLike<VALUE>|VALUE)} var_args The elements or arrays of\n *     elements to add to arr1.\n * @template VALUE\n */\nfunction extend(arr1, var_args) {\n  for (let i = 1; i < arguments.length; i++) {\n    const arr2 = arguments[i];\n    if (goog.isArrayLike(arr2)) {\n      const len1 = arr1.length || 0;\n      const len2 = arr2.length || 0;\n      arr1.length = len1 + len2;\n      for (let j = 0; j < len2; j++) {\n        arr1[len1 + j] = arr2[j];\n      }\n    } else {\n      arr1.push(arr2);\n    }\n  }\n}\nexports.extend = extend;\n\n\n/**\n * Adds or removes elements from an array. This is a generic version of Array\n * splice. This means that it might work on other objects similar to arrays,\n * such as the arguments object.\n *\n * @param {IArrayLike<T>} arr The array to modify.\n * @param {number|undefined} index The index at which to start changing the\n *     array. If not defined, treated as 0.\n * @param {number} howMany How many elements to remove (0 means no removal. A\n *     value below 0 is treated as zero and so is any other non number. Numbers\n *     are floored).\n * @param {...T} var_args Optional, additional elements to insert into the\n *     array.\n * @return {!Array<T>} the removed elements.\n * @template T\n */\nfunction splice(arr, index, howMany, var_args) {\n  asserts.assert(arr.length != null);\n\n  return Array.prototype.splice.apply(arr, slice(arguments, 1));\n}\nexports.splice = splice;\n\n\n/**\n * Returns a new array from a segment of an array. This is a generic version of\n * Array slice. This means that it might work on other objects similar to\n * arrays, such as the arguments object.\n *\n * @param {IArrayLike<T>|string} arr The array from\n * which to copy a segment.\n * @param {number} start The index of the first element to copy.\n * @param {number=} opt_end The index after the last element to copy.\n * @return {!Array<T>} A new array containing the specified segment of the\n *     original array.\n * @template T\n */\nfunction slice(arr, start, opt_end) {\n  asserts.assert(arr.length != null);\n\n  // passing 1 arg to slice is not the same as passing 2 where the second is\n  // null or undefined (in that case the second argument is treated as 0).\n  // we could use slice on the arguments object and then use apply instead of\n  // testing the length\n  if (arguments.length <= 2) {\n    return Array.prototype.slice.call(arr, start);\n  } else {\n    return Array.prototype.slice.call(arr, start, opt_end);\n  }\n}\nexports.slice = slice;\n\n\n/**\n * Removes all duplicates from an array (retaining only the first\n * occurrence of each array element).  This function modifies the\n * array in place and doesn't change the order of the non-duplicate items.\n *\n * For objects, duplicates are identified as having the same unique ID as\n * defined by {@link goog.getUid}.\n *\n * Alternatively you can specify a custom hash function that returns a unique\n * value for each item in the array it should consider unique.\n *\n * Runtime: N,\n * Worstcase space: 2N (no dupes)\n *\n * @param {IArrayLike<T>} arr The array from which to remove\n *     duplicates.\n * @param {Array=} opt_rv An optional array in which to return the results,\n *     instead of performing the removal inplace.  If specified, the original\n *     array will remain unchanged.\n * @param {function(T):string=} opt_hashFn An optional function to use to\n *     apply to every item in the array. This function should return a unique\n *     value for each item in the array it should consider unique.\n * @template T\n */\nfunction removeDuplicates(arr, opt_rv, opt_hashFn) {\n  const returnArray = opt_rv || arr;\n  const defaultHashFn = function(item) {\n    // Prefix each type with a single character representing the type to\n    // prevent conflicting keys (e.g. true and 'true').\n    return goog.isObject(item) ? 'o' + goog.getUid(item) :\n                                 (typeof item).charAt(0) + item;\n  };\n  const hashFn = opt_hashFn || defaultHashFn;\n\n  let cursorInsert = 0;\n  let cursorRead = 0;\n  const seen = {};\n\n  while (cursorRead < arr.length) {\n    const current = arr[cursorRead++];\n    const key = hashFn(current);\n    if (!Object.prototype.hasOwnProperty.call(seen, key)) {\n      seen[key] = true;\n      returnArray[cursorInsert++] = current;\n    }\n  }\n  returnArray.length = cursorInsert;\n}\nexports.removeDuplicates = removeDuplicates;\n\n\n/**\n * Searches the specified array for the specified target using the binary\n * search algorithm.  If no opt_compareFn is specified, elements are compared\n * using <code>defaultCompare</code>, which compares the elements\n * using the built in < and > operators.  This will produce the expected\n * behavior for homogeneous arrays of String(s) and Number(s). The array\n * specified <b>must</b> be sorted in ascending order (as defined by the\n * comparison function).  If the array is not sorted, results are undefined.\n * If the array contains multiple instances of the specified target value, the\n * left-most instance will be found.\n *\n * Runtime: O(log n)\n *\n * @param {IArrayLike<VALUE>} arr The array to be searched.\n * @param {TARGET} target The sought value.\n * @param {function(TARGET, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is ordered. Should take 2 arguments to\n *     compare, the target value and an element from your array, and return a\n *     negative number, zero, or a positive number depending on whether the\n *     first argument is less than, equal to, or greater than the second.\n * @return {number} Lowest index of the target value if found, otherwise\n *     (-(insertion point) - 1). The insertion point is where the value should\n *     be inserted into arr to preserve the sorted property.  Return value >= 0\n *     iff target is found.\n * @template TARGET, VALUE\n */\nfunction binarySearch(arr, target, opt_compareFn) {\n  return binarySearch_(\n      arr, opt_compareFn || defaultCompare, false /* isEvaluator */, target);\n}\nexports.binarySearch = binarySearch;\n\n\n/**\n * Selects an index in the specified array using the binary search algorithm.\n * The evaluator receives an element and determines whether the desired index\n * is before, at, or after it.  The evaluator must be consistent (formally,\n * map(map(arr, evaluator, opt_obj), goog.math.sign)\n * must be monotonically non-increasing).\n *\n * Runtime: O(log n)\n *\n * @param {IArrayLike<VALUE>} arr The array to be searched.\n * @param {function(this:THIS, VALUE, number, ?): number} evaluator\n *     Evaluator function that receives 3 arguments (the element, the index and\n *     the array). Should return a negative number, zero, or a positive number\n *     depending on whether the desired index is before, at, or after the\n *     element passed to it.\n * @param {THIS=} opt_obj The object to be used as the value of 'this'\n *     within evaluator.\n * @return {number} Index of the leftmost element matched by the evaluator, if\n *     such exists; otherwise (-(insertion point) - 1). The insertion point is\n *     the index of the first element for which the evaluator returns negative,\n *     or arr.length if no such element exists. The return value is non-negative\n *     iff a match is found.\n * @template THIS, VALUE\n */\nfunction binarySelect(arr, evaluator, opt_obj) {\n  return binarySearch_(\n      arr, evaluator, true /* isEvaluator */, undefined /* opt_target */,\n      opt_obj);\n}\nexports.binarySelect = binarySelect;\n\n\n/**\n * Implementation of a binary search algorithm which knows how to use both\n * comparison functions and evaluators. If an evaluator is provided, will call\n * the evaluator with the given optional data object, conforming to the\n * interface defined in binarySelect. Otherwise, if a comparison function is\n * provided, will call the comparison function against the given data object.\n *\n * This implementation purposefully does not use goog.bind or goog.partial for\n * performance reasons.\n *\n * Runtime: O(log n)\n *\n * @param {IArrayLike<?>} arr The array to be searched.\n * @param {function(?, ?, ?): number | function(?, ?): number} compareFn\n *     Either an evaluator or a comparison function, as defined by binarySearch\n *     and binarySelect above.\n * @param {boolean} isEvaluator Whether the function is an evaluator or a\n *     comparison function.\n * @param {?=} opt_target If the function is a comparison function, then\n *     this is the target to binary search for.\n * @param {Object=} opt_selfObj If the function is an evaluator, this is an\n *     optional this object for the evaluator.\n * @return {number} Lowest index of the target value if found, otherwise\n *     (-(insertion point) - 1). The insertion point is where the value should\n *     be inserted into arr to preserve the sorted property.  Return value >= 0\n *     iff target is found.\n * @private\n */\nfunction binarySearch_(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {\n  let left = 0;            // inclusive\n  let right = arr.length;  // exclusive\n  let found;\n  while (left < right) {\n    const middle = left + ((right - left) >>> 1);\n    let compareResult;\n    if (isEvaluator) {\n      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);\n    } else {\n      // NOTE(dimvar): To avoid this cast, we'd have to use function overloading\n      // for the type of binarySearch_, which the type system can't express yet.\n      compareResult = /** @type {function(?, ?): number} */ (compareFn)(\n          opt_target, arr[middle]);\n    }\n    if (compareResult > 0) {\n      left = middle + 1;\n    } else {\n      right = middle;\n      // We are looking for the lowest index so we can't return immediately.\n      found = !compareResult;\n    }\n  }\n  // left is the index if found, or the insertion point otherwise.\n  // Avoiding bitwise not operator, as that causes a loss in precision for array\n  // indexes outside the bounds of a 32-bit signed integer.  Array indexes have\n  // a maximum value of 2^32-2 https://tc39.es/ecma262/#array-index\n  return found ? left : -left - 1;\n}\n\n\n/**\n * Sorts the specified array into ascending order.  If no opt_compareFn is\n * specified, elements are compared using\n * <code>defaultCompare</code>, which compares the elements using\n * the built in < and > operators.  This will produce the expected behavior\n * for homogeneous arrays of String(s) and Number(s), unlike the native sort,\n * but will give unpredictable results for heterogeneous lists of strings and\n * numbers with different numbers of digits.\n *\n * This sort is not guaranteed to be stable.\n *\n * Runtime: Same as `Array.prototype.sort`\n *\n * @param {Array<T>} arr The array to be sorted.\n * @param {?function(T,T):number=} opt_compareFn Optional comparison\n *     function by which the\n *     array is to be ordered. Should take 2 arguments to compare, and return a\n *     negative number, zero, or a positive number depending on whether the\n *     first argument is less than, equal to, or greater than the second.\n * @template T\n */\nfunction sort(arr, opt_compareFn) {\n  // TODO(arv): Update type annotation since null is not accepted.\n  arr.sort(opt_compareFn || defaultCompare);\n}\nexports.sort = sort;\n\n\n/**\n * Sorts the specified array into ascending order in a stable way.  If no\n * opt_compareFn is specified, elements are compared using\n * <code>defaultCompare</code>, which compares the elements using\n * the built in < and > operators.  This will produce the expected behavior\n * for homogeneous arrays of String(s) and Number(s).\n *\n * Runtime: Same as `Array.prototype.sort`, plus an additional\n * O(n) overhead of copying the array twice.\n *\n * @param {Array<T>} arr The array to be sorted.\n * @param {?function(T, T): number=} opt_compareFn Optional comparison function\n *     by which the array is to be ordered. Should take 2 arguments to compare,\n *     and return a negative number, zero, or a positive number depending on\n *     whether the first argument is less than, equal to, or greater than the\n *     second.\n * @template T\n */\nfunction stableSort(arr, opt_compareFn) {\n  const compArr = new Array(arr.length);\n  for (let i = 0; i < arr.length; i++) {\n    compArr[i] = {index: i, value: arr[i]};\n  }\n  const valueCompareFn = opt_compareFn || defaultCompare;\n  function stableCompareFn(obj1, obj2) {\n    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;\n  }\n  sort(compArr, stableCompareFn);\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = compArr[i].value;\n  }\n}\nexports.stableSort = stableSort;\n\n\n/**\n * Sort the specified array into ascending order based on item keys\n * returned by the specified key function.\n * If no opt_compareFn is specified, the keys are compared in ascending order\n * using <code>defaultCompare</code>.\n *\n * Runtime: O(S(f(n)), where S is runtime of <code>sort</code>\n * and f(n) is runtime of the key function.\n *\n * @param {Array<T>} arr The array to be sorted.\n * @param {function(T): K} keyFn Function taking array element and returning\n *     a key used for sorting this element.\n * @param {?function(K, K): number=} opt_compareFn Optional comparison function\n *     by which the keys are to be ordered. Should take 2 arguments to compare,\n *     and return a negative number, zero, or a positive number depending on\n *     whether the first argument is less than, equal to, or greater than the\n *     second.\n * @template T,K\n */\nfunction sortByKey(arr, keyFn, opt_compareFn) {\n  const keyCompareFn = opt_compareFn || defaultCompare;\n  sort(arr, function(a, b) {\n    return keyCompareFn(keyFn(a), keyFn(b));\n  });\n}\nexports.sortByKey = sortByKey;\n\n\n/**\n * Sorts an array of objects by the specified object key and compare\n * function. If no compare function is provided, the key values are\n * compared in ascending order using <code>defaultCompare</code>.\n * This won't work for keys that get renamed by the compiler. So use\n * {'foo': 1, 'bar': 2} rather than {foo: 1, bar: 2}.\n * @param {Array<Object>} arr An array of objects to sort.\n * @param {string} key The object key to sort by.\n * @param {Function=} opt_compareFn The function to use to compare key\n *     values.\n */\nfunction sortObjectsByKey(arr, key, opt_compareFn) {\n  sortByKey(arr, function(obj) {\n    return obj[key];\n  }, opt_compareFn);\n}\nexports.sortObjectsByKey = sortObjectsByKey;\n\n\n/**\n * Tells if the array is sorted.\n * @param {!IArrayLike<T>} arr The array.\n * @param {?function(T,T):number=} opt_compareFn Function to compare the\n *     array elements.\n *     Should take 2 arguments to compare, and return a negative number, zero,\n *     or a positive number depending on whether the first argument is less\n *     than, equal to, or greater than the second.\n * @param {boolean=} opt_strict If true no equal elements are allowed.\n * @return {boolean} Whether the array is sorted.\n * @template T\n */\nfunction isSorted(arr, opt_compareFn, opt_strict) {\n  const compare = opt_compareFn || defaultCompare;\n  for (let i = 1; i < arr.length; i++) {\n    const compareResult = compare(arr[i - 1], arr[i]);\n    if (compareResult > 0 || compareResult == 0 && opt_strict) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.isSorted = isSorted;\n\n\n/**\n * Compares two arrays for equality. Two arrays are considered equal if they\n * have the same length and their corresponding elements are equal according to\n * the comparison function.\n *\n * @param {IArrayLike<A>} arr1 The first array to compare.\n * @param {IArrayLike<B>} arr2 The second array to compare.\n * @param {?function(A,B):boolean=} opt_equalsFn Optional comparison function.\n *     Should take 2 arguments to compare, and return true if the arguments\n *     are equal. Defaults to {@link goog.array.defaultCompareEquality} which\n *     compares the elements using the built-in '===' operator.\n * @return {boolean} Whether the two arrays are equal.\n * @template A\n * @template B\n */\nfunction equals(arr1, arr2, opt_equalsFn) {\n  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) ||\n      arr1.length != arr2.length) {\n    return false;\n  }\n  const l = arr1.length;\n  const equalsFn = opt_equalsFn || defaultCompareEquality;\n  for (let i = 0; i < l; i++) {\n    if (!equalsFn(arr1[i], arr2[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nexports.equals = equals;\n\n\n/**\n * 3-way array compare function.\n * @param {!IArrayLike<VALUE>} arr1 The first array to\n *     compare.\n * @param {!IArrayLike<VALUE>} arr2 The second array to\n *     compare.\n * @param {function(VALUE, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is to be ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {number} Negative number, zero, or a positive number depending on\n *     whether the first argument is less than, equal to, or greater than the\n *     second.\n * @template VALUE\n */\nfunction compare3(arr1, arr2, opt_compareFn) {\n  const compare = opt_compareFn || defaultCompare;\n  const l = Math.min(arr1.length, arr2.length);\n  for (let i = 0; i < l; i++) {\n    const result = compare(arr1[i], arr2[i]);\n    if (result != 0) {\n      return result;\n    }\n  }\n  return defaultCompare(arr1.length, arr2.length);\n}\nexports.compare3 = compare3;\n\n\n/**\n * Compares its two arguments for order, using the built in < and >\n * operators.\n * @param {VALUE} a The first object to be compared.\n * @param {VALUE} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second,\n *     respectively.\n * @template VALUE\n */\nfunction defaultCompare(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\nexports.defaultCompare = defaultCompare;\n\n\n/**\n * Compares its two arguments for inverse order, using the built in < and >\n * operators.\n * @param {VALUE} a The first object to be compared.\n * @param {VALUE} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second,\n *     respectively.\n * @template VALUE\n */\nfunction inverseDefaultCompare(a, b) {\n  return -defaultCompare(a, b);\n}\nexports.inverseDefaultCompare = inverseDefaultCompare;\n\n\n/**\n * Compares its two arguments for equality, using the built in === operator.\n * @param {*} a The first object to compare.\n * @param {*} b The second object to compare.\n * @return {boolean} True if the two arguments are equal, false otherwise.\n */\nfunction defaultCompareEquality(a, b) {\n  return a === b;\n}\nexports.defaultCompareEquality = defaultCompareEquality;\n\n\n/**\n * Inserts a value into a sorted array. The array is not modified if the\n * value is already present.\n * @param {IArrayLike<VALUE>} array The array to modify.\n * @param {VALUE} value The object to insert.\n * @param {function(VALUE, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {boolean} True if an element was inserted.\n * @template VALUE\n */\nfunction binaryInsert(array, value, opt_compareFn) {\n  const index = binarySearch(array, value, opt_compareFn);\n  if (index < 0) {\n    insertAt(array, value, -(index + 1));\n    return true;\n  }\n  return false;\n}\nexports.binaryInsert = binaryInsert;\n\n\n/**\n * Removes a value from a sorted array.\n * @param {!IArrayLike<VALUE>} array The array to modify.\n * @param {VALUE} value The object to remove.\n * @param {function(VALUE, VALUE): number=} opt_compareFn Optional comparison\n *     function by which the array is ordered. Should take 2 arguments to\n *     compare, and return a negative number, zero, or a positive number\n *     depending on whether the first argument is less than, equal to, or\n *     greater than the second.\n * @return {boolean} True if an element was removed.\n * @template VALUE\n */\nfunction binaryRemove(array, value, opt_compareFn) {\n  const index = binarySearch(array, value, opt_compareFn);\n  return (index >= 0) ? removeAt(array, index) : false;\n}\nexports.binaryRemove = binaryRemove;\n\n\n/**\n * Splits an array into disjoint buckets according to a splitting function.\n * @param {IArrayLike<T>} array The array.\n * @param {function(this:S, T, number, !IArrayLike<T>):?} sorter Function to\n *     call for every element.  This takes 3 arguments (the element, the index\n *     and the array) and must return a valid object key (a string, number,\n *     etc), or undefined, if that object should not be placed in a bucket.\n * @param {S=} opt_obj The object to be used as the value of 'this' within\n *     sorter.\n * @return {!Object<!Array<T>>} An object, with keys being all of the unique\n *     return values of sorter, and values being arrays containing the items for\n *     which the splitter returned that key.\n * @template T,S\n */\nfunction bucket(array, sorter, opt_obj) {\n  const buckets = {};\n\n  for (let i = 0; i < array.length; i++) {\n    const value = array[i];\n    const key = sorter.call(/** @type {?} */ (opt_obj), value, i, array);\n    if (key !== undefined) {\n      // Push the value to the right bucket, creating it if necessary.\n      const bucket = buckets[key] || (buckets[key] = []);\n      bucket.push(value);\n    }\n  }\n\n  return buckets;\n}\nexports.bucket = bucket;\n\n\n/**\n * Splits an array into disjoint buckets according to a splitting function.\n * @param {!IArrayLike<V>} array The array.\n * @param {function(V, number, !IArrayLike<V>):(K|undefined)} sorter Function to\n *     call for every element.  This takes 3 arguments (the element, the index,\n *     and the array) and must return a value to use as a key, or undefined, if\n *     that object should not be placed in a bucket.\n * @return {!Map<K, !Array<V>>} A map, with keys being all of the unique\n *     return values of sorter, and values being arrays containing the items for\n *     which the splitter returned that key.\n * @template K,V\n */\nfunction bucketToMap(array, sorter) {\n  const /** !Map<K, !Array<V>> */ buckets = new Map();\n\n  for (let i = 0; i < array.length; i++) {\n    const value = array[i];\n    const key = sorter(value, i, array);\n    if (key !== undefined) {\n      // Push the value to the right bucket, creating it if necessary.\n      let bucket = buckets.get(key);\n      if (!bucket) {\n        bucket = [];\n        buckets.set(key, bucket);\n      }\n      bucket.push(value);\n    }\n  }\n\n  return buckets;\n}\nexports.bucketToMap = bucketToMap;\n\n\n/**\n * Creates a new object built from the provided array and the key-generation\n * function.\n * @param {IArrayLike<T>} arr Array or array like object over\n *     which to iterate whose elements will be the values in the new object.\n * @param {?function(this:S, T, number, ?) : string} keyFunc The function to\n *     call for every element. This function takes 3 arguments (the element, the\n *     index and the array) and should return a string that will be used as the\n *     key for the element in the new object. If the function returns the same\n *     key for more than one element, the value for that key is\n *     implementation-defined.\n * @param {S=} opt_obj The object to be used as the value of 'this'\n *     within keyFunc.\n * @return {!Object<T>} The new object.\n * @template T,S\n */\nfunction toObject(arr, keyFunc, opt_obj) {\n  const ret = {};\n  forEach(arr, function(element, index) {\n    ret[keyFunc.call(/** @type {?} */ (opt_obj), element, index, arr)] =\n        element;\n  });\n  return ret;\n}\nexports.toObject = toObject;\n\n\n/**\n * Creates a new ES6 Map built from the provided array and the key-generation\n * function.\n * @param {!IArrayLike<V>} arr Array or array like object over which to iterate\n *     whose elements will be the values in the new object.\n * @param {?function(V, number, ?) : K} keyFunc The function to call for every\n *     element. This function takes 3 arguments (the element, the index, and the\n *     array) and should return a value that will be used as the key for the\n *     element in the new object. If the function returns the same key for more\n *     than one element, the value for that key is implementation-defined.\n * @return {!Map<K, V>} The new map.\n * @template K,V\n */\nfunction toMap(arr, keyFunc) {\n  const /** !Map<K, V> */ map = new Map();\n\n  for (let i = 0; i < arr.length; i++) {\n    const element = arr[i];\n    map.set(keyFunc(element, i, arr), element);\n  }\n\n  return map;\n}\nexports.toMap = toMap;\n\n\n/**\n * Creates a range of numbers in an arithmetic progression.\n *\n * Range takes 1, 2, or 3 arguments:\n * <pre>\n * range(5) is the same as range(0, 5, 1) and produces [0, 1, 2, 3, 4]\n * range(2, 5) is the same as range(2, 5, 1) and produces [2, 3, 4]\n * range(-2, -5, -1) produces [-2, -3, -4]\n * range(-2, -5, 1) produces [], since stepping by 1 wouldn't ever reach -5.\n * </pre>\n *\n * @param {number} startOrEnd The starting value of the range if an end argument\n *     is provided. Otherwise, the start value is 0, and this is the end value.\n * @param {number=} opt_end The optional end value of the range.\n * @param {number=} opt_step The step size between range values. Defaults to 1\n *     if opt_step is undefined or 0.\n * @return {!Array<number>} An array of numbers for the requested range. May be\n *     an empty array if adding the step would not converge toward the end\n *     value.\n */\nfunction range(startOrEnd, opt_end, opt_step) {\n  const array = [];\n  let start = 0;\n  let end = startOrEnd;\n  const step = opt_step || 1;\n  if (opt_end !== undefined) {\n    start = startOrEnd;\n    end = opt_end;\n  }\n\n  if (step * (end - start) < 0) {\n    // Sign mismatch: start + step will never reach the end value.\n    return [];\n  }\n\n  if (step > 0) {\n    for (let i = start; i < end; i += step) {\n      array.push(i);\n    }\n  } else {\n    for (let i = start; i > end; i += step) {\n      array.push(i);\n    }\n  }\n  return array;\n}\nexports.range = range;\n\n\n/**\n * Returns an array consisting of the given value repeated N times.\n *\n * @param {VALUE} value The value to repeat.\n * @param {number} n The repeat count.\n * @return {!Array<VALUE>} An array with the repeated value.\n * @template VALUE\n */\nfunction repeat(value, n) {\n  const array = [];\n  for (let i = 0; i < n; i++) {\n    array[i] = value;\n  }\n  return array;\n}\nexports.repeat = repeat;\n\n\n/**\n * Returns an array consisting of every argument with all arrays\n * expanded in-place recursively.\n *\n * @param {...*} var_args The values to flatten.\n * @return {!Array<?>} An array containing the flattened values.\n */\nfunction flatten(var_args) {\n  const CHUNK_SIZE = 8192;\n\n  const result = [];\n  for (let i = 0; i < arguments.length; i++) {\n    const element = arguments[i];\n    if (Array.isArray(element)) {\n      for (let c = 0; c < element.length; c += CHUNK_SIZE) {\n        const chunk = slice(element, c, c + CHUNK_SIZE);\n        const recurseResult = flatten.apply(null, chunk);\n        for (let r = 0; r < recurseResult.length; r++) {\n          result.push(recurseResult[r]);\n        }\n      }\n    } else {\n      result.push(element);\n    }\n  }\n  return result;\n}\nexports.flatten = flatten;\n\n\n/**\n * Rotates an array in-place. After calling this method, the element at\n * index i will be the element previously at index (i - n) %\n * array.length, for all values of i between 0 and array.length - 1,\n * inclusive.\n *\n * For example, suppose list comprises [t, a, n, k, s]. After invoking\n * rotate(array, 1) (or rotate(array, -4)), array will comprise [s, t, a, n, k].\n *\n * @param {!Array<T>} array The array to rotate.\n * @param {number} n The amount to rotate.\n * @return {!Array<T>} The array.\n * @template T\n */\nfunction rotate(array, n) {\n  asserts.assert(array.length != null);\n\n  if (array.length) {\n    n %= array.length;\n    if (n > 0) {\n      Array.prototype.unshift.apply(array, array.splice(-n, n));\n    } else if (n < 0) {\n      Array.prototype.push.apply(array, array.splice(0, -n));\n    }\n  }\n  return array;\n}\nexports.rotate = rotate;\n\n\n/**\n * Moves one item of an array to a new position keeping the order of the rest\n * of the items. Example use case: keeping a list of JavaScript objects\n * synchronized with the corresponding list of DOM elements after one of the\n * elements has been dragged to a new position.\n * @param {!IArrayLike<?>} arr The array to modify.\n * @param {number} fromIndex Index of the item to move between 0 and\n *     `arr.length - 1`.\n * @param {number} toIndex Target index between 0 and `arr.length - 1`.\n */\nfunction moveItem(arr, fromIndex, toIndex) {\n  asserts.assert(fromIndex >= 0 && fromIndex < arr.length);\n  asserts.assert(toIndex >= 0 && toIndex < arr.length);\n  // Remove 1 item at fromIndex.\n  const removedItems = Array.prototype.splice.call(arr, fromIndex, 1);\n  // Insert the removed item at toIndex.\n  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);\n  // We don't use goog.array.insertAt and goog.array.removeAt, because they're\n  // significantly slower than splice.\n}\nexports.moveItem = moveItem;\n\n\n/**\n * Creates a new array for which the element at position i is an array of the\n * ith element of the provided arrays.  The returned array will only be as long\n * as the shortest array provided; additional values are ignored.  For example,\n * the result of zipping [1, 2] and [3, 4, 5] is [[1,3], [2, 4]].\n *\n * This is similar to the zip() function in Python.  See {@link\n * http://docs.python.org/library/functions.html#zip}\n *\n * @param {...!IArrayLike<?>} var_args Arrays to be combined.\n * @return {!Array<!Array<?>>} A new array of arrays created from\n *     provided arrays.\n */\nfunction zip(var_args) {\n  if (!arguments.length) {\n    return [];\n  }\n  const result = [];\n  let minLen = arguments[0].length;\n  for (let i = 1; i < arguments.length; i++) {\n    if (arguments[i].length < minLen) {\n      minLen = arguments[i].length;\n    }\n  }\n  for (let i = 0; i < minLen; i++) {\n    const value = [];\n    for (let j = 0; j < arguments.length; j++) {\n      value.push(arguments[j][i]);\n    }\n    result.push(value);\n  }\n  return result;\n}\nexports.zip = zip;\n\n\n/**\n * Shuffles the values in the specified array using the Fisher-Yates in-place\n * shuffle (also known as the Knuth Shuffle). By default, calls Math.random()\n * and so resets the state of that random number generator. Similarly, may reset\n * the state of any other specified random number generator.\n *\n * Runtime: O(n)\n *\n * @param {!Array<?>} arr The array to be shuffled.\n * @param {function():number=} opt_randFn Optional random function to use for\n *     shuffling.\n *     Takes no arguments, and returns a random number on the interval [0, 1).\n *     Defaults to Math.random() using JavaScript's built-in Math library.\n */\nfunction shuffle(arr, opt_randFn) {\n  const randFn = opt_randFn || Math.random;\n\n  for (let i = arr.length - 1; i > 0; i--) {\n    // Choose a random array index in [0, i] (inclusive with i).\n    const j = Math.floor(randFn() * (i + 1));\n\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n  }\n}\nexports.shuffle = shuffle;\n\n\n/**\n * Returns a new array of elements from arr, based on the indexes of elements\n * provided by index_arr. For example, the result of index copying\n * ['a', 'b', 'c'] with index_arr [1,0,0,2] is ['b', 'a', 'a', 'c'].\n *\n * @param {!IArrayLike<T>} arr The array to get a indexed copy from.\n * @param {!IArrayLike<number>} index_arr An array of indexes to get from arr.\n * @return {!Array<T>} A new array of elements from arr in index_arr order.\n * @template T\n */\nfunction copyByIndex(arr, index_arr) {\n  const result = [];\n  forEach(index_arr, function(index) {\n    result.push(arr[index]);\n  });\n  return result;\n}\nexports.copyByIndex = copyByIndex;\n\n\n/**\n * Maps each element of the input array into zero or more elements of the output\n * array.\n *\n * @param {!IArrayLike<VALUE>|string} arr Array or array like object\n *     over which to iterate.\n * @param {function(this:THIS, VALUE, number, ?): !Array<RESULT>} f The function\n *     to call for every element. This function takes 3 arguments (the element,\n *     the index and the array) and should return an array. The result will be\n *     used to extend a new array.\n * @param {THIS=} opt_obj The object to be used as the value of 'this' within f.\n * @return {!Array<RESULT>} a new array with the concatenation of all arrays\n *     returned from f.\n * @template THIS, VALUE, RESULT\n */\nfunction concatMap(arr, f, opt_obj) {\n  return concat.apply([], map(arr, f, opt_obj));\n}\nexports.concatMap = concatMap;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A base class for event objects.\n */\n\n\ngoog.provide('goog.events.Event');\n\n/**\n * goog.events.Event no longer depends on goog.Disposable. Keep requiring\n * goog.Disposable here to not break projects which assume this dependency.\n * @suppress {extraRequire}\n */\ngoog.require('goog.Disposable');\ngoog.require('goog.events.EventId');\n\n\n/**\n * A base class for event objects, so that they can support preventDefault and\n * stopPropagation.\n *\n * @param {string|!goog.events.EventId} type Event Type.\n * @param {Object=} opt_target Reference to the object that is the target of\n *     this event. It has to implement the `EventTarget` interface\n *     declared at {@link http://developer.mozilla.org/en/DOM/EventTarget}.\n * @constructor\n */\ngoog.events.Event = function(type, opt_target) {\n  'use strict';\n  /**\n   * Event type.\n   * @type {string}\n   */\n  this.type = type instanceof goog.events.EventId ? String(type) : type;\n\n  /**\n   * TODO(tbreisacher): The type should probably be\n   * EventTarget|goog.events.EventTarget.\n   *\n   * Target of the event.\n   * @type {Object|undefined}\n   */\n  this.target = opt_target;\n\n  /**\n   * Object that had the listener attached.\n   * @type {Object|undefined}\n   */\n  this.currentTarget = this.target;\n\n  /**\n   * Whether to cancel the event in internal capture/bubble processing for IE.\n   * @type {boolean}\n   * @private\n   */\n  this.propagationStopped_ = false;\n\n  /**\n   * Whether the default action has been prevented.\n   * This is a property to match the W3C specification at\n   * {@link http://www.w3.org/TR/DOM-Level-3-Events/\n   * #events-event-type-defaultPrevented}.\n   * Must be treated as read-only outside the class.\n   * @type {boolean}\n   */\n  this.defaultPrevented = false;\n};\n\n/**\n * @return {boolean} true iff internal propagation has been stopped.\n */\ngoog.events.Event.prototype.hasPropagationStopped = function() {\n  'use strict';\n  return this.propagationStopped_;\n};\n\n/**\n * Stops event propagation.\n * @return {void}\n */\ngoog.events.Event.prototype.stopPropagation = function() {\n  'use strict';\n  this.propagationStopped_ = true;\n};\n\n\n/**\n * Prevents the default action, for example a link redirecting to a url.\n * @return {void}\n */\ngoog.events.Event.prototype.preventDefault = function() {\n  'use strict';\n  this.defaultPrevented = true;\n};\n\n\n/**\n * Stops the propagation of the event. It is equivalent to\n * `e.stopPropagation()`, but can be used as the callback argument of\n * {@link goog.events.listen} without declaring another function.\n * @param {!goog.events.Event} e An event.\n * @return {void}\n */\ngoog.events.Event.stopPropagation = function(e) {\n  'use strict';\n  e.stopPropagation();\n};\n\n\n/**\n * Prevents the default action. It is equivalent to\n * `e.preventDefault()`, but can be used as the callback argument of\n * {@link goog.events.listen} without declaring another function.\n * @param {!goog.events.Event} e An event.\n * @return {void}\n */\ngoog.events.Event.preventDefault = function(e) {\n  'use strict';\n  e.preventDefault();\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Browser capability checks for the events package.\n */\n\ngoog.module('goog.events.BrowserFeature');\ngoog.module.declareLegacyNamespace();\n\n\n/**\n * Tricks Closure Compiler into believing that a function is pure.  The compiler\n * assumes that any `valueOf` function is pure, without analyzing its contents.\n *\n * @param {function(): T} fn\n * @return {T}\n * @template T\n */\nconst purify = (fn) => {\n  return ({valueOf: fn}).valueOf();\n};\n\n\n/**\n * Enum of browser capabilities.\n * @enum {boolean}\n */\nexports = {\n  /**\n   * Whether touch is enabled in the browser.\n   */\n  TOUCH_ENABLED:\n      ('ontouchstart' in goog.global ||\n       !!(goog.global['document'] && document.documentElement &&\n          'ontouchstart' in document.documentElement) ||\n       // IE10 uses non-standard touch events, so it has a different check.\n       !!(goog.global['navigator'] &&\n          (goog.global['navigator']['maxTouchPoints'] ||\n           goog.global['navigator']['msMaxTouchPoints']))),\n\n  /**\n   * Whether addEventListener supports W3C standard pointer events.\n   * http://www.w3.org/TR/pointerevents/\n   */\n  POINTER_EVENTS: ('PointerEvent' in goog.global),\n\n  /**\n   * Whether addEventListener supports MSPointer events (only used in IE10).\n   * http://msdn.microsoft.com/en-us/library/ie/hh772103(v=vs.85).aspx\n   * http://msdn.microsoft.com/library/hh673557(v=vs.85).aspx\n   */\n  MSPOINTER_EVENTS:\n      ('MSPointerEvent' in goog.global &&\n       !!(goog.global['navigator'] &&\n          goog.global['navigator']['msPointerEnabled'])),\n\n  /**\n   * Whether addEventListener supports {passive: true}.\n   * https://developers.google.com/web/updates/2016/06/passive-event-listeners\n   */\n  PASSIVE_EVENTS: purify(function() {\n    // If we're in a web worker or other custom environment, we can't tell.\n    if (!goog.global.addEventListener || !Object.defineProperty) {  // IE 8\n      return false;\n    }\n\n    var passive = false;\n    var options = Object.defineProperty({}, 'passive', {\n      get: function() {\n        passive = true;\n      }\n    });\n    try {\n      goog.global.addEventListener('test', goog.nullFunction, options);\n      goog.global.removeEventListener('test', goog.nullFunction, options);\n    } catch (e) {\n    }\n\n    return passive;\n  })\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview String functions called from Closure packages that couldn't\n * depend on each other. Outside Closure, use goog.string function which\n * delegate to these.\n */\n\n\ngoog.provide('goog.string.internal');\n\n\n/**\n * Fast prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix A string to look for at the start of `str`.\n * @return {boolean} True if `str` begins with `prefix`.\n * @see goog.string.startsWith\n */\ngoog.string.internal.startsWith = function(str, prefix) {\n  'use strict';\n  return str.lastIndexOf(prefix, 0) == 0;\n};\n\n\n/**\n * Fast suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix`.\n * @see goog.string.endsWith\n */\ngoog.string.internal.endsWith = function(str, suffix) {\n  'use strict';\n  const l = str.length - suffix.length;\n  return l >= 0 && str.indexOf(suffix, l) == l;\n};\n\n\n/**\n * Case-insensitive prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix  A string to look for at the end of `str`.\n * @return {boolean} True if `str` begins with `prefix` (ignoring\n *     case).\n * @see goog.string.caseInsensitiveStartsWith\n */\ngoog.string.internal.caseInsensitiveStartsWith = function(str, prefix) {\n  'use strict';\n  return goog.string.internal.caseInsensitiveCompare(\n             prefix, str.substr(0, prefix.length)) == 0;\n};\n\n\n/**\n * Case-insensitive suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix` (ignoring\n *     case).\n * @see goog.string.caseInsensitiveEndsWith\n */\ngoog.string.internal.caseInsensitiveEndsWith = function(str, suffix) {\n  'use strict';\n  return (\n      goog.string.internal.caseInsensitiveCompare(\n          suffix, str.substr(str.length - suffix.length, suffix.length)) == 0);\n};\n\n\n/**\n * Case-insensitive equality checker.\n * @param {string} str1 First string to check.\n * @param {string} str2 Second string to check.\n * @return {boolean} True if `str1` and `str2` are the same string,\n *     ignoring case.\n * @see goog.string.caseInsensitiveEquals\n */\ngoog.string.internal.caseInsensitiveEquals = function(str1, str2) {\n  'use strict';\n  return str1.toLowerCase() == str2.toLowerCase();\n};\n\n\n/**\n * Checks if a string is empty or contains only whitespaces.\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty or whitespace only.\n * @see goog.string.isEmptyOrWhitespace\n */\ngoog.string.internal.isEmptyOrWhitespace = function(str) {\n  'use strict';\n  // testing length == 0 first is actually slower in all browsers (about the\n  // same in Opera).\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return /^[\\s\\xa0]*$/.test(str);\n};\n\n\n/**\n * Trims white spaces to the left and right of a string.\n * @param {string} str The string to trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.internal.trim =\n    (goog.TRUSTED_SITE && String.prototype.trim) ? function(str) {\n      'use strict';\n      return str.trim();\n    } : function(str) {\n      'use strict';\n      // Since IE doesn't include non-breaking-space (0xa0) in their \\s\n      // character class (as required by section 7.2 of the ECMAScript spec),\n      // we explicitly include it in the regexp to enforce consistent\n      // cross-browser behavior.\n      // NOTE: We don't use String#replace because it might have side effects\n      // causing this function to not compile to 0 bytes.\n      return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(str)[1];\n    };\n\n\n/**\n * A string comparator that ignores case.\n * -1 = str1 less than str2\n *  0 = str1 equals str2\n *  1 = str1 greater than str2\n *\n * @param {string} str1 The string to compare.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} The comparator result, as described above.\n * @see goog.string.caseInsensitiveCompare\n */\ngoog.string.internal.caseInsensitiveCompare = function(str1, str2) {\n  'use strict';\n  const test1 = String(str1).toLowerCase();\n  const test2 = String(str2).toLowerCase();\n\n  if (test1 < test2) {\n    return -1;\n  } else if (test1 == test2) {\n    return 0;\n  } else {\n    return 1;\n  }\n};\n\n\n/**\n * Converts \\n to <br>s or <br />s.\n * @param {string} str The string in which to convert newlines.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} A copy of `str` with converted newlines.\n * @see goog.string.newLineToBr\n */\ngoog.string.internal.newLineToBr = function(str, opt_xml) {\n  'use strict';\n  return str.replace(/(\\r\\n|\\r|\\n)/g, opt_xml ? '<br />' : '<br>');\n};\n\n\n/**\n * Escapes double quote '\"' and single quote '\\'' characters in addition to\n * '&', '<', and '>' so that a string can be included in an HTML tag attribute\n * value within double or single quotes.\n * @param {string} str string to be escaped.\n * @param {boolean=} opt_isLikelyToContainHtmlChars\n * @return {string} An escaped copy of `str`.\n * @see goog.string.htmlEscape\n */\ngoog.string.internal.htmlEscape = function(\n    str, opt_isLikelyToContainHtmlChars) {\n  'use strict';\n  if (opt_isLikelyToContainHtmlChars) {\n    str = str.replace(goog.string.internal.AMP_RE_, '&amp;')\n              .replace(goog.string.internal.LT_RE_, '&lt;')\n              .replace(goog.string.internal.GT_RE_, '&gt;')\n              .replace(goog.string.internal.QUOT_RE_, '&quot;')\n              .replace(goog.string.internal.SINGLE_QUOTE_RE_, '&#39;')\n              .replace(goog.string.internal.NULL_RE_, '&#0;');\n    return str;\n\n  } else {\n    // quick test helps in the case when there are no chars to replace, in\n    // worst case this makes barely a difference to the time taken\n    if (!goog.string.internal.ALL_RE_.test(str)) return str;\n\n    // str.indexOf is faster than regex.test in this case\n    if (str.indexOf('&') != -1) {\n      str = str.replace(goog.string.internal.AMP_RE_, '&amp;');\n    }\n    if (str.indexOf('<') != -1) {\n      str = str.replace(goog.string.internal.LT_RE_, '&lt;');\n    }\n    if (str.indexOf('>') != -1) {\n      str = str.replace(goog.string.internal.GT_RE_, '&gt;');\n    }\n    if (str.indexOf('\"') != -1) {\n      str = str.replace(goog.string.internal.QUOT_RE_, '&quot;');\n    }\n    if (str.indexOf('\\'') != -1) {\n      str = str.replace(goog.string.internal.SINGLE_QUOTE_RE_, '&#39;');\n    }\n    if (str.indexOf('\\x00') != -1) {\n      str = str.replace(goog.string.internal.NULL_RE_, '&#0;');\n    }\n    return str;\n  }\n};\n\n\n/**\n * Regular expression that matches an ampersand, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.AMP_RE_ = /&/g;\n\n\n/**\n * Regular expression that matches a less than sign, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.LT_RE_ = /</g;\n\n\n/**\n * Regular expression that matches a greater than sign, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.GT_RE_ = />/g;\n\n\n/**\n * Regular expression that matches a double quote, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.QUOT_RE_ = /\"/g;\n\n\n/**\n * Regular expression that matches a single quote, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.SINGLE_QUOTE_RE_ = /'/g;\n\n\n/**\n * Regular expression that matches null character, for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.NULL_RE_ = /\\x00/g;\n\n\n/**\n * Regular expression that matches any character that needs to be escaped.\n * @const {!RegExp}\n * @private\n */\ngoog.string.internal.ALL_RE_ = /[\\x00&<>\"']/;\n\n\n/**\n * Do escaping of whitespace to preserve spatial formatting. We use character\n * entity #160 to make it safer for xml.\n * @param {string} str The string in which to escape whitespace.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} An escaped copy of `str`.\n * @see goog.string.whitespaceEscape\n */\ngoog.string.internal.whitespaceEscape = function(str, opt_xml) {\n  'use strict';\n  // This doesn't use goog.string.preserveSpaces for backwards compatibility.\n  return goog.string.internal.newLineToBr(\n      str.replace(/  /g, ' &#160;'), opt_xml);\n};\n\n\n/**\n * Determines whether a string contains a substring.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n * @see goog.string.contains\n */\ngoog.string.internal.contains = function(str, subString) {\n  'use strict';\n  return str.indexOf(subString) != -1;\n};\n\n\n/**\n * Determines whether a string contains a substring, ignoring case.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n * @see goog.string.caseInsensitiveContains\n */\ngoog.string.internal.caseInsensitiveContains = function(str, subString) {\n  'use strict';\n  return goog.string.internal.contains(\n      str.toLowerCase(), subString.toLowerCase());\n};\n\n\n/**\n * Compares two version numbers.\n *\n * @param {string|number} version1 Version of first item.\n * @param {string|number} version2 Version of second item.\n *\n * @return {number}  1 if `version1` is higher.\n *                   0 if arguments are equal.\n *                  -1 if `version2` is higher.\n * @see goog.string.compareVersions\n */\ngoog.string.internal.compareVersions = function(version1, version2) {\n  'use strict';\n  let order = 0;\n  // Trim leading and trailing whitespace and split the versions into\n  // subversions.\n  const v1Subs = goog.string.internal.trim(String(version1)).split('.');\n  const v2Subs = goog.string.internal.trim(String(version2)).split('.');\n  const subCount = Math.max(v1Subs.length, v2Subs.length);\n\n  // Iterate over the subversions, as long as they appear to be equivalent.\n  for (let subIdx = 0; order == 0 && subIdx < subCount; subIdx++) {\n    let v1Sub = v1Subs[subIdx] || '';\n    let v2Sub = v2Subs[subIdx] || '';\n\n    do {\n      // Split the subversions into pairs of numbers and qualifiers (like 'b').\n      // Two different RegExp objects are use to make it clear the code\n      // is side-effect free\n      const v1Comp = /(\\d*)(\\D*)(.*)/.exec(v1Sub) || ['', '', '', ''];\n      const v2Comp = /(\\d*)(\\D*)(.*)/.exec(v2Sub) || ['', '', '', ''];\n      // Break if there are no more matches.\n      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {\n        break;\n      }\n\n      // Parse the numeric part of the subversion. A missing number is\n      // equivalent to 0.\n      const v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);\n      const v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);\n\n      // Compare the subversion components. The number has the highest\n      // precedence. Next, if the numbers are equal, a subversion without any\n      // qualifier is always higher than a subversion with any qualifier. Next,\n      // the qualifiers are compared as strings.\n      order = goog.string.internal.compareElements_(v1CompNum, v2CompNum) ||\n          goog.string.internal.compareElements_(\n              v1Comp[2].length == 0, v2Comp[2].length == 0) ||\n          goog.string.internal.compareElements_(v1Comp[2], v2Comp[2]);\n      // Stop as soon as an inequality is discovered.\n\n      v1Sub = v1Comp[3];\n      v2Sub = v2Comp[3];\n    } while (order == 0);\n  }\n\n  return order;\n};\n\n\n/**\n * Compares elements of a version number.\n *\n * @param {string|number|boolean} left An element from a version number.\n * @param {string|number|boolean} right An element from a version number.\n *\n * @return {number}  1 if `left` is higher.\n *                   0 if arguments are equal.\n *                  -1 if `right` is higher.\n * @private\n */\ngoog.string.internal.compareElements_ = function(left, right) {\n  'use strict';\n  if (left < right) {\n    return -1;\n  } else if (left > right) {\n    return 1;\n  }\n  return 0;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utilities used by goog.labs.userAgent tools. These functions\n * should not be used outside of goog.labs.userAgent.*.\n *\n */\n\ngoog.module('goog.labs.userAgent.util');\ngoog.module.declareLegacyNamespace();\n\nconst {USE_CLIENT_HINTS} = goog.require('goog.labs.userAgent');\nconst {caseInsensitiveContains, contains} = goog.require('goog.string.internal');\n\n/**\n * @const {boolean} If true, use navigator.userAgentData without check.\n * TODO(user): FEATURESET_YEAR >= 2023 if it supports mobile and all the\n * brands we need.  See https://caniuse.com/mdn-api_navigator_useragentdata.\n */\nconst ASSUME_CLIENT_HINTS_SUPPORT = false;\n\n/**\n * Gets the native userAgent string from navigator if it exists.\n * If navigator or navigator.userAgent string is missing, returns an empty\n * string.\n * @return {string}\n */\nfunction getNativeUserAgentString() {\n  const navigator = getNavigator();\n  if (navigator) {\n    const userAgent = navigator.userAgent;\n    if (userAgent) {\n      return userAgent;\n    }\n  }\n  return '';\n}\n\n/**\n * Gets the native userAgentData object from navigator if it exists.\n * If navigator.userAgentData object is missing or USE_CLIENT_HINTS is set to\n * false, returns null.\n * @return {?NavigatorUAData}\n */\nfunction getNativeUserAgentData() {\n  if (!USE_CLIENT_HINTS) {\n    return null;\n  }\n  const navigator = getNavigator();\n  // TODO(user): Use navigator?.userAgent ?? null once it's supported.\n  if (navigator) {\n    return navigator.userAgentData || null;\n  }\n  return null;\n}\n\n/**\n * Getter for the native navigator.\n * @return {!Navigator}\n */\nfunction getNavigator() {\n  return goog.global.navigator;\n}\n\n/**\n * A possible override for applications which wish to not check\n * navigator.userAgent but use a specified value for detection instead.\n * @type {?string}\n */\nlet userAgentInternal = null;\n\n/**\n * A possible override for applications which wish to not check\n * navigator.userAgentData but use a specified value for detection instead.\n * @type {?NavigatorUAData}\n */\nlet userAgentDataInternal = getNativeUserAgentData();\n\n/**\n * Override the user agent string with the given value.\n * This should only be used for testing within the goog.labs.userAgent\n * namespace.\n * Pass `null` to use the native browser object instead.\n * @param {?string=} userAgent The userAgent override.\n * @return {void}\n */\nfunction setUserAgent(userAgent = undefined) {\n  userAgentInternal =\n      typeof userAgent === 'string' ? userAgent : getNativeUserAgentString();\n}\n\n/** @return {string} The user agent string. */\nfunction getUserAgent() {\n  return userAgentInternal == null ? getNativeUserAgentString() :\n                                     userAgentInternal;\n}\n\n/**\n * Override the user agent data object with the given value.\n * This should only be used for testing within the goog.labs.userAgent\n * namespace.\n * Pass `null` to specify the absence of userAgentData. Note that this behavior\n * is different from setUserAgent.\n * @param {?NavigatorUAData} userAgentData The userAgentData override.\n */\nfunction setUserAgentData(userAgentData) {\n  userAgentDataInternal = userAgentData;\n}\n\n/**\n * If the user agent data object was overridden using setUserAgentData,\n * reset it so that it uses the native browser object instead, if it exists.\n */\nfunction resetUserAgentData() {\n  userAgentDataInternal = getNativeUserAgentData();\n}\n\n/** @return {?NavigatorUAData} Navigator.userAgentData if exist */\nfunction getUserAgentData() {\n  return userAgentDataInternal;\n}\n\n/**\n * Checks if any string in userAgentData.brands matches str.\n * Returns false if userAgentData is not supported.\n * @param {string} str\n * @return {boolean} Whether any brand string from userAgentData contains the\n *     given string.\n */\nfunction matchUserAgentDataBrand(str) {\n  const data = getUserAgentData();\n  if (!data) return false;\n  return data.brands.some(({brand}) => brand && contains(brand, str));\n}\n\n/**\n * @param {string} str\n * @return {boolean} Whether the user agent contains the given string.\n */\nfunction matchUserAgent(str) {\n  const userAgent = getUserAgent();\n  return contains(userAgent, str);\n}\n\n/**\n * @param {string} str\n * @return {boolean} Whether the user agent contains the given string, ignoring\n *     case.\n */\nfunction matchUserAgentIgnoreCase(str) {\n  const userAgent = getUserAgent();\n  return caseInsensitiveContains(userAgent, str);\n}\n\n/**\n * Parses the user agent into tuples for each section.\n * @param {string} userAgent\n * @return {!Array<!Array<string>>} Tuples of key, version, and the contents of\n *     the parenthetical.\n */\nfunction extractVersionTuples(userAgent) {\n  // Matches each section of a user agent string.\n  // Example UA:\n  // Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us)\n  // AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405\n  // This has three version tuples: Mozilla, AppleWebKit, and Mobile.\n\n  const versionRegExp = new RegExp(\n      // Key. Note that a key may have a space.\n      // (i.e. 'Mobile Safari' in 'Mobile Safari/5.0')\n      '([A-Z][\\\\w ]+)' +\n\n          '/' +                // slash\n          '([^\\\\s]+)' +        // version (i.e. '5.0b')\n          '\\\\s*' +             // whitespace\n          '(?:\\\\((.*?)\\\\))?',  // parenthetical info. parentheses not matched.\n      'g');\n\n  const data = [];\n  let match;\n\n  // Iterate and collect the version tuples.  Each iteration will be the\n  // next regex match.\n  while (match = versionRegExp.exec(userAgent)) {\n    data.push([\n      match[1],  // key\n      match[2],  // value\n      // || undefined as this is not undefined in IE7 and IE8\n      match[3] || undefined  // info\n    ]);\n  }\n\n  return data;\n}\n\nexports = {\n  ASSUME_CLIENT_HINTS_SUPPORT,\n  extractVersionTuples,\n  getNativeUserAgentString,\n  getUserAgent,\n  getUserAgentData,\n  matchUserAgent,\n  matchUserAgentDataBrand,\n  matchUserAgentIgnoreCase,\n  resetUserAgentData,\n  setUserAgent,\n  setUserAgentData,\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Useful compiler idioms.\n */\n\ngoog.provide('goog.reflect');\n\n\n/**\n * Syntax for object literal casts.\n * @see http://go/jscompiler-renaming\n * @see https://goo.gl/CRs09P\n *\n * Use this if you have an object literal whose keys need to have the same names\n * as the properties of some class even after they are renamed by the compiler.\n *\n * @param {!Function} type Type to cast to.\n * @param {Object} object Object literal to cast.\n * @return {Object} The object literal.\n */\ngoog.reflect.object = function(type, object) {\n  'use strict';\n  return object;\n};\n\n/**\n * Syntax for renaming property strings.\n * @see http://go/jscompiler-renaming\n * @see https://goo.gl/CRs09P\n *\n * Use this if you have an need to access a property as a string, but want\n * to also have the property renamed by the compiler. In contrast to\n * goog.reflect.object, this method takes an instance of an object.\n *\n * Properties must be simple names (not qualified names).\n *\n * @param {string} prop Name of the property\n * @param {!Object} object Instance of the object whose type will be used\n *     for renaming\n * @return {string} The renamed property.\n */\ngoog.reflect.objectProperty = function(prop, object) {\n  'use strict';\n  return prop;\n};\n\n/**\n * To assert to the compiler that an operation is needed when it would\n * otherwise be stripped. For example:\n * <code>\n *     // Force a layout\n *     goog.reflect.sinkValue(dialog.offsetHeight);\n * </code>\n * @param {T} x\n * @return {T}\n * @template T\n */\ngoog.reflect.sinkValue = function(x) {\n  'use strict';\n  goog.reflect.sinkValue[' '](x);\n  return x;\n};\n\n\n/**\n * The compiler should optimize this function away iff no one ever uses\n * goog.reflect.sinkValue.\n */\ngoog.reflect.sinkValue[' '] = goog.nullFunction;\n\n\n/**\n * Check if a property can be accessed without throwing an exception.\n * @param {Object} obj The owner of the property.\n * @param {string} prop The property name.\n * @return {boolean} Whether the property is accessible. Will also return true\n *     if obj is null.\n */\ngoog.reflect.canAccessProperty = function(obj, prop) {\n  'use strict';\n  try {\n    goog.reflect.sinkValue(obj[prop]);\n    return true;\n  } catch (e) {\n  }\n  return false;\n};\n\n\n/**\n * Retrieves a value from a cache given a key. The compiler provides special\n * consideration for this call such that it is generally considered side-effect\n * free. However, if the `opt_keyFn` or `valueFn` have side-effects\n * then the entire call is considered to have side-effects.\n *\n * Conventionally storing the value on the cache would be considered a\n * side-effect and preclude unused calls from being pruned, ie. even if\n * the value was never used, it would still always be stored in the cache.\n *\n * Providing a side-effect free `valueFn` and `opt_keyFn`\n * allows unused calls to `goog.reflect.cache` to be pruned.\n *\n * @param {!Object<K, V>} cacheObj The object that contains the cached values.\n * @param {?} key The key to lookup in the cache. If it is not string or number\n *     then a `opt_keyFn` should be provided. The key is also used as the\n *     parameter to the `valueFn`.\n * @param {function(?):V} valueFn The value provider to use to calculate the\n *     value to store in the cache. This function should be side-effect free\n *     to take advantage of the optimization.\n * @param {function(?):K=} opt_keyFn The key provider to determine the cache\n *     map key. This should be used if the given key is not a string or number.\n *     If not provided then the given key is used. This function should be\n *     side-effect free to take advantage of the optimization.\n * @return {V} The cached or calculated value.\n * @template K\n * @template V\n */\ngoog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {\n  'use strict';\n  const storedKey = opt_keyFn ? opt_keyFn(key) : key;\n\n  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {\n    return cacheObj[storedKey];\n  }\n\n  return (cacheObj[storedKey] = valueFn(key));\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Rendering engine detection.\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>\n * For information on the browser brand (such as Safari versus Chrome), see\n * goog.userAgent.product.\n * @see ../demos/useragent.html\n */\n\ngoog.provide('goog.userAgent');\n\ngoog.require('goog.labs.userAgent.browser');\ngoog.require('goog.labs.userAgent.engine');\ngoog.require('goog.labs.userAgent.platform');\ngoog.require('goog.labs.userAgent.util');\ngoog.require('goog.reflect');\ngoog.require('goog.string.internal');\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is IE.\n */\ngoog.userAgent.ASSUME_IE = goog.define('goog.userAgent.ASSUME_IE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is EDGE,\n * referring to EdgeHTML based Edge.\n */\ngoog.userAgent.ASSUME_EDGE = goog.define('goog.userAgent.ASSUME_EDGE', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is GECKO.\n */\ngoog.userAgent.ASSUME_GECKO = goog.define('goog.userAgent.ASSUME_GECKO', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is WEBKIT.\n */\ngoog.userAgent.ASSUME_WEBKIT =\n    goog.define('goog.userAgent.ASSUME_WEBKIT', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is a\n *     mobile device running WebKit e.g. iPhone or Android.\n */\ngoog.userAgent.ASSUME_MOBILE_WEBKIT =\n    goog.define('goog.userAgent.ASSUME_MOBILE_WEBKIT', false);\n\n\n/**\n * @define {boolean} Whether we know at compile-time that the browser is OPERA,\n * referring to Presto-based Opera.\n */\ngoog.userAgent.ASSUME_OPERA = goog.define('goog.userAgent.ASSUME_OPERA', false);\n\n\n/**\n * @define {boolean} Whether the\n *     `goog.userAgent.isVersionOrHigher`\n *     function will return true for any version.\n */\ngoog.userAgent.ASSUME_ANY_VERSION =\n    goog.define('goog.userAgent.ASSUME_ANY_VERSION', false);\n\n\n/**\n * Whether we know the browser engine at compile-time.\n * @type {boolean}\n * @private\n */\ngoog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE ||\n    goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO ||\n    goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT ||\n    goog.userAgent.ASSUME_OPERA;\n\n\n/**\n * Returns the userAgent string for the current browser.\n *\n * @return {string} The userAgent string.\n */\ngoog.userAgent.getUserAgentString = function() {\n  'use strict';\n  return goog.labs.userAgent.util.getUserAgent();\n};\n\n\n/**\n * @return {?Navigator} The native navigator object.\n */\ngoog.userAgent.getNavigatorTyped = function() {\n  'use strict';\n  // Need a local navigator reference instead of using the global one,\n  // to avoid the rare case where they reference different objects.\n  // (in a WorkerPool, for example).\n  return goog.global['navigator'] || null;\n};\n\n\n/**\n * TODO(nnaze): Change type to \"Navigator\" and update compilation targets.\n * @return {?Object} The native navigator object.\n */\ngoog.userAgent.getNavigator = function() {\n  'use strict';\n  return goog.userAgent.getNavigatorTyped();\n};\n\n\n/**\n * Whether the user agent is Presto-based Opera.\n * @type {boolean}\n */\ngoog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_OPERA :\n    goog.labs.userAgent.browser.isOpera();\n\n\n/**\n * Whether the user agent is Internet Explorer.\n * @type {boolean}\n */\ngoog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_IE :\n    goog.labs.userAgent.browser.isIE();\n\n\n/**\n * Whether the user agent is Microsoft Edge (EdgeHTML based).\n * @type {boolean}\n */\ngoog.userAgent.EDGE = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_EDGE :\n    goog.labs.userAgent.engine.isEdge();\n\n\n/**\n * Whether the user agent is MS Internet Explorer or MS Edge (EdgeHTML based).\n * @type {boolean}\n */\ngoog.userAgent.EDGE_OR_IE = goog.userAgent.EDGE || goog.userAgent.IE;\n\n\n/**\n * Whether the user agent is Gecko. Gecko is the rendering engine used by\n * Mozilla, Firefox, and others.\n * @type {boolean}\n */\ngoog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_GECKO :\n    goog.labs.userAgent.engine.isGecko();\n\n\n/**\n * Whether the user agent is WebKit. WebKit is the rendering engine that\n * Safari, Edge Chromium, Opera Chromium, Android and others use.\n * @type {boolean}\n */\ngoog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ?\n    goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT :\n    goog.labs.userAgent.engine.isWebKit();\n\n\n/**\n * Whether the user agent is running on a mobile device.\n *\n * This is a separate function so that the logic can be tested.\n *\n * TODO(nnaze): Investigate swapping in goog.labs.userAgent.device.isMobile().\n *\n * @return {boolean} Whether the user agent is running on a mobile device.\n * @private\n */\ngoog.userAgent.isMobile_ = function() {\n  'use strict';\n  return goog.userAgent.WEBKIT &&\n      goog.labs.userAgent.util.matchUserAgent('Mobile');\n};\n\n\n/**\n * Whether the user agent is running on a mobile device.\n *\n * TODO(nnaze): Consider deprecating MOBILE when labs.userAgent\n *   is promoted as the gecko/webkit logic is likely inaccurate.\n *\n * @type {boolean}\n */\ngoog.userAgent.MOBILE =\n    goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();\n\n\n/**\n * Used while transitioning code to use WEBKIT instead.\n * @type {boolean}\n * @deprecated Use {@link goog.userAgent.product.SAFARI} instead.\n * TODO(nicksantos): Delete this from goog.userAgent.\n */\ngoog.userAgent.SAFARI = goog.userAgent.WEBKIT;\n\n\n/**\n * @return {string} the platform (operating system) the user agent is running\n *     on. Default to empty string because navigator.platform may not be defined\n *     (on Rhino, for example).\n * @private\n */\ngoog.userAgent.determinePlatform_ = function() {\n  'use strict';\n  var navigator = goog.userAgent.getNavigatorTyped();\n  return navigator && navigator.platform || '';\n};\n\n\n/**\n * The platform (operating system) the user agent is running on. Default to\n * empty string because navigator.platform may not be defined (on Rhino, for\n * example).\n * @type {string}\n */\ngoog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Macintosh operating\n *     system.\n */\ngoog.userAgent.ASSUME_MAC = goog.define('goog.userAgent.ASSUME_MAC', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Windows operating\n *     system.\n */\ngoog.userAgent.ASSUME_WINDOWS =\n    goog.define('goog.userAgent.ASSUME_WINDOWS', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a Linux operating\n *     system.\n */\ngoog.userAgent.ASSUME_LINUX = goog.define('goog.userAgent.ASSUME_LINUX', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on a X11 windowing\n *     system.\n */\ngoog.userAgent.ASSUME_X11 = goog.define('goog.userAgent.ASSUME_X11', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on Android.\n */\ngoog.userAgent.ASSUME_ANDROID =\n    goog.define('goog.userAgent.ASSUME_ANDROID', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPhone.\n */\ngoog.userAgent.ASSUME_IPHONE =\n    goog.define('goog.userAgent.ASSUME_IPHONE', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPad.\n */\ngoog.userAgent.ASSUME_IPAD = goog.define('goog.userAgent.ASSUME_IPAD', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on an iPod.\n */\ngoog.userAgent.ASSUME_IPOD = goog.define('goog.userAgent.ASSUME_IPOD', false);\n\n\n/**\n * @define {boolean} Whether the user agent is running on KaiOS.\n */\ngoog.userAgent.ASSUME_KAIOS = goog.define('goog.userAgent.ASSUME_KAIOS', false);\n\n\n/**\n * @type {boolean}\n * @private\n */\ngoog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC ||\n    goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX ||\n    goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID ||\n    goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD ||\n    goog.userAgent.ASSUME_IPOD;\n\n\n/**\n * Whether the user agent is running on a Macintosh operating system.\n * @type {boolean}\n */\ngoog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_MAC :\n    goog.labs.userAgent.platform.isMacintosh();\n\n\n/**\n * Whether the user agent is running on a Windows operating system.\n * @type {boolean}\n */\ngoog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_WINDOWS :\n    goog.labs.userAgent.platform.isWindows();\n\n\n/**\n * Whether the user agent is Linux per the legacy behavior of\n * goog.userAgent.LINUX, which considered ChromeOS to also be\n * Linux.\n * @return {boolean}\n * @private\n */\ngoog.userAgent.isLegacyLinux_ = function() {\n  'use strict';\n  return goog.labs.userAgent.platform.isLinux() ||\n      goog.labs.userAgent.platform.isChromeOS();\n};\n\n\n/**\n * Whether the user agent is running on a Linux operating system.\n *\n * Note that goog.userAgent.LINUX considers ChromeOS to be Linux,\n * while goog.labs.userAgent.platform considers ChromeOS and\n * Linux to be different OSes.\n *\n * @type {boolean}\n */\ngoog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_LINUX :\n    goog.userAgent.isLegacyLinux_();\n\n\n/**\n * @return {boolean} Whether the user agent is an X11 windowing system.\n * @private\n */\ngoog.userAgent.isX11_ = function() {\n  'use strict';\n  var navigator = goog.userAgent.getNavigatorTyped();\n  return !!navigator &&\n      goog.string.internal.contains(navigator['appVersion'] || '', 'X11');\n};\n\n\n/**\n * Whether the user agent is running on a X11 windowing system.\n * @type {boolean}\n */\ngoog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_X11 :\n    goog.userAgent.isX11_();\n\n\n/**\n * Whether the user agent is running on Android.\n * @type {boolean}\n */\ngoog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_ANDROID :\n    goog.labs.userAgent.platform.isAndroid();\n\n\n/**\n * Whether the user agent is running on an iPhone.\n * @type {boolean}\n */\ngoog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPHONE :\n    goog.labs.userAgent.platform.isIphone();\n\n\n/**\n * Whether the user agent is running on an iPad.\n * @type {boolean}\n */\ngoog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPAD :\n    goog.labs.userAgent.platform.isIpad();\n\n\n/**\n * Whether the user agent is running on an iPod.\n * @type {boolean}\n */\ngoog.userAgent.IPOD = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_IPOD :\n    goog.labs.userAgent.platform.isIpod();\n\n\n/**\n * Whether the user agent is running on iOS.\n * @type {boolean}\n */\ngoog.userAgent.IOS = goog.userAgent.PLATFORM_KNOWN_ ?\n    (goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD ||\n     goog.userAgent.ASSUME_IPOD) :\n    goog.labs.userAgent.platform.isIos();\n\n/**\n * Whether the user agent is running on KaiOS.\n * @type {boolean}\n */\ngoog.userAgent.KAIOS = goog.userAgent.PLATFORM_KNOWN_ ?\n    goog.userAgent.ASSUME_KAIOS :\n    goog.labs.userAgent.platform.isKaiOS();\n\n\n/**\n * @return {string} The string that describes the version number of the user\n *     agent.\n * @private\n */\ngoog.userAgent.determineVersion_ = function() {\n  'use strict';\n  // All browsers have different ways to detect the version and they all have\n  // different naming schemes.\n  // version is a string rather than a number because it may contain 'b', 'a',\n  // and so on.\n  var version = '';\n  var arr = goog.userAgent.getVersionRegexResult_();\n  if (arr) {\n    version = arr ? arr[1] : '';\n  }\n\n  if (goog.userAgent.IE) {\n    // IE9 can be in document mode 9 but be reporting an inconsistent user agent\n    // version.  If it is identifying as a version lower than 9 we take the\n    // documentMode as the version instead.  IE8 has similar behavior.\n    // It is recommended to set the X-UA-Compatible header to ensure that IE9\n    // uses documentMode 9.\n    var docMode = goog.userAgent.getDocumentMode_();\n    if (docMode != null && docMode > parseFloat(version)) {\n      return String(docMode);\n    }\n  }\n\n  return version;\n};\n\n\n/**\n * @return {?IArrayLike<string>|undefined} The version regex matches from\n *     parsing the user\n *     agent string. These regex statements must be executed inline so they can\n *     be compiled out by the closure compiler with the rest of the useragent\n *     detection logic when ASSUME_* is specified.\n * @private\n */\ngoog.userAgent.getVersionRegexResult_ = function() {\n  'use strict';\n  var userAgent = goog.userAgent.getUserAgentString();\n  if (goog.userAgent.GECKO) {\n    return /rv\\:([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.EDGE) {\n    return /Edge\\/([\\d\\.]+)/.exec(userAgent);\n  }\n  if (goog.userAgent.IE) {\n    return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.WEBKIT) {\n    // WebKit/125.4\n    return /WebKit\\/(\\S+)/.exec(userAgent);\n  }\n  if (goog.userAgent.OPERA) {\n    // If none of the above browsers were detected but the browser is Opera, the\n    // only string that is of interest is 'Version/<number>'.\n    return /(?:Version)[ \\/]?(\\S+)/.exec(userAgent);\n  }\n  return undefined;\n};\n\n\n/**\n * @return {number|undefined} Returns the document mode (for testing).\n * @private\n */\ngoog.userAgent.getDocumentMode_ = function() {\n  'use strict';\n  // NOTE(user): goog.userAgent may be used in context where there is no DOM.\n  var doc = goog.global['document'];\n  return doc ? doc['documentMode'] : undefined;\n};\n\n\n/**\n * The version of the user agent. This is a string because it might contain\n * 'b' (as in beta) as well as multiple dots.\n * @type {string}\n */\ngoog.userAgent.VERSION = goog.userAgent.determineVersion_();\n\n\n/**\n * Compares two version numbers.\n *\n * @param {string} v1 Version of first item.\n * @param {string} v2 Version of second item.\n *\n * @return {number}  1 if first argument is higher\n *                   0 if arguments are equal\n *                  -1 if second argument is higher.\n * @deprecated Use goog.string.compareVersions.\n */\ngoog.userAgent.compare = function(v1, v2) {\n  'use strict';\n  return goog.string.internal.compareVersions(v1, v2);\n};\n\n\n/**\n * Cache for {@link goog.userAgent.isVersionOrHigher}.\n * Calls to compareVersions are surprisingly expensive and, as a browser's\n * version number is unlikely to change during a session, we cache the results.\n * @const\n * @private\n */\ngoog.userAgent.isVersionOrHigherCache_ = {};\n\n\n/**\n * Whether the user agent version is higher or the same as the given version.\n * NOTE: When checking the version numbers for Firefox and Safari, be sure to\n * use the engine's version, not the browser's version number.  For example,\n * Firefox 3.0 corresponds to Gecko 1.9 and Safari 3.0 to Webkit 522.11.\n * Opera and Internet Explorer versions match the product release number.<br>\n * @see <a href=\"http://en.wikipedia.org/wiki/Safari_version_history\">\n *     Webkit</a>\n * @see <a href=\"http://en.wikipedia.org/wiki/Gecko_engine\">Gecko</a>\n *\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the user agent version is higher or the same as\n *     the given version.\n */\ngoog.userAgent.isVersionOrHigher = function(version) {\n  'use strict';\n  return goog.userAgent.ASSUME_ANY_VERSION ||\n      goog.reflect.cache(\n          goog.userAgent.isVersionOrHigherCache_, version, function() {\n            'use strict';\n            return goog.string.internal.compareVersions(\n                       goog.userAgent.VERSION, version) >= 0;\n          });\n};\n\n\n/**\n * Whether the IE effective document mode is higher or the same as the given\n * document mode version.\n * NOTE: Only for IE, return false for another browser.\n *\n * @param {number} documentMode The document mode version to check.\n * @return {boolean} Whether the IE effective document mode is higher or the\n *     same as the given version.\n */\ngoog.userAgent.isDocumentModeOrHigher = function(documentMode) {\n  'use strict';\n  return Number(goog.userAgent.DOCUMENT_MODE) >= documentMode;\n};\n\n\n/**\n * Deprecated alias to `goog.userAgent.isDocumentModeOrHigher`.\n * @param {number} version The version to check.\n * @return {boolean} Whether the IE effective document mode is higher or the\n *      same as the given version.\n * @deprecated Use goog.userAgent.isDocumentModeOrHigher().\n */\ngoog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;\n\n\n/**\n * For IE version < 7, documentMode is undefined, so attempt to use the\n * CSS1Compat property to see if we are in standards mode. If we are in\n * standards mode, treat the browser version as the document mode. Otherwise,\n * IE is emulating version 5.\n *\n * NOTE(user): Support for IE < 7 is long gone, so this is now simplified.\n * It returns document.documentMode for IE and undefined for everything else.\n *\n * @type {number|undefined}\n * @const\n */\ngoog.userAgent.DOCUMENT_MODE = (function() {\n  'use strict';\n  var doc = goog.global['document'];\n  if (!doc || !goog.userAgent.IE) return undefined;\n  // This must be an IE user agent.\n  var documentMode = goog.userAgent.getDocumentMode_();\n  if (documentMode) return documentMode;\n  // The user agent version string begins with the major version.\n  // Parse the major version and truncate anything following.\n  var ieVersion = parseInt(goog.userAgent.VERSION, 10);\n  return ieVersion || undefined;\n})();\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Closure user agent detection (Browser).\n * @see <a href=\"http://www.useragentstring.com/\">User agent strings</a>\n * For more information on rendering engine, platform, or device see the other\n * sub-namespaces in goog.labs.userAgent, goog.labs.userAgent.platform,\n * goog.labs.userAgent.device respectively.)\n */\n\ngoog.module('goog.labs.userAgent.browser');\ngoog.module.declareLegacyNamespace();\n\nconst googAsserts = goog.require('goog.asserts');\nconst util = goog.require('goog.labs.userAgent.util');\nconst {AsyncValue, Version} = goog.require('goog.labs.userAgent.highEntropy.highEntropyValue');\nconst {compareVersions} = goog.require('goog.string.internal');\nconst {fullVersionList, hasFullVersionList} = goog.require('goog.labs.userAgent.highEntropy.highEntropyData');\n\n// TODO(nnaze): Refactor to remove excessive exclusion logic in matching\n// functions.\n\n/**\n * A browser brand represents an opaque string that is used for making\n * brand-specific version checks in userAgentData.\n * @enum {string}\n */\nconst Brand = {\n  /**\n   * The browser brand for Android Browser.\n   * Do not depend on the value of this string. Because Android Browser has not\n   * implemented userAgentData yet, the value of this string is not guaranteed\n   * to stay the same in future revisions.\n   */\n  ANDROID_BROWSER: 'Android Browser',\n  /**\n   * The browser brand for Chromium, including Chromium-based Edge and Opera.\n   */\n  CHROMIUM: 'Chromium',\n  /**\n   * The browser brand for Edge.\n   * This brand can be used to get the version of both EdgeHTML and\n   * Chromium-based Edge.\n   */\n  EDGE: 'Microsoft Edge',\n  /**\n   * The browser brand for Firefox.\n   * Do not depend on the value of this string. Because Firefox has not\n   * implemented userAgentData yet, the value of this string is not guaranteed\n   * to stay the same in future revisions.\n   */\n  FIREFOX: 'Firefox',\n  /**\n   * The browser brand for Internet Explorer.\n   * Do not depend on the value of this string. Because IE will never support\n   * userAgentData, the value of this string should be treated as opaque (it's\n   * used internally for legacy-userAgent fallback).\n   */\n  IE: 'Internet Explorer',\n  /**\n   * The browser brand for Opera.\n   * This brand can be used to get the version of both Presto- and\n   * Chromium-based Opera.\n   */\n  OPERA: 'Opera',\n  /**\n   * The browser brand for Safari.\n   * Do not depend on the value of this string. Because Safari has not\n   * implemented userAgentData yet, the value of this string is not guaranteed\n   * to stay the same in future revisions.\n   */\n  SAFARI: 'Safari',\n  /**\n   * The browser brand for Silk.\n   * See\n   * https://docs.aws.amazon.com/silk/latest/developerguide/what-is-silk.html\n   * Do not depend on the value of this string. Because Silk does not\n   * identify itself in userAgentData yet, the value of this string is not\n   * guaranteed to stay the same in future revisions.\n   */\n  SILK: 'Silk',\n};\nexports.Brand = Brand;\n\n/**\n * @return {boolean} Whether to use navigator.userAgentData to determine\n * browser's brand.\n */\nfunction useUserAgentDataBrand() {\n  if (util.ASSUME_CLIENT_HINTS_SUPPORT) return true;\n  const userAgentData = util.getUserAgentData();\n  return !!userAgentData && userAgentData.brands.length > 0;\n}\n\n/**\n * @return {boolean} Whether the user's browser is Opera. Note: Chromium based\n *     Opera (Opera 15+) is detected as Chrome to avoid unnecessary special\n *     casing.\n */\nfunction matchOpera() {\n  if (useUserAgentDataBrand()) {\n    // Pre-Chromium Edge doesn't support navigator.userAgentData.\n    return false;\n  }\n  return util.matchUserAgent('Opera');\n}\n\n/** @return {boolean} Whether the user's browser is IE. */\nfunction matchIE() {\n  if (useUserAgentDataBrand()) {\n    // IE doesn't support navigator.userAgentData.\n    return false;\n  }\n  return util.matchUserAgent('Trident') || util.matchUserAgent('MSIE');\n}\n\n/**\n * @return {boolean} Whether the user's browser is Edge. This refers to\n *     EdgeHTML based Edge.\n */\nfunction matchEdgeHtml() {\n  if (useUserAgentDataBrand()) {\n    // Pre-Chromium Edge doesn't support navigator.userAgentData.\n    return false;\n  }\n  return util.matchUserAgent('Edge');\n}\n\n/** @return {boolean} Whether the user's browser is Chromium based Edge. */\nfunction matchEdgeChromium() {\n  if (useUserAgentDataBrand()) {\n    return util.matchUserAgentDataBrand(Brand.EDGE);\n  }\n  return util.matchUserAgent('Edg/');\n}\n\n/** @return {boolean} Whether the user's browser is Chromium based Opera. */\nfunction matchOperaChromium() {\n  if (useUserAgentDataBrand()) {\n    return util.matchUserAgentDataBrand(Brand.OPERA);\n  }\n  return util.matchUserAgent('OPR');\n}\n\n/** @return {boolean} Whether the user's browser is Firefox. */\nfunction matchFirefox() {\n  // Firefox doesn't support navigator.userAgentData yet, so use\n  // navigator.userAgent.\n  return util.matchUserAgent('Firefox') || util.matchUserAgent('FxiOS');\n}\n\n/** @return {boolean} Whether the user's browser is Safari. */\nfunction matchSafari() {\n  // Apple-based browsers don't support navigator.userAgentData yet, so use\n  // navigator.userAgent.\n  return util.matchUserAgent('Safari') &&\n      !(matchChrome() || matchCoast() || matchOpera() || matchEdgeHtml() ||\n        matchEdgeChromium() || matchOperaChromium() || matchFirefox() ||\n        isSilk() || util.matchUserAgent('Android'));\n}\n\n/**\n * @return {boolean} Whether the user's browser is Coast (Opera's Webkit-based\n *     iOS browser).\n */\nfunction matchCoast() {\n  if (useUserAgentDataBrand()) {\n    // Coast doesn't support navigator.userAgentData.\n    return false;\n  }\n  return util.matchUserAgent('Coast');\n}\n\n/** @return {boolean} Whether the user's browser is iOS Webview. */\nfunction matchIosWebview() {\n  // Apple-based browsers don't support navigator.userAgentData yet, so use\n  // navigator.userAgent.\n  // iOS Webview does not show up as Chrome or Safari.\n  return (util.matchUserAgent('iPad') || util.matchUserAgent('iPhone')) &&\n      !matchSafari() && !matchChrome() && !matchCoast() && !matchFirefox() &&\n      util.matchUserAgent('AppleWebKit');\n}\n\n/**\n * @return {boolean} Whether the user's browser is any Chromium browser. This\n *     returns true for Chrome, Opera 15+, and Edge Chromium.\n */\nfunction matchChrome() {\n  if (useUserAgentDataBrand()) {\n    return util.matchUserAgentDataBrand(Brand.CHROMIUM);\n  }\n  return ((util.matchUserAgent('Chrome') || util.matchUserAgent('CriOS')) &&\n          !matchEdgeHtml()) ||\n      isSilk();\n}\n\n/** @return {boolean} Whether the user's browser is the Android browser. */\nfunction matchAndroidBrowser() {\n  // Android can appear in the user agent string for Chrome on Android.\n  // This is not the Android standalone browser if it does.\n  return util.matchUserAgent('Android') &&\n      !(isChrome() || isFirefox() || isOpera() || isSilk());\n}\n\n/** @return {boolean} Whether the user's browser is Opera. */\nconst isOpera = matchOpera;\nexports.isOpera = isOpera;\n\n/** @return {boolean} Whether the user's browser is IE. */\nconst isIE = matchIE;\nexports.isIE = isIE;\n\n/** @return {boolean} Whether the user's browser is EdgeHTML based Edge. */\nconst isEdge = matchEdgeHtml;\nexports.isEdge = isEdge;\n\n/** @return {boolean} Whether the user's browser is Chromium based Edge. */\nconst isEdgeChromium = matchEdgeChromium;\nexports.isEdgeChromium = isEdgeChromium;\n\n/** @return {boolean} Whether the user's browser is Chromium based Opera. */\nconst isOperaChromium = matchOperaChromium;\nexports.isOperaChromium = isOperaChromium;\n\n/** @return {boolean} Whether the user's browser is Firefox. */\nconst isFirefox = matchFirefox;\nexports.isFirefox = isFirefox;\n\n/** @return {boolean} Whether the user's browser is Safari. */\nconst isSafari = matchSafari;\nexports.isSafari = isSafari;\n\n/**\n * @return {boolean} Whether the user's browser is Coast (Opera's Webkit-based\n *     iOS browser).\n */\nconst isCoast = matchCoast;\nexports.isCoast = isCoast;\n\n/** @return {boolean} Whether the user's browser is iOS Webview. */\nconst isIosWebview = matchIosWebview;\nexports.isIosWebview = isIosWebview;\n\n/**\n * @return {boolean} Whether the user's browser is any Chromium based browser (\n *     Chrome, Blink-based Opera (15+) and Edge Chromium).\n */\nconst isChrome = matchChrome;\nexports.isChrome = isChrome;\n\n/** @return {boolean} Whether the user's browser is the Android browser. */\nconst isAndroidBrowser = matchAndroidBrowser;\nexports.isAndroidBrowser = isAndroidBrowser;\n\n/**\n * For more information, see:\n * http://docs.aws.amazon.com/silk/latest/developerguide/user-agent.html\n * @return {boolean} Whether the user's browser is Silk.\n */\nfunction isSilk() {\n  // As of Silk 93, Silk does not identify itself in userAgentData.brands.\n  // When Silk changes this behavior, update this method to call\n  // matchUserAgentDataBrand (akin to isChrome, etc.)\n  return util.matchUserAgent('Silk');\n}\nexports.isSilk = isSilk;\n\n/**\n * A helper function that returns a function mapping a list of candidate\n * version tuple keys to the first version string present under a key.\n * Ex:\n * <code>\n * // Arg extracted from \"Foo/1.2.3 Bar/0.2021\"\n * const mapVersion = createVersionMap([[\"Foo\", \"1.2.3\"], [\"Bar\", \"0.2021\"]]);\n * mapVersion([\"Bar\", \"Foo\"]); // returns \"0.2021\"\n * mapVersion([\"Baz\", \"Foo\"]); // returns \"1.2.3\"\n * mapVersion([\"Baz\", \"???\"]); // returns \"\"\n * </code>\n * @param {!Array<!Array<string>>} versionTuples Version tuples pre-extracted\n *     from a user agent string.\n * @return {function(!Array<string>): string} The version string, or empty\n * string if it doesn't exist under the given key.\n */\nfunction createVersionMap(versionTuples) {\n  // Construct a map for easy lookup.\n  const versionMap = {};\n  versionTuples.forEach((tuple) => {\n    // Note that the tuple is of length three, but we only care about the\n    // first two.\n    const key = tuple[0];\n    const value = tuple[1];\n    versionMap[key] = value;\n  });\n\n  // Gives the value with the first key it finds, otherwise empty string.\n  return (keys) => versionMap[keys.find((key) => key in versionMap)] || '';\n}\n\n/**\n * Returns the browser version.\n *\n * Note that for browsers with multiple brands, this function assumes a primary\n * brand and returns the version for that brand.\n *\n * Additionally, this function is not userAgentData-aware and will return\n * incorrect values when the User Agent string is frozen. The current status of\n * User Agent string freezing is available here:\n * https://www.chromestatus.com/feature/5704553745874944\n *\n * To mitigate both of these potential issues, use\n * getVersionStringForLogging() or fullVersionOf() instead.\n *\n * @return {string} The browser version or empty string if version cannot be\n *     determined. Note that for Internet Explorer, this returns the version of\n *     the browser, not the version of the rendering engine. (IE 8 in\n *     compatibility mode will return 8.0 rather than 7.0. To determine the\n *     rendering engine version, look at document.documentMode instead. See\n *     http://msdn.microsoft.com/en-us/library/cc196988(v=vs.85).aspx for more\n *     details.)\n */\nfunction getVersion() {\n  const userAgentString = util.getUserAgent();\n\n  // Special case IE since IE's version is inside the parenthesis and\n  // without the '/'.\n  if (isIE()) {\n    return getIEVersion(userAgentString);\n  }\n\n  const versionTuples = util.extractVersionTuples(userAgentString);\n  const lookUpValueWithKeys = createVersionMap(versionTuples);\n\n  // Check Opera before Chrome since Opera 15+ has \"Chrome\" in the string.\n  // See\n  // http://my.opera.com/ODIN/blog/2013/07/15/opera-user-agent-strings-opera-15-and-beyond\n  if (isOpera()) {\n    // Opera 10 has Version/10.0 but Opera/9.8, so look for \"Version\" first.\n    // Opera uses 'OPR' for more recent UAs.\n    return lookUpValueWithKeys(['Version', 'Opera']);\n  }\n\n  // Check Edge before Chrome since it has Chrome in the string.\n  if (isEdge()) {\n    return lookUpValueWithKeys(['Edge']);\n  }\n\n  // Check Chromium Edge before Chrome since it has Chrome in the string.\n  if (isEdgeChromium()) {\n    return lookUpValueWithKeys(['Edg']);\n  }\n\n  // Check Silk before Chrome since it may have Chrome in its string and be\n  // treated as Chrome.\n  if (isSilk()) {\n    return lookUpValueWithKeys(['Silk']);\n  }\n\n  if (isChrome()) {\n    return lookUpValueWithKeys(['Chrome', 'CriOS', 'HeadlessChrome']);\n  }\n\n  // Usually products browser versions are in the third tuple after \"Mozilla\"\n  // and the engine.\n  const tuple = versionTuples[2];\n  return tuple && tuple[1] || '';\n}\nexports.getVersion = getVersion;\n\n/**\n * Returns whether the current browser's version is at least as high as the\n * given one.\n *\n * Note that for browsers with multiple brands, this function assumes a primary\n * brand and checks the version for that brand.\n *\n * Additionally, this function is not userAgentData-aware and will return\n * incorrect values when the User Agent string is frozen. The current status of\n * User Agent string freezing is available here:\n * https://www.chromestatus.com/feature/5704553745874944\n *\n * To mitigate both of these potential issues, use isAtLeast()/isAtMost() or\n * fullVersionOf() instead.\n *\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the browser version is higher or the same as the\n *     given version.\n * @deprecated Use isAtLeast()/isAtMost() instead.\n */\nfunction isVersionOrHigher(version) {\n  return compareVersions(getVersion(), version) >= 0;\n}\nexports.isVersionOrHigher = isVersionOrHigher;\n\n/**\n * A helper function to determine IE version. More information:\n * http://msdn.microsoft.com/en-us/library/ie/bg182625(v=vs.85).aspx#uaString\n * http://msdn.microsoft.com/en-us/library/hh869301(v=vs.85).aspx\n * http://blogs.msdn.com/b/ie/archive/2010/03/23/introducing-ie9-s-user-agent-string.aspx\n * http://blogs.msdn.com/b/ie/archive/2009/01/09/the-internet-explorer-8-user-agent-string-updated-edition.aspx\n * @param {string} userAgent the User-Agent.\n * @return {string}\n */\nfunction getIEVersion(userAgent) {\n  // IE11 may identify itself as MSIE 9.0 or MSIE 10.0 due to an IE 11 upgrade\n  // bug. Example UA:\n  // Mozilla/5.0 (MSIE 9.0; Windows NT 6.1; WOW64; Trident/7.0; rv:11.0)\n  // like Gecko.\n  // See http://www.whatismybrowser.com/developers/unknown-user-agent-fragments.\n  const rv = /rv: *([\\d\\.]*)/.exec(userAgent);\n  if (rv && rv[1]) {\n    return rv[1];\n  }\n\n  let version = '';\n  const msie = /MSIE +([\\d\\.]+)/.exec(userAgent);\n  if (msie && msie[1]) {\n    // IE in compatibility mode usually identifies itself as MSIE 7.0; in this\n    // case, use the Trident version to determine the version of IE. For more\n    // details, see the links above.\n    const tridentVersion = /Trident\\/(\\d.\\d)/.exec(userAgent);\n    if (msie[1] == '7.0') {\n      if (tridentVersion && tridentVersion[1]) {\n        switch (tridentVersion[1]) {\n          case '4.0':\n            version = '8.0';\n            break;\n          case '5.0':\n            version = '9.0';\n            break;\n          case '6.0':\n            version = '10.0';\n            break;\n          case '7.0':\n            version = '11.0';\n            break;\n        }\n      } else {\n        version = '7.0';\n      }\n    } else {\n      version = msie[1];\n    }\n  }\n  return version;\n}\n\n/**\n * A helper function to return the navigator.userAgent-supplied full version\n * number of the current browser or an empty string, based on whether the\n * current browser is the one specified.\n * @param {string} browser The brand whose version should be returned.\n * @return {string}\n */\nfunction getFullVersionFromUserAgentString(browser) {\n  const userAgentString = util.getUserAgent();\n  // Special case IE since IE's version is inside the parenthesis and\n  // without the '/'.\n  if (browser === Brand.IE) {\n    return isIE() ? getIEVersion(userAgentString) : '';\n  }\n\n  const versionTuples = util.extractVersionTuples(userAgentString);\n  const lookUpValueWithKeys = createVersionMap(versionTuples);\n  switch (browser) {\n    case Brand.OPERA:\n      // Opera 10 has Version/10.0 but Opera/9.8, so look for \"Version\"\n      // first. Opera uses 'OPR' for more recent UAs.\n      if (isOpera()) {\n        return lookUpValueWithKeys(['Version', 'Opera']);\n      } else if (isOperaChromium()) {\n        return lookUpValueWithKeys(['OPR']);\n      }\n      break;\n    case Brand.EDGE:\n      if (isEdge()) {\n        return lookUpValueWithKeys(['Edge']);\n      } else if (isEdgeChromium()) {\n        return lookUpValueWithKeys(['Edg']);\n      }\n      break;\n    case Brand.CHROMIUM:\n      if (isChrome()) {\n        return lookUpValueWithKeys(['Chrome', 'CriOS', 'HeadlessChrome']);\n      }\n      break;\n  }\n\n  // For the following browsers, the browser version is in the third tuple after\n  // \"Mozilla\" and the engine.\n  if ((browser === Brand.FIREFOX && isFirefox()) ||\n      (browser === Brand.SAFARI && isSafari()) ||\n      (browser === Brand.ANDROID_BROWSER && isAndroidBrowser()) ||\n      (browser === Brand.SILK && isSilk())) {\n    const tuple = versionTuples[2];\n    return tuple && tuple[1] || '';\n  }\n\n  return '';\n}\n\n/**\n * Returns the major version of the given browser brand, or NaN if the current\n * browser is not the given brand.\n * Note that the major version number may be different depending on which\n * browser is specified. The returned value can be used to make browser version\n * comparisons using comparison operators.\n * @deprecated Use isAtLeast or isAtMost instead.\n * @param {!Brand} browser The brand whose version should be returned.\n * @return {number} The major version number associated with the current\n * browser under the given brand, or NaN if the current browser doesn't match\n * the given brand.\n */\nfunction versionOf(browser) {\n  let versionParts;\n  // Silk currently does not identify itself in its userAgentData.brands array,\n  // so if checking its version, always fall back to the user agent string.\n  if (useUserAgentDataBrand() && browser !== Brand.SILK) {\n    const data = util.getUserAgentData();\n    const matchingBrand = data.brands.find(({brand}) => brand === browser);\n    if (!matchingBrand || !matchingBrand.version) {\n      return NaN;\n    }\n    versionParts = matchingBrand.version.split('.');\n  } else {\n    const fullVersion = getFullVersionFromUserAgentString(browser);\n    if (fullVersion === '') {\n      return NaN;\n    }\n    versionParts = fullVersion.split('.');\n  }\n  if (versionParts.length === 0) {\n    return NaN;\n  }\n  const majorVersion = versionParts[0];\n  return Number(majorVersion);  // Returns NaN if it is not parseable.\n}\nexports.versionOf = versionOf;\n\n/**\n * Returns true if the current browser matches the given brand and is at least\n * the given major version. The major version must be a whole number (i.e.\n * decimals should not be used to represent a minor version).\n * @param {!Brand} brand The brand whose version should be returned.\n * @param {number} majorVersion The major version number to compare against.\n *     This must be a whole number.\n * @return {boolean} Whether the current browser both matches the given brand\n *     and is at least the given version.\n */\nfunction isAtLeast(brand, majorVersion) {\n  googAsserts.assert(\n      Math.floor(majorVersion) === majorVersion,\n      'Major version must be an integer');\n  return versionOf(brand) >= majorVersion;\n}\nexports.isAtLeast = isAtLeast;\n\n/**\n * Returns true if the current browser matches the given brand and is at most\n * the given version. The major version must be a whole number (i.e. decimals\n * should not be used to represent a minor version).\n * @param {!Brand} brand The brand whose version should be returned.\n * @param {number} majorVersion The major version number to compare against.\n *     This must be a whole number.\n * @return {boolean} Whether the current browser both matches the given brand\n *     and is at most the given version.\n */\nfunction isAtMost(brand, majorVersion) {\n  googAsserts.assert(\n      Math.floor(majorVersion) === majorVersion,\n      'Major version must be an integer');\n  return versionOf(brand) <= majorVersion;\n}\nexports.isAtMost = isAtMost;\n\n/**\n * Loads the high-entropy browser brand/version data and wraps the correct\n * version string in a Version object.\n * @implements {AsyncValue<!Version>}\n */\nclass HighEntropyBrandVersion {\n  /**\n   * @param {string} brand The brand whose version is retrieved in this\n   *     container.\n   */\n  constructor(brand) {\n    /**\n     * @const {string}\n     * @private\n     */\n    this.brand_ = brand;\n  }\n\n  /**\n   * @return {!Version|undefined}\n   * @override\n   */\n  getIfLoaded() {\n    const loadedVersionList = fullVersionList.getIfLoaded();\n    if (loadedVersionList !== undefined) {\n      const matchingBrand =\n          loadedVersionList.find(({brand}) => this.brand_ === brand);\n      googAsserts.assertExists(matchingBrand);\n      return new Version(matchingBrand.version);\n    }\n    return;\n  }\n\n  /**\n   * @return {!Promise<!Version>}\n   * @override\n   */\n  async load() {\n    const loadedVersionList = await fullVersionList.load();\n    const matchingBrand =\n        loadedVersionList.find(({brand}) => this.brand_ === brand);\n    googAsserts.assertExists(matchingBrand);\n    return new Version(matchingBrand.version);\n  }\n}\n\n/**\n * Wraps a version string in a Version object.\n * @implements {AsyncValue<!Version>}\n */\nclass UserAgentStringFallbackBrandVersion {\n  /**\n   * @param {string} versionString\n   */\n  constructor(versionString) {\n    /**\n     * @const {!Version}\n     * @private\n     */\n    this.version_ = new Version(versionString);\n  }\n\n  /**\n   * @return {!Version|undefined}\n   * @override\n   */\n  getIfLoaded() {\n    return this.version_;\n  }\n\n  /**\n   * @return {!Promise<!Version>}\n   * @override\n   */\n  async load() {\n    return this.version_;\n  }\n}\n\n/**\n * Requests all full browser versions to be cached.  When the returned promise\n * resolves, subsequent calls to `fullVersionOf(...).getIfLoaded()` will return\n * a value.\n *\n * This method should be avoided in favor of directly awaiting\n * `fullVersionOf(...).load()` where it is used.\n *\n * @return {!Promise<void>}\n */\nasync function loadFullVersions() {\n  if (useUserAgentDataBrand() && hasFullVersionList()) {\n    await fullVersionList.load();\n  }\n}\nexports.loadFullVersions = loadFullVersions;\n\n/**\n * Returns an object that provides access to the full version string of the\n * current browser -- or undefined, based on whether the current browser matches\n * the requested browser brand. Note that the full version string is a\n * high-entropy value, and must be asynchronously loaded before it can be\n * accessed synchronously.\n * @param {!Brand} browser The brand whose version should be returned.\n * @return {!AsyncValue<!Version>|undefined} An object that can be used\n *     to get or load the full version string as a high-entropy value, or\n * undefined if the current browser doesn't match the given brand.\n */\nfunction fullVersionOf(browser) {\n  // Silk currently does not identify itself in its userAgentData.brands array,\n  // so if checking its version, always fall back to the user agent string.\n  if (useUserAgentDataBrand() && hasFullVersionList()) {\n    const data = util.getUserAgentData();\n    // Operate under the assumption that the low-entropy and high-entropy lists\n    // of brand/version pairs contain an identical set of brands. Therefore, if\n    // the low-entropy list doesn't contain the given brand, return undefined.\n    if (!data.brands.find(({brand}) => brand === browser)) {\n      return undefined;\n    }\n    return new HighEntropyBrandVersion(browser);\n  } else {\n    const fullVersionFromUserAgentString =\n        getFullVersionFromUserAgentString(browser);\n    if (fullVersionFromUserAgentString === '') {\n      return undefined;\n    }\n    return new UserAgentStringFallbackBrandVersion(\n        fullVersionFromUserAgentString);\n  }\n}\nexports.fullVersionOf = fullVersionOf;\n\n/**\n * Returns a version string for the current browser or undefined, based on\n * whether the current browser is the one specified.\n * This value should ONLY be used for logging/debugging purposes. Do not use it\n * to branch code paths. For comparing versions, use isAtLeast()/isAtMost() or\n * fullVersionOf() instead.\n * @param {!Brand} browser The brand whose version should be returned.\n * @return {string} The version as a string.\n */\nfunction getVersionStringForLogging(browser) {\n  if (useUserAgentDataBrand()) {\n    const fullVersionObj = fullVersionOf(browser);\n    if (fullVersionObj) {\n      const fullVersion = fullVersionObj.getIfLoaded();\n      if (fullVersion) {\n        return fullVersion.toVersionStringForLogging();\n      }\n      // No full version, return the major version instead.\n      const data = util.getUserAgentData();\n      const matchingBrand = data.brands.find(({brand}) => brand === browser);\n      // Checking for the existence of matchingBrand is not necessary because\n      // the existence of fullVersionObj implies that there is already a\n      // matching brand.\n      googAsserts.assertExists(matchingBrand);\n      return matchingBrand.version;\n    }\n    // If fullVersionObj is undefined, this doesn't mean that the full version\n    // is unavailable, but rather that the current browser doesn't match the\n    // input `browser` argument.\n    return '';\n  } else {\n    return getFullVersionFromUserAgentString(browser);\n  }\n}\nexports.getVersionStringForLogging = getVersionStringForLogging;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Closure user agent detection.\n * @see http://en.wikipedia.org/wiki/User_agent\n * For more information on browser brand, platform, or device see the other\n * sub-namespaces in goog.labs.userAgent (browser, platform, and device).\n */\n\ngoog.module('goog.labs.userAgent.engine');\ngoog.module.declareLegacyNamespace();\n\nconst googArray = goog.require('goog.array');\nconst googString = goog.require('goog.string.internal');\nconst util = goog.require('goog.labs.userAgent.util');\n\n/**\n * @return {boolean} Whether the rendering engine is Presto.\n */\nfunction isPresto() {\n  return util.matchUserAgent('Presto');\n}\n\n/**\n * @return {boolean} Whether the rendering engine is Trident.\n */\nfunction isTrident() {\n  // IE only started including the Trident token in IE8.\n  return util.matchUserAgent('Trident') || util.matchUserAgent('MSIE');\n}\n\n/**\n * @return {boolean} Whether the rendering engine is EdgeHTML.\n */\nfunction isEdge() {\n  return util.matchUserAgent('Edge');\n}\n\n/**\n * @return {boolean} Whether the rendering engine is WebKit. This will return\n * true for Chrome, Blink-based Opera (15+), Edge Chromium and Safari.\n */\nfunction isWebKit() {\n  return util.matchUserAgentIgnoreCase('WebKit') && !isEdge();\n}\n\n/**\n * @return {boolean} Whether the rendering engine is Gecko.\n */\nfunction isGecko() {\n  return util.matchUserAgent('Gecko') && !isWebKit() && !isTrident() &&\n      !isEdge();\n}\n\n/**\n * @return {string} The rendering engine's version or empty string if version\n *     can't be determined.\n */\nfunction getVersion() {\n  const userAgentString = util.getUserAgent();\n  if (userAgentString) {\n    const tuples = util.extractVersionTuples(userAgentString);\n\n    const engineTuple = getEngineTuple(tuples);\n    if (engineTuple) {\n      // In Gecko, the version string is either in the browser info or the\n      // Firefox version.  See Gecko user agent string reference:\n      // http://goo.gl/mULqa\n      if (engineTuple[0] == 'Gecko') {\n        return getVersionForKey(tuples, 'Firefox');\n      }\n\n      return engineTuple[1];\n    }\n\n    // MSIE has only one version identifier, and the Trident version is\n    // specified in the parenthetical. IE Edge is covered in the engine tuple\n    // detection.\n    const browserTuple = tuples[0];\n    let info;\n    if (browserTuple && (info = browserTuple[2])) {\n      const match = /Trident\\/([^\\s;]+)/.exec(info);\n      if (match) {\n        return match[1];\n      }\n    }\n  }\n  return '';\n}\n\n/**\n * @param {!Array<!Array<string>>} tuples Extracted version tuples.\n * @return {!Array<string>|undefined} The engine tuple or undefined if not\n *     found.\n */\nfunction getEngineTuple(tuples) {\n  if (!isEdge()) {\n    return tuples[1];\n  }\n  for (let i = 0; i < tuples.length; i++) {\n    const tuple = tuples[i];\n    if (tuple[0] == 'Edge') {\n      return tuple;\n    }\n  }\n}\n\n/**\n * @param {string|number} version The version to check.\n * @return {boolean} Whether the rendering engine version is higher or the same\n *     as the given version.\n */\nfunction isVersionOrHigher(version) {\n  return googString.compareVersions(getVersion(), version) >= 0;\n}\n\n/**\n * @param {!Array<!Array<string>>} tuples Version tuples.\n * @param {string} key The key to look for.\n * @return {string} The version string of the given key, if present.\n *     Otherwise, the empty string.\n */\nfunction getVersionForKey(tuples, key) {\n  // TODO(nnaze): Move to util if useful elsewhere.\n\n  const pair = googArray.find(tuples, function(pair) {\n    return key == pair[0];\n  });\n\n  return pair && pair[1] || '';\n}\n\nexports = {\n  getVersion,\n  isEdge,\n  isGecko,\n  isPresto,\n  isTrident,\n  isVersionOrHigher,\n  isWebKit,\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Wrapper class for handling XmlHttpRequests.\n *\n * One off requests can be sent through goog.net.XhrIo.send() or an\n * instance can be created to send multiple requests.  Each request uses its\n * own XmlHttpRequest object and handles clearing of the event callback to\n * ensure no leaks.\n *\n * XhrIo is event based, it dispatches events on success, failure, finishing,\n * ready-state change, or progress (download and upload).\n *\n * The ready-state or timeout event fires first, followed by\n * a generic completed event. Then the abort, error, or success event\n * is fired as appropriate. Progress events are fired as they are\n * received. Lastly, the ready event will fire to indicate that the\n * object may be used to make another request.\n *\n * The error event may also be called before completed and\n * ready-state-change if the XmlHttpRequest.open() or .send() methods throw.\n *\n * This class does not support multiple requests, queuing, or prioritization.\n *\n * When progress events are supported by the browser, and progress is\n * enabled via .setProgressEventsEnabled(true), the\n * goog.net.EventType.PROGRESS event will be the re-dispatched browser\n * progress event. Additionally, a DOWNLOAD_PROGRESS or UPLOAD_PROGRESS event\n * will be fired for download and upload progress respectively.\n */\n\n\ngoog.provide('goog.net.XhrIo');\ngoog.provide('goog.net.XhrIo.ResponseType');\n\ngoog.require('goog.Timer');\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.collections.maps');\ngoog.require('goog.debug.entryPointRegistry');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.json.hybrid');\ngoog.require('goog.log');\ngoog.require('goog.net.ErrorCode');\ngoog.require('goog.net.EventType');\ngoog.require('goog.net.HttpStatus');\ngoog.require('goog.net.XmlHttp');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.uri.utils');\ngoog.require('goog.userAgent');\ngoog.requireType('goog.Uri');\ngoog.requireType('goog.debug.ErrorHandler');\ngoog.requireType('goog.net.XhrLike');\ngoog.requireType('goog.net.XmlHttpFactory');\n\ngoog.scope(function() {\n\n'use strict';\n/**\n * Basic class for handling XMLHttpRequests.\n * @param {goog.net.XmlHttpFactory=} opt_xmlHttpFactory Factory to use when\n *     creating XMLHttpRequest objects.\n * @constructor\n * @extends {goog.events.EventTarget}\n */\ngoog.net.XhrIo = function(opt_xmlHttpFactory) {\n  'use strict';\n  XhrIo.base(this, 'constructor');\n\n  /**\n   * Map of default headers to add to every request, use:\n   * XhrIo.headers.set(name, value)\n   * @type {!Map<string,string>}\n   */\n  this.headers = new Map();\n\n  /**\n   * Optional XmlHttpFactory\n   * @private {goog.net.XmlHttpFactory}\n   */\n  this.xmlHttpFactory_ = opt_xmlHttpFactory || null;\n\n  /**\n   * Whether XMLHttpRequest is active.  A request is active from the time send()\n   * is called until onReadyStateChange() is complete, or error() or abort()\n   * is called.\n   * @private {boolean}\n   */\n  this.active_ = false;\n\n  /**\n   * The XMLHttpRequest object that is being used for the transfer.\n   * @private {?goog.net.XhrLike.OrNative}\n   */\n  this.xhr_ = null;\n\n  /**\n   * The options to use with the current XMLHttpRequest object.\n   * @private {?Object}\n   */\n  this.xhrOptions_ = null;\n\n  /**\n   * Last URL that was requested.\n   * @private {string|goog.Uri}\n   */\n  this.lastUri_ = '';\n\n  /**\n   * Method for the last request.\n   * @private {string}\n   */\n  this.lastMethod_ = '';\n\n  /**\n   * Last error code.\n   * @private {!goog.net.ErrorCode}\n   */\n  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;\n\n  /**\n   * Last error message.\n   * @private {Error|string}\n   */\n  this.lastError_ = '';\n\n  /**\n   * Used to ensure that we don't dispatch an multiple ERROR events. This can\n   * happen in IE when it does a synchronous load and one error is handled in\n   * the ready state change and one is handled due to send() throwing an\n   * exception.\n   * @private {boolean}\n   */\n  this.errorDispatched_ = false;\n\n  /**\n   * Used to make sure we don't fire the complete event from inside a send call.\n   * @private {boolean}\n   */\n  this.inSend_ = false;\n\n  /**\n   * Used in determining if a call to {@link #onReadyStateChange_} is from\n   * within a call to this.xhr_.open.\n   * @private {boolean}\n   */\n  this.inOpen_ = false;\n\n  /**\n   * Used in determining if a call to {@link #onReadyStateChange_} is from\n   * within a call to this.xhr_.abort.\n   * @private {boolean}\n   */\n  this.inAbort_ = false;\n\n  /**\n   * Number of milliseconds after which an incomplete request will be aborted\n   * and a {@link goog.net.EventType.TIMEOUT} event raised; 0 means no timeout\n   * is set.\n   * @private {number}\n   */\n  this.timeoutInterval_ = 0;\n\n  /**\n   * Timer to track request timeout.\n   * @private {?number}\n   */\n  this.timeoutId_ = null;\n\n  /**\n   * The requested type for the response. The empty string means use the default\n   * XHR behavior.\n   * @private {goog.net.XhrIo.ResponseType}\n   */\n  this.responseType_ = ResponseType.DEFAULT;\n\n  /**\n   * Whether a \"credentialed\" request is to be sent (one that is aware of\n   * cookies and authentication). This is applicable only for cross-domain\n   * requests and more recent browsers that support this part of the HTTP Access\n   * Control standard.\n   *\n   * @see http://www.w3.org/TR/XMLHttpRequest/#the-withcredentials-attribute\n   *\n   * @private {boolean}\n   */\n  this.withCredentials_ = false;\n\n  /**\n   * Whether progress events are enabled for this request. This is\n   * disabled by default because setting a progress event handler\n   * causes pre-flight OPTIONS requests to be sent for CORS requests,\n   * even in cases where a pre-flight request would not otherwise be\n   * sent.\n   *\n   * @see http://xhr.spec.whatwg.org/#security-considerations\n   *\n   * Note that this can cause problems for Firefox 22 and below, as an\n   * older \"LSProgressEvent\" will be dispatched by the browser. That\n   * progress event is no longer supported, and can lead to failures,\n   * including throwing exceptions.\n   *\n   * @see http://bugzilla.mozilla.org/show_bug.cgi?id=845631\n   * @see b/23469793\n   *\n   * @private {boolean}\n   */\n  this.progressEventsEnabled_ = false;\n\n  /**\n   * True if we can use XMLHttpRequest's timeout directly.\n   * @private {boolean}\n   */\n  this.useXhr2Timeout_ = false;\n\n  /**\n   * Specification for Trust Token operations (issuance, signing, and\n   * redemption).\n   * @private {?TrustTokenAttributeType}\n   */\n  this.trustToken_ = null;\n};\ngoog.inherits(goog.net.XhrIo, goog.events.EventTarget);\n\nconst XhrIo = goog.net.XhrIo;\n\n/**\n * Response types that may be requested for XMLHttpRequests.\n * @enum {string}\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-responsetype-attribute\n */\ngoog.net.XhrIo.ResponseType = {\n  DEFAULT: '',\n  TEXT: 'text',\n  DOCUMENT: 'document',\n  // Not supported as of Chrome 10.0.612.1 dev\n  BLOB: 'blob',\n  ARRAY_BUFFER: 'arraybuffer',\n};\n\nconst ResponseType = goog.net.XhrIo.ResponseType;\n\n\n/**\n * A reference to the XhrIo logger\n * @private {?goog.log.Logger}\n * @const\n */\ngoog.net.XhrIo.prototype.logger_ = goog.log.getLogger('goog.net.XhrIo');\n\n\n/**\n * The Content-Type HTTP header name\n * @type {string}\n */\ngoog.net.XhrIo.CONTENT_TYPE_HEADER = 'Content-Type';\n\n\n/**\n * The Content-Transfer-Encoding HTTP header name\n * @type {string}\n */\ngoog.net.XhrIo.CONTENT_TRANSFER_ENCODING = 'Content-Transfer-Encoding';\n\n\n/**\n * The pattern matching the 'http' and 'https' URI schemes\n * @type {!RegExp}\n */\ngoog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;\n\nconst HTTP_SCHEME_PATTERN = goog.net.XhrIo.HTTP_SCHEME_PATTERN;\n\n\n/**\n * The methods that typically come along with form data.  We set different\n * headers depending on whether the HTTP action is one of these.\n * @type {!Array<string>}\n */\ngoog.net.XhrIo.METHODS_WITH_FORM_DATA = ['POST', 'PUT'];\n\n\n/**\n * The Content-Type HTTP header value for a url-encoded form\n * @type {string}\n */\ngoog.net.XhrIo.FORM_CONTENT_TYPE =\n    'application/x-www-form-urlencoded;charset=utf-8';\n\n\n/**\n * The XMLHttpRequest Level two timeout delay ms property name.\n *\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-timeout-attribute\n *\n * @private {string}\n * @const\n */\ngoog.net.XhrIo.XHR2_TIMEOUT_ = 'timeout';\n\n\n/**\n * The XMLHttpRequest Level two ontimeout handler property name.\n *\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-timeout-attribute\n *\n * @private {string}\n * @const\n */\ngoog.net.XhrIo.XHR2_ON_TIMEOUT_ = 'ontimeout';\n\n\n/**\n * All non-disposed instances of goog.net.XhrIo created\n * by {@link goog.net.XhrIo.send} are in this Array.\n * @see goog.net.XhrIo.cleanup\n * @private {!Array<!goog.net.XhrIo>}\n */\ngoog.net.XhrIo.sendInstances_ = [];\n\n\n/**\n * Static send that creates a short lived instance of XhrIo to send the\n * request.\n * @see goog.net.XhrIo.cleanup\n * @param {string|goog.Uri} url Uri to make request to.\n * @param {?function(this:goog.net.XhrIo, ?)=} opt_callback Callback function\n *     for when request is complete.\n * @param {string=} opt_method Send method, default: GET.\n * @param {ArrayBuffer|ArrayBufferView|Blob|Document|FormData|string=}\n *     opt_content Body data.\n * @param {(?Object|?goog.collections.maps.MapLike<string, string>)=}\n *     opt_headers Map of headers to add to the request.\n * @param {number=} opt_timeoutInterval Number of milliseconds after which an\n *     incomplete request will be aborted; 0 means no timeout is set.\n * @param {boolean=} opt_withCredentials Whether to send credentials with the\n *     request. Default to false. See {@link goog.net.XhrIo#setWithCredentials}.\n * @return {!goog.net.XhrIo} The sent XhrIo.\n */\ngoog.net.XhrIo.send = function(\n    url, opt_callback, opt_method, opt_content, opt_headers,\n    opt_timeoutInterval, opt_withCredentials) {\n  'use strict';\n  const x = new goog.net.XhrIo();\n  goog.net.XhrIo.sendInstances_.push(x);\n  if (opt_callback) {\n    x.listen(goog.net.EventType.COMPLETE, opt_callback);\n  }\n  x.listenOnce(goog.net.EventType.READY, x.cleanupSend_);\n  if (opt_timeoutInterval) {\n    x.setTimeoutInterval(opt_timeoutInterval);\n  }\n  if (opt_withCredentials) {\n    x.setWithCredentials(opt_withCredentials);\n  }\n  x.send(url, opt_method, opt_content, opt_headers);\n  return x;\n};\n\n\n/**\n * Disposes all non-disposed instances of goog.net.XhrIo created by\n * {@link goog.net.XhrIo.send}.\n * {@link goog.net.XhrIo.send} cleans up the goog.net.XhrIo instance\n * it creates when the request completes or fails.  However, if\n * the request never completes, then the goog.net.XhrIo is not disposed.\n * This can occur if the window is unloaded before the request completes.\n * We could have {@link goog.net.XhrIo.send} return the goog.net.XhrIo\n * it creates and make the client of {@link goog.net.XhrIo.send} be\n * responsible for disposing it in this case.  However, this makes things\n * significantly more complicated for the client, and the whole point\n * of {@link goog.net.XhrIo.send} is that it's simple and easy to use.\n * Clients of {@link goog.net.XhrIo.send} should call\n * {@link goog.net.XhrIo.cleanup} when doing final\n * cleanup on window unload.\n */\ngoog.net.XhrIo.cleanup = function() {\n  'use strict';\n  const instances = goog.net.XhrIo.sendInstances_;\n  while (instances.length) {\n    instances.pop().dispose();\n  }\n};\n\n\n/**\n * Installs exception protection for all entry point introduced by\n * goog.net.XhrIo instances which are not protected by\n * {@link goog.debug.ErrorHandler#protectWindowSetTimeout},\n * {@link goog.debug.ErrorHandler#protectWindowSetInterval}, or\n * {@link goog.events.protectBrowserEventEntryPoint}.\n *\n * @param {goog.debug.ErrorHandler} errorHandler Error handler with which to\n *     protect the entry point(s).\n */\ngoog.net.XhrIo.protectEntryPoints = function(errorHandler) {\n  'use strict';\n  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ =\n      errorHandler.protectEntryPoint(\n          goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);\n};\n\n\n/**\n * Disposes of the specified goog.net.XhrIo created by\n * {@link goog.net.XhrIo.send} and removes it from\n * {@link goog.net.XhrIo.pendingStaticSendInstances_}.\n * @private\n */\ngoog.net.XhrIo.prototype.cleanupSend_ = function() {\n  'use strict';\n  this.dispose();\n  goog.array.remove(goog.net.XhrIo.sendInstances_, this);\n};\n\n\n/**\n * Returns the number of milliseconds after which an incomplete request will be\n * aborted, or 0 if no timeout is set.\n * @return {number} Timeout interval in milliseconds.\n */\ngoog.net.XhrIo.prototype.getTimeoutInterval = function() {\n  'use strict';\n  return this.timeoutInterval_;\n};\n\n\n/**\n * Sets the number of milliseconds after which an incomplete request will be\n * aborted and a {@link goog.net.EventType.TIMEOUT} event raised; 0 means no\n * timeout is set.\n * @param {number} ms Timeout interval in milliseconds; 0 means none.\n */\ngoog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {\n  'use strict';\n  this.timeoutInterval_ = Math.max(0, ms);\n};\n\n\n/**\n * Sets the desired type for the response. At time of writing, this is only\n * supported in very recent versions of WebKit (10.0.612.1 dev and later).\n *\n * If this is used, the response may only be accessed via {@link #getResponse}.\n *\n * @param {goog.net.XhrIo.ResponseType} type The desired type for the response.\n */\ngoog.net.XhrIo.prototype.setResponseType = function(type) {\n  'use strict';\n  this.responseType_ = type;\n};\n\n\n/**\n * Gets the desired type for the response.\n * @return {goog.net.XhrIo.ResponseType} The desired type for the response.\n */\ngoog.net.XhrIo.prototype.getResponseType = function() {\n  'use strict';\n  return this.responseType_;\n};\n\n\n/**\n * Sets whether a \"credentialed\" request that is aware of cookie and\n * authentication information should be made. This option is only supported by\n * browsers that support HTTP Access Control. As of this writing, this option\n * is not supported in IE.\n *\n * @param {boolean} withCredentials Whether this should be a \"credentialed\"\n *     request.\n */\ngoog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {\n  'use strict';\n  this.withCredentials_ = withCredentials;\n};\n\n\n/**\n * Gets whether a \"credentialed\" request is to be sent.\n * @return {boolean} The desired type for the response.\n */\ngoog.net.XhrIo.prototype.getWithCredentials = function() {\n  'use strict';\n  return this.withCredentials_;\n};\n\n\n/**\n * Sets whether progress events are enabled for this request. Note\n * that progress events require pre-flight OPTIONS request handling\n * for CORS requests, and may cause trouble with older browsers. See\n * progressEventsEnabled_ for details.\n * @param {boolean} enabled Whether progress events should be enabled.\n */\ngoog.net.XhrIo.prototype.setProgressEventsEnabled = function(enabled) {\n  'use strict';\n  this.progressEventsEnabled_ = enabled;\n};\n\n\n/**\n * Gets whether progress events are enabled.\n * @return {boolean} Whether progress events are enabled for this request.\n */\ngoog.net.XhrIo.prototype.getProgressEventsEnabled = function() {\n  'use strict';\n  return this.progressEventsEnabled_;\n};\n\n/**\n * Specify a Trust Tokens operation to execute alongside the request.\n * @param {!TrustTokenAttributeType} trustToken a Trust Tokens operation to\n *     execute.\n */\ngoog.net.XhrIo.prototype.setTrustToken = function(trustToken) {\n  'use strict';\n  this.trustToken_ = trustToken;\n};\n\n/**\n * Instance send that actually uses XMLHttpRequest to make a server call.\n * @param {string|goog.Uri} url Uri to make request to.\n * @param {string=} opt_method Send method, default: GET.\n * @param {ArrayBuffer|ArrayBufferView|Blob|Document|FormData|string=}\n *     opt_content Body data.\n * @param {(?Object|?goog.collections.maps.MapLike<string, string>)=}\n *     opt_headers Map of headers to add to the request.\n * @suppress {deprecated} Use deprecated goog.structs.forEach to allow different\n * types of parameters for opt_headers.\n */\ngoog.net.XhrIo.prototype.send = function(\n    url, opt_method, opt_content, opt_headers) {\n  'use strict';\n  if (this.xhr_) {\n    throw new Error(\n        '[goog.net.XhrIo] Object is active with another request=' +\n        this.lastUri_ + '; newUri=' + url);\n  }\n\n  const method = opt_method ? opt_method.toUpperCase() : 'GET';\n\n  this.lastUri_ = url;\n  this.lastError_ = '';\n  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;\n  this.lastMethod_ = method;\n  this.errorDispatched_ = false;\n  this.active_ = true;\n\n  // Use the factory to create the XHR object and options\n  this.xhr_ = this.createXhr();\n  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() :\n                                            goog.net.XmlHttp.getOptions();\n\n  // Set up the onreadystatechange callback\n  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);\n\n  // Set up upload/download progress events, if progress events are supported.\n  if (this.getProgressEventsEnabled() && 'onprogress' in this.xhr_) {\n    this.xhr_.onprogress = goog.bind(function(e) {\n      'use strict';\n      this.onProgressHandler_(e, true);\n    }, this);\n    if (this.xhr_.upload) {\n      this.xhr_.upload.onprogress = goog.bind(this.onProgressHandler_, this);\n    }\n  }\n\n  /**\n   * Try to open the XMLHttpRequest (always async), if an error occurs here it\n   * is generally permission denied\n   */\n  try {\n    goog.log.fine(this.logger_, this.formatMsg_('Opening Xhr'));\n    this.inOpen_ = true;\n    this.xhr_.open(method, String(url), true);  // Always async!\n    this.inOpen_ = false;\n  } catch (err) {\n    goog.log.fine(\n        this.logger_, this.formatMsg_('Error opening Xhr: ' + err.message));\n    this.error_(goog.net.ErrorCode.EXCEPTION, err);\n    return;\n  }\n\n  // We can't use null since this won't allow requests with form data to have a\n  // content length specified which will cause some proxies to return a 411\n  // error.\n  const content = opt_content || '';\n\n  const headers = new Map(this.headers);\n\n  // Add headers specific to this request\n  if (opt_headers) {\n    if (Object.getPrototypeOf(opt_headers) === Object.prototype) {\n      for (let key in opt_headers) {\n        headers.set(key, opt_headers[key]);\n      }\n    } else if (\n        typeof opt_headers.keys === 'function' &&\n        typeof opt_headers.get === 'function') {\n      for (const key of opt_headers.keys()) {\n        headers.set(key, opt_headers.get(key));\n      }\n    } else {\n      throw new Error(\n          'Unknown input type for opt_headers: ' + String(opt_headers));\n    }\n  }\n\n  // Find whether a content type header is set, ignoring case.\n  // HTTP header names are case-insensitive.  See:\n  // http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2\n  const contentTypeKey =\n      Array.from(headers.keys())\n          .find(\n              header => goog.string.caseInsensitiveEquals(\n                  goog.net.XhrIo.CONTENT_TYPE_HEADER, header));\n\n  const contentIsFormData =\n      (goog.global['FormData'] && (content instanceof goog.global['FormData']));\n  if (goog.array.contains(goog.net.XhrIo.METHODS_WITH_FORM_DATA, method) &&\n      !contentTypeKey && !contentIsFormData) {\n    // For requests typically with form data, default to the url-encoded form\n    // content type unless this is a FormData request.  For FormData,\n    // the browser will automatically add a multipart/form-data content type\n    // with an appropriate multipart boundary.\n    headers.set(\n        goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE);\n  }\n\n  // Add the headers to the Xhr object\n  for (const [key, value] of headers) {\n    this.xhr_.setRequestHeader(key, value);\n  }\n\n  if (this.responseType_) {\n    this.xhr_.responseType = this.responseType_;\n  }\n  // Set xhr_.withCredentials only when the value is different, or else in\n  // synchronous XMLHtppRequest.open Firefox will throw an exception.\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=736340\n  if ('withCredentials' in this.xhr_ &&\n      this.xhr_.withCredentials !== this.withCredentials_) {\n    this.xhr_.withCredentials = this.withCredentials_;\n  }\n\n  if ('setTrustToken' in this.xhr_ && this.trustToken_) {\n    try {\n      this.xhr_.setTrustToken(this.trustToken_);\n    } catch (err) {\n      goog.log.fine(\n          this.logger_, this.formatMsg_('Error SetTrustToken: ' + err.message));\n    }\n  }\n  /**\n   * Try to send the request, or other wise report an error (404 not found).\n   */\n  try {\n    this.cleanUpTimeoutTimer_();  // Paranoid, should never be running.\n    if (this.timeoutInterval_ > 0) {\n      this.useXhr2Timeout_ = goog.net.XhrIo.shouldUseXhr2Timeout_(this.xhr_);\n      goog.log.fine(\n          this.logger_,\n          this.formatMsg_(\n              'Will abort after ' + this.timeoutInterval_ +\n              'ms if incomplete, xhr2 ' + this.useXhr2Timeout_));\n      if (this.useXhr2Timeout_) {\n        this.xhr_[goog.net.XhrIo.XHR2_TIMEOUT_] = this.timeoutInterval_;\n        this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] =\n            goog.bind(this.timeout_, this);\n      } else {\n        this.timeoutId_ =\n            goog.Timer.callOnce(this.timeout_, this.timeoutInterval_, this);\n      }\n    }\n    goog.log.fine(this.logger_, this.formatMsg_('Sending request'));\n    this.inSend_ = true;\n    this.xhr_.send(content);\n    this.inSend_ = false;\n\n  } catch (err) {\n    goog.log.fine(this.logger_, this.formatMsg_('Send error: ' + err.message));\n    this.error_(goog.net.ErrorCode.EXCEPTION, err);\n  }\n};\n\n\n/**\n * Determines if the argument is an XMLHttpRequest that supports the level 2\n * timeout value and event.\n *\n * Currently, FF 21.0 OS X has the fields but won't actually call the timeout\n * handler.  Perhaps the confusion in the bug referenced below hasn't\n * entirely been resolved.\n *\n * @see http://www.w3.org/TR/XMLHttpRequest/#the-timeout-attribute\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=525816\n *\n * @param {!goog.net.XhrLike.OrNative} xhr The request.\n * @return {boolean} True if the request supports level 2 timeout.\n * @private\n */\ngoog.net.XhrIo.shouldUseXhr2Timeout_ = function(xhr) {\n  'use strict';\n  return goog.userAgent.IE && goog.userAgent.isVersionOrHigher(9) &&\n      typeof xhr[goog.net.XhrIo.XHR2_TIMEOUT_] === 'number' &&\n      xhr[goog.net.XhrIo.XHR2_ON_TIMEOUT_] !== undefined;\n};\n\n\n/**\n * Creates a new XHR object.\n * @return {!goog.net.XhrLike.OrNative} The newly created XHR object.\n * @protected\n */\ngoog.net.XhrIo.prototype.createXhr = function() {\n  'use strict';\n  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() :\n                                goog.net.XmlHttp();\n};\n\n\n/**\n * The request didn't complete after {@link goog.net.XhrIo#timeoutInterval_}\n * milliseconds; raises a {@link goog.net.EventType.TIMEOUT} event and aborts\n * the request.\n * @private\n */\ngoog.net.XhrIo.prototype.timeout_ = function() {\n  'use strict';\n  if (typeof goog == 'undefined') {\n    // If goog is undefined then the callback has occurred as the application\n    // is unloading and will error.  Thus we let it silently fail.\n  } else if (this.xhr_) {\n    this.lastError_ =\n        'Timed out after ' + this.timeoutInterval_ + 'ms, aborting';\n    this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;\n    goog.log.fine(this.logger_, this.formatMsg_(this.lastError_));\n    this.dispatchEvent(goog.net.EventType.TIMEOUT);\n    this.abort(goog.net.ErrorCode.TIMEOUT);\n  }\n};\n\n\n/**\n * Something errorred, so inactivate, fire error callback and clean up\n * @param {goog.net.ErrorCode} errorCode The error code.\n * @param {Error} err The error object.\n * @private\n */\ngoog.net.XhrIo.prototype.error_ = function(errorCode, err) {\n  'use strict';\n  this.active_ = false;\n  if (this.xhr_) {\n    this.inAbort_ = true;\n    this.xhr_.abort();  // Ensures XHR isn't hung (FF)\n    this.inAbort_ = false;\n  }\n  this.lastError_ = err;\n  this.lastErrorCode_ = errorCode;\n  this.dispatchErrors_();\n  this.cleanUpXhr_();\n};\n\n\n/**\n * Dispatches COMPLETE and ERROR in case of an error. This ensures that we do\n * not dispatch multiple error events.\n * @private\n */\ngoog.net.XhrIo.prototype.dispatchErrors_ = function() {\n  'use strict';\n  if (!this.errorDispatched_) {\n    this.errorDispatched_ = true;\n    this.dispatchEvent(goog.net.EventType.COMPLETE);\n    this.dispatchEvent(goog.net.EventType.ERROR);\n  }\n};\n\n\n/**\n * Abort the current XMLHttpRequest\n * @param {goog.net.ErrorCode=} opt_failureCode Optional error code to use -\n *     defaults to ABORT.\n */\ngoog.net.XhrIo.prototype.abort = function(opt_failureCode) {\n  'use strict';\n  if (this.xhr_ && this.active_) {\n    goog.log.fine(this.logger_, this.formatMsg_('Aborting'));\n    this.active_ = false;\n    this.inAbort_ = true;\n    this.xhr_.abort();\n    this.inAbort_ = false;\n    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;\n    this.dispatchEvent(goog.net.EventType.COMPLETE);\n    this.dispatchEvent(goog.net.EventType.ABORT);\n    this.cleanUpXhr_();\n  }\n};\n\n\n/**\n * Nullifies all callbacks to reduce risks of leaks.\n * @override\n * @protected\n */\ngoog.net.XhrIo.prototype.disposeInternal = function() {\n  'use strict';\n  if (this.xhr_) {\n    // We explicitly do not call xhr_.abort() unless active_ is still true.\n    // This is to avoid unnecessarily aborting a successful request when\n    // dispose() is called in a callback triggered by a complete response, but\n    // in which browser cleanup has not yet finished.\n    // (See http://b/issue?id=1684217.)\n    if (this.active_) {\n      this.active_ = false;\n      this.inAbort_ = true;\n      this.xhr_.abort();\n      this.inAbort_ = false;\n    }\n    this.cleanUpXhr_(true);\n  }\n\n  XhrIo.base(this, 'disposeInternal');\n};\n\n\n/**\n * Internal handler for the XHR object's readystatechange event.  This method\n * checks the status and the readystate and fires the correct callbacks.\n * If the request has ended, the handlers are cleaned up and the XHR object is\n * nullified.\n * @private\n */\ngoog.net.XhrIo.prototype.onReadyStateChange_ = function() {\n  'use strict';\n  if (this.isDisposed()) {\n    // This method is the target of an untracked goog.Timer.callOnce().\n    return;\n  }\n  if (!this.inOpen_ && !this.inSend_ && !this.inAbort_) {\n    // Were not being called from within a call to this.xhr_.send\n    // this.xhr_.abort, or this.xhr_.open, so this is an entry point\n    this.onReadyStateChangeEntryPoint_();\n  } else {\n    this.onReadyStateChangeHelper_();\n  }\n};\n\n\n/**\n * Used to protect the onreadystatechange handler entry point.  Necessary\n * as {#onReadyStateChange_} maybe called from within send or abort, this\n * method is only called when {#onReadyStateChange_} is called as an\n * entry point.\n * {@see #protectEntryPoints}\n * @private\n */\ngoog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {\n  'use strict';\n  this.onReadyStateChangeHelper_();\n};\n\n\n/**\n * Helper for {@link #onReadyStateChange_}.  This is used so that\n * entry point calls to {@link #onReadyStateChange_} can be routed through\n * {@link #onReadyStateChangeEntryPoint_}.\n * @private\n */\ngoog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {\n  'use strict';\n  if (!this.active_) {\n    // can get called inside abort call\n    return;\n  }\n\n  if (typeof goog == 'undefined') {\n    // NOTE(user): If goog is undefined then the callback has occurred as the\n    // application is unloading and will error.  Thus we let it silently fail.\n\n  } else if (\n      this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] &&\n      this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE &&\n      this.getStatus() == 2) {\n    // NOTE(user): In IE if send() errors on a *local* request the readystate\n    // is still changed to COMPLETE.  We need to ignore it and allow the\n    // try/catch around send() to pick up the error.\n    goog.log.fine(\n        this.logger_,\n        this.formatMsg_('Local request error detected and ignored'));\n\n  } else {\n    // In IE when the response has been cached we sometimes get the callback\n    // from inside the send call and this usually breaks code that assumes that\n    // XhrIo is asynchronous.  If that is the case we delay the callback\n    // using a timer.\n    if (this.inSend_ &&\n        this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {\n      goog.Timer.callOnce(this.onReadyStateChange_, 0, this);\n      return;\n    }\n\n    this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);\n\n    // readyState indicates the transfer has finished\n    if (this.isComplete()) {\n      goog.log.fine(this.logger_, this.formatMsg_('Request complete'));\n\n      this.active_ = false;\n\n      try {\n        // Call the specific callbacks for success or failure. Only call the\n        // success if the status is 200 (HTTP_OK) or 304 (HTTP_CACHED)\n        if (this.isSuccess()) {\n          this.dispatchEvent(goog.net.EventType.COMPLETE);\n          this.dispatchEvent(goog.net.EventType.SUCCESS);\n        } else {\n          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;\n          this.lastError_ =\n              this.getStatusText() + ' [' + this.getStatus() + ']';\n          this.dispatchErrors_();\n        }\n      } finally {\n        this.cleanUpXhr_();\n      }\n    }\n  }\n};\n\n\n/**\n * Internal handler for the XHR object's onprogress event. Fires both a generic\n * PROGRESS event and either a DOWNLOAD_PROGRESS or UPLOAD_PROGRESS event to\n * allow specific binding for each XHR progress event.\n * @param {!ProgressEvent} e XHR progress event.\n * @param {boolean=} opt_isDownload Whether the current progress event is from a\n *     download. Used to determine whether DOWNLOAD_PROGRESS or UPLOAD_PROGRESS\n *     event should be dispatched.\n * @private\n */\ngoog.net.XhrIo.prototype.onProgressHandler_ = function(e, opt_isDownload) {\n  'use strict';\n  goog.asserts.assert(\n      e.type === goog.net.EventType.PROGRESS,\n      'goog.net.EventType.PROGRESS is of the same type as raw XHR progress.');\n  this.dispatchEvent(\n      goog.net.XhrIo.buildProgressEvent_(e, goog.net.EventType.PROGRESS));\n  this.dispatchEvent(goog.net.XhrIo.buildProgressEvent_(\n      e,\n      opt_isDownload ? goog.net.EventType.DOWNLOAD_PROGRESS :\n                       goog.net.EventType.UPLOAD_PROGRESS));\n};\n\n\n/**\n * Creates a representation of the native ProgressEvent. IE doesn't support\n * constructing ProgressEvent via \"new\", and the alternatives (e.g.,\n * ProgressEvent.initProgressEvent) are non-standard or deprecated.\n * @param {!ProgressEvent} e XHR progress event.\n * @param {!goog.net.EventType} eventType The type of the event.\n * @return {!ProgressEvent} The progress event.\n * @private\n */\ngoog.net.XhrIo.buildProgressEvent_ = function(e, eventType) {\n  'use strict';\n  return /** @type {!ProgressEvent} */ ({\n    type: eventType,\n    lengthComputable: e.lengthComputable,\n    loaded: e.loaded,\n    total: e.total,\n  });\n};\n\n\n/**\n * Remove the listener to protect against leaks, and nullify the XMLHttpRequest\n * object.\n * @param {boolean=} opt_fromDispose If this is from the dispose (don't want to\n *     fire any events).\n * @private\n */\ngoog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {\n  'use strict';\n  if (this.xhr_) {\n    // Cancel any pending timeout event handler.\n    this.cleanUpTimeoutTimer_();\n\n    // Save reference so we can mark it as closed after the READY event.  The\n    // READY event may trigger another request, thus we must nullify this.xhr_\n    const xhr = this.xhr_;\n    const clearedOnReadyStateChange =\n        this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ?\n        goog.nullFunction :\n        null;\n    this.xhr_ = null;\n    this.xhrOptions_ = null;\n\n    if (!opt_fromDispose) {\n      this.dispatchEvent(goog.net.EventType.READY);\n    }\n\n    try {\n      // NOTE(user): Not nullifying in FireFox can still leak if the callbacks\n      // are defined in the same scope as the instance of XhrIo. But, IE doesn't\n      // allow you to set the onreadystatechange to NULL so nullFunction is\n      // used.\n      xhr.onreadystatechange = clearedOnReadyStateChange;\n    } catch (e) {\n      // This seems to occur with a Gears HTTP request. Delayed the setting of\n      // this onreadystatechange until after READY is sent out and catching the\n      // error to see if we can track down the problem.\n      goog.log.error(\n          this.logger_,\n          'Problem encountered resetting onreadystatechange: ' + e.message);\n    }\n  }\n};\n\n\n/**\n * Make sure the timeout timer isn't running.\n * @private\n */\ngoog.net.XhrIo.prototype.cleanUpTimeoutTimer_ = function() {\n  'use strict';\n  if (this.xhr_ && this.useXhr2Timeout_) {\n    this.xhr_[goog.net.XhrIo.XHR2_ON_TIMEOUT_] = null;\n  }\n  if (this.timeoutId_) {\n    goog.Timer.clear(this.timeoutId_);\n    this.timeoutId_ = null;\n  }\n};\n\n\n/**\n * @return {boolean} Whether there is an active request.\n */\ngoog.net.XhrIo.prototype.isActive = function() {\n  'use strict';\n  return !!this.xhr_;\n};\n\n\n/**\n * @return {boolean} Whether the request has completed.\n */\ngoog.net.XhrIo.prototype.isComplete = function() {\n  'use strict';\n  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;\n};\n\n\n/**\n * @return {boolean} Whether the request completed with a success.\n */\ngoog.net.XhrIo.prototype.isSuccess = function() {\n  'use strict';\n  const status = this.getStatus();\n  // A zero status code is considered successful for local files.\n  return goog.net.HttpStatus.isSuccess(status) ||\n      status === 0 && !this.isLastUriEffectiveSchemeHttp_();\n};\n\n\n/**\n * @return {boolean} whether the effective scheme of the last URI that was\n *     fetched was 'http' or 'https'.\n * @private\n */\ngoog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {\n  'use strict';\n  const scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));\n  return HTTP_SCHEME_PATTERN.test(scheme);\n};\n\n\n/**\n * Get the readystate from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @return {goog.net.XmlHttp.ReadyState} goog.net.XmlHttp.ReadyState.*.\n */\ngoog.net.XhrIo.prototype.getReadyState = function() {\n  'use strict';\n  return this.xhr_ ?\n      /** @type {goog.net.XmlHttp.ReadyState} */ (this.xhr_.readyState) :\n      goog.net.XmlHttp.ReadyState.UNINITIALIZED;\n};\n\n\n/**\n * Get the status from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @return {number} Http status.\n */\ngoog.net.XhrIo.prototype.getStatus = function() {\n  'use strict';\n  /**\n   * IE doesn't like you checking status until the readystate is greater than 2\n   * (i.e. it is receiving or complete).  The try/catch is used for when the\n   * page is unloading and an ERROR_NOT_AVAILABLE may occur when accessing xhr_.\n   */\n  try {\n    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ?\n        this.xhr_.status :\n        -1;\n  } catch (e) {\n    return -1;\n  }\n};\n\n\n/**\n * Get the status text from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @return {string} Status text.\n */\ngoog.net.XhrIo.prototype.getStatusText = function() {\n  'use strict';\n  /**\n   * IE doesn't like you checking status until the readystate is greater than 2\n   * (i.e. it is receiving or complete).  The try/catch is used for when the\n   * page is unloading and an ERROR_NOT_AVAILABLE may occur when accessing xhr_.\n   */\n  try {\n    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ?\n        this.xhr_.statusText :\n        '';\n  } catch (e) {\n    goog.log.fine(this.logger_, 'Can not get status: ' + e.message);\n    return '';\n  }\n};\n\n\n/**\n * Get the last Uri that was requested\n * @return {string} Last Uri.\n */\ngoog.net.XhrIo.prototype.getLastUri = function() {\n  'use strict';\n  return String(this.lastUri_);\n};\n\n\n/**\n * Get the response text from the Xhr object\n * Will only return correct result when called from the context of a callback.\n * @return {string} Result from the server, or '' if no result available.\n */\ngoog.net.XhrIo.prototype.getResponseText = function() {\n  'use strict';\n  try {\n    return this.xhr_ ? this.xhr_.responseText : '';\n  } catch (e) {\n    // http://www.w3.org/TR/XMLHttpRequest/#the-responsetext-attribute\n    // states that responseText should return '' (and responseXML null)\n    // when the state is not LOADING or DONE. Instead, IE can\n    // throw unexpected exceptions, for example when a request is aborted\n    // or no data is available yet.\n    goog.log.fine(this.logger_, 'Can not get responseText: ' + e.message);\n    return '';\n  }\n};\n\n\n/**\n * Get the response body from the Xhr object. This property is only available\n * in IE since version 7 according to MSDN:\n * http://msdn.microsoft.com/en-us/library/ie/ms534368(v=vs.85).aspx\n * Will only return correct result when called from the context of a callback.\n *\n * One option is to construct a VBArray from the returned object and convert\n * it to a JavaScript array using the toArray method:\n * `(new window['VBArray'](xhrIo.getResponseBody())).toArray()`\n * This will result in an array of numbers in the range of [0..255]\n *\n * Another option is to use the VBScript CStr method to convert it into a\n * string as outlined in http://stackoverflow.com/questions/1919972\n *\n * @return {Object} Binary result from the server or null if not available.\n */\ngoog.net.XhrIo.prototype.getResponseBody = function() {\n  'use strict';\n  try {\n    if (this.xhr_ && 'responseBody' in this.xhr_) {\n      return this.xhr_['responseBody'];\n    }\n  } catch (e) {\n    // IE can throw unexpected exceptions, for example when a request is aborted\n    // or no data is yet available.\n    goog.log.fine(this.logger_, 'Can not get responseBody: ' + e.message);\n  }\n  return null;\n};\n\n\n/**\n * Get the response XML from the Xhr object\n * Will only return correct result when called from the context of a callback.\n * @return {Document} The DOM Document representing the XML file, or null\n * if no result available.\n */\ngoog.net.XhrIo.prototype.getResponseXml = function() {\n  'use strict';\n  try {\n    return this.xhr_ ? this.xhr_.responseXML : null;\n  } catch (e) {\n    goog.log.fine(this.logger_, 'Can not get responseXML: ' + e.message);\n    return null;\n  }\n};\n\n\n/**\n * Get the response and evaluates it as JSON from the Xhr object\n * Will only return correct result when called from the context of a callback\n * @param {string=} opt_xssiPrefix Optional XSSI prefix string to use for\n *     stripping of the response before parsing. This needs to be set only if\n *     your backend server prepends the same prefix string to the JSON response.\n * @throws Error if the response text is invalid JSON.\n * @return {Object|undefined} JavaScript object.\n */\ngoog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {\n  'use strict';\n  if (!this.xhr_) {\n    return undefined;\n  }\n\n  let responseText = this.xhr_.responseText;\n  if (opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {\n    responseText = responseText.substring(opt_xssiPrefix.length);\n  }\n\n  return goog.json.hybrid.parse(responseText);\n};\n\n\n/**\n * Get the response as the type specificed by {@link #setResponseType}. At time\n * of writing, this is only directly supported in very recent versions of WebKit\n * (10.0.612.1 dev and later). If the field is not supported directly, we will\n * try to emulate it.\n *\n * Emulating the response means following the rules laid out at\n * http://www.w3.org/TR/XMLHttpRequest/#the-response-attribute\n *\n * On browsers with no support for this (Chrome < 10, Firefox < 4, etc), only\n * response types of DEFAULT or TEXT may be used, and the response returned will\n * be the text response.\n *\n * On browsers with Mozilla's draft support for array buffers (Firefox 4, 5),\n * only response types of DEFAULT, TEXT, and ARRAY_BUFFER may be used, and the\n * response returned will be either the text response or the Mozilla\n * implementation of the array buffer response.\n *\n * On browsers will full support, any valid response type supported by the\n * browser may be used, and the response provided by the browser will be\n * returned.\n *\n * @return {*} The response.\n */\ngoog.net.XhrIo.prototype.getResponse = function() {\n  'use strict';\n  try {\n    if (!this.xhr_) {\n      return null;\n    }\n    if ('response' in this.xhr_) {\n      return this.xhr_.response;\n    }\n    switch (this.responseType_) {\n      case ResponseType.DEFAULT:\n      case ResponseType.TEXT:\n        return this.xhr_.responseText;\n      // DOCUMENT and BLOB don't need to be handled here because they are\n      // introduced in the same spec that adds the .response field, and would\n      // have been caught above.\n      // ARRAY_BUFFER needs an implementation for Firefox 4, where it was\n      // implemented using a draft spec rather than the final spec.\n      case ResponseType.ARRAY_BUFFER:\n        if ('mozResponseArrayBuffer' in this.xhr_) {\n          return this.xhr_.mozResponseArrayBuffer;\n        }\n    }\n    // Fell through to a response type that is not supported on this browser.\n    goog.log.error(\n        this.logger_,\n        'Response type ' + this.responseType_ + ' is not ' +\n            'supported on this browser');\n    return null;\n  } catch (e) {\n    goog.log.fine(this.logger_, 'Can not get response: ' + e.message);\n    return null;\n  }\n};\n\n\n/**\n * Get the value of the response-header with the given name from the Xhr object\n * Will only return correct result when called from the context of a callback\n * and the request has completed\n * @param {string} key The name of the response-header to retrieve.\n * @return {string|undefined} The value of the response-header named key.\n */\ngoog.net.XhrIo.prototype.getResponseHeader = function(key) {\n  'use strict';\n  if (!this.xhr_ || !this.isComplete()) {\n    return undefined;\n  }\n\n  const value = this.xhr_.getResponseHeader(key);\n  return value === null ? undefined : value;\n};\n\n\n/**\n * Gets the text of all the headers in the response.\n * Will only return correct result when called from the context of a callback\n * and the request has completed.\n * @return {string} The value of the response headers or empty string.\n */\ngoog.net.XhrIo.prototype.getAllResponseHeaders = function() {\n  'use strict';\n  // getAllResponseHeaders can return null if no response has been received,\n  // ensure we always return an empty string.\n  return this.xhr_ && this.isComplete() ?\n      (this.xhr_.getAllResponseHeaders() || '') :\n      '';\n};\n\n\n/**\n * Returns all response headers as a key-value map.\n * Multiple values for the same header key can be combined into one,\n * separated by a comma and a space.\n * Note that the native getResponseHeader method for retrieving a single header\n * does a case insensitive match on the header name. This method does not\n * include any case normalization logic, it will just return a key-value\n * representation of the headers.\n * See: http://www.w3.org/TR/XMLHttpRequest/#the-getresponseheader()-method\n * @return {!Object<string, string>} An object with the header keys as keys\n *     and header values as values.\n */\ngoog.net.XhrIo.prototype.getResponseHeaders = function() {\n  'use strict';\n  // TODO(user): Make this function parse headers as per the spec\n  // (https://tools.ietf.org/html/rfc2616#section-4.2).\n\n  const headersObject = {};\n  const headersArray = this.getAllResponseHeaders().split('\\r\\n');\n  for (let i = 0; i < headersArray.length; i++) {\n    if (goog.string.isEmptyOrWhitespace(headersArray[i])) {\n      continue;\n    }\n    const keyValue =\n        goog.string.splitLimit(headersArray[i], ':', /* maxSplitCount= */ 1);\n    const key = keyValue[0];\n    let value = keyValue[1];\n\n    if (typeof value !== 'string') {\n      // There must be a value but it can be the empty string.\n      continue;\n    }\n\n    // Whitespace at the start and end of the value is meaningless.\n    value = value.trim();\n    // The key should not contain whitespace but we currently ignore that.\n\n    const values = headersObject[key] || [];\n    headersObject[key] = values;\n    values.push(value);\n  }\n\n  return goog.object.map(headersObject, function(values) {\n    'use strict';\n    return values.join(', ');\n  });\n};\n\n\n/**\n * Get the value of the response-header with the given name from the Xhr object.\n * As opposed to {@link #getResponseHeader}, this method does not require that\n * the request has completed.\n * @param {string} key The name of the response-header to retrieve.\n * @return {?string} The value of the response-header, or null if it is\n *     unavailable.\n */\ngoog.net.XhrIo.prototype.getStreamingResponseHeader = function(key) {\n  'use strict';\n  return this.xhr_ ? this.xhr_.getResponseHeader(key) : null;\n};\n\n\n/**\n * Gets the text of all the headers in the response. As opposed to\n * {@link #getAllResponseHeaders}, this method does not require that the request\n * has completed.\n * @return {string} The value of the response headers or empty string.\n */\ngoog.net.XhrIo.prototype.getAllStreamingResponseHeaders = function() {\n  'use strict';\n  return this.xhr_ ? this.xhr_.getAllResponseHeaders() : '';\n};\n\n\n/**\n * Get the last error message\n * @return {!goog.net.ErrorCode} Last error code.\n */\ngoog.net.XhrIo.prototype.getLastErrorCode = function() {\n  'use strict';\n  return this.lastErrorCode_;\n};\n\n\n/**\n * Get the last error message\n * @return {string} Last error message.\n */\ngoog.net.XhrIo.prototype.getLastError = function() {\n  'use strict';\n  return typeof this.lastError_ === 'string' ? this.lastError_ :\n                                               String(this.lastError_);\n};\n\n\n/**\n * Adds the last method, status and URI to the message.  This is used to add\n * this information to the logging calls.\n * @param {string} msg The message text that we want to add the extra text to.\n * @return {string} The message with the extra text appended.\n * @private\n */\ngoog.net.XhrIo.prototype.formatMsg_ = function(msg) {\n  'use strict';\n  return msg + ' [' + this.lastMethod_ + ' ' + this.lastUri_ + ' ' +\n      this.getStatus() + ']';\n};\n\n\n// Register the xhr handler as an entry point, so that\n// it can be monitored for exception handling, etc.\ngoog.debug.entryPointRegistry.register(\n    /**\n     * @param {function(!Function): !Function} transformer The transforming\n     *     function.\n     */\n    function(transformer) {\n      'use strict';\n      goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ =\n          transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_);\n    });\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A patched, standardized event object for browser events.\n *\n * <pre>\n * The patched event object contains the following members:\n * - type           {string}    Event type, e.g. 'click'\n * - target         {Object}    The element that actually triggered the event\n * - currentTarget  {Object}    The element the listener is attached to\n * - relatedTarget  {Object}    For mouseover and mouseout, the previous object\n * - offsetX        {number}    X-coordinate relative to target\n * - offsetY        {number}    Y-coordinate relative to target\n * - clientX        {number}    X-coordinate relative to viewport\n * - clientY        {number}    Y-coordinate relative to viewport\n * - screenX        {number}    X-coordinate relative to the edge of the screen\n * - screenY        {number}    Y-coordinate relative to the edge of the screen\n * - button         {number}    Mouse button. Use isButton() to test.\n * - keyCode        {number}    Key-code\n * - ctrlKey        {boolean}   Was ctrl key depressed\n * - altKey         {boolean}   Was alt key depressed\n * - shiftKey       {boolean}   Was shift key depressed\n * - metaKey        {boolean}   Was meta key depressed\n * - pointerId      {number}    Pointer ID\n * - pointerType    {string}    Pointer type, e.g. 'mouse', 'pen', or 'touch'\n * - defaultPrevented {boolean} Whether the default action has been prevented\n * - state          {Object}    History state object\n *\n * NOTE: The keyCode member contains the raw browser keyCode. For normalized\n * key and character code use {@link goog.events.KeyHandler}.\n * </pre>\n */\n\ngoog.provide('goog.events.BrowserEvent');\ngoog.provide('goog.events.BrowserEvent.MouseButton');\ngoog.provide('goog.events.BrowserEvent.PointerType');\n\ngoog.require('goog.debug');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.EventType');\ngoog.require('goog.reflect');\ngoog.require('goog.userAgent');\n\n/**\n * Accepts a browser event object and creates a patched, cross browser event\n * object.\n * The content of this object will not be initialized if no event object is\n * provided. If this is the case, init() needs to be invoked separately.\n * @param {Event=} opt_e Browser event object.\n * @param {EventTarget=} opt_currentTarget Current target for event.\n * @constructor\n * @extends {goog.events.Event}\n */\ngoog.events.BrowserEvent = function(opt_e, opt_currentTarget) {\n  'use strict';\n  goog.events.BrowserEvent.base(this, 'constructor', opt_e ? opt_e.type : '');\n\n  /**\n   * Target that fired the event.\n   * @override\n   * @type {?Node}\n   */\n  this.target = null;\n\n  /**\n   * Node that had the listener attached.\n   * @override\n   * @type {?Node|undefined}\n   */\n  this.currentTarget = null;\n\n  /**\n   * For mouseover and mouseout events, the related object for the event.\n   * @type {?Node}\n   */\n  this.relatedTarget = null;\n\n  /**\n   * X-coordinate relative to target.\n   * @type {number}\n   */\n  this.offsetX = 0;\n\n  /**\n   * Y-coordinate relative to target.\n   * @type {number}\n   */\n  this.offsetY = 0;\n\n  /**\n   * X-coordinate relative to the window.\n   * @type {number}\n   */\n  this.clientX = 0;\n\n  /**\n   * Y-coordinate relative to the window.\n   * @type {number}\n   */\n  this.clientY = 0;\n\n  /**\n   * X-coordinate relative to the monitor.\n   * @type {number}\n   */\n  this.screenX = 0;\n\n  /**\n   * Y-coordinate relative to the monitor.\n   * @type {number}\n   */\n  this.screenY = 0;\n\n  /**\n   * Which mouse button was pressed.\n   * @type {number}\n   */\n  this.button = 0;\n\n  /**\n   * Key of key press.\n   * @type {string}\n   */\n  this.key = '';\n\n  /**\n   * Keycode of key press.\n   * @type {number}\n   */\n  this.keyCode = 0;\n\n  /**\n   * Keycode of key press.\n   * @type {number}\n   */\n  this.charCode = 0;\n\n  /**\n   * Whether control was pressed at time of event.\n   * @type {boolean}\n   */\n  this.ctrlKey = false;\n\n  /**\n   * Whether alt was pressed at time of event.\n   * @type {boolean}\n   */\n  this.altKey = false;\n\n  /**\n   * Whether shift was pressed at time of event.\n   * @type {boolean}\n   */\n  this.shiftKey = false;\n\n  /**\n   * Whether the meta key was pressed at time of event.\n   * @type {boolean}\n   */\n  this.metaKey = false;\n\n  /**\n   * History state object, only set for PopState events where it's a copy of the\n   * state object provided to pushState or replaceState.\n   * @type {?Object}\n   */\n  this.state = null;\n\n  /**\n   * Whether the default platform modifier key was pressed at time of event.\n   * (This is control for all platforms except Mac, where it's Meta.)\n   * @type {boolean}\n   */\n  this.platformModifierKey = false;\n\n  /**\n   * @type {number}\n   */\n  this.pointerId = 0;\n\n  /**\n   * @type {string}\n   */\n  this.pointerType = '';\n\n  /**\n   * The browser event object.\n   * @private {?Event}\n   */\n  this.event_ = null;\n\n  if (opt_e) {\n    this.init(opt_e, opt_currentTarget);\n  }\n};\ngoog.inherits(goog.events.BrowserEvent, goog.events.Event);\n\n/**\n * @define {boolean} If true, use the layerX and layerY properties of a native\n * browser event over the offsetX and offsetY properties, which cause expensive\n * reflow. If layerX or layerY is not defined, offsetX and offsetY will be used\n * as usual.\n */\ngoog.events.BrowserEvent.USE_LAYER_XY_AS_OFFSET_XY =\n    goog.define('goog.events.BrowserEvent.USE_LAYER_XY_AS_OFFSET_XY', false);\n\n\n/**\n * Normalized button constants for the mouse.\n * @enum {number}\n */\ngoog.events.BrowserEvent.MouseButton = {\n  LEFT: 0,\n  MIDDLE: 1,\n  RIGHT: 2\n};\n\n\n/**\n * Normalized pointer type constants for pointer events.\n * @enum {string}\n */\ngoog.events.BrowserEvent.PointerType = {\n  MOUSE: 'mouse',\n  PEN: 'pen',\n  TOUCH: 'touch'\n};\n\n\n/**\n * Static data for mapping mouse buttons.\n * @type {!Array<number>}\n * @deprecated Use `goog.events.BrowserEvent.IE_BUTTON_MAP` instead.\n */\ngoog.events.BrowserEvent.IEButtonMap = goog.debug.freeze([\n  1,  // LEFT\n  4,  // MIDDLE\n  2   // RIGHT\n]);\n\n\n/**\n * Static data for mapping mouse buttons.\n * @const {!Array<number>}\n */\ngoog.events.BrowserEvent.IE_BUTTON_MAP = goog.events.BrowserEvent.IEButtonMap;\n\n\n/**\n * Static data for mapping MSPointerEvent types to PointerEvent types.\n * @const {!Object<number, goog.events.BrowserEvent.PointerType>}\n */\ngoog.events.BrowserEvent.IE_POINTER_TYPE_MAP = goog.debug.freeze({\n  2: goog.events.BrowserEvent.PointerType.TOUCH,\n  3: goog.events.BrowserEvent.PointerType.PEN,\n  4: goog.events.BrowserEvent.PointerType.MOUSE\n});\n\n\n/**\n * Accepts a browser event object and creates a patched, cross browser event\n * object.\n * @param {Event} e Browser event object.\n * @param {EventTarget=} opt_currentTarget Current target for event.\n */\ngoog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {\n  'use strict';\n  var type = this.type = e.type;\n\n  /**\n   * On touch devices use the first \"changed touch\" as the relevant touch.\n   * @type {?Touch}\n   */\n  var relevantTouch =\n      e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : null;\n\n  // TODO(nicksantos): Change this.target to type EventTarget.\n  this.target = /** @type {Node} */ (e.target) || e.srcElement;\n\n  // TODO(nicksantos): Change this.currentTarget to type EventTarget.\n  this.currentTarget = /** @type {Node} */ (opt_currentTarget);\n\n  var relatedTarget = /** @type {Node} */ (e.relatedTarget);\n  if (relatedTarget) {\n    // There's a bug in FireFox where sometimes, relatedTarget will be a\n    // chrome element, and accessing any property of it will get a permission\n    // denied exception. See:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=497780\n    if (goog.userAgent.GECKO) {\n      if (!goog.reflect.canAccessProperty(relatedTarget, 'nodeName')) {\n        relatedTarget = null;\n      }\n    }\n  } else if (type == goog.events.EventType.MOUSEOVER) {\n    relatedTarget = e.fromElement;\n  } else if (type == goog.events.EventType.MOUSEOUT) {\n    relatedTarget = e.toElement;\n  }\n\n  this.relatedTarget = relatedTarget;\n\n  if (relevantTouch) {\n    this.clientX = relevantTouch.clientX !== undefined ? relevantTouch.clientX :\n                                                         relevantTouch.pageX;\n    this.clientY = relevantTouch.clientY !== undefined ? relevantTouch.clientY :\n                                                         relevantTouch.pageY;\n    this.screenX = relevantTouch.screenX || 0;\n    this.screenY = relevantTouch.screenY || 0;\n  } else {\n    if (goog.events.BrowserEvent.USE_LAYER_XY_AS_OFFSET_XY) {\n      this.offsetX = (e.layerX !== undefined) ? e.layerX : e.offsetX;\n      this.offsetY = (e.layerY !== undefined) ? e.layerY : e.offsetY;\n    } else {\n      // Webkit emits a lame warning whenever layerX/layerY is accessed.\n      // http://code.google.com/p/chromium/issues/detail?id=101733\n      this.offsetX = (goog.userAgent.WEBKIT || e.offsetX !== undefined) ?\n          e.offsetX :\n          e.layerX;\n      this.offsetY = (goog.userAgent.WEBKIT || e.offsetY !== undefined) ?\n          e.offsetY :\n          e.layerY;\n    }\n    this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;\n    this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;\n    this.screenX = e.screenX || 0;\n    this.screenY = e.screenY || 0;\n  }\n\n  this.button = e.button;\n\n  this.keyCode = e.keyCode || 0;\n  this.key = e.key || '';\n  this.charCode = e.charCode || (type == 'keypress' ? e.keyCode : 0);\n  this.ctrlKey = e.ctrlKey;\n  this.altKey = e.altKey;\n  this.shiftKey = e.shiftKey;\n  this.metaKey = e.metaKey;\n  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;\n  this.pointerId = e.pointerId || 0;\n  this.pointerType = goog.events.BrowserEvent.getPointerType_(e);\n  this.state = e.state;\n  this.event_ = e;\n  if (e.defaultPrevented) {\n    // Sync native event state to internal state via super class, where default\n    // prevention is implemented and managed.\n    goog.events.BrowserEvent.superClass_.preventDefault.call(this);\n  }\n};\n\n\n/**\n * Tests to see which button was pressed during the event. This is really only\n * useful in IE and Gecko browsers. And in IE, it's only useful for\n * mousedown/mouseup events, because click only fires for the left mouse button.\n *\n * Safari 2 only reports the left button being clicked, and uses the value '1'\n * instead of 0. Opera only reports a mousedown event for the middle button, and\n * no mouse events for the right button. Opera has default behavior for left and\n * middle click that can only be overridden via a configuration setting.\n *\n * There's a nice table of this mess at http://www.unixpapa.com/js/mouse.html.\n *\n * @param {goog.events.BrowserEvent.MouseButton} button The button\n *     to test for.\n * @return {boolean} True if button was pressed.\n */\ngoog.events.BrowserEvent.prototype.isButton = function(button) {\n  'use strict';\n  return this.event_.button == button;\n};\n\n\n/**\n * Whether this has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @return {boolean} The result.\n */\ngoog.events.BrowserEvent.prototype.isMouseActionButton = function() {\n  'use strict';\n  // Ctrl+click should never behave like a left-click on mac, regardless of\n  // whether or not the browser will actually ever emit such an event.  If\n  // we see it, treat it like right-click always.\n  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) &&\n      !(goog.userAgent.MAC && this.ctrlKey);\n};\n\n\n/**\n * @override\n */\ngoog.events.BrowserEvent.prototype.stopPropagation = function() {\n  'use strict';\n  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);\n  if (this.event_.stopPropagation) {\n    this.event_.stopPropagation();\n  } else {\n    this.event_.cancelBubble = true;\n  }\n};\n\n\n/**\n * @override\n */\ngoog.events.BrowserEvent.prototype.preventDefault = function() {\n  'use strict';\n  goog.events.BrowserEvent.superClass_.preventDefault.call(this);\n  var be = this.event_;\n  if (!be.preventDefault) {\n    be.returnValue = false;\n  } else {\n    be.preventDefault();\n  }\n};\n\n\n/**\n * @return {Event} The underlying browser event object.\n */\ngoog.events.BrowserEvent.prototype.getBrowserEvent = function() {\n  'use strict';\n  return this.event_;\n};\n\n\n/**\n * Extracts the pointer type from the given event.\n * @param {!Event} e\n * @return {string} The pointer type, e.g. 'mouse', 'pen', or 'touch'.\n * @private\n */\ngoog.events.BrowserEvent.getPointerType_ = function(e) {\n  'use strict';\n  if (typeof (e.pointerType) === 'string') {\n    return e.pointerType;\n  }\n  // IE10 uses integer codes for pointer type.\n  // https://msdn.microsoft.com/en-us/library/hh772359(v=vs.85).aspx\n  return goog.events.BrowserEvent.IE_POINTER_TYPE_MAP[e.pointerType] || '';\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Event Types.\n */\n\n\ngoog.provide('goog.events.EventType');\ngoog.provide('goog.events.EventTypeHelpers');\ngoog.provide('goog.events.MouseAsMouseEventType');\ngoog.provide('goog.events.MouseEvents');\ngoog.provide('goog.events.PointerAsMouseEventType');\ngoog.provide('goog.events.PointerAsTouchEventType');\ngoog.provide('goog.events.PointerFallbackEventType');\ngoog.provide('goog.events.PointerTouchFallbackEventType');\n\ngoog.require('goog.events.BrowserFeature');\ngoog.require('goog.userAgent');\n\n\n/**\n * Returns a prefixed event name for the current browser.\n * @param {string} eventName The name of the event.\n * @return {string} The prefixed event name.\n * @private\n */\ngoog.events.EventTypeHelpers.getVendorPrefixedName_ = function(eventName) {\n  'use strict';\n  return goog.userAgent.WEBKIT ? 'webkit' + eventName : eventName.toLowerCase();\n};\n\n\n/**\n * Constants for event names.\n * @enum {string}\n */\ngoog.events.EventType = {\n  // Mouse events\n  CLICK: 'click',\n  RIGHTCLICK: 'rightclick',\n  DBLCLICK: 'dblclick',\n  AUXCLICK: 'auxclick',\n  MOUSEDOWN: 'mousedown',\n  MOUSEUP: 'mouseup',\n  MOUSEOVER: 'mouseover',\n  MOUSEOUT: 'mouseout',\n  MOUSEMOVE: 'mousemove',\n  MOUSEENTER: 'mouseenter',\n  MOUSELEAVE: 'mouseleave',\n\n  // Non-existent event; will never fire. This exists as a mouse counterpart to\n  // POINTERCANCEL.\n  MOUSECANCEL: 'mousecancel',\n\n  // Selection events.\n  // https://www.w3.org/TR/selection-api/\n  SELECTIONCHANGE: 'selectionchange',\n  SELECTSTART: 'selectstart',  // IE, Safari, Chrome\n\n  // Wheel events\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n  WHEEL: 'wheel',\n\n  // Key events\n  KEYPRESS: 'keypress',\n  KEYDOWN: 'keydown',\n  KEYUP: 'keyup',\n\n  // Focus\n  BLUR: 'blur',\n  FOCUS: 'focus',\n  DEACTIVATE: 'deactivate',  // IE only\n  FOCUSIN: 'focusin',\n  FOCUSOUT: 'focusout',\n\n  // Forms\n  CHANGE: 'change',\n  RESET: 'reset',\n  SELECT: 'select',\n  SUBMIT: 'submit',\n  INPUT: 'input',\n  PROPERTYCHANGE: 'propertychange',  // IE only\n\n  // Drag and drop\n  DRAGSTART: 'dragstart',\n  DRAG: 'drag',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DRAGLEAVE: 'dragleave',\n  DROP: 'drop',\n  DRAGEND: 'dragend',\n\n  // Touch events\n  // Note that other touch events exist, but we should follow the W3C list here.\n  // http://www.w3.org/TR/touch-events/#list-of-touchevent-types\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  TOUCHCANCEL: 'touchcancel',\n\n  // Misc\n  BEFOREUNLOAD: 'beforeunload',\n  CONSOLEMESSAGE: 'consolemessage',\n  CONTEXTMENU: 'contextmenu',\n  DEVICECHANGE: 'devicechange',\n  DEVICEMOTION: 'devicemotion',\n  DEVICEORIENTATION: 'deviceorientation',\n  DOMCONTENTLOADED: 'DOMContentLoaded',\n  ERROR: 'error',\n  HELP: 'help',\n  LOAD: 'load',\n  LOSECAPTURE: 'losecapture',\n  ORIENTATIONCHANGE: 'orientationchange',\n  READYSTATECHANGE: 'readystatechange',\n  RESIZE: 'resize',\n  SCROLL: 'scroll',\n  UNLOAD: 'unload',\n\n  // Media events\n  CANPLAY: 'canplay',\n  CANPLAYTHROUGH: 'canplaythrough',\n  DURATIONCHANGE: 'durationchange',\n  EMPTIED: 'emptied',\n  ENDED: 'ended',\n  LOADEDDATA: 'loadeddata',\n  LOADEDMETADATA: 'loadedmetadata',\n  PAUSE: 'pause',\n  PLAY: 'play',\n  PLAYING: 'playing',\n  PROGRESS: 'progress',\n  RATECHANGE: 'ratechange',\n  SEEKED: 'seeked',\n  SEEKING: 'seeking',\n  STALLED: 'stalled',\n  SUSPEND: 'suspend',\n  TIMEUPDATE: 'timeupdate',\n  VOLUMECHANGE: 'volumechange',\n  WAITING: 'waiting',\n\n  // Media Source Extensions events\n  // https://www.w3.org/TR/media-source/#mediasource-events\n  SOURCEOPEN: 'sourceopen',\n  SOURCEENDED: 'sourceended',\n  SOURCECLOSED: 'sourceclosed',\n  // https://www.w3.org/TR/media-source/#sourcebuffer-events\n  ABORT: 'abort',\n  UPDATE: 'update',\n  UPDATESTART: 'updatestart',\n  UPDATEEND: 'updateend',\n\n  // HTML 5 History events\n  // See http://www.w3.org/TR/html5/browsers.html#event-definitions-0\n  HASHCHANGE: 'hashchange',\n  PAGEHIDE: 'pagehide',\n  PAGESHOW: 'pageshow',\n  POPSTATE: 'popstate',\n\n  // Copy and Paste\n  // Support is limited. Make sure it works on your favorite browser\n  // before using.\n  // http://www.quirksmode.org/dom/events/cutcopypaste.html\n  COPY: 'copy',\n  PASTE: 'paste',\n  CUT: 'cut',\n  BEFORECOPY: 'beforecopy',\n  BEFORECUT: 'beforecut',\n  BEFOREPASTE: 'beforepaste',\n\n  // HTML5 online/offline events.\n  // http://www.w3.org/TR/offline-webapps/#related\n  ONLINE: 'online',\n  OFFLINE: 'offline',\n\n  // HTML 5 worker events\n  MESSAGE: 'message',\n  CONNECT: 'connect',\n\n  // Service Worker Events - ServiceWorkerGlobalScope context\n  // See https://w3c.github.io/ServiceWorker/#execution-context-events\n  // Note: message event defined in worker events section\n  INSTALL: 'install',\n  ACTIVATE: 'activate',\n  FETCH: 'fetch',\n  FOREIGNFETCH: 'foreignfetch',\n  MESSAGEERROR: 'messageerror',\n\n  // Service Worker Events - Document context\n  // See https://w3c.github.io/ServiceWorker/#document-context-events\n  STATECHANGE: 'statechange',\n  UPDATEFOUND: 'updatefound',\n  CONTROLLERCHANGE: 'controllerchange',\n\n  // CSS animation events.\n  ANIMATIONSTART:\n      goog.events.EventTypeHelpers.getVendorPrefixedName_('AnimationStart'),\n  ANIMATIONEND:\n      goog.events.EventTypeHelpers.getVendorPrefixedName_('AnimationEnd'),\n  ANIMATIONITERATION:\n      goog.events.EventTypeHelpers.getVendorPrefixedName_('AnimationIteration'),\n\n  // CSS transition events. Based on the browser support described at:\n  // https://developer.mozilla.org/en/css/css_transitions#Browser_compatibility\n  TRANSITIONEND:\n      goog.events.EventTypeHelpers.getVendorPrefixedName_('TransitionEnd'),\n\n  // W3C Pointer Events\n  // http://www.w3.org/TR/pointerevents/\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTERCANCEL: 'pointercancel',\n  POINTERMOVE: 'pointermove',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  GOTPOINTERCAPTURE: 'gotpointercapture',\n  LOSTPOINTERCAPTURE: 'lostpointercapture',\n\n  // IE specific events.\n  // See http://msdn.microsoft.com/en-us/library/ie/hh772103(v=vs.85).aspx\n  // Note: these events will be supplanted in IE11.\n  MSGESTURECHANGE: 'MSGestureChange',\n  MSGESTUREEND: 'MSGestureEnd',\n  MSGESTUREHOLD: 'MSGestureHold',\n  MSGESTURESTART: 'MSGestureStart',\n  MSGESTURETAP: 'MSGestureTap',\n  MSGOTPOINTERCAPTURE: 'MSGotPointerCapture',\n  MSINERTIASTART: 'MSInertiaStart',\n  MSLOSTPOINTERCAPTURE: 'MSLostPointerCapture',\n  MSPOINTERCANCEL: 'MSPointerCancel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  MSPOINTERENTER: 'MSPointerEnter',\n  MSPOINTERHOVER: 'MSPointerHover',\n  MSPOINTERLEAVE: 'MSPointerLeave',\n  MSPOINTERMOVE: 'MSPointerMove',\n  MSPOINTEROUT: 'MSPointerOut',\n  MSPOINTEROVER: 'MSPointerOver',\n  MSPOINTERUP: 'MSPointerUp',\n\n  // Native IMEs/input tools events.\n  TEXT: 'text',\n  // The textInput event is supported in IE9+, but only in lower case. All other\n  // browsers use the camel-case event name.\n  TEXTINPUT: goog.userAgent.IE ? 'textinput' : 'textInput',\n  COMPOSITIONSTART: 'compositionstart',\n  COMPOSITIONUPDATE: 'compositionupdate',\n  COMPOSITIONEND: 'compositionend',\n\n  // The beforeinput event is initially only supported in Safari. See\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=342670 for Chrome\n  // implementation tracking.\n  BEFOREINPUT: 'beforeinput',\n\n  // Webview tag events\n  // See https://developer.chrome.com/apps/tags/webview\n  EXIT: 'exit',\n  LOADABORT: 'loadabort',\n  LOADCOMMIT: 'loadcommit',\n  LOADREDIRECT: 'loadredirect',\n  LOADSTART: 'loadstart',\n  LOADSTOP: 'loadstop',\n  RESPONSIVE: 'responsive',\n  SIZECHANGED: 'sizechanged',\n  UNRESPONSIVE: 'unresponsive',\n\n  // HTML5 Page Visibility API.  See details at\n  // `goog.labs.dom.PageVisibilityMonitor`.\n  VISIBILITYCHANGE: 'visibilitychange',\n\n  // LocalStorage event.\n  STORAGE: 'storage',\n\n  // DOM Level 2 mutation events (deprecated).\n  DOMSUBTREEMODIFIED: 'DOMSubtreeModified',\n  DOMNODEINSERTED: 'DOMNodeInserted',\n  DOMNODEREMOVED: 'DOMNodeRemoved',\n  DOMNODEREMOVEDFROMDOCUMENT: 'DOMNodeRemovedFromDocument',\n  DOMNODEINSERTEDINTODOCUMENT: 'DOMNodeInsertedIntoDocument',\n  DOMATTRMODIFIED: 'DOMAttrModified',\n  DOMCHARACTERDATAMODIFIED: 'DOMCharacterDataModified',\n\n  // Print events.\n  BEFOREPRINT: 'beforeprint',\n  AFTERPRINT: 'afterprint',\n\n  // Web app manifest events.\n  BEFOREINSTALLPROMPT: 'beforeinstallprompt',\n  APPINSTALLED: 'appinstalled'\n};\n\n\n/**\n * Returns one of the given pointer fallback event names in order of preference:\n *   1. pointerEventName\n *   2. msPointerEventName\n *   3. fallbackEventName\n * @param {string} pointerEventName\n * @param {string} msPointerEventName\n * @param {string} fallbackEventName\n * @return {string} The supported pointer or fallback (mouse or touch) event\n *     name.\n * @private\n */\ngoog.events.EventTypeHelpers.getPointerFallbackEventName_ = function(\n    pointerEventName, msPointerEventName, fallbackEventName) {\n  'use strict';\n  if (goog.events.BrowserFeature.POINTER_EVENTS) {\n    return pointerEventName;\n  }\n  if (goog.events.BrowserFeature.MSPOINTER_EVENTS) {\n    return msPointerEventName;\n  }\n  return fallbackEventName;\n};\n\n\n/**\n * Constants for pointer event names that fall back to corresponding mouse event\n * names on unsupported platforms. These are intended to be drop-in replacements\n * for corresponding values in `goog.events.EventType`.\n * @enum {string}\n */\ngoog.events.PointerFallbackEventType = {\n  POINTERDOWN: goog.events.EventTypeHelpers.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERDOWN, goog.events.EventType.MSPOINTERDOWN,\n      goog.events.EventType.MOUSEDOWN),\n  POINTERUP: goog.events.EventTypeHelpers.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERUP, goog.events.EventType.MSPOINTERUP,\n      goog.events.EventType.MOUSEUP),\n  POINTERCANCEL: goog.events.EventTypeHelpers.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERCANCEL,\n      goog.events.EventType.MSPOINTERCANCEL,\n      // When falling back to mouse events, there is no MOUSECANCEL equivalent\n      // of POINTERCANCEL. In this case POINTERUP already falls back to MOUSEUP\n      // which represents both UP and CANCEL. POINTERCANCEL does not fall back\n      // to MOUSEUP to prevent listening twice on the same event.\n      goog.events.EventType.MOUSECANCEL),\n  POINTERMOVE: goog.events.EventTypeHelpers.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERMOVE, goog.events.EventType.MSPOINTERMOVE,\n      goog.events.EventType.MOUSEMOVE),\n  POINTEROVER: goog.events.EventTypeHelpers.getPointerFallbackEventName_(\n      goog.events.EventType.POINTEROVER, goog.events.EventType.MSPOINTEROVER,\n      goog.events.EventType.MOUSEOVER),\n  POINTEROUT: goog.events.EventTypeHelpers.getPointerFallbackEventName_(\n      goog.events.EventType.POINTEROUT, goog.events.EventType.MSPOINTEROUT,\n      goog.events.EventType.MOUSEOUT),\n  POINTERENTER: goog.events.EventTypeHelpers.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERENTER, goog.events.EventType.MSPOINTERENTER,\n      goog.events.EventType.MOUSEENTER),\n  POINTERLEAVE: goog.events.EventTypeHelpers.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERLEAVE, goog.events.EventType.MSPOINTERLEAVE,\n      goog.events.EventType.MOUSELEAVE)\n};\n\n\n/**\n * Constants for pointer event names that fall back to corresponding touch event\n * names on unsupported platforms. These are intended to be drop-in replacements\n * for corresponding values in `goog.events.EventType`.\n * @enum {string}\n */\ngoog.events.PointerTouchFallbackEventType = {\n  POINTERDOWN: goog.events.EventTypeHelpers.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERDOWN, goog.events.EventType.MSPOINTERDOWN,\n      goog.events.EventType.TOUCHSTART),\n  POINTERUP: goog.events.EventTypeHelpers.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERUP, goog.events.EventType.MSPOINTERUP,\n      goog.events.EventType.TOUCHEND),\n  POINTERCANCEL: goog.events.EventTypeHelpers.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERCANCEL,\n      goog.events.EventType.MSPOINTERCANCEL, goog.events.EventType.TOUCHCANCEL),\n  POINTERMOVE: goog.events.EventTypeHelpers.getPointerFallbackEventName_(\n      goog.events.EventType.POINTERMOVE, goog.events.EventType.MSPOINTERMOVE,\n      goog.events.EventType.TOUCHMOVE)\n};\n\n\n/**\n * Mapping of mouse event names to underlying browser event names.\n * @typedef {{\n *     MOUSEDOWN: string,\n *     MOUSEUP: string,\n *     MOUSECANCEL:string,\n *     MOUSEMOVE:string,\n *     MOUSEOVER:string,\n *     MOUSEOUT:string,\n *     MOUSEENTER:string,\n *     MOUSELEAVE: string,\n * }}\n */\ngoog.events.MouseEvents;\n\n\n/**\n * An alias for `goog.events.EventType.MOUSE*` event types that is overridden by\n * corresponding `POINTER*` event types.\n * @const {!goog.events.MouseEvents}\n */\ngoog.events.PointerAsMouseEventType = {\n  MOUSEDOWN: goog.events.PointerFallbackEventType.POINTERDOWN,\n  MOUSEUP: goog.events.PointerFallbackEventType.POINTERUP,\n  MOUSECANCEL: goog.events.PointerFallbackEventType.POINTERCANCEL,\n  MOUSEMOVE: goog.events.PointerFallbackEventType.POINTERMOVE,\n  MOUSEOVER: goog.events.PointerFallbackEventType.POINTEROVER,\n  MOUSEOUT: goog.events.PointerFallbackEventType.POINTEROUT,\n  MOUSEENTER: goog.events.PointerFallbackEventType.POINTERENTER,\n  MOUSELEAVE: goog.events.PointerFallbackEventType.POINTERLEAVE\n};\n\n\n/**\n * An alias for `goog.events.EventType.MOUSE*` event types that continue to use\n * mouse events.\n * @const {!goog.events.MouseEvents}\n */\ngoog.events.MouseAsMouseEventType = {\n  MOUSEDOWN: goog.events.EventType.MOUSEDOWN,\n  MOUSEUP: goog.events.EventType.MOUSEUP,\n  MOUSECANCEL: goog.events.EventType.MOUSECANCEL,\n  MOUSEMOVE: goog.events.EventType.MOUSEMOVE,\n  MOUSEOVER: goog.events.EventType.MOUSEOVER,\n  MOUSEOUT: goog.events.EventType.MOUSEOUT,\n  MOUSEENTER: goog.events.EventType.MOUSEENTER,\n  MOUSELEAVE: goog.events.EventType.MOUSELEAVE\n};\n\n\n/**\n * An alias for `goog.events.EventType.TOUCH*` event types that is overridden by\n * corresponding `POINTER*` event types.\n * @enum {string}\n */\ngoog.events.PointerAsTouchEventType = {\n  TOUCHCANCEL: goog.events.PointerTouchFallbackEventType.POINTERCANCEL,\n  TOUCHEND: goog.events.PointerTouchFallbackEventType.POINTERUP,\n  TOUCHMOVE: goog.events.PointerTouchFallbackEventType.POINTERMOVE,\n  TOUCHSTART: goog.events.PointerTouchFallbackEventType.POINTERDOWN\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview An interface for a listenable JavaScript object.\n */\n\ngoog.provide('goog.events.Listenable');\n\ngoog.requireType('goog.events.EventId');\ngoog.requireType('goog.events.EventLike');\ngoog.requireType('goog.events.ListenableKey');\n\n\n/**\n * A listenable interface. A listenable is an object with the ability\n * to dispatch/broadcast events to \"event listeners\" registered via\n * listen/listenOnce.\n *\n * The interface allows for an event propagation mechanism similar\n * to one offered by native browser event targets, such as\n * capture/bubble mechanism, stopping propagation, and preventing\n * default actions. Capture/bubble mechanism depends on the ancestor\n * tree constructed via `#getParentEventTarget`; this tree\n * must be directed acyclic graph. The meaning of default action(s)\n * in preventDefault is specific to a particular use case.\n *\n * Implementations that do not support capture/bubble or can not have\n * a parent listenable can simply not implement any ability to set the\n * parent listenable (and have `#getParentEventTarget` return\n * null).\n *\n * Implementation of this class can be used with or independently from\n * goog.events.\n *\n * Implementation must call `#addImplementation(implClass)`.\n *\n * @interface\n * @see goog.events\n * @see http://www.w3.org/TR/DOM-Level-2-Events/events.html\n */\ngoog.events.Listenable = function() {};\n\n\n/**\n * An expando property to indicate that an object implements\n * goog.events.Listenable.\n *\n * See addImplementation/isImplementedBy.\n *\n * @type {string}\n * @const\n */\ngoog.events.Listenable.IMPLEMENTED_BY_PROP =\n    'closure_listenable_' + ((Math.random() * 1e6) | 0);\n\n\n/**\n * Marks a given class (constructor) as an implementation of\n * Listenable, so that we can query that fact at runtime. The class\n * must have already implemented the interface.\n * @param {function(new:goog.events.Listenable,...)} cls The class constructor.\n *     The corresponding class must have already implemented the interface.\n */\ngoog.events.Listenable.addImplementation = function(cls) {\n  'use strict';\n  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;\n};\n\n\n/**\n * @param {?Object} obj The object to check.\n * @return {boolean} Whether a given instance implements Listenable. The\n *     class/superclass of the instance must call addImplementation.\n */\ngoog.events.Listenable.isImplementedBy = function(obj) {\n  'use strict';\n  return !!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);\n};\n\n\n/**\n * Adds an event listener. A listener can only be added once to an\n * object and if it is added again the key for the listener is\n * returned. Note that if the existing listener is a one-off listener\n * (registered via listenOnce), it will no longer be a one-off\n * listener after a call to listen().\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.listen = function(\n    type, listener, opt_useCapture, opt_listenerScope) {};\n\n\n/**\n * Adds an event listener that is removed automatically after the\n * listener fired once.\n *\n * If an existing listener already exists, listenOnce will do\n * nothing. In particular, if the listener was previously registered\n * via listen(), listenOnce() will not turn the listener into a\n * one-off listener. Similarly, if there is already an existing\n * one-off listener, listenOnce does not modify the listeners (it is\n * still a once listener).\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.listenOnce = function(\n    type, listener, opt_useCapture, opt_listenerScope) {};\n\n\n/**\n * Removes an event listener which was added with listen() or listenOnce().\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call\n *     the listener.\n * @return {boolean} Whether any listener was removed.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.unlisten = function(\n    type, listener, opt_useCapture, opt_listenerScope) {};\n\n\n/**\n * Removes an event listener which was added with listen() by the key\n * returned by listen().\n *\n * @param {!goog.events.ListenableKey} key The key returned by\n *     listen() or listenOnce().\n * @return {boolean} Whether any listener was removed.\n */\ngoog.events.Listenable.prototype.unlistenByKey = function(key) {};\n\n\n/**\n * Dispatches an event (or event like object) and calls all listeners\n * listening for events of this type. The type of the event is decided by the\n * type property on the event object.\n *\n * If any of the listeners returns false OR calls preventDefault then this\n * function will return false.  If one of the capture listeners calls\n * stopPropagation, then the bubble listeners won't fire.\n *\n * @param {?goog.events.EventLike} e Event object.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the listeners returns false) this will also return false.\n */\ngoog.events.Listenable.prototype.dispatchEvent = function(e) {};\n\n\n/**\n * Removes all listeners from this listenable. If type is specified,\n * it will only remove listeners of the particular type. otherwise all\n * registered listeners will be removed.\n *\n * @param {string|!goog.events.EventId=} opt_type Type of event to remove,\n *     default is to remove all types.\n * @return {number} Number of listeners removed.\n */\ngoog.events.Listenable.prototype.removeAllListeners = function(opt_type) {};\n\n\n/**\n * Returns the parent of this event target to use for capture/bubble\n * mechanism.\n *\n * NOTE(chrishenry): The name reflects the original implementation of\n * custom event target (`goog.events.EventTarget`). We decided\n * that changing the name is not worth it.\n *\n * @return {?goog.events.Listenable} The parent EventTarget or null if\n *     there is no parent.\n */\ngoog.events.Listenable.prototype.getParentEventTarget = function() {};\n\n\n/**\n * Fires all registered listeners in this listenable for the given\n * type and capture mode, passing them the given eventObject. This\n * does not perform actual capture/bubble. Only implementors of the\n * interface should be using this.\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The type of the\n *     listeners to fire.\n * @param {boolean} capture The capture mode of the listeners to fire.\n * @param {EVENTOBJ} eventObject The event object to fire.\n * @return {boolean} Whether all listeners succeeded without\n *     attempting to prevent default behavior. If any listener returns\n *     false or called goog.events.Event#preventDefault, this returns\n *     false.\n * @template EVENTOBJ\n */\ngoog.events.Listenable.prototype.fireListeners = function(\n    type, capture, eventObject) {};\n\n\n/**\n * Gets all listeners in this listenable for the given type and\n * capture mode.\n *\n * @param {string|!goog.events.EventId} type The type of the listeners to fire.\n * @param {boolean} capture The capture mode of the listeners to fire.\n * @return {!Array<!goog.events.ListenableKey>} An array of registered\n *     listeners.\n * @template EVENTOBJ\n */\ngoog.events.Listenable.prototype.getListeners = function(type, capture) {};\n\n\n/**\n * Gets the goog.events.ListenableKey for the event or null if no such\n * listener is in use.\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The name of the event\n *     without the 'on' prefix.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener The\n *     listener function to get.\n * @param {boolean} capture Whether the listener is a capturing listener.\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {?goog.events.ListenableKey} the found listener or null if not found.\n * @template SCOPE,EVENTOBJ\n */\ngoog.events.Listenable.prototype.getListener = function(\n    type, listener, capture, opt_listenerScope) {};\n\n\n/**\n * Whether there is any active listeners matching the specified\n * signature. If either the type or capture parameters are\n * unspecified, the function will match on the remaining criteria.\n *\n * @param {string|!goog.events.EventId<EVENTOBJ>=} opt_type Event type.\n * @param {boolean=} opt_capture Whether to check for capture or bubble\n *     listeners.\n * @return {boolean} Whether there is any active listeners matching\n *     the requested type and/or capture phase.\n * @template EVENTOBJ\n */\ngoog.events.Listenable.prototype.hasListener = function(\n    opt_type, opt_capture) {};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview An interface that describes a single registered listener.\n */\ngoog.provide('goog.events.ListenableKey');\n\ngoog.requireType('goog.events.Listenable');\n\n\n/**\n * An interface that describes a single registered listener.\n * @interface\n */\ngoog.events.ListenableKey = function() {};\n\n\n/**\n * Counter used to create a unique key\n * @type {number}\n * @private\n */\ngoog.events.ListenableKey.counter_ = 0;\n\n\n/**\n * Reserves a key to be used for ListenableKey#key field.\n * @return {number} A number to be used to fill ListenableKey#key\n *     field.\n */\ngoog.events.ListenableKey.reserveKey = function() {\n  'use strict';\n  return ++goog.events.ListenableKey.counter_;\n};\n\n\n/**\n * The source event target.\n * @type {?Object|?goog.events.Listenable}\n */\ngoog.events.ListenableKey.prototype.src;\n\n\n/**\n * The event type the listener is listening to.\n * @type {string}\n */\ngoog.events.ListenableKey.prototype.type;\n\n\n/**\n * The listener function.\n * @type {function(?):?|{handleEvent:function(?):?}|null}\n */\ngoog.events.ListenableKey.prototype.listener;\n\n\n/**\n * Whether the listener works on capture phase.\n * @type {boolean}\n */\ngoog.events.ListenableKey.prototype.capture;\n\n\n/**\n * The 'this' object for the listener function's scope.\n * @type {?Object|undefined}\n */\ngoog.events.ListenableKey.prototype.handler;\n\n\n/**\n * A globally unique number to identify the key.\n * @type {number}\n */\ngoog.events.ListenableKey.prototype.key;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Listener object.\n * @see ../demos/events.html\n */\n\ngoog.provide('goog.events.Listener');\n\ngoog.require('goog.events.ListenableKey');\ngoog.requireType('goog.events.Listenable');\n\n\n\n/**\n * Simple class that stores information about a listener\n * @param {function(?):?} listener Callback function.\n * @param {Function} proxy Wrapper for the listener that patches the event.\n * @param {EventTarget|goog.events.Listenable} src Source object for\n *     the event.\n * @param {string} type Event type.\n * @param {boolean} capture Whether in capture or bubble phase.\n * @param {Object=} opt_handler Object in whose context to execute the callback.\n * @implements {goog.events.ListenableKey}\n * @constructor\n */\ngoog.events.Listener = function(\n    listener, proxy, src, type, capture, opt_handler) {\n  'use strict';\n  if (goog.events.Listener.ENABLE_MONITORING) {\n    this.creationStack = new Error().stack;\n  }\n\n  /** @override */\n  this.listener = listener;\n\n  /**\n   * A wrapper over the original listener. This is used solely to\n   * handle native browser events (it is used to simulate the capture\n   * phase and to patch the event object).\n   * @type {Function}\n   */\n  this.proxy = proxy;\n\n  /**\n   * Object or node that callback is listening to\n   * @type {EventTarget|goog.events.Listenable}\n   */\n  this.src = src;\n\n  /**\n   * The event type.\n   * @const {string}\n   */\n  this.type = type;\n\n  /**\n   * Whether the listener is being called in the capture or bubble phase\n   * @const {boolean}\n   */\n  this.capture = !!capture;\n\n  /**\n   * Optional object whose context to execute the listener in\n   * @type {Object|undefined}\n   */\n  this.handler = opt_handler;\n\n  /**\n   * The key of the listener.\n   * @const {number}\n   * @override\n   */\n  this.key = goog.events.ListenableKey.reserveKey();\n\n  /**\n   * Whether to remove the listener after it has been called.\n   * @type {boolean}\n   */\n  this.callOnce = false;\n\n  /**\n   * Whether the listener has been removed.\n   * @type {boolean}\n   */\n  this.removed = false;\n};\n\n\n/**\n * @define {boolean} Whether to enable the monitoring of the\n *     goog.events.Listener instances. Switching on the monitoring is only\n *     recommended for debugging because it has a significant impact on\n *     performance and memory usage. If switched off, the monitoring code\n *     compiles down to 0 bytes.\n */\ngoog.events.Listener.ENABLE_MONITORING =\n    goog.define('goog.events.Listener.ENABLE_MONITORING', false);\n\n\n/**\n * If monitoring the goog.events.Listener instances is enabled, stores the\n * creation stack trace of the Disposable instance.\n * @type {string}\n */\ngoog.events.Listener.prototype.creationStack;\n\n\n/**\n * Marks this listener as removed. This also remove references held by\n * this listener object (such as listener and event source).\n */\ngoog.events.Listener.prototype.markAsRemoved = function() {\n  'use strict';\n  this.removed = true;\n  this.listener = null;\n  this.proxy = null;\n  this.src = null;\n  this.handler = null;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A map of listeners that provides utility functions to\n * deal with listeners on an event target. Used by\n * `goog.events.EventTarget`.\n *\n * WARNING: Do not use this class from outside goog.events package.\n *\n */\n\ngoog.provide('goog.events.ListenerMap');\n\ngoog.require('goog.array');\ngoog.require('goog.events.Listener');\ngoog.require('goog.object');\ngoog.requireType('goog.events.EventId');\ngoog.requireType('goog.events.Listenable');\ngoog.requireType('goog.events.ListenableKey');\n\n\n\n/**\n * Creates a new listener map.\n * @param {EventTarget|goog.events.Listenable} src The src object.\n * @constructor\n * @final\n */\ngoog.events.ListenerMap = function(src) {\n  'use strict';\n  /** @type {EventTarget|goog.events.Listenable} */\n  this.src = src;\n\n  /**\n   * Maps of event type to an array of listeners.\n   * @type {!Object<string, !Array<!goog.events.Listener>>}\n   */\n  this.listeners = {};\n\n  /**\n   * The count of types in this map that have registered listeners.\n   * @private {number}\n   */\n  this.typeCount_ = 0;\n};\n\n\n/**\n * @return {number} The count of event types in this map that actually\n *     have registered listeners.\n */\ngoog.events.ListenerMap.prototype.getTypeCount = function() {\n  'use strict';\n  return this.typeCount_;\n};\n\n\n/**\n * @return {number} Total number of registered listeners.\n */\ngoog.events.ListenerMap.prototype.getListenerCount = function() {\n  'use strict';\n  var count = 0;\n  for (var type in this.listeners) {\n    count += this.listeners[type].length;\n  }\n  return count;\n};\n\n\n/**\n * Adds an event listener. A listener can only be added once to an\n * object and if it is added again the key for the listener is\n * returned.\n *\n * Note that a one-off listener will not change an existing listener,\n * if any. On the other hand a normal listener will change existing\n * one-off listener to become a normal listener.\n *\n * @param {string|!goog.events.EventId} type The listener event type.\n * @param {!Function} listener This listener callback method.\n * @param {boolean} callOnce Whether the listener is a one-off\n *     listener.\n * @param {boolean=} opt_useCapture The capture mode of the listener.\n * @param {Object=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n */\ngoog.events.ListenerMap.prototype.add = function(\n    type, listener, callOnce, opt_useCapture, opt_listenerScope) {\n  'use strict';\n  var typeStr = type.toString();\n  var listenerArray = this.listeners[typeStr];\n  if (!listenerArray) {\n    listenerArray = this.listeners[typeStr] = [];\n    this.typeCount_++;\n  }\n\n  var listenerObj;\n  var index = goog.events.ListenerMap.findListenerIndex_(\n      listenerArray, listener, opt_useCapture, opt_listenerScope);\n  if (index > -1) {\n    listenerObj = listenerArray[index];\n    if (!callOnce) {\n      // Ensure that, if there is an existing callOnce listener, it is no\n      // longer a callOnce listener.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = new goog.events.Listener(\n        listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);\n    listenerObj.callOnce = callOnce;\n    listenerArray.push(listenerObj);\n  }\n  return listenerObj;\n};\n\n\n/**\n * Removes a matching listener.\n * @param {string|!goog.events.EventId} type The listener event type.\n * @param {!Function} listener This listener callback method.\n * @param {boolean=} opt_useCapture The capture mode of the listener.\n * @param {Object=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {boolean} Whether any listener was removed.\n */\ngoog.events.ListenerMap.prototype.remove = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  'use strict';\n  var typeStr = type.toString();\n  if (!(typeStr in this.listeners)) {\n    return false;\n  }\n\n  var listenerArray = this.listeners[typeStr];\n  var index = goog.events.ListenerMap.findListenerIndex_(\n      listenerArray, listener, opt_useCapture, opt_listenerScope);\n  if (index > -1) {\n    var listenerObj = listenerArray[index];\n    listenerObj.markAsRemoved();\n    goog.array.removeAt(listenerArray, index);\n    if (listenerArray.length == 0) {\n      delete this.listeners[typeStr];\n      this.typeCount_--;\n    }\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Removes the given listener object.\n * @param {!goog.events.ListenableKey} listener The listener to remove.\n * @return {boolean} Whether the listener is removed.\n */\ngoog.events.ListenerMap.prototype.removeByKey = function(listener) {\n  'use strict';\n  var type = listener.type;\n  if (!(type in this.listeners)) {\n    return false;\n  }\n\n  var removed = goog.array.remove(this.listeners[type], listener);\n  if (removed) {\n    /** @type {!goog.events.Listener} */ (listener).markAsRemoved();\n    if (this.listeners[type].length == 0) {\n      delete this.listeners[type];\n      this.typeCount_--;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Removes all listeners from this map. If opt_type is provided, only\n * listeners that match the given type are removed.\n * @param {string|!goog.events.EventId=} opt_type Type of event to remove.\n * @return {number} Number of listeners removed.\n */\ngoog.events.ListenerMap.prototype.removeAll = function(opt_type) {\n  'use strict';\n  var typeStr = opt_type && opt_type.toString();\n  var count = 0;\n  for (var type in this.listeners) {\n    if (!typeStr || type == typeStr) {\n      var listenerArray = this.listeners[type];\n      for (var i = 0; i < listenerArray.length; i++) {\n        ++count;\n        listenerArray[i].markAsRemoved();\n      }\n      delete this.listeners[type];\n      this.typeCount_--;\n    }\n  }\n  return count;\n};\n\n\n/**\n * Gets all listeners that match the given type and capture mode. The\n * returned array is a copy (but the listener objects are not).\n * @param {string|!goog.events.EventId} type The type of the listeners\n *     to retrieve.\n * @param {boolean} capture The capture mode of the listeners to retrieve.\n * @return {!Array<!goog.events.ListenableKey>} An array of matching\n *     listeners.\n */\ngoog.events.ListenerMap.prototype.getListeners = function(type, capture) {\n  'use strict';\n  var listenerArray = this.listeners[type.toString()];\n  var rv = [];\n  if (listenerArray) {\n    for (var i = 0; i < listenerArray.length; ++i) {\n      var listenerObj = listenerArray[i];\n      if (listenerObj.capture == capture) {\n        rv.push(listenerObj);\n      }\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Gets the goog.events.ListenableKey for the event or null if no such\n * listener is in use.\n *\n * @param {string|!goog.events.EventId} type The type of the listener\n *     to retrieve.\n * @param {!Function} listener The listener function to get.\n * @param {boolean} capture Whether the listener is a capturing listener.\n * @param {Object=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {goog.events.ListenableKey} the found listener or null if not found.\n */\ngoog.events.ListenerMap.prototype.getListener = function(\n    type, listener, capture, opt_listenerScope) {\n  'use strict';\n  var listenerArray = this.listeners[type.toString()];\n  var i = -1;\n  if (listenerArray) {\n    i = goog.events.ListenerMap.findListenerIndex_(\n        listenerArray, listener, capture, opt_listenerScope);\n  }\n  return i > -1 ? listenerArray[i] : null;\n};\n\n\n/**\n * Whether there is a matching listener. If either the type or capture\n * parameters are unspecified, the function will match on the\n * remaining criteria.\n *\n * @param {string|!goog.events.EventId=} opt_type The type of the listener.\n * @param {boolean=} opt_capture The capture mode of the listener.\n * @return {boolean} Whether there is an active listener matching\n *     the requested type and/or capture phase.\n */\ngoog.events.ListenerMap.prototype.hasListener = function(\n    opt_type, opt_capture) {\n  'use strict';\n  var hasType = (opt_type !== undefined);\n  var typeStr = hasType ? opt_type.toString() : '';\n  var hasCapture = (opt_capture !== undefined);\n\n  return goog.object.some(this.listeners, function(listenerArray, type) {\n    'use strict';\n    for (var i = 0; i < listenerArray.length; ++i) {\n      if ((!hasType || listenerArray[i].type == typeStr) &&\n          (!hasCapture || listenerArray[i].capture == opt_capture)) {\n        return true;\n      }\n    }\n\n    return false;\n  });\n};\n\n\n/**\n * Finds the index of a matching goog.events.Listener in the given\n * listenerArray.\n * @param {!Array<!goog.events.Listener>} listenerArray Array of listener.\n * @param {!Function} listener The listener function.\n * @param {boolean=} opt_useCapture The capture flag for the listener.\n * @param {Object=} opt_listenerScope The listener scope.\n * @return {number} The index of the matching listener within the\n *     listenerArray.\n * @private\n */\ngoog.events.ListenerMap.findListenerIndex_ = function(\n    listenerArray, listener, opt_useCapture, opt_listenerScope) {\n  'use strict';\n  for (var i = 0; i < listenerArray.length; ++i) {\n    var listenerObj = listenerArray[i];\n    if (!listenerObj.removed && listenerObj.listener == listener &&\n        listenerObj.capture == !!opt_useCapture &&\n        listenerObj.handler == opt_listenerScope) {\n      return i;\n    }\n  }\n  return -1;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utilities for manipulating objects/maps/hashes.\n */\ngoog.module('goog.object');\ngoog.module.declareLegacyNamespace();\n\n/**\n * Calls a function for each element in an object/map/hash.\n * @param {?Object<K,V>} obj The object over which to iterate.\n * @param {function(this:T,V,?,?Object<K,V>):?} f The function to call for every\n *     element. This function takes 3 arguments (the value, the key and the\n *     object) and the return value is ignored.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {void}\n * @template T,K,V\n */\nfunction forEach(obj, f, opt_obj) {\n  for (const key in obj) {\n    f.call(/** @type {?} */ (opt_obj), obj[key], key, obj);\n  }\n}\n\n/**\n * Calls a function for each element in an object/map/hash. If that call returns\n * true, adds the element to a new object.\n * @param {?Object<K,V>} obj The object over which to iterate.\n * @param {function(this:T,V,?,?Object<K,V>):boolean} f The function to call for\n *     every element. This function takes 3 arguments (the value, the key and\n *     the object) and should return a boolean. If the return value is true the\n *     element is added to the result object. If it is false the element is not\n *     included.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {!Object<K,V>} a new object in which only elements that passed the\n *     test are present.\n * @template T,K,V\n */\nfunction filter(obj, f, opt_obj) {\n  const res = {};\n  for (const key in obj) {\n    if (f.call(/** @type {?} */ (opt_obj), obj[key], key, obj)) {\n      res[key] = obj[key];\n    }\n  }\n  return res;\n}\n\n/**\n * For every element in an object/map/hash calls a function and inserts the\n * result into a new object.\n * @param {?Object<K,V>} obj The object over which to iterate.\n * @param {function(this:T,V,?,?Object<K,V>):R} f The function to call for every\n *     element. This function takes 3 arguments (the value, the key and the\n *     object) and should return something. The result will be inserted into a\n *     new object.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {!Object<K,R>} a new object with the results from f.\n * @template T,K,V,R\n */\nfunction map(obj, f, opt_obj) {\n  const res = {};\n  for (const key in obj) {\n    res[key] = f.call(/** @type {?} */ (opt_obj), obj[key], key, obj);\n  }\n  return res;\n}\n\n/**\n * Calls a function for each element in an object/map/hash. If any\n * call returns true, returns true (without checking the rest). If\n * all calls return false, returns false.\n * @param {?Object<K,V>} obj The object to check.\n * @param {function(this:T,V,?,?Object<K,V>):boolean} f The function to call for\n *     every element. This function takes 3 arguments (the value, the key and\n *     the object) and should return a boolean.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {boolean} true if any element passes the test.\n * @template T,K,V\n */\nfunction some(obj, f, opt_obj) {\n  for (const key in obj) {\n    if (f.call(/** @type {?} */ (opt_obj), obj[key], key, obj)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Calls a function for each element in an object/map/hash. If\n * all calls return true, returns true. If any call returns false, returns\n * false at this point and does not continue to check the remaining elements.\n * @param {?Object<K,V>} obj The object to check.\n * @param {?function(this:T,V,?,?Object<K,V>):boolean} f The function to call\n *     for every element. This function takes 3 arguments (the value, the key\n *     and the object) and should return a boolean.\n * @param {T=} opt_obj This is used as the 'this' object within f.\n * @return {boolean} false if any element fails the test.\n * @template T,K,V\n */\nfunction every(obj, f, opt_obj) {\n  for (const key in obj) {\n    if (!f.call(/** @type {?} */ (opt_obj), obj[key], key, obj)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Returns the number of key-value pairs in the object map.\n * @param {?Object} obj The object for which to get the number of key-value\n *     pairs.\n * @return {number} The number of key-value pairs in the object map.\n */\nfunction getCount(obj) {\n  let rv = 0;\n  for (const key in obj) {\n    rv++;\n  }\n  return rv;\n}\n\n/**\n * Returns one key from the object map, if any exists.\n * For map literals the returned key will be the first one in most of the\n * browsers (a know exception is Konqueror).\n * @param {?Object} obj The object to pick a key from.\n * @return {string|undefined} The key or undefined if the object is empty.\n */\nfunction getAnyKey(obj) {\n  for (const key in obj) {\n    return key;\n  }\n}\n\n/**\n * Returns one value from the object map, if any exists.\n * For map literals the returned value will be the first one in most of the\n * browsers (a know exception is Konqueror).\n * @param {?Object<K,V>} obj The object to pick a value from.\n * @return {V|undefined} The value or undefined if the object is empty.\n * @template K,V\n */\nfunction getAnyValue(obj) {\n  for (const key in obj) {\n    return obj[key];\n  }\n}\n\n/**\n * Whether the object/hash/map contains the given object as a value.\n * An alias for containsValue(obj, val).\n * @param {?Object<K,V>} obj The object in which to look for val.\n * @param {V} val The object for which to check.\n * @return {boolean} true if val is present.\n * @template K,V\n */\nfunction contains(obj, val) {\n  return containsValue(obj, val);\n}\n\n/**\n * Returns the values of the object/map/hash.\n * @param {?Object<K,V>} obj The object from which to get the values.\n * @return {!Array<V>} The values in the object/map/hash.\n * @template K,V\n */\nfunction getValues(obj) {\n  const res = [];\n  let i = 0;\n  for (const key in obj) {\n    res[i++] = obj[key];\n  }\n  return res;\n}\n\n/**\n * Returns the keys of the object/map/hash.\n * @param {?Object} obj The object from which to get the keys.\n * @return {!Array<string>} Array of property keys.\n */\nfunction getKeys(obj) {\n  const res = [];\n  let i = 0;\n  for (const key in obj) {\n    res[i++] = key;\n  }\n  return res;\n}\n\n/**\n * Get a value from an object multiple levels deep.  This is useful for\n * pulling values from deeply nested objects, such as JSON responses.\n * Example usage: getValueByKeys(jsonObj, 'foo', 'entries', 3)\n * @param {?Object} obj An object to get the value from. Can be array-like.\n * @param {...(string|number|!IArrayLike<number|string>)} var_args A number of\n *     keys (as strings, or numbers, for array-like objects). Can also be\n *     specified as a single array of keys.\n * @return {*} The resulting value. If, at any point, the value for a key in the\n *     current object is null or undefined, returns undefined.\n */\nfunction getValueByKeys(obj, var_args) {\n  const isArrayLike = goog.isArrayLike(var_args);\n  const keys = isArrayLike ?\n      /** @type {!IArrayLike<number|string>} */ (var_args) :\n      arguments;\n\n  // Start with the 2nd parameter for the variable parameters syntax.\n  for (let i = isArrayLike ? 0 : 1; i < keys.length; i++) {\n    if (obj == null) return undefined;\n    obj = obj[keys[i]];\n  }\n\n  return obj;\n}\n\n/**\n * Whether the object/map/hash contains the given key.\n * @param {?Object} obj The object in which to look for key.\n * @param {?} key The key for which to check.\n * @return {boolean} true If the map contains the key.\n */\nfunction containsKey(obj, key) {\n  return obj !== null && key in obj;\n}\n\n/**\n * Whether the object/map/hash contains the given value. This is O(n).\n * @param {?Object<K,V>} obj The object in which to look for val.\n * @param {V} val The value for which to check.\n * @return {boolean} true If the map contains the value.\n * @template K,V\n */\nfunction containsValue(obj, val) {\n  for (const key in obj) {\n    if (obj[key] == val) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Searches an object for an element that satisfies the given condition and\n * returns its key.\n * @param {?Object<K,V>} obj The object to search in.\n * @param {function(this:T,V,string,?Object<K,V>):boolean} f The function to\n *     call for every element. Takes 3 arguments (the value, the key and the\n *     object) and should return a boolean.\n * @param {T=} thisObj An optional \"this\" context for the function.\n * @return {string|undefined} The key of an element for which the function\n *     returns true or undefined if no such element is found.\n * @template T,K,V\n */\nfunction findKey(obj, f, thisObj = undefined) {\n  for (const key in obj) {\n    if (f.call(/** @type {?} */ (thisObj), obj[key], key, obj)) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\n/**\n * Searches an object for an element that satisfies the given condition and\n * returns its value.\n * @param {?Object<K,V>} obj The object to search in.\n * @param {function(this:T,V,string,?Object<K,V>):boolean} f The function to\n *     call for every element. Takes 3 arguments (the value, the key and the\n *     object) and should return a boolean.\n * @param {T=} thisObj An optional \"this\" context for the function.\n * @return {V} The value of an element for which the function returns true or\n *     undefined if no such element is found.\n * @template T,K,V\n */\nfunction findValue(obj, f, thisObj = undefined) {\n  const key = findKey(obj, f, thisObj);\n  return key && obj[key];\n}\n\n/**\n * Whether the object/map/hash is empty.\n * @param {?Object} obj The object to test.\n * @return {boolean} true if obj is empty.\n */\nfunction isEmpty(obj) {\n  for (const key in obj) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Removes all key value pairs from the object/map/hash.\n * @param {?Object} obj The object to clear.\n * @return {void}\n */\nfunction clear(obj) {\n  for (const i in obj) {\n    delete obj[i];\n  }\n}\n\n/**\n * Removes a key-value pair based on the key.\n * @param {?Object} obj The object from which to remove the key.\n * @param {?} key The key to remove.\n * @return {boolean} Whether an element was removed.\n */\nfunction remove(obj, key) {\n  let rv;\n  if (rv = key in /** @type {!Object} */ (obj)) {\n    delete obj[key];\n  }\n  return rv;\n}\n\n/**\n * Adds a key-value pair to the object. Throws an exception if the key is\n * already in use. Use set if you want to change an existing pair.\n * @param {?Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {V} val The value to add.\n * @return {void}\n * @template K,V\n */\nfunction add(obj, key, val) {\n  if (obj !== null && key in obj) {\n    throw new Error(`The object already contains the key \"${key}\"`);\n  }\n  set(obj, key, val);\n}\n\n/**\n * Returns the value for the given key.\n * @param {?Object<K,V>} obj The object from which to get the value.\n * @param {string} key The key for which to get the value.\n * @param {R=} val The value to return if no item is found for the given key\n *     (default is undefined).\n * @return {V|R|undefined} The value for the given key.\n * @template K,V,R\n */\nfunction get(obj, key, val = undefined) {\n  if (obj !== null && key in obj) {\n    return obj[key];\n  }\n  return val;\n}\n\n/**\n * Adds a key-value pair to the object/map/hash.\n * @param {?Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {V} value The value to add.\n * @template K,V\n * @return {void}\n */\nfunction set(obj, key, value) {\n  obj[key] = value;\n}\n\n/**\n * Adds a key-value pair to the object/map/hash if it doesn't exist yet.\n * @param {?Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {V} value The value to add if the key wasn't present.\n * @return {V} The value of the entry at the end of the function.\n * @template K,V\n */\nfunction setIfUndefined(obj, key, value) {\n  return key in /** @type {!Object} */ (obj) ? obj[key] : (obj[key] = value);\n}\n\n/**\n * Sets a key and value to an object if the key is not set. The value will be\n * the return value of the given function. If the key already exists, the\n * object will not be changed and the function will not be called (the function\n * will be lazily evaluated -- only called if necessary).\n * This function is particularly useful when used with an `Object` which is\n * acting as a cache.\n * @param {?Object<K,V>} obj The object to which to add the key-value pair.\n * @param {string} key The key to add.\n * @param {function():V} f The value to add if the key wasn't present.\n * @return {V} The value of the entry at the end of the function.\n * @template K,V\n */\nfunction setWithReturnValueIfNotSet(obj, key, f) {\n  if (key in obj) {\n    return obj[key];\n  }\n\n  const val = f();\n  obj[key] = val;\n  return val;\n}\n\n/**\n * Compares two objects for equality using === on the values.\n * @param {!Object<K,V>} a\n * @param {!Object<K,V>} b\n * @return {boolean}\n * @template K,V\n */\nfunction equals(a, b) {\n  for (const k in a) {\n    if (!(k in b) || a[k] !== b[k]) {\n      return false;\n    }\n  }\n  for (const k in b) {\n    if (!(k in a)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Returns a shallow clone of the object.\n * @param {?Object<K,V>} obj Object to clone.\n * @return {!Object<K,V>} Clone of the input object.\n * @template K,V\n */\nfunction clone(obj) {\n  const res = {};\n  for (const key in obj) {\n    res[key] = obj[key];\n  }\n  return res;\n}\n\n/**\n * Clones a value. The input may be an Object, Array, or basic type. Objects and\n * arrays will be cloned recursively.\n * WARNINGS:\n * <code>unsafeClone</code> does not detect reference loops. Objects\n * that refer to themselves will cause infinite recursion.\n * <code>unsafeClone</code> is unaware of unique identifiers, and\n * copies UIDs created by <code>getUid</code> into cloned results.\n * @param {T} obj The value to clone.\n * @return {T} A clone of the input value.\n * @template T\n */\nfunction unsafeClone(obj) {\n  if (!obj || typeof obj !== 'object') return obj;\n  if (typeof obj.clone === 'function') return obj.clone();\n  if (typeof Map !== 'undefined' && obj instanceof Map) {\n    return new Map(obj);\n  } else if (typeof Set !== 'undefined' && obj instanceof Set) {\n    return new Set(obj);\n  }\n  const clone = Array.isArray(obj) ? [] :\n      typeof ArrayBuffer === 'function' &&\n          typeof ArrayBuffer.isView === 'function' && ArrayBuffer.isView(obj) &&\n          !(obj instanceof DataView) ?\n                                     new obj.constructor(obj.length) :\n                                     {};\n  for (const key in obj) {\n    clone[key] = unsafeClone(obj[key]);\n  }\n  return clone;\n}\n\n/**\n * Returns a new object in which all the keys and values are interchanged\n * (keys become values and values become keys). If multiple keys map to the\n * same value, the chosen transposed value is implementation-dependent.\n * @param {?Object} obj The object to transpose.\n * @return {!Object} The transposed object.\n */\nfunction transpose(obj) {\n  const transposed = {};\n  for (const key in obj) {\n    transposed[obj[key]] = key;\n  }\n  return transposed;\n}\n\n/**\n * The names of the fields that are defined on Object.prototype.\n * @type {!Array<string>}\n */\nconst PROTOTYPE_FIELDS = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf',\n];\n\n/**\n * Extends an object with another object.\n * This operates 'in-place'; it does not create a new Object.\n * Example:\n * var o = {};\n * extend(o, {a: 0, b: 1});\n * o; // {a: 0, b: 1}\n * extend(o, {b: 2, c: 3});\n * o; // {a: 0, b: 2, c: 3}\n * @param {?Object} target The object to modify. Existing properties will be\n *     overwritten if they are also present in one of the objects in `var_args`.\n * @param {...(?Object|undefined)} var_args The objects from which values\n *     will be copied.\n * @return {void}\n * @deprecated Prefer Object.assign\n */\nfunction extend(target, var_args) {\n  let key;\n  let source;\n  for (let i = 1; i < arguments.length; i++) {\n    source = arguments[i];\n    for (key in source) {\n      target[key] = source[key];\n    }\n\n    // For IE the for-in-loop does not contain any properties that are not\n    // enumerable on the prototype object (for example isPrototypeOf from\n    // Object.prototype) and it will also not include 'replace' on objects that\n    // extend String and change 'replace' (not that it is common for anyone to\n    // extend anything except Object).\n\n    for (let j = 0; j < PROTOTYPE_FIELDS.length; j++) {\n      key = PROTOTYPE_FIELDS[j];\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n}\n\n/**\n * Creates a new object built from the key-value pairs provided as arguments.\n * @param {...*} var_args If only one argument is provided and it is an array\n *     then this is used as the arguments, otherwise even arguments are used as\n *     the property names and odd arguments are used as the property values.\n * @return {!Object} The new object.\n * @throws {!Error} If there are uneven number of arguments or there is only one\n *     non array argument.\n */\nfunction create(var_args) {\n  const argLength = arguments.length;\n  if (argLength == 1 && Array.isArray(arguments[0])) {\n    return create.apply(null, arguments[0]);\n  }\n\n  if (argLength % 2) {\n    throw new Error('Uneven number of arguments');\n  }\n\n  const rv = {};\n  for (let i = 0; i < argLength; i += 2) {\n    rv[arguments[i]] = arguments[i + 1];\n  }\n  return rv;\n}\n\n/**\n * Creates a new object where the property names come from the arguments but\n * the value is always set to true\n * @param {...*} var_args If only one argument is provided and it is an array\n *     then this is used as the arguments, otherwise the arguments are used as\n *     the property names.\n * @return {!Object} The new object.\n */\nfunction createSet(var_args) {\n  const argLength = arguments.length;\n  if (argLength == 1 && Array.isArray(arguments[0])) {\n    return createSet.apply(null, arguments[0]);\n  }\n\n  const rv = {};\n  for (let i = 0; i < argLength; i++) {\n    rv[arguments[i]] = true;\n  }\n  return rv;\n}\n\n/**\n * Creates an immutable view of the underlying object, if the browser\n * supports immutable objects.\n * In default mode, writes to this view will fail silently. In strict mode,\n * they will throw an error.\n * @param {!Object<K,V>} obj An object.\n * @return {!Object<K,V>} An immutable view of that object, or the original\n *     object if this browser does not support immutables.\n * @template K,V\n */\nfunction createImmutableView(obj) {\n  let result = obj;\n  if (Object.isFrozen && !Object.isFrozen(obj)) {\n    result = Object.create(obj);\n    Object.freeze(result);\n  }\n  return result;\n}\n\n/**\n * @param {!Object} obj An object.\n * @return {boolean} Whether this is an immutable view of the object.\n */\nfunction isImmutableView(obj) {\n  return !!Object.isFrozen && Object.isFrozen(obj);\n}\n\n/**\n * Get all properties names on a given Object regardless of enumerability.\n * <p> If the browser does not support `Object.getOwnPropertyNames` nor\n * `Object.getPrototypeOf` then this is equivalent to using\n * `getKeys`\n * @param {?Object} obj The object to get the properties of.\n * @param {boolean=} includeObjectPrototype Whether properties defined on\n *     `Object.prototype` should be included in the result.\n * @param {boolean=} includeFunctionPrototype Whether properties defined on\n *     `Function.prototype` should be included in the result.\n * @return {!Array<string>}\n * @public\n */\nfunction getAllPropertyNames(\n    obj, includeObjectPrototype = undefined,\n    includeFunctionPrototype = undefined) {\n  if (!obj) {\n    return [];\n  }\n\n  // Naively use a for..in loop to get the property names if the browser doesn't\n  // support any other APIs for getting it.\n  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {\n    return getKeys(obj);\n  }\n\n  const visitedSet = {};\n\n  // Traverse the prototype chain and add all properties to the visited set.\n  let proto = obj;\n  while (proto && (proto !== Object.prototype || !!includeObjectPrototype) &&\n         (proto !== Function.prototype || !!includeFunctionPrototype)) {\n    const names = Object.getOwnPropertyNames(proto);\n    for (let i = 0; i < names.length; i++) {\n      visitedSet[names[i]] = true;\n    }\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return getKeys(visitedSet);\n}\n\n/**\n * Given a ES5 or ES6 class reference, return its super class / super\n * constructor.\n * This should be used in rare cases where you need to walk up the inheritance\n * tree (this is generally a bad idea). But this work with ES5 and ES6 classes,\n * unlike relying on the superClass_ property.\n * Note: To start walking up the hierarchy from an instance call this with its\n * `constructor` property; e.g. `getSuperClass(instance.constructor)`.\n * @param {function(new: ?)} constructor\n * @return {?Object}\n */\nfunction getSuperClass(constructor) {\n  const proto = Object.getPrototypeOf(constructor.prototype);\n  return proto && proto.constructor;\n}\n\nexports = {\n  add,\n  clear,\n  clone,\n  contains,\n  containsKey,\n  containsValue,\n  create,\n  createImmutableView,\n  createSet,\n  equals,\n  every,\n  extend,\n  filter,\n  findKey,\n  findValue,\n  forEach,\n  get,\n  getAllPropertyNames,\n  getAnyKey,\n  getAnyValue,\n  getCount,\n  getKeys,\n  getSuperClass,\n  getValueByKeys,\n  getValues,\n  isEmpty,\n  isImmutableView,\n  map,\n  remove,\n  set,\n  setIfUndefined,\n  setWithReturnValueIfNotSet,\n  some,\n  transpose,\n  unsafeClone,\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview An event manager for both native browser event\n * targets and custom JavaScript event targets\n * (`goog.events.Listenable`). This provides an abstraction\n * over browsers' event systems.\n *\n * It also provides a simulation of W3C event model's capture phase in\n * Internet Explorer (IE 8 and below). Caveat: the simulation does not\n * interact well with listeners registered directly on the elements\n * (bypassing goog.events) or even with listeners registered via\n * goog.events in a separate JS binary. In these cases, we provide\n * no ordering guarantees.\n *\n * The listeners will receive a \"patched\" event object. Such event object\n * contains normalized values for certain event properties that differs in\n * different browsers.\n *\n * Example usage:\n * <pre>\n * goog.events.listen(myNode, 'click', function(e) { alert('woo') });\n * goog.events.listen(myNode, 'mouseover', mouseHandler, true);\n * goog.events.unlisten(myNode, 'mouseover', mouseHandler, true);\n * goog.events.removeAll(myNode);\n * </pre>\n *\n *                                            in IE and event object patching]\n *\n * @see ../demos/events.html\n * @see ../demos/event-propagation.html\n * @see ../demos/stopevent.html\n */\n\n// IMPLEMENTATION NOTES:\n// goog.events stores an auxiliary data structure on each EventTarget\n// source being listened on. This allows us to take advantage of GC,\n// having the data structure GC'd when the EventTarget is GC'd. This\n// GC behavior is equivalent to using W3C DOM Events directly.\n\ngoog.provide('goog.events');\ngoog.provide('goog.events.CaptureSimulationMode');\ngoog.provide('goog.events.Key');\ngoog.provide('goog.events.ListenableType');\n\ngoog.require('goog.asserts');\ngoog.require('goog.debug.entryPointRegistry');\ngoog.require('goog.events.BrowserEvent');\ngoog.require('goog.events.BrowserFeature');\ngoog.require('goog.events.Listenable');\ngoog.require('goog.events.ListenerMap');\ngoog.requireType('goog.debug.ErrorHandler');\ngoog.requireType('goog.events.EventId');\ngoog.requireType('goog.events.EventLike');\ngoog.requireType('goog.events.EventWrapper');\ngoog.requireType('goog.events.ListenableKey');\ngoog.requireType('goog.events.Listener');\n\n\n/**\n * @typedef {number|goog.events.ListenableKey}\n */\ngoog.events.Key;\n\n\n/**\n * @typedef {EventTarget|goog.events.Listenable}\n */\ngoog.events.ListenableType;\n\n\n/**\n * Property name on a native event target for the listener map\n * associated with the event target.\n * @private @const {string}\n */\ngoog.events.LISTENER_MAP_PROP_ = 'closure_lm_' + ((Math.random() * 1e6) | 0);\n\n\n/**\n * String used to prepend to IE event types.\n * @const\n * @private\n */\ngoog.events.onString_ = 'on';\n\n\n/**\n * Map of computed \"on<eventname>\" strings for IE event types. Caching\n * this removes an extra object allocation in goog.events.listen which\n * improves IE6 performance.\n * @const\n * @dict\n * @private\n */\ngoog.events.onStringMap_ = {};\n\n\n/**\n * @enum {number} Different capture simulation mode for IE8-.\n */\ngoog.events.CaptureSimulationMode = {\n  /**\n   * Does not perform capture simulation. Will asserts in IE8- when you\n   * add capture listeners.\n   */\n  OFF_AND_FAIL: 0,\n\n  /**\n   * Does not perform capture simulation, silently ignore capture\n   * listeners.\n   */\n  OFF_AND_SILENT: 1,\n\n  /**\n   * Performs capture simulation.\n   */\n  ON: 2\n};\n\n\n/**\n * @define {number} The capture simulation mode for IE8-. By default,\n *     this is ON.\n */\ngoog.events.CAPTURE_SIMULATION_MODE =\n    goog.define('goog.events.CAPTURE_SIMULATION_MODE', 2);\n\n\n/**\n * Estimated count of total native listeners.\n * @private {number}\n */\ngoog.events.listenerCountEstimate_ = 0;\n\n\n/**\n * Adds an event listener for a specific event on a native event\n * target (such as a DOM element) or an object that has implemented\n * {@link goog.events.Listenable}. A listener can only be added once\n * to an object and if it is added again the key for the listener is\n * returned. Note that if the existing listener is a one-off listener\n * (registered via listenOnce), it will no longer be a one-off\n * listener after a call to listen().\n *\n * @param {EventTarget|goog.events.Listenable} src The node to listen\n *     to events on.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type or array of event types.\n * @param {function(this:T, EVENTOBJ):?|{handleEvent:function(?):?}|null}\n *     listener Callback method, or an object with a handleEvent function.\n *     WARNING: passing an Object is now softly deprecated.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {T=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.Key} Unique key for the listener.\n * @template T,EVENTOBJ\n */\ngoog.events.listen = function(src, type, listener, opt_options, opt_handler) {\n  'use strict';\n  if (opt_options && opt_options.once) {\n    return goog.events.listenOnce(\n        src, type, listener, opt_options, opt_handler);\n  }\n  if (Array.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      goog.events.listen(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n\n  listener = goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    var capture =\n        goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n    return src.listen(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n  } else {\n    return goog.events.listen_(\n        /** @type {!EventTarget} */ (src), type, listener,\n        /* callOnce */ false, opt_options, opt_handler);\n  }\n};\n\n\n/**\n * Adds an event listener for a specific event on a native event\n * target. A listener can only be added once to an object and if it\n * is added again the key for the listener is returned.\n *\n * Note that a one-off listener will not change an existing listener,\n * if any. On the other hand a normal listener will change existing\n * one-off listener to become a normal listener.\n *\n * @param {EventTarget} src The node to listen to events on.\n * @param {string|?goog.events.EventId<EVENTOBJ>} type Event type.\n * @param {!Function} listener Callback function.\n * @param {boolean} callOnce Whether the listener is a one-off\n *     listener or otherwise.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.ListenableKey} Unique key for the listener.\n * @template EVENTOBJ\n * @private\n */\ngoog.events.listen_ = function(\n    src, type, listener, callOnce, opt_options, opt_handler) {\n  'use strict';\n  if (!type) {\n    throw new Error('Invalid event type');\n  }\n\n  var capture =\n      goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n\n  var listenerMap = goog.events.getListenerMap_(src);\n  if (!listenerMap) {\n    src[goog.events.LISTENER_MAP_PROP_] = listenerMap =\n        new goog.events.ListenerMap(src);\n  }\n\n  var listenerObj = /** @type {goog.events.Listener} */ (\n      listenerMap.add(type, listener, callOnce, capture, opt_handler));\n\n  // If the listenerObj already has a proxy, it has been set up\n  // previously. We simply return.\n  if (listenerObj.proxy) {\n    return listenerObj;\n  }\n\n  var proxy = goog.events.getProxy();\n  listenerObj.proxy = proxy;\n\n  proxy.src = src;\n  proxy.listener = listenerObj;\n\n  // Attach the proxy through the browser's API\n  if (src.addEventListener) {\n    // Don't pass an object as `capture` if the browser doesn't support that.\n    if (!goog.events.BrowserFeature.PASSIVE_EVENTS) {\n      opt_options = capture;\n    }\n    // Don't break tests that expect a boolean.\n    if (opt_options === undefined) opt_options = false;\n    src.addEventListener(type.toString(), proxy, opt_options);\n  } else if (src.attachEvent) {\n    // The else if above used to be an unconditional else. It would call\n    // attachEvent come gws or high water. This would sometimes throw an\n    // exception on IE11, spoiling the day of some callers. The previous\n    // incarnation of this code, from 2007, indicates that it replaced an\n    // earlier still version that caused excess allocations on IE6.\n    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);\n  } else if (src.addListener && src.removeListener) {\n    // In IE, MediaQueryList uses addListener() insteadd of addEventListener. In\n    // Safari, there is no global for the MediaQueryList constructor, so we just\n    // check whether the object \"looks like\" MediaQueryList.\n    goog.asserts.assert(\n        type === 'change', 'MediaQueryList only has a change event');\n    src.addListener(proxy);\n  } else {\n    throw new Error('addEventListener and attachEvent are unavailable.');\n  }\n\n  goog.events.listenerCountEstimate_++;\n  return listenerObj;\n};\n\n\n/**\n * Helper function for returning a proxy function.\n * @return {!Function} A new or reused function object.\n */\ngoog.events.getProxy = function() {\n  'use strict';\n  const proxyCallbackFunction = goog.events.handleBrowserEvent_;\n  const f = function(eventObject) {\n    return proxyCallbackFunction.call(f.src, f.listener, eventObject);\n  };\n  return f;\n};\n\n\n/**\n * Adds an event listener for a specific event on a native event\n * target (such as a DOM element) or an object that has implemented\n * {@link goog.events.Listenable}. After the event has fired the event\n * listener is removed from the target.\n *\n * If an existing listener already exists, listenOnce will do\n * nothing. In particular, if the listener was previously registered\n * via listen(), listenOnce() will not turn the listener into a\n * one-off listener. Similarly, if there is already an existing\n * one-off listener, listenOnce does not modify the listeners (it is\n * still a once listener).\n *\n * @param {EventTarget|goog.events.Listenable} src The node to listen\n *     to events on.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type or array of event types.\n * @param {function(this:T, EVENTOBJ):?|{handleEvent:function(?):?}|null}\n *     listener Callback method.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {T=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.Key} Unique key for the listener.\n * @template T,EVENTOBJ\n */\ngoog.events.listenOnce = function(\n    src, type, listener, opt_options, opt_handler) {\n  'use strict';\n  if (Array.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      goog.events.listenOnce(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n\n  listener = goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    var capture =\n        goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n    return src.listenOnce(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n  } else {\n    return goog.events.listen_(\n        /** @type {!EventTarget} */ (src), type, listener,\n        /* callOnce */ true, opt_options, opt_handler);\n  }\n};\n\n\n/**\n * Adds an event listener with a specific event wrapper on a DOM Node or an\n * object that has implemented {@link goog.events.Listenable}. A listener can\n * only be added once to an object.\n *\n * @param {EventTarget|goog.events.Listenable} src The target to\n *     listen to events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(this:T, ?):?|{handleEvent:function(?):?}|null} listener\n *     Callback method, or an object with a handleEvent function.\n * @param {boolean=} opt_capt Whether to fire in capture phase (defaults to\n *     false).\n * @param {T=} opt_handler Element in whose scope to call the listener.\n * @template T\n */\ngoog.events.listenWithWrapper = function(\n    src, wrapper, listener, opt_capt, opt_handler) {\n  'use strict';\n  wrapper.listen(src, listener, opt_capt, opt_handler);\n};\n\n\n/**\n * Removes an event listener which was added with listen().\n *\n * @param {EventTarget|goog.events.Listenable} src The target to stop\n *     listening to events on.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type or array of event types to unlisten to.\n * @param {function(?):?|{handleEvent:function(?):?}|null} listener The\n *     listener function to remove.\n * @param {(boolean|!EventListenerOptions)=} opt_options\n *     whether the listener is fired during the capture or bubble phase of the\n *     event.\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n * @return {?boolean} indicating whether the listener was there to remove.\n * @template EVENTOBJ\n */\ngoog.events.unlisten = function(src, type, listener, opt_options, opt_handler) {\n  'use strict';\n  if (Array.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      goog.events.unlisten(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n  var capture =\n      goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n\n  listener = goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return src.unlisten(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n  }\n\n  if (!src) {\n    // TODO(chrishenry): We should tighten the API to only accept\n    // non-null objects, or add an assertion here.\n    return false;\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (src));\n  if (listenerMap) {\n    var listenerObj = listenerMap.getListener(\n        /** @type {string|!goog.events.EventId} */ (type), listener, capture,\n        opt_handler);\n    if (listenerObj) {\n      return goog.events.unlistenByKey(listenerObj);\n    }\n  }\n\n  return false;\n};\n\n\n/**\n * Removes an event listener which was added with listen() by the key\n * returned by listen().\n *\n * @param {goog.events.Key} key The key returned by listen() for this\n *     event listener.\n * @return {boolean} indicating whether the listener was there to remove.\n */\ngoog.events.unlistenByKey = function(key) {\n  'use strict';\n  // TODO(chrishenry): Remove this check when tests that rely on this\n  // are fixed.\n  if (typeof key === 'number') {\n    return false;\n  }\n\n  var listener = key;\n  if (!listener || listener.removed) {\n    return false;\n  }\n\n  var src = listener.src;\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return /** @type {!goog.events.Listenable} */ (src).unlistenByKey(listener);\n  }\n\n  var type = listener.type;\n  var proxy = listener.proxy;\n  if (src.removeEventListener) {\n    src.removeEventListener(type, proxy, listener.capture);\n  } else if (src.detachEvent) {\n    src.detachEvent(goog.events.getOnString_(type), proxy);\n  } else if (src.addListener && src.removeListener) {\n    src.removeListener(proxy);\n  }\n  goog.events.listenerCountEstimate_--;\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (src));\n  // TODO(chrishenry): Try to remove this conditional and execute the\n  // first branch always. This should be safe.\n  if (listenerMap) {\n    listenerMap.removeByKey(listener);\n    if (listenerMap.getTypeCount() == 0) {\n      // Null the src, just because this is simple to do (and useful\n      // for IE <= 7).\n      listenerMap.src = null;\n      // We don't use delete here because IE does not allow delete\n      // on a window object.\n      src[goog.events.LISTENER_MAP_PROP_] = null;\n    }\n  } else {\n    /** @type {!goog.events.Listener} */ (listener).markAsRemoved();\n  }\n\n  return true;\n};\n\n\n/**\n * Removes an event listener which was added with listenWithWrapper().\n *\n * @param {EventTarget|goog.events.Listenable} src The target to stop\n *     listening to events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(?):?|{handleEvent:function(?):?}|null} listener The\n *     listener function to remove.\n * @param {boolean=} opt_capt In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase of the\n *     event.\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n */\ngoog.events.unlistenWithWrapper = function(\n    src, wrapper, listener, opt_capt, opt_handler) {\n  'use strict';\n  wrapper.unlisten(src, listener, opt_capt, opt_handler);\n};\n\n\n/**\n * Removes all listeners from an object. You can also optionally\n * remove listeners of a particular type.\n *\n * @param {Object|undefined} obj Object to remove listeners from. Must be an\n *     EventTarget or a goog.events.Listenable.\n * @param {string|!goog.events.EventId=} opt_type Type of event to remove.\n *     Default is all types.\n * @return {number} Number of listeners removed.\n */\ngoog.events.removeAll = function(obj, opt_type) {\n  'use strict';\n  // TODO(chrishenry): Change the type of obj to\n  // (!EventTarget|!goog.events.Listenable).\n\n  if (!obj) {\n    return 0;\n  }\n\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return /** @type {?} */ (obj).removeAllListeners(opt_type);\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (obj));\n  if (!listenerMap) {\n    return 0;\n  }\n\n  var count = 0;\n  var typeStr = opt_type && opt_type.toString();\n  for (var type in listenerMap.listeners) {\n    if (!typeStr || type == typeStr) {\n      // Clone so that we don't need to worry about unlistenByKey\n      // changing the content of the ListenerMap.\n      var listeners = listenerMap.listeners[type].concat();\n      for (var i = 0; i < listeners.length; ++i) {\n        if (goog.events.unlistenByKey(listeners[i])) {\n          ++count;\n        }\n      }\n    }\n  }\n  return count;\n};\n\n\n/**\n * Gets the listeners for a given object, type and capture phase.\n *\n * @param {Object} obj Object to get listeners for.\n * @param {string|!goog.events.EventId} type Event type.\n * @param {boolean} capture Capture phase?.\n * @return {!Array<!goog.events.Listener>} Array of listener objects.\n */\ngoog.events.getListeners = function(obj, type, capture) {\n  'use strict';\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return /** @type {!goog.events.Listenable} */ (obj).getListeners(\n        type, capture);\n  } else {\n    if (!obj) {\n      // TODO(chrishenry): We should tighten the API to accept\n      // !EventTarget|goog.events.Listenable, and add an assertion here.\n      return [];\n    }\n\n    var listenerMap = goog.events.getListenerMap_(\n        /** @type {!EventTarget} */ (obj));\n    return listenerMap ? listenerMap.getListeners(type, capture) : [];\n  }\n};\n\n\n/**\n * Gets the goog.events.Listener for the event or null if no such listener is\n * in use.\n *\n * @param {EventTarget|goog.events.Listenable} src The target from\n *     which to get listeners.\n * @param {?string|!goog.events.EventId<EVENTOBJ>} type The type of the event.\n * @param {function(EVENTOBJ):?|{handleEvent:function(?):?}|null} listener The\n *     listener function to get.\n * @param {boolean=} opt_capt In DOM-compliant browsers, this determines\n *                            whether the listener is fired during the\n *                            capture or bubble phase of the event.\n * @param {Object=} opt_handler Element in whose scope to call the listener.\n * @return {goog.events.ListenableKey} the found listener or null if not found.\n * @template EVENTOBJ\n */\ngoog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {\n  'use strict';\n  // TODO(chrishenry): Change type from ?string to string, or add assertion.\n  type = /** @type {string} */ (type);\n  listener = goog.events.wrapListener(listener);\n  var capture = !!opt_capt;\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return src.getListener(type, listener, capture, opt_handler);\n  }\n\n  if (!src) {\n    // TODO(chrishenry): We should tighten the API to only accept\n    // non-null objects, or add an assertion here.\n    return null;\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (src));\n  if (listenerMap) {\n    return listenerMap.getListener(type, listener, capture, opt_handler);\n  }\n  return null;\n};\n\n\n/**\n * Returns whether an event target has any active listeners matching the\n * specified signature. If either the type or capture parameters are\n * unspecified, the function will match on the remaining criteria.\n *\n * @param {EventTarget|goog.events.Listenable} obj Target to get\n *     listeners for.\n * @param {string|!goog.events.EventId=} opt_type Event type.\n * @param {boolean=} opt_capture Whether to check for capture or bubble-phase\n *     listeners.\n * @return {boolean} Whether an event target has one or more listeners matching\n *     the requested type and/or capture phase.\n */\ngoog.events.hasListener = function(obj, opt_type, opt_capture) {\n  'use strict';\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return obj.hasListener(opt_type, opt_capture);\n  }\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {!EventTarget} */ (obj));\n  return !!listenerMap && listenerMap.hasListener(opt_type, opt_capture);\n};\n\n\n/**\n * Provides a nice string showing the normalized event objects public members\n * @param {Object} e Event Object.\n * @return {string} String of the public members of the normalized event object.\n */\ngoog.events.expose = function(e) {\n  'use strict';\n  var str = [];\n  for (var key in e) {\n    if (e[key] && e[key].id) {\n      str.push(key + ' = ' + e[key] + ' (' + e[key].id + ')');\n    } else {\n      str.push(key + ' = ' + e[key]);\n    }\n  }\n  return str.join('\\n');\n};\n\n\n/**\n * Returns a string with on prepended to the specified type. This is used for IE\n * which expects \"on\" to be prepended. This function caches the string in order\n * to avoid extra allocations in steady state.\n * @param {string} type Event type.\n * @return {string} The type string with 'on' prepended.\n * @private\n */\ngoog.events.getOnString_ = function(type) {\n  'use strict';\n  if (type in goog.events.onStringMap_) {\n    return goog.events.onStringMap_[type];\n  }\n  return goog.events.onStringMap_[type] = goog.events.onString_ + type;\n};\n\n\n/**\n * Fires an object's listeners of a particular type and phase\n *\n * @param {Object} obj Object whose listeners to call.\n * @param {string|!goog.events.EventId} type Event type.\n * @param {boolean} capture Which event phase.\n * @param {Object} eventObject Event object to be passed to listener.\n * @return {boolean} True if all listeners returned true else false.\n */\ngoog.events.fireListeners = function(obj, type, capture, eventObject) {\n  'use strict';\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return /** @type {!goog.events.Listenable} */ (obj).fireListeners(\n        type, capture, eventObject);\n  }\n\n  return goog.events.fireListeners_(obj, type, capture, eventObject);\n};\n\n\n/**\n * Fires an object's listeners of a particular type and phase.\n * @param {Object} obj Object whose listeners to call.\n * @param {string|!goog.events.EventId} type Event type.\n * @param {boolean} capture Which event phase.\n * @param {Object} eventObject Event object to be passed to listener.\n * @return {boolean} True if all listeners returned true else false.\n * @private\n */\ngoog.events.fireListeners_ = function(obj, type, capture, eventObject) {\n  'use strict';\n  /** @type {boolean} */\n  var retval = true;\n\n  var listenerMap = goog.events.getListenerMap_(\n      /** @type {EventTarget} */ (obj));\n  if (listenerMap) {\n    // TODO(chrishenry): Original code avoids array creation when there\n    // is no listener, so we do the same. If this optimization turns\n    // out to be not required, we can replace this with\n    // listenerMap.getListeners(type, capture) instead, which is simpler.\n    var listenerArray = listenerMap.listeners[type.toString()];\n    if (listenerArray) {\n      listenerArray = listenerArray.concat();\n      for (var i = 0; i < listenerArray.length; i++) {\n        var listener = listenerArray[i];\n        // We might not have a listener if the listener was removed.\n        if (listener && listener.capture == capture && !listener.removed) {\n          var result = goog.events.fireListener(listener, eventObject);\n          retval = retval && (result !== false);\n        }\n      }\n    }\n  }\n  return retval;\n};\n\n\n/**\n * Fires a listener with a set of arguments\n *\n * @param {goog.events.Listener} listener The listener object to call.\n * @param {Object} eventObject The event object to pass to the listener.\n * @return {*} Result of listener.\n */\ngoog.events.fireListener = function(listener, eventObject) {\n  'use strict';\n  var listenerFn = listener.listener;\n  var listenerHandler = listener.handler || listener.src;\n\n  if (listener.callOnce) {\n    goog.events.unlistenByKey(listener);\n  }\n  return listenerFn.call(listenerHandler, eventObject);\n};\n\n\n/**\n * Gets the total number of listeners currently in the system.\n * @return {number} Number of listeners.\n * @deprecated This returns estimated count, now that Closure no longer\n * stores a central listener registry. We still return an estimation\n * to keep existing listener-related tests passing. In the near future,\n * this function will be removed.\n */\ngoog.events.getTotalListenerCount = function() {\n  'use strict';\n  return goog.events.listenerCountEstimate_;\n};\n\n\n/**\n * Dispatches an event (or event like object) and calls all listeners\n * listening for events of this type. The type of the event is decided by the\n * type property on the event object.\n *\n * If any of the listeners returns false OR calls preventDefault then this\n * function will return false.  If one of the capture listeners calls\n * stopPropagation, then the bubble listeners won't fire.\n *\n * @param {goog.events.Listenable} src The event target.\n * @param {goog.events.EventLike} e Event object.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the handlers returns false) this will also return false.\n *     If there are no handlers, or if all handlers return true, this returns\n *     true.\n */\ngoog.events.dispatchEvent = function(src, e) {\n  'use strict';\n  goog.asserts.assert(\n      goog.events.Listenable.isImplementedBy(src),\n      'Can not use goog.events.dispatchEvent with ' +\n          'non-goog.events.Listenable instance.');\n  return src.dispatchEvent(e);\n};\n\n\n/**\n * Installs exception protection for the browser event entry point using the\n * given error handler.\n *\n * @param {goog.debug.ErrorHandler} errorHandler Error handler with which to\n *     protect the entry point.\n */\ngoog.events.protectBrowserEventEntryPoint = function(errorHandler) {\n  'use strict';\n  goog.events.handleBrowserEvent_ =\n      errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);\n};\n\n\n/**\n * Handles an event and dispatches it to the correct listeners. This\n * function is a proxy for the real listener the user specified.\n *\n * @param {goog.events.Listener} listener The listener object.\n * @param {Event=} opt_evt Optional event object that gets passed in via the\n *     native event handlers.\n * @return {*} Result of the event handler.\n * @this {EventTarget} The object or Element that fired the event.\n * @private\n */\ngoog.events.handleBrowserEvent_ = function(listener, opt_evt) {\n  'use strict';\n  if (listener.removed) {\n    return true;\n  }\n\n  // Otherwise, simply fire the listener.\n  return goog.events.fireListener(\n      listener, new goog.events.BrowserEvent(opt_evt, this));\n};\n\n\n/**\n * This is used to mark the IE event object so we do not do the Closure pass\n * twice for a bubbling event.\n * @param {Event} e The IE browser event.\n * @private\n */\ngoog.events.markIeEvent_ = function(e) {\n  'use strict';\n  // Only the keyCode and the returnValue can be changed. We use keyCode for\n  // non keyboard events.\n  // event.returnValue is a bit more tricky. It is undefined by default. A\n  // boolean false prevents the default action. In a window.onbeforeunload and\n  // the returnValue is non undefined it will be alerted. However, we will only\n  // modify the returnValue for keyboard events. We can get a problem if non\n  // closure events sets the keyCode or the returnValue\n\n  var useReturnValue = false;\n\n  if (e.keyCode == 0) {\n    // We cannot change the keyCode in case that srcElement is input[type=file].\n    // We could test that that is the case but that would allocate 3 objects.\n    // If we use try/catch we will only allocate extra objects in the case of a\n    // failure.\n\n    try {\n      e.keyCode = -1;\n      return;\n    } catch (ex) {\n      useReturnValue = true;\n    }\n  }\n\n  if (useReturnValue ||\n      /** @type {boolean|undefined} */ (e.returnValue) == undefined) {\n    e.returnValue = true;\n  }\n};\n\n\n/**\n * This is used to check if an IE event has already been handled by the Closure\n * system so we do not do the Closure pass twice for a bubbling event.\n * @param {Event} e  The IE browser event.\n * @return {boolean} True if the event object has been marked.\n * @private\n */\ngoog.events.isMarkedIeEvent_ = function(e) {\n  'use strict';\n  return e.keyCode < 0 || e.returnValue != undefined;\n};\n\n\n/**\n * Counter to create unique event ids.\n * @private {number}\n */\ngoog.events.uniqueIdCounter_ = 0;\n\n\n/**\n * Creates a unique event id.\n *\n * @param {string} identifier The identifier.\n * @return {string} A unique identifier.\n * @idGenerator {unique}\n */\ngoog.events.getUniqueId = function(identifier) {\n  'use strict';\n  return identifier + '_' + goog.events.uniqueIdCounter_++;\n};\n\n\n/**\n * @param {EventTarget} src The source object.\n * @return {goog.events.ListenerMap} A listener map for the given\n *     source object, or null if none exists.\n * @private\n */\ngoog.events.getListenerMap_ = function(src) {\n  'use strict';\n  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];\n  // IE serializes the property as well (e.g. when serializing outer\n  // HTML). So we must check that the value is of the correct type.\n  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;\n};\n\n\n/**\n * Expando property for listener function wrapper for Object with\n * handleEvent.\n * @private @const {string}\n */\ngoog.events.LISTENER_WRAPPER_PROP_ =\n    '__closure_events_fn_' + ((Math.random() * 1e9) >>> 0);\n\n\n/**\n * @param {Object|Function} listener The listener function or an\n *     object that contains handleEvent method.\n * @return {!Function} Either the original function or a function that\n *     calls obj.handleEvent. If the same listener is passed to this\n *     function more than once, the same function is guaranteed to be\n *     returned.\n */\ngoog.events.wrapListener = function(listener) {\n  'use strict';\n  goog.asserts.assert(listener, 'Listener can not be null.');\n\n  if (typeof listener === 'function') {\n    return listener;\n  }\n\n  goog.asserts.assert(\n      listener.handleEvent, 'An object listener must have handleEvent method.');\n  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {\n    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {\n      'use strict';\n      return /** @type {?} */ (listener).handleEvent(e);\n    };\n  }\n  return listener[goog.events.LISTENER_WRAPPER_PROP_];\n};\n\n\n// Register the browser event handler as an entry point, so that\n// it can be monitored for exception handling, etc.\ngoog.debug.entryPointRegistry.register(\n    /**\n     * @param {function(!Function): !Function} transformer The transforming\n     *     function.\n     */\n    function(transformer) {\n      'use strict';\n      goog.events.handleBrowserEvent_ =\n          transformer(goog.events.handleBrowserEvent_);\n    });\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A disposable implementation of a custom\n * listenable/event target. See also: documentation for\n * `goog.events.Listenable`.\n *\n * @see ../demos/eventtarget.html\n * @see goog.events.Listenable\n */\n\ngoog.provide('goog.events.EventTarget');\n\ngoog.require('goog.Disposable');\ngoog.require('goog.asserts');\ngoog.require('goog.events');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.Listenable');\ngoog.require('goog.events.ListenerMap');\ngoog.require('goog.object');\ngoog.requireType('goog.events.EventId');\ngoog.requireType('goog.events.EventLike');\ngoog.requireType('goog.events.ListenableKey');\n\n\n\n/**\n * An implementation of `goog.events.Listenable` with full W3C\n * EventTarget-like support (capture/bubble mechanism, stopping event\n * propagation, preventing default actions).\n *\n * You may subclass this class to turn your class into a Listenable.\n *\n * Unless propagation is stopped, an event dispatched by an\n * EventTarget will bubble to the parent returned by\n * `getParentEventTarget`. To set the parent, call\n * `setParentEventTarget`. Subclasses that don't support\n * changing the parent can override the setter to throw an error.\n *\n * Example usage:\n * <pre>\n *   var source = new goog.events.EventTarget();\n *   function handleEvent(e) {\n *     alert('Type: ' + e.type + '; Target: ' + e.target);\n *   }\n *   source.listen('foo', handleEvent);\n *   // Or: goog.events.listen(source, 'foo', handleEvent);\n *   ...\n *   source.dispatchEvent('foo');  // will call handleEvent\n *   ...\n *   source.unlisten('foo', handleEvent);\n *   // Or: goog.events.unlisten(source, 'foo', handleEvent);\n * </pre>\n *\n * @constructor\n * @extends {goog.Disposable}\n * @implements {goog.events.Listenable}\n */\ngoog.events.EventTarget = function() {\n  'use strict';\n  goog.Disposable.call(this);\n\n  /**\n   * Maps of event type to an array of listeners.\n   * @private {!goog.events.ListenerMap}\n   */\n  this.eventTargetListeners_ = new goog.events.ListenerMap(this);\n\n  /**\n   * The object to use for event.target. Useful when mixing in an\n   * EventTarget to another object.\n   * @private {!Object}\n   */\n  this.actualEventTarget_ = this;\n\n  /**\n   * Parent event target, used during event bubbling.\n   *\n   * TODO(chrishenry): Change this to goog.events.Listenable. This\n   * currently breaks people who expect getParentEventTarget to return\n   * goog.events.EventTarget.\n   *\n   * @private {?goog.events.EventTarget}\n   */\n  this.parentEventTarget_ = null;\n};\ngoog.inherits(goog.events.EventTarget, goog.Disposable);\ngoog.events.Listenable.addImplementation(goog.events.EventTarget);\n\n\n/**\n * An artificial cap on the number of ancestors you can have. This is mainly\n * for loop detection.\n * @const {number}\n * @private\n */\ngoog.events.EventTarget.MAX_ANCESTORS_ = 1000;\n\n\n/**\n * Returns the parent of this event target to use for bubbling.\n *\n * @return {goog.events.EventTarget} The parent EventTarget or null if\n *     there is no parent.\n * @override\n */\ngoog.events.EventTarget.prototype.getParentEventTarget = function() {\n  'use strict';\n  return this.parentEventTarget_;\n};\n\n\n/**\n * Sets the parent of this event target to use for capture/bubble\n * mechanism.\n * @param {goog.events.EventTarget} parent Parent listenable (null if none).\n */\ngoog.events.EventTarget.prototype.setParentEventTarget = function(parent) {\n  'use strict';\n  this.parentEventTarget_ = parent;\n};\n\n\n/**\n * Adds an event listener to the event target. The same handler can only be\n * added once per the type. Even if you add the same handler multiple times\n * using the same type then it will only be called once when the event is\n * dispatched.\n *\n * @param {string|!goog.events.EventId} type The type of the event to listen for\n * @param {function(?):?|{handleEvent:function(?):?}|null} handler The function\n *     to handle the event. The handler can also be an object that implements\n *     the handleEvent method which takes the event object as argument.\n * @param {boolean=} opt_capture In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase\n *     of the event.\n * @param {Object=} opt_handlerScope Object in whose scope to call\n *     the listener.\n * @deprecated Use `#listen` instead, when possible. Otherwise, use\n *     `goog.events.listen` if you are passing Object\n *     (instead of Function) as handler.\n */\ngoog.events.EventTarget.prototype.addEventListener = function(\n    type, handler, opt_capture, opt_handlerScope) {\n  'use strict';\n  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);\n};\n\n\n/**\n * Removes an event listener from the event target. The handler must be the\n * same object as the one added. If the handler has not been added then\n * nothing is done.\n *\n * @param {string|!goog.events.EventId} type The type of the event to listen for\n * @param {function(?):?|{handleEvent:function(?):?}|null} handler The function\n *     to handle the event. The handler can also be an object that implements\n *     the handleEvent method which takes the event object as argument.\n * @param {boolean=} opt_capture In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase\n *     of the event.\n * @param {Object=} opt_handlerScope Object in whose scope to call\n *     the listener.\n * @deprecated Use `#unlisten` instead, when possible. Otherwise, use\n *     `goog.events.unlisten` if you are passing Object\n *     (instead of Function) as handler.\n */\ngoog.events.EventTarget.prototype.removeEventListener = function(\n    type, handler, opt_capture, opt_handlerScope) {\n  'use strict';\n  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);\n};\n\n\n/**\n * @param {?goog.events.EventLike} e Event object.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the listeners returns false) this will also return false.\n * @override\n */\ngoog.events.EventTarget.prototype.dispatchEvent = function(e) {\n  'use strict';\n  this.assertInitialized_();\n\n  var ancestorsTree, ancestor = this.getParentEventTarget();\n  if (ancestor) {\n    ancestorsTree = [];\n    var ancestorCount = 1;\n    for (; ancestor; ancestor = ancestor.getParentEventTarget()) {\n      ancestorsTree.push(ancestor);\n      goog.asserts.assert(\n          (++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_),\n          'infinite loop');\n    }\n  }\n\n  return goog.events.EventTarget.dispatchEventInternal_(\n      this.actualEventTarget_, e, ancestorsTree);\n};\n\n\n/**\n * Removes listeners from this object.  Classes that extend EventTarget may\n * need to override this method in order to remove references to DOM Elements\n * and additional listeners.\n * @override\n * @protected\n */\ngoog.events.EventTarget.prototype.disposeInternal = function() {\n  'use strict';\n  goog.events.EventTarget.superClass_.disposeInternal.call(this);\n\n  this.removeAllListeners();\n  this.parentEventTarget_ = null;\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n * @template SCOPE,EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.listen = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  'use strict';\n  this.assertInitialized_();\n  return this.eventTargetListeners_.add(\n      String(type), listener, false /* callOnce */, opt_useCapture,\n      opt_listenerScope);\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {!goog.events.ListenableKey} Unique key for the listener.\n * @template SCOPE,EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.listenOnce = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  'use strict';\n  return this.eventTargetListeners_.add(\n      String(type), listener, true /* callOnce */, opt_useCapture,\n      opt_listenerScope);\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The event type id.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener Callback\n *     method.\n * @param {boolean=} opt_useCapture Whether to fire in capture phase\n *     (defaults to false).\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call\n *     the listener.\n * @return {boolean} Whether any listener was removed.\n * @template SCOPE,EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.unlisten = function(\n    type, listener, opt_useCapture, opt_listenerScope) {\n  'use strict';\n  return this.eventTargetListeners_.remove(\n      String(type), listener, opt_useCapture, opt_listenerScope);\n};\n\n\n/**\n * @param {!goog.events.ListenableKey} key The key returned by\n *     listen() or listenOnce().\n * @return {boolean} Whether any listener was removed.\n * @override\n */\ngoog.events.EventTarget.prototype.unlistenByKey = function(key) {\n  'use strict';\n  return this.eventTargetListeners_.removeByKey(key);\n};\n\n\n/**\n * @param {string|!goog.events.EventId=} opt_type Type of event to remove,\n *     default is to remove all types.\n * @return {number} Number of listeners removed.\n * @override\n */\ngoog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {\n  'use strict';\n  // TODO(chrishenry): Previously, removeAllListeners can be called on\n  // uninitialized EventTarget, so we preserve that behavior. We\n  // should remove this when usages that rely on that fact are purged.\n  if (!this.eventTargetListeners_) {\n    return 0;\n  }\n  return this.eventTargetListeners_.removeAll(opt_type);\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The type of the\n *     listeners to fire.\n * @param {boolean} capture The capture mode of the listeners to fire.\n * @param {EVENTOBJ} eventObject The event object to fire.\n * @return {boolean} Whether all listeners succeeded without\n *     attempting to prevent default behavior. If any listener returns\n *     false or called goog.events.Event#preventDefault, this returns\n *     false.\n * @template EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.fireListeners = function(\n    type, capture, eventObject) {\n  'use strict';\n  // TODO(chrishenry): Original code avoids array creation when there\n  // is no listener, so we do the same. If this optimization turns\n  // out to be not required, we can replace this with\n  // getListeners(type, capture) instead, which is simpler.\n  var listenerArray = this.eventTargetListeners_.listeners[String(type)];\n  if (!listenerArray) {\n    return true;\n  }\n  listenerArray = listenerArray.concat();\n\n  var rv = true;\n  for (var i = 0; i < listenerArray.length; ++i) {\n    var listener = listenerArray[i];\n    // We might not have a listener if the listener was removed.\n    if (listener && !listener.removed && listener.capture == capture) {\n      var listenerFn = listener.listener;\n      var listenerHandler = listener.handler || listener.src;\n\n      if (listener.callOnce) {\n        this.unlistenByKey(listener);\n      }\n      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;\n    }\n  }\n\n  return rv && !eventObject.defaultPrevented;\n};\n\n\n/**\n * @param {string|!goog.events.EventId} type The type of the listeners to fire.\n * @param {boolean} capture The capture mode of the listeners to fire.\n * @return {!Array<!goog.events.ListenableKey>} An array of registered\n *     listeners.\n * @template EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.getListeners = function(type, capture) {\n  'use strict';\n  return this.eventTargetListeners_.getListeners(String(type), capture);\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>} type The name of the event\n *     without the 'on' prefix.\n * @param {function(this:SCOPE, EVENTOBJ):(boolean|undefined)} listener The\n *     listener function to get.\n * @param {boolean} capture Whether the listener is a capturing listener.\n * @param {SCOPE=} opt_listenerScope Object in whose scope to call the\n *     listener.\n * @return {?goog.events.ListenableKey} the found listener or null if not found.\n * @template SCOPE,EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.getListener = function(\n    type, listener, capture, opt_listenerScope) {\n  'use strict';\n  return this.eventTargetListeners_.getListener(\n      String(type), listener, capture, opt_listenerScope);\n};\n\n\n/**\n * @param {string|!goog.events.EventId<EVENTOBJ>=} opt_type Event type.\n * @param {boolean=} opt_capture Whether to check for capture or bubble\n *     listeners.\n * @return {boolean} Whether there is any active listeners matching\n *     the requested type and/or capture phase.\n * @template EVENTOBJ\n * @override\n */\ngoog.events.EventTarget.prototype.hasListener = function(\n    opt_type, opt_capture) {\n  'use strict';\n  var id = (opt_type !== undefined) ? String(opt_type) : undefined;\n  return this.eventTargetListeners_.hasListener(id, opt_capture);\n};\n\n\n/**\n * Sets the target to be used for `event.target` when firing\n * event. Mainly used for testing. For example, see\n * `goog.testing.events.mixinListenable`.\n * @param {!Object} target The target.\n */\ngoog.events.EventTarget.prototype.setTargetForTesting = function(target) {\n  'use strict';\n  this.actualEventTarget_ = target;\n};\n\n\n/**\n * Asserts that the event target instance is initialized properly.\n * @private\n */\ngoog.events.EventTarget.prototype.assertInitialized_ = function() {\n  'use strict';\n  goog.asserts.assert(\n      this.eventTargetListeners_,\n      'Event target is not initialized. Did you call the superclass ' +\n          '(goog.events.EventTarget) constructor?');\n};\n\n\n/**\n * Dispatches the given event on the ancestorsTree.\n *\n * @param {!Object} target The target to dispatch on.\n * @param {goog.events.Event|Object|string} e The event object.\n * @param {Array<goog.events.Listenable>=} opt_ancestorsTree The ancestors\n *     tree of the target, in reverse order from the closest ancestor\n *     to the root event target. May be null if the target has no ancestor.\n * @return {boolean} If anyone called preventDefault on the event object (or\n *     if any of the listeners returns false) this will also return false.\n * @private\n */\ngoog.events.EventTarget.dispatchEventInternal_ = function(\n    target, e, opt_ancestorsTree) {\n  'use strict';\n  /** @suppress {missingProperties} */\n  var type = e.type || /** @type {string} */ (e);\n\n  // If accepting a string or object, create a custom event object so that\n  // preventDefault and stopPropagation work with the event.\n  if (typeof e === 'string') {\n    e = new goog.events.Event(e, target);\n  } else if (!(e instanceof goog.events.Event)) {\n    var oldEvent = e;\n    e = new goog.events.Event(type, target);\n    goog.object.extend(e, oldEvent);\n  } else {\n    e.target = e.target || target;\n  }\n\n  var rv = true, currentTarget;\n\n  // Executes all capture listeners on the ancestors, if any.\n  if (opt_ancestorsTree) {\n    for (var i = opt_ancestorsTree.length - 1;\n         !e.hasPropagationStopped() && i >= 0; i--) {\n      currentTarget = e.currentTarget = opt_ancestorsTree[i];\n      rv = currentTarget.fireListeners(type, true, e) && rv;\n    }\n  }\n\n  // Executes capture and bubble listeners on the target.\n  if (!e.hasPropagationStopped()) {\n    currentTarget = /** @type {?} */ (e.currentTarget = target);\n    rv = currentTarget.fireListeners(type, true, e) && rv;\n    if (!e.hasPropagationStopped()) {\n      rv = currentTarget.fireListeners(type, false, e) && rv;\n    }\n  }\n\n  // Executes all bubble listeners on the ancestors, if any.\n  if (opt_ancestorsTree) {\n    for (i = 0; !e.hasPropagationStopped() && i < opt_ancestorsTree.length;\n         i++) {\n      currentTarget = e.currentTarget = opt_ancestorsTree[i];\n      rv = currentTarget.fireListeners(type, false, e) && rv;\n    }\n  }\n\n  return rv;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview JSON utility functions.\n */\n\n\ngoog.provide('goog.json');\ngoog.provide('goog.json.Replacer');\ngoog.provide('goog.json.Reviver');\ngoog.provide('goog.json.Serializer');\n\n\n/**\n * @define {boolean} If true, use the native JSON parsing API.\n * NOTE: The default `goog.json.parse` implementation is able to handle\n * invalid JSON. JSPB used to produce invalid JSON which is not the case\n * anymore so this is safe to enable for parsing JSPB. Using native JSON is\n * faster and safer than the default implementation using `eval`.\n */\ngoog.json.USE_NATIVE_JSON = goog.define('goog.json.USE_NATIVE_JSON', false);\n\n/**\n * @define {boolean} If true, try the native JSON parsing API first. If it\n * fails, log an error and use `eval` instead. This is useful when\n * transitioning to `goog.json.USE_NATIVE_JSON`. The error logger needs to\n * be set by `goog.json.setErrorLogger`. If it is not set then the error\n * is ignored.\n */\ngoog.json.TRY_NATIVE_JSON = goog.define('goog.json.TRY_NATIVE_JSON', true);\n\n\n/**\n * Tests if a string is an invalid JSON string. This only ensures that we are\n * not using any invalid characters\n * @param {string} s The string to test.\n * @return {boolean} True if the input is a valid JSON string.\n */\ngoog.json.isValid = function(s) {\n  'use strict';\n  // All empty whitespace is not valid.\n  if (/^\\s*$/.test(s)) {\n    return false;\n  }\n\n  // This is taken from http://www.json.org/json2.js which is released to the\n  // public domain.\n  // Changes: We dissallow \\u2028 Line separator and \\u2029 Paragraph separator\n  // inside strings.  We also treat \\u2028 and \\u2029 as whitespace which they\n  // are in the RFC but IE and Safari does not match \\s to these so we need to\n  // include them in the reg exps in all places where whitespace is allowed.\n  // We allowed \\x7f inside strings because some tools don't escape it,\n  // e.g. http://www.json.org/java/org/json/JSONObject.java\n\n  // Parsing happens in three stages. In the first stage, we run the text\n  // against regular expressions that look for non-JSON patterns. We are\n  // especially concerned with '()' and 'new' because they can cause invocation,\n  // and '=' because it can cause mutation. But just to be safe, we want to\n  // reject all unexpected forms.\n\n  // We split the first stage into 4 regexp operations in order to work around\n  // crippling inefficiencies in IE's and Safari's regexp engines. First we\n  // replace all backslash pairs with '@' (a non-JSON character). Second, we\n  // replace all simple value tokens with ']' characters, but only when followed\n  // by a colon, comma, closing bracket or end of string. Third, we delete all\n  // open brackets that follow a colon or comma or that begin the text. Finally,\n  // we look to see that the remaining characters are only whitespace or ']' or\n  // ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\n\n  // Don't make these static since they have the global flag.\n  const backslashesRe = /\\\\[\"\\\\\\/bfnrtu]/g;\n  const simpleValuesRe =\n      /(?:\"[^\"\\\\\\n\\r\\u2028\\u2029\\x00-\\x08\\x0a-\\x1f]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)[\\s\\u2028\\u2029]*(?=:|,|]|}|$)/g;\n  const openBracketsRe = /(?:^|:|,)(?:[\\s\\u2028\\u2029]*\\[)+/g;\n  const remainderRe = /^[\\],:{}\\s\\u2028\\u2029]*$/;\n\n  return remainderRe.test(\n      s.replace(backslashesRe, '@')\n          .replace(simpleValuesRe, ']')\n          .replace(openBracketsRe, ''));\n};\n\n/**\n * Logs a parsing error in `JSON.parse` solvable by using `eval`\n * if `goog.json.TRY_NATIVE_JSON` is enabled.\n * @private {function(string, !Error)} The first parameter is the error message,\n *     the second is the exception thrown by `JSON.parse`.\n */\ngoog.json.errorLogger_ = goog.nullFunction;\n\n\n/**\n * Sets an error logger to use if there's a recoverable parsing error and\n * `goog.json.TRY_NATIVE_JSON` is enabled.\n * @param {function(string, !Error)} errorLogger The first parameter is the\n *     error message, the second is the exception thrown by `JSON.parse`.\n */\ngoog.json.setErrorLogger = function(errorLogger) {\n  'use strict';\n  goog.json.errorLogger_ = errorLogger;\n};\n\n\n/**\n * Parses a JSON string and returns the result. This throws an exception if\n * the string is an invalid JSON string.\n *\n * Note that this is very slow on large strings. Use JSON.parse if possible.\n *\n * @param {*} s The JSON string to parse.\n * @throws Error if s is invalid JSON.\n * @return {Object} The object generated from the JSON string, or null.\n * @deprecated Use JSON.parse.\n */\ngoog.json.parse = goog.json.USE_NATIVE_JSON ?\n    /** @type {function(*):Object} */ (goog.global['JSON']['parse']) :\n    function(s) {\n      'use strict';\n      let error;\n      if (goog.json.TRY_NATIVE_JSON) {\n        try {\n          return goog.global['JSON']['parse'](s);\n        } catch (ex) {\n          error = ex;\n        }\n      }\n      const o = String(s);\n      if (goog.json.isValid(o)) {\n\n        try {\n          const result = /** @type {?Object} */ (eval('(' + o + ')'));\n          if (error) {\n            goog.json.errorLogger_('Invalid JSON: ' + o, error);\n          }\n          return result;\n        } catch (ex) {\n        }\n      }\n      throw new Error('Invalid JSON string: ' + o);\n    };\n\n\n/**\n * JSON replacer, as defined in Section 15.12.3 of the ES5 spec.\n * @see http://ecma-international.org/ecma-262/5.1/#sec-15.12.3\n *\n * TODO(nicksantos): Array should also be a valid replacer.\n *\n * @typedef {function(this:Object, string, *): *}\n */\ngoog.json.Replacer;\n\n\n/**\n * JSON reviver, as defined in Section 15.12.2 of the ES5 spec.\n * @see http://ecma-international.org/ecma-262/5.1/#sec-15.12.3\n *\n * @typedef {function(this:Object, string, *): *}\n */\ngoog.json.Reviver;\n\n\n/**\n * Serializes an object or a value to a JSON string.\n *\n * @param {*} object The object to serialize.\n * @param {?goog.json.Replacer=} opt_replacer A replacer function\n *     called for each (key, value) pair that determines how the value\n *     should be serialized. By defult, this just returns the value\n *     and allows default serialization to kick in.\n * @throws Error if there are loops in the object graph.\n * @return {string} A JSON string representation of the input.\n */\ngoog.json.serialize = goog.json.USE_NATIVE_JSON ?\n    /** @type {function(*, ?goog.json.Replacer=):string} */\n    (goog.global['JSON']['stringify']) :\n    function(object, opt_replacer) {\n      'use strict';\n      // NOTE(nicksantos): Currently, we never use JSON.stringify.\n      //\n      // The last time I evaluated this, JSON.stringify had subtle bugs and\n      // behavior differences on all browsers, and the performance win was not\n      // large enough to justify all the issues. This may change in the future\n      // as browser implementations get better.\n      //\n      // assertSerialize in json_test contains if branches for the cases\n      // that fail.\n      return new goog.json.Serializer(opt_replacer).serialize(object);\n    };\n\n\n\n/**\n * Class that is used to serialize JSON objects to a string.\n * @param {?goog.json.Replacer=} opt_replacer Replacer.\n * @constructor\n */\ngoog.json.Serializer = function(opt_replacer) {\n  'use strict';\n  /**\n   * @type {goog.json.Replacer|null|undefined}\n   * @private\n   */\n  this.replacer_ = opt_replacer;\n};\n\n\n/**\n * Serializes an object or a value to a JSON string.\n *\n * @param {*} object The object to serialize.\n * @throws Error if there are loops in the object graph.\n * @return {string} A JSON string representation of the input.\n */\ngoog.json.Serializer.prototype.serialize = function(object) {\n  'use strict';\n  const sb = [];\n  this.serializeInternal(object, sb);\n  return sb.join('');\n};\n\n\n/**\n * Serializes a generic value to a JSON string\n * @protected\n * @param {*} object The object to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n * @throws Error if there are loops in the object graph.\n */\ngoog.json.Serializer.prototype.serializeInternal = function(object, sb) {\n  'use strict';\n  if (object == null) {\n    // undefined == null so this branch covers undefined as well as null\n    sb.push('null');\n    return;\n  }\n\n  if (typeof object == 'object') {\n    if (Array.isArray(object)) {\n      this.serializeArray(object, sb);\n      return;\n    } else if (\n        object instanceof String || object instanceof Number ||\n        object instanceof Boolean) {\n      object = object.valueOf();\n      // Fall through to switch below.\n    } else {\n      this.serializeObject_(/** @type {!Object} */ (object), sb);\n      return;\n    }\n  }\n\n  switch (typeof object) {\n    case 'string':\n      this.serializeString_(object, sb);\n      break;\n    case 'number':\n      this.serializeNumber_(object, sb);\n      break;\n    case 'boolean':\n      sb.push(String(object));\n      break;\n    case 'function':\n      sb.push('null');\n      break;\n    default:\n      throw new Error('Unknown type: ' + typeof object);\n  }\n};\n\n\n/**\n * Character mappings used internally for goog.string.quote\n * @private\n * @type {!Object}\n */\ngoog.json.Serializer.charToJsonCharCache_ = {\n  '\\\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n  '/': '\\\\/',\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n\n  '\\x0B': '\\\\u000b'  // '\\v' is not supported in JScript\n};\n\n\n/**\n * Regular expression used to match characters that need to be replaced.\n * The S60 browser has a bug where unicode characters are not matched by\n * regular expressions. The condition below detects such behaviour and\n * adjusts the regular expression accordingly.\n * @private\n * @type {!RegExp}\n */\ngoog.json.Serializer.charsToReplace_ = /\\uffff/.test('\\uffff') ?\n    /[\\\\\\\"\\x00-\\x1f\\x7f-\\uffff]/g :\n    /[\\\\\\\"\\x00-\\x1f\\x7f-\\xff]/g;\n\n\n/**\n * Serializes a string to a JSON string\n * @private\n * @param {string} s The string to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n */\ngoog.json.Serializer.prototype.serializeString_ = function(s, sb) {\n  'use strict';\n  // The official JSON implementation does not work with international\n  // characters.\n  sb.push('\"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {\n    'use strict';\n    // caching the result improves performance by a factor 2-3\n    let rv = goog.json.Serializer.charToJsonCharCache_[c];\n    if (!rv) {\n      rv = '\\\\u' + (c.charCodeAt(0) | 0x10000).toString(16).substr(1);\n      goog.json.Serializer.charToJsonCharCache_[c] = rv;\n    }\n    return rv;\n  }), '\"');\n};\n\n\n/**\n * Serializes a number to a JSON string\n * @private\n * @param {number} n The number to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n */\ngoog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {\n  'use strict';\n  sb.push(isFinite(n) && !isNaN(n) ? String(n) : 'null');\n};\n\n\n/**\n * Serializes an array to a JSON string\n * @param {Array<string>} arr The array to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n * @protected\n */\ngoog.json.Serializer.prototype.serializeArray = function(arr, sb) {\n  'use strict';\n  const l = arr.length;\n  sb.push('[');\n  let sep = '';\n  for (let i = 0; i < l; i++) {\n    sb.push(sep);\n\n    const value = arr[i];\n    this.serializeInternal(\n        this.replacer_ ? this.replacer_.call(arr, String(i), value) : value,\n        sb);\n\n    sep = ',';\n  }\n  sb.push(']');\n};\n\n\n/**\n * Serializes an object to a JSON string\n * @private\n * @param {!Object} obj The object to serialize.\n * @param {Array<string>} sb Array used as a string builder.\n */\ngoog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {\n  'use strict';\n  sb.push('{');\n  let sep = '';\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      const value = obj[key];\n      // Skip functions.\n      if (typeof value != 'function') {\n        sb.push(sep);\n        this.serializeString_(key, sb);\n        sb.push(':');\n\n        this.serializeInternal(\n            this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);\n\n        sep = ',';\n      }\n    }\n  }\n  sb.push('}');\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Simple freelist.\n *\n * An anterative to goog.structs.SimplePool, it imposes the requirement that the\n * objects in the list contain a \"next\" property that can be used to maintain\n * the pool.\n */\n\ngoog.provide('goog.async.FreeList');\n\n\n/**\n * @template ITEM\n */\ngoog.async.FreeList = class {\n  /**\n   * @param {function():ITEM} create\n   * @param {function(ITEM):void} reset\n   * @param {number} limit\n   */\n  constructor(create, reset, limit) {\n    /** @private @const {number} */\n    this.limit_ = limit;\n    /** @private @const {function()} */\n    this.create_ = create;\n    /** @private @const {function(ITEM):void} */\n    this.reset_ = reset;\n\n    /** @private {number} */\n    this.occupants_ = 0;\n    /** @private {ITEM} */\n    this.head_ = null;\n  }\n\n  /**\n   * @return {ITEM}\n   */\n  get() {\n    let item;\n    if (this.occupants_ > 0) {\n      this.occupants_--;\n      item = this.head_;\n      this.head_ = item.next;\n      item.next = null;\n    } else {\n      item = this.create_();\n    }\n    return item;\n  }\n\n  /**\n   * @param {ITEM} item An item available for possible future reuse.\n   */\n  put(item) {\n    this.reset_(item);\n    if (this.occupants_ < this.limit_) {\n      this.occupants_++;\n      item.next = this.head_;\n      this.head_ = item;\n    }\n  }\n\n  /**\n   * Visible for testing.\n   * @package\n   * @return {number}\n   */\n  occupants() {\n    return this.occupants_;\n  }\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\ngoog.module('goog.async.WorkQueue');\ngoog.module.declareLegacyNamespace();\n\nconst FreeList = goog.require('goog.async.FreeList');\nconst {assert} = goog.require('goog.asserts');\n\n// TODO(johnlenz): generalize the WorkQueue if this is used by more\n// than goog.async.run.\n\n\n/**\n * A low GC workqueue. The key elements of this design:\n *   - avoids the need for goog.bind or equivalent by carrying scope\n *   - avoids the need for array reallocation by using a linked list\n *   - minimizes work entry objects allocation by recycling objects\n * @final\n * @struct\n */\nclass WorkQueue {\n  constructor() {\n    this.workHead_ = null;\n    this.workTail_ = null;\n  }\n\n  /**\n   * @param {function()} fn\n   * @param {Object|null|undefined} scope\n   */\n  add(fn, scope) {\n    const item = this.getUnusedItem_();\n    item.set(fn, scope);\n\n    if (this.workTail_) {\n      this.workTail_.next = item;\n      this.workTail_ = item;\n    } else {\n      assert(!this.workHead_);\n      this.workHead_ = item;\n      this.workTail_ = item;\n    }\n  }\n\n  /**\n   * @return {?WorkItem}\n   */\n  remove() {\n    let item = null;\n\n    if (this.workHead_) {\n      item = this.workHead_;\n      this.workHead_ = this.workHead_.next;\n      if (!this.workHead_) {\n        this.workTail_ = null;\n      }\n      item.next = null;\n    }\n    return item;\n  }\n\n  /**\n   * @param {!WorkItem} item\n   */\n  returnUnused(item) {\n    WorkQueue.freelist_.put(item);\n  }\n\n  /**\n   * @return {!WorkItem}\n   * @private\n   */\n  getUnusedItem_() {\n    return WorkQueue.freelist_.get();\n  }\n}\n\n/** @define {number} The maximum number of entries to keep for recycling. */\nWorkQueue.DEFAULT_MAX_UNUSED =\n    goog.define('goog.async.WorkQueue.DEFAULT_MAX_UNUSED', 100);\n\n/** @const @private {!FreeList<!WorkItem>} */\nWorkQueue.freelist_ = new FreeList(\n    () => new WorkItem(), item => item.reset(), WorkQueue.DEFAULT_MAX_UNUSED);\n\n/**\n * @final\n * @struct\n */\nclass WorkItem {\n  constructor() {\n    /** @type {?function()} */\n    this.fn = null;\n    /** @type {?Object|null|undefined} */\n    this.scope = null;\n    /** @type {?WorkItem} */\n    this.next = null;\n  }\n\n  /**\n   * @param {function()} fn\n   * @param {Object|null|undefined} scope\n   */\n  set(fn, scope) {\n    'use strict';\n    this.fn = fn;\n    this.scope = scope;\n    this.next = null;\n  }\n\n  /** Reset the work item so they don't prevent GC before reuse */\n  reset() {\n    this.fn = null;\n    this.scope = null;\n    this.next = null;\n  }\n}\n\nexports = WorkQueue;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\ngoog.provide('goog.async.run');\n\ngoog.require('goog.async.WorkQueue');\ngoog.require('goog.async.nextTick');\ngoog.require('goog.async.throwException');\n\n/**\n * @define {boolean} If true, use the global Promise to implement goog.async.run\n * assuming either the native, or polyfill version will be used. Does still\n * permit tests to use forceNextTick.\n */\ngoog.ASSUME_NATIVE_PROMISE = goog.define('goog.ASSUME_NATIVE_PROMISE', false);\n\n/**\n * Fires the provided callback just before the current callstack unwinds, or as\n * soon as possible after the current JS execution context.\n * @param {function(this:THIS)} callback\n * @param {THIS=} opt_context Object to use as the \"this value\" when calling\n *     the provided function.\n * @template THIS\n */\ngoog.async.run = function(callback, opt_context) {\n  'use strict';\n  if (!goog.async.run.schedule_) {\n    goog.async.run.initializeRunner_();\n  }\n  if (!goog.async.run.workQueueScheduled_) {\n    // Nothing is currently scheduled, schedule it now.\n    goog.async.run.schedule_();\n    goog.async.run.workQueueScheduled_ = true;\n  }\n\n  goog.async.run.workQueue_.add(callback, opt_context);\n};\n\n\n/**\n * Initializes the function to use to process the work queue.\n * @private\n */\ngoog.async.run.initializeRunner_ = function() {\n  'use strict';\n  if (goog.ASSUME_NATIVE_PROMISE ||\n      (goog.global.Promise && goog.global.Promise.resolve)) {\n    // Use goog.global.Promise instead of just Promise because the relevant\n    // externs may be missing, and don't alias it because this could confuse the\n    // compiler into thinking the polyfill is required when it should be treated\n    // as optional.\n    var promise = goog.global.Promise.resolve(undefined);\n    goog.async.run.schedule_ = function() {\n      'use strict';\n      promise.then(goog.async.run.processWorkQueue);\n    };\n  } else {\n    goog.async.run.schedule_ = function() {\n      'use strict';\n      goog.async.nextTick(goog.async.run.processWorkQueue);\n    };\n  }\n};\n\n\n/**\n * Forces goog.async.run to use nextTick instead of Promise.\n *\n * This should only be done in unit tests. It's useful because MockClock\n * replaces nextTick, but not the browser Promise implementation, so it allows\n * Promise-based code to be tested with MockClock.\n *\n * However, we also want to run promises if the MockClock is no longer in\n * control so we schedule a backup \"setTimeout\" to the unmocked timeout if\n * provided.\n *\n * @param {function(function())=} opt_realSetTimeout\n */\ngoog.async.run.forceNextTick = function(opt_realSetTimeout) {\n  'use strict';\n  goog.async.run.schedule_ = function() {\n    'use strict';\n    goog.async.nextTick(goog.async.run.processWorkQueue);\n    if (opt_realSetTimeout) {\n      opt_realSetTimeout(goog.async.run.processWorkQueue);\n    }\n  };\n};\n\n\n/**\n * The function used to schedule work asynchronousely.\n * @private {function()}\n */\ngoog.async.run.schedule_;\n\n\n/** @private {boolean} */\ngoog.async.run.workQueueScheduled_ = false;\n\n\n/** @private {!goog.async.WorkQueue} */\ngoog.async.run.workQueue_ = new goog.async.WorkQueue();\n\n\nif (goog.DEBUG) {\n  /**\n   * Reset the work queue. Only available for tests in debug mode.\n   */\n  goog.async.run.resetQueue = function() {\n    'use strict';\n    goog.async.run.workQueueScheduled_ = false;\n    goog.async.run.workQueue_ = new goog.async.WorkQueue();\n  };\n\n\n  /**\n   * Resets the scheduler. Only available for tests in debug mode.\n   */\n  goog.async.run.resetSchedulerForTest = function() {\n    goog.async.run.initializeRunner_();\n  };\n}\n\n\n/**\n * Run any pending goog.async.run work items. This function is not intended\n * for general use, but for use by entry point handlers to run items ahead of\n * goog.async.nextTick.\n */\ngoog.async.run.processWorkQueue = function() {\n  'use strict';\n  // NOTE: additional work queue items may be added while processing.\n  var item = null;\n  while (item = goog.async.run.workQueue_.remove()) {\n    try {\n      item.fn.call(item.scope);\n    } catch (e) {\n      goog.async.throwException(e);\n    }\n    goog.async.run.workQueue_.returnUnused(item);\n  }\n\n  // There are no more work items, allow processing to be scheduled again.\n  goog.async.run.workQueueScheduled_ = false;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Provides a function to throw an error without interrupting\n * the current execution context.\n */\n\ngoog.module('goog.async.throwException');\ngoog.module.declareLegacyNamespace();\n\n/**\n * Throw an item without interrupting the current execution context.  For\n * example, if processing a group of items in a loop, sometimes it is useful\n * to report an error while still allowing the rest of the batch to be\n * processed.\n * @param {*} exception\n */\nfunction throwException(exception) {\n  // Each throw needs to be in its own context.\n  goog.global.setTimeout(() => {\n    throw exception;\n  }, 0);\n}\nexports = throwException;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A timer class to which other classes and objects can listen on.\n * This is only an abstraction above `setInterval`.\n *\n * @see ../demos/timers.html\n */\n\ngoog.provide('goog.Timer');\n\ngoog.require('goog.Promise');\ngoog.require('goog.events.EventTarget');\ngoog.requireType('goog.Thenable');\n\n\n\n/**\n * Class for handling timing events.\n *\n * @param {number=} opt_interval Number of ms between ticks (default: 1ms).\n * @param {Object=} opt_timerObject  An object that has `setTimeout`,\n *     `setInterval`, `clearTimeout` and `clearInterval`\n *     (e.g., `window`).\n * @constructor\n * @extends {goog.events.EventTarget}\n */\ngoog.Timer = function(opt_interval, opt_timerObject) {\n  'use strict';\n  goog.events.EventTarget.call(this);\n\n  /**\n   * Number of ms between ticks\n   * @private {number}\n   */\n  this.interval_ = opt_interval || 1;\n\n  /**\n   * An object that implements `setTimeout`, `setInterval`,\n   * `clearTimeout` and `clearInterval`. We default to the window\n   * object. Changing this on {@link goog.Timer.prototype} changes the object\n   * for all timer instances which can be useful if your environment has some\n   * other implementation of timers than the `window` object.\n   * @private {{setTimeout:!Function, clearTimeout:!Function}}\n   */\n  this.timerObject_ = /** @type {{setTimeout, clearTimeout}} */ (\n      opt_timerObject || goog.Timer.defaultTimerObject);\n\n  /**\n   * Cached `tick_` bound to the object for later use in the timer.\n   * @private {Function}\n   * @const\n   */\n  this.boundTick_ = goog.bind(this.tick_, this);\n\n  /**\n   * Firefox browser often fires the timer event sooner (sometimes MUCH sooner)\n   * than the requested timeout. So we compare the time to when the event was\n   * last fired, and reschedule if appropriate. See also\n   * {@link goog.Timer.intervalScale}.\n   * @private {number}\n   */\n  this.last_ = goog.now();\n};\ngoog.inherits(goog.Timer, goog.events.EventTarget);\n\n\n/**\n * Maximum timeout value.\n *\n * Timeout values too big to fit into a signed 32-bit integer may cause overflow\n * in FF, Safari, and Chrome, resulting in the timeout being scheduled\n * immediately. It makes more sense simply not to schedule these timeouts, since\n * 24.8 days is beyond a reasonable expectation for the browser to stay open.\n *\n * @private {number}\n * @const\n */\ngoog.Timer.MAX_TIMEOUT_ = 2147483647;\n\n\n/**\n * A timer ID that cannot be returned by any known implementation of\n * `window.setTimeout`. Passing this value to `window.clearTimeout`\n * should therefore be a no-op.\n *\n * @private {number}\n * @const\n */\ngoog.Timer.INVALID_TIMEOUT_ID_ = -1;\n\n\n/**\n * Whether this timer is enabled\n * @type {boolean}\n */\ngoog.Timer.prototype.enabled = false;\n\n\n/**\n * An object that implements `setTimeout`, `setInterval`,\n * `clearTimeout` and `clearInterval`. We default to the global\n * object. Changing `goog.Timer.defaultTimerObject` changes the object for\n * all timer instances which can be useful if your environment has some other\n * implementation of timers you'd like to use.\n * @type {{setTimeout, clearTimeout}}\n */\ngoog.Timer.defaultTimerObject = goog.global;\n\n\n/**\n * Variable that controls the timer error correction. If the timer is called\n * before the requested interval times `intervalScale`, which often\n * happens on Mozilla, the timer is rescheduled.\n * @see {@link #last_}\n * @type {number}\n */\ngoog.Timer.intervalScale = 0.8;\n\n\n/**\n * Variable for storing the result of `setInterval`.\n * @private {?number}\n */\ngoog.Timer.prototype.timer_ = null;\n\n\n/**\n * Gets the interval of the timer.\n * @return {number} interval Number of ms between ticks.\n */\ngoog.Timer.prototype.getInterval = function() {\n  'use strict';\n  return this.interval_;\n};\n\n\n/**\n * Sets the interval of the timer.\n * @param {number} interval Number of ms between ticks.\n */\ngoog.Timer.prototype.setInterval = function(interval) {\n  'use strict';\n  this.interval_ = interval;\n  if (this.timer_ && this.enabled) {\n    // Stop and then start the timer to reset the interval.\n    this.stop();\n    this.start();\n  } else if (this.timer_) {\n    this.stop();\n  }\n};\n\n\n/**\n * Callback for the `setTimeout` used by the timer.\n * @private\n */\ngoog.Timer.prototype.tick_ = function() {\n  'use strict';\n  if (this.enabled) {\n    var elapsed = goog.now() - this.last_;\n    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {\n      this.timer_ = this.timerObject_.setTimeout(\n          this.boundTick_, this.interval_ - elapsed);\n      return;\n    }\n\n    // Prevents setInterval from registering a duplicate timeout when called\n    // in the timer event handler.\n    if (this.timer_) {\n      this.timerObject_.clearTimeout(this.timer_);\n      this.timer_ = null;\n    }\n\n    this.dispatchTick();\n    // The timer could be stopped in the timer event handler.\n    if (this.enabled) {\n      // Stop and start to ensure there is always only one timeout even if\n      // start is called in the timer event handler.\n      this.stop();\n      this.start();\n    }\n  }\n};\n\n\n/**\n * Dispatches the TICK event. This is its own method so subclasses can override.\n */\ngoog.Timer.prototype.dispatchTick = function() {\n  'use strict';\n  this.dispatchEvent(goog.Timer.TICK);\n};\n\n\n/**\n * Starts the timer.\n */\ngoog.Timer.prototype.start = function() {\n  'use strict';\n  this.enabled = true;\n\n  // If there is no interval already registered, start it now\n  if (!this.timer_) {\n    // IMPORTANT!\n    // window.setInterval in FireFox has a bug - it fires based on\n    // absolute time, rather than on relative time. What this means\n    // is that if a computer is sleeping/hibernating for 24 hours\n    // and the timer interval was configured to fire every 1000ms,\n    // then after the PC wakes up the timer will fire, in rapid\n    // succession, 3600*24 times.\n    // This bug is described here and is already fixed, but it will\n    // take time to propagate, so for now I am switching this over\n    // to setTimeout logic.\n    //     https://bugzilla.mozilla.org/show_bug.cgi?id=376643\n    //\n    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);\n    this.last_ = goog.now();\n  }\n};\n\n\n/**\n * Stops the timer.\n */\ngoog.Timer.prototype.stop = function() {\n  'use strict';\n  this.enabled = false;\n  if (this.timer_) {\n    this.timerObject_.clearTimeout(this.timer_);\n    this.timer_ = null;\n  }\n};\n\n\n/** @override */\ngoog.Timer.prototype.disposeInternal = function() {\n  'use strict';\n  goog.Timer.superClass_.disposeInternal.call(this);\n  this.stop();\n  delete this.timerObject_;\n};\n\n\n/**\n * Constant for the timer's event type.\n * @const\n */\ngoog.Timer.TICK = 'tick';\n\n\n/**\n * Calls the given function once, after the optional pause.\n * <p>\n * The function is always called asynchronously, even if the delay is 0. This\n * is a common trick to schedule a function to run after a batch of browser\n * event processing.\n *\n * @param {function(this:SCOPE)|{handleEvent:function()}|null} listener Function\n *     or object that has a handleEvent method.\n * @param {number=} opt_delay Milliseconds to wait; default is 0.\n * @param {SCOPE=} opt_handler Object in whose scope to call the listener.\n * @return {number} A handle to the timer ID.\n * @template SCOPE\n */\ngoog.Timer.callOnce = function(listener, opt_delay, opt_handler) {\n  'use strict';\n  if (typeof listener === 'function') {\n    if (opt_handler) {\n      listener = goog.bind(listener, opt_handler);\n    }\n  } else if (listener && typeof listener.handleEvent == 'function') {\n    // using typeof to prevent strict js warning\n    listener = goog.bind(listener.handleEvent, listener);\n  } else {\n    throw new Error('Invalid listener argument');\n  }\n\n  if (Number(opt_delay) > goog.Timer.MAX_TIMEOUT_) {\n    // Timeouts greater than MAX_INT return immediately due to integer\n    // overflow in many browsers.  Since MAX_INT is 24.8 days, just don't\n    // schedule anything at all.\n    return goog.Timer.INVALID_TIMEOUT_ID_;\n  } else {\n    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);\n  }\n};\n\n\n/**\n * Clears a timeout initiated by {@link #callOnce}.\n * @param {?number} timerId A timer ID.\n */\ngoog.Timer.clear = function(timerId) {\n  'use strict';\n  goog.Timer.defaultTimerObject.clearTimeout(timerId);\n};\n\n\n/**\n * @param {number} delay Milliseconds to wait.\n * @param {(RESULT|goog.Thenable<RESULT>|Thenable)=} opt_result The value\n *     with which the promise will be resolved.\n * @return {!goog.Promise<RESULT>} A promise that will be resolved after\n *     the specified delay, unless it is canceled first.\n * @template RESULT\n */\ngoog.Timer.promise = function(delay, opt_result) {\n  'use strict';\n  var timerKey = null;\n  return new goog\n      .Promise(function(resolve, reject) {\n        'use strict';\n        timerKey = goog.Timer.callOnce(function() {\n          'use strict';\n          resolve(opt_result);\n        }, delay);\n        if (timerKey == goog.Timer.INVALID_TIMEOUT_ID_) {\n          reject(new Error('Failed to schedule timer.'));\n        }\n      })\n      .thenCatch(function(error) {\n        'use strict';\n        // Clear the timer. The most likely reason is \"cancel\" signal.\n        goog.Timer.clear(timerKey);\n        throw error;\n      });\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Definition of the goog.async.Throttle class.\n *\n * @see ../demos/timers.html\n */\n\ngoog.module('goog.async.Throttle');\ngoog.module.declareLegacyNamespace();\n\nconst Disposable = goog.require('goog.Disposable');\nconst Timer = goog.require('goog.Timer');\n\n\n/**\n * Throttle will perform an action that is passed in no more than once\n * per interval (specified in milliseconds). If it gets multiple signals\n * to perform the action while it is waiting, it will only perform the action\n * once at the end of the interval.\n * @final\n * @template T\n */\nclass Throttle extends Disposable {\n  /**\n   * @param {function(this: T, ...?)} listener Function to callback when the\n   *     action is triggered.\n   * @param {number} interval Interval over which to throttle. The listener can\n   *     only be called once per interval.\n   * @param {T=} handler Object in whose scope to call the listener.\n   */\n  constructor(listener, interval, handler) {\n    super();\n    /**\n     * Function to callback\n     * @type {function(this: T, ...?)}\n     * @private\n     */\n    this.listener_ = handler != null ? listener.bind(handler) : listener;\n\n    /**\n     * Interval for the throttle time\n     * @type {number}\n     * @private\n     */\n    this.interval_ = interval;\n\n    /**\n     * The last arguments passed into `fire`, or null if there is no pending\n     * call.\n     * @private {?IArrayLike}\n     */\n    this.args_ = null;\n\n    /**\n     * Indicates that the action is pending and needs to be fired.\n     * @type {boolean}\n     * @private\n     */\n    this.shouldFire_ = false;\n\n    /**\n     * Indicates the count of nested pauses currently in effect on the throttle.\n     * When this count is not zero, fired actions will be postponed until the\n     * throttle is resumed enough times to drop the pause count to zero.\n     * @type {number}\n     * @private\n     */\n    this.pauseCount_ = 0;\n\n    /**\n     * Timer for scheduling the next callback\n     * @type {?number}\n     * @private\n     */\n    this.timer_ = null;\n  }\n\n  /**\n   * Notifies the throttle that the action has happened. It will throttle\n   * the call so that the callback is not called too often according to the\n   * interval parameter passed to the constructor, passing the arguments\n   * from the last call of this function into the throttled function.\n   * @param {...?} var_args Arguments to pass on to the throttled function.\n   */\n  fire(var_args) {\n    this.args_ = arguments;\n    if (!this.timer_ && !this.pauseCount_) {\n      this.doAction_();\n    } else {\n      this.shouldFire_ = true;\n    }\n  }\n\n  /**\n   * Cancels any pending action callback. The throttle can be restarted by\n   * calling {@link #fire}.\n   */\n  stop() {\n    if (this.timer_) {\n      Timer.clear(this.timer_);\n      this.timer_ = null;\n      this.shouldFire_ = false;\n      this.args_ = null;\n    }\n  }\n\n  /**\n   * Pauses the throttle.  All pending and future action callbacks will be\n   * delayed until the throttle is resumed.  Pauses can be nested.\n   */\n  pause() {\n    this.pauseCount_++;\n  }\n\n  /**\n   * Resumes the throttle.  If doing so drops the pausing count to zero,\n   * pending action callbacks will be executed as soon as possible, but\n   * still no sooner than an interval's delay after the previous call.\n   * Future action callbacks will be executed as normal.\n   */\n  resume() {\n    this.pauseCount_--;\n    if (!this.pauseCount_ && this.shouldFire_ && !this.timer_) {\n      this.shouldFire_ = false;\n      this.doAction_();\n    }\n  }\n\n  /** @override */\n  disposeInternal() {\n    super.disposeInternal();\n    this.stop();\n  }\n\n  /**\n   * Handler for the timer to fire the throttle\n   * @private\n   */\n  onTimer_() {\n    this.timer_ = null;\n\n    if (this.shouldFire_ && !this.pauseCount_) {\n      this.shouldFire_ = false;\n      this.doAction_();\n    }\n  }\n\n  /**\n   * Calls the callback\n   * @private\n   */\n  doAction_() {\n    this.timer_ = Timer.callOnce(() => this.onTimer_(), this.interval_);\n    const args = this.args_;\n    // release memory first so it always happens even if listener throws\n    this.args_ = null;\n    this.listener_.apply(null, args);\n  }\n}\n\nexports = Throttle;\n",null,"/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Class to create objects which want to handle multiple events\n * and have their listeners easily cleaned up via a dispose method.\n *\n * Example:\n * <pre>\n * function Something() {\n *   Something.base(this);\n *\n *   ... set up object ...\n *\n *   // Add event listeners\n *   this.listen(this.starEl, goog.events.EventType.CLICK, this.handleStar);\n *   this.listen(this.headerEl, goog.events.EventType.CLICK, this.expand);\n *   this.listen(this.collapseEl, goog.events.EventType.CLICK, this.collapse);\n *   this.listen(this.infoEl, goog.events.EventType.MOUSEOVER, this.showHover);\n *   this.listen(this.infoEl, goog.events.EventType.MOUSEOUT, this.hideHover);\n * }\n * goog.inherits(Something, goog.events.EventHandler);\n *\n * Something.prototype.disposeInternal = function() {\n *   Something.base(this, 'disposeInternal');\n *   goog.dom.removeNode(this.container);\n * };\n *\n *\n * // Then elsewhere:\n *\n * var activeSomething = null;\n * function openSomething() {\n *   activeSomething = new Something();\n * }\n *\n * function closeSomething() {\n *   if (activeSomething) {\n *     activeSomething.dispose();  // Remove event listeners\n *     activeSomething = null;\n *   }\n * }\n * </pre>\n */\n\ngoog.provide('goog.events.EventHandler');\n\ngoog.require('goog.Disposable');\ngoog.require('goog.events');\ngoog.require('goog.object');\ngoog.requireType('goog.events.Event');\ngoog.requireType('goog.events.EventId');\ngoog.requireType('goog.events.EventTarget');\ngoog.requireType('goog.events.EventWrapper');\n\n\n\n/**\n * Super class for objects that want to easily manage a number of event\n * listeners.  It allows a short cut to listen and also provides a quick way\n * to remove all events listeners belonging to this object.\n * @param {SCOPE=} opt_scope Object in whose scope to call the listeners.\n * @constructor\n * @extends {goog.Disposable}\n * @template SCOPE\n */\ngoog.events.EventHandler = function(opt_scope) {\n  'use strict';\n  goog.Disposable.call(this);\n  // TODO(mknichel): Rename this to this.scope_ and fix the classes in google3\n  // that access this private variable. :(\n  this.handler_ = opt_scope;\n\n  /**\n   * Keys for events that are being listened to.\n   * @type {!Object<!goog.events.Key>}\n   * @private\n   */\n  this.keys_ = {};\n};\ngoog.inherits(goog.events.EventHandler, goog.Disposable);\n\n\n/**\n * Utility array used to unify the cases of listening for an array of types\n * and listening for a single event, without using recursion or allocating\n * an array each time.\n * @type {!Array<string>}\n * @const\n * @private\n */\ngoog.events.EventHandler.typeArray_ = [];\n\n\n/**\n * Listen to an event on a Listenable.  If the function is omitted then the\n * EventHandler's handleEvent method will be used.\n * @param {goog.events.ListenableType} src Event source.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type to listen for or array of event types.\n * @param {function(this:SCOPE, EVENTOBJ):?|{handleEvent:function(?):?}|null=}\n *     opt_fn Optional callback function to be used as the listener or an object\n *     with handleEvent function.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template EVENTOBJ, THIS\n */\ngoog.events.EventHandler.prototype.listen = function(\n    src, type, opt_fn, opt_options) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  return self.listen_(src, type, opt_fn, opt_options);\n};\n\n\n/**\n * Listen to an event on a Listenable.  If the function is omitted then the\n * EventHandler's handleEvent method will be used.\n * @param {goog.events.ListenableType} src Event source.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type to listen for or array of event types.\n * @param {function(this:T, EVENTOBJ):?|{handleEvent:function(this:T, ?):?}|\n *     null|undefined} fn Optional callback function to be used as the\n *     listener or an object with handleEvent function.\n * @param {boolean|!AddEventListenerOptions|undefined} options\n * @param {T} scope Object in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template T, EVENTOBJ, THIS\n */\ngoog.events.EventHandler.prototype.listenWithScope = function(\n    src, type, fn, options, scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  // TODO(mknichel): Deprecate this function.\n  return self.listen_(src, type, fn, options, scope);\n};\n\n\n/**\n * Listen to an event on a Listenable.  If the function is omitted then the\n * EventHandler's handleEvent method will be used.\n * @param {goog.events.ListenableType} src Event source.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type to listen for or array of event types.\n * @param {function(EVENTOBJ):?|{handleEvent:function(?):?}|null=} opt_fn\n *     Optional callback function to be used as the listener or an object with\n *     handleEvent function.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {Object=} opt_scope Object in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template EVENTOBJ, THIS\n * @private\n */\ngoog.events.EventHandler.prototype.listen_ = function(\n    src, type, opt_fn, opt_options, opt_scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  if (!Array.isArray(type)) {\n    if (type) {\n      goog.events.EventHandler.typeArray_[0] = type.toString();\n    }\n    type = goog.events.EventHandler.typeArray_;\n  }\n  for (var i = 0; i < type.length; i++) {\n    var listenerObj = goog.events.listen(\n        src, type[i], opt_fn || self.handleEvent, opt_options || false,\n        opt_scope || self.handler_ || self);\n\n    if (!listenerObj) {\n      // When goog.events.listen run on OFF_AND_FAIL or OFF_AND_SILENT\n      // (goog.events.CaptureSimulationMode) in IE8-, it will return null\n      // value.\n      return self;\n    }\n\n    var key = listenerObj.key;\n    self.keys_[key] = listenerObj;\n  }\n\n  return self;\n};\n\n\n/**\n * Listen to an event on a Listenable.  If the function is omitted, then the\n * EventHandler's handleEvent method will be used. After the event has fired the\n * event listener is removed from the target. If an array of event types is\n * provided, each event type will be listened to once.\n * @param {goog.events.ListenableType} src Event source.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type to listen for or array of event types.\n * @param {function(this:SCOPE, EVENTOBJ):?|{handleEvent:function(?):?}|null=}\n * opt_fn\n *    Optional callback function to be used as the listener or an object with\n *    handleEvent function.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template EVENTOBJ, THIS\n */\ngoog.events.EventHandler.prototype.listenOnce = function(\n    src, type, opt_fn, opt_options) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  return self.listenOnce_(src, type, opt_fn, opt_options);\n};\n\n\n/**\n * Listen to an event on a Listenable.  If the function is omitted, then the\n * EventHandler's handleEvent method will be used. After the event has fired the\n * event listener is removed from the target. If an array of event types is\n * provided, each event type will be listened to once.\n * @param {goog.events.ListenableType} src Event source.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type to listen for or array of event types.\n * @param {function(this:T, EVENTOBJ):?|{handleEvent:function(this:T, ?):?}|\n *     null|undefined} fn Optional callback function to be used as the\n *     listener or an object with handleEvent function.\n * @param {boolean|undefined} capture Optional whether to use capture phase.\n * @param {T} scope Object in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template T, EVENTOBJ, THIS\n */\ngoog.events.EventHandler.prototype.listenOnceWithScope = function(\n    src, type, fn, capture, scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  // TODO(mknichel): Deprecate this function.\n  return self.listenOnce_(src, type, fn, capture, scope);\n};\n\n\n/**\n * Listen to an event on a Listenable.  If the function is omitted, then the\n * EventHandler's handleEvent method will be used. After the event has fired\n * the event listener is removed from the target. If an array of event types is\n * provided, each event type will be listened to once.\n * @param {goog.events.ListenableType} src Event source.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type to listen for or array of event types.\n * @param {function(EVENTOBJ):?|{handleEvent:function(?):?}|null=} opt_fn\n *    Optional callback function to be used as the listener or an object with\n *    handleEvent function.\n * @param {(boolean|!AddEventListenerOptions)=} opt_options\n * @param {Object=} opt_scope Object in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template EVENTOBJ, THIS\n * @private\n */\ngoog.events.EventHandler.prototype.listenOnce_ = function(\n    src, type, opt_fn, opt_options, opt_scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  if (Array.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      self.listenOnce_(src, type[i], opt_fn, opt_options, opt_scope);\n    }\n  } else {\n    var listenerObj = goog.events.listenOnce(\n        src, type, opt_fn || self.handleEvent, opt_options,\n        opt_scope || self.handler_ || self);\n    if (!listenerObj) {\n      // When goog.events.listen run on OFF_AND_FAIL or OFF_AND_SILENT\n      // (goog.events.CaptureSimulationMode) in IE8-, it will return null\n      // value.\n      return self;\n    }\n\n    var key = listenerObj.key;\n    self.keys_[key] = listenerObj;\n  }\n\n  return self;\n};\n\n\n/**\n * Adds an event listener with a specific event wrapper on a DOM Node or an\n * object that has implemented {@link goog.events.EventTarget}. A listener can\n * only be added once to an object.\n *\n * @param {EventTarget|goog.events.EventTarget} src The node to listen to\n *     events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(this:SCOPE, ?):?|{handleEvent:function(?):?}|null} listener\n *     Callback method, or an object with a handleEvent function.\n * @param {boolean=} opt_capt Whether to fire in capture phase (defaults to\n *     false).\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template THIS\n */\ngoog.events.EventHandler.prototype.listenWithWrapper = function(\n    src, wrapper, listener, opt_capt) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  // TODO(mknichel): Remove the opt_scope from this function and then\n  // templatize it.\n  return self.listenWithWrapper_(src, wrapper, listener, opt_capt);\n};\n\n\n/**\n * Adds an event listener with a specific event wrapper on a DOM Node or an\n * object that has implemented {@link goog.events.EventTarget}. A listener can\n * only be added once to an object.\n *\n * @param {EventTarget|goog.events.EventTarget} src The node to listen to\n *     events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(this:T, ?):?|{handleEvent:function(this:T, ?):?}|null}\n *     listener Optional callback function to be used as the\n *     listener or an object with handleEvent function.\n * @param {boolean|undefined} capture Optional whether to use capture phase.\n * @param {T} scope Object in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template T, THIS\n */\ngoog.events.EventHandler.prototype.listenWithWrapperAndScope = function(\n    src, wrapper, listener, capture, scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  // TODO(mknichel): Deprecate this function.\n  return self.listenWithWrapper_(src, wrapper, listener, capture, scope);\n};\n\n\n/**\n * Adds an event listener with a specific event wrapper on a DOM Node or an\n * object that has implemented {@link goog.events.EventTarget}. A listener can\n * only be added once to an object.\n *\n * @param {EventTarget|goog.events.EventTarget} src The node to listen to\n *     events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(?):?|{handleEvent:function(?):?}|null} listener Callback\n *     method, or an object with a handleEvent function.\n * @param {boolean=} opt_capt Whether to fire in capture phase (defaults to\n *     false).\n * @param {Object=} opt_scope Element in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template THIS\n * @private\n */\ngoog.events.EventHandler.prototype.listenWithWrapper_ = function(\n    src, wrapper, listener, opt_capt, opt_scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  wrapper.listen(\n      src, listener, opt_capt, opt_scope || self.handler_ || self, self);\n  return self;\n};\n\n\n/**\n * @return {number} Number of listeners registered by this handler.\n */\ngoog.events.EventHandler.prototype.getListenerCount = function() {\n  'use strict';\n  var count = 0;\n  for (var key in this.keys_) {\n    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {\n      count++;\n    }\n  }\n  return count;\n};\n\n\n/**\n * Unlistens on an event.\n * @param {goog.events.ListenableType} src Event source.\n * @param {string|Array<string>|\n *     !goog.events.EventId<EVENTOBJ>|!Array<!goog.events.EventId<EVENTOBJ>>}\n *     type Event type or array of event types to unlisten to.\n * @param {function(this:?, EVENTOBJ):?|{handleEvent:function(?):?}|null=}\n *     opt_fn Optional callback function to be used as the listener or an object\n *     with handleEvent function.\n * @param {(boolean|!EventListenerOptions)=} opt_options\n * @param {Object=} opt_scope Object in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template EVENTOBJ, THIS\n */\ngoog.events.EventHandler.prototype.unlisten = function(\n    src, type, opt_fn, opt_options, opt_scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  if (Array.isArray(type)) {\n    for (var i = 0; i < type.length; i++) {\n      self.unlisten(src, type[i], opt_fn, opt_options, opt_scope);\n    }\n  } else {\n    var capture =\n        goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n    var listener = goog.events.getListener(\n        src, type, opt_fn || self.handleEvent, capture,\n        opt_scope || self.handler_ || self);\n\n    if (listener) {\n      goog.events.unlistenByKey(listener);\n      delete self.keys_[listener.key];\n    }\n  }\n\n  return self;\n};\n\n\n/**\n * Removes an event listener which was added with listenWithWrapper().\n *\n * @param {EventTarget|goog.events.EventTarget} src The target to stop\n *     listening to events on.\n * @param {goog.events.EventWrapper} wrapper Event wrapper to use.\n * @param {function(?):?|{handleEvent:function(?):?}|null} listener The\n *     listener function to remove.\n * @param {boolean=} opt_capt In DOM-compliant browsers, this determines\n *     whether the listener is fired during the capture or bubble phase of the\n *     event.\n * @param {Object=} opt_scope Element in whose scope to call the listener.\n * @return {THIS} This object, allowing for chaining of calls.\n * @this {THIS}\n * @template THIS\n */\ngoog.events.EventHandler.prototype.unlistenWithWrapper = function(\n    src, wrapper, listener, opt_capt, opt_scope) {\n  'use strict';\n  var self = /** @type {!goog.events.EventHandler} */ (this);\n  wrapper.unlisten(\n      src, listener, opt_capt, opt_scope || self.handler_ || self, self);\n  return self;\n};\n\n\n/**\n * Unlistens to all events.\n */\ngoog.events.EventHandler.prototype.removeAll = function() {\n  'use strict';\n  goog.object.forEach(this.keys_, function(listenerObj, key) {\n    'use strict';\n    if (this.keys_.hasOwnProperty(key)) {\n      goog.events.unlistenByKey(listenerObj);\n    }\n  }, this);\n\n  this.keys_ = {};\n};\n\n\n/**\n * Disposes of this EventHandler and removes all listeners that it registered.\n * @override\n * @protected\n */\ngoog.events.EventHandler.prototype.disposeInternal = function() {\n  'use strict';\n  goog.events.EventHandler.superClass_.disposeInternal.call(this);\n  this.removeAll();\n};\n\n\n/**\n * Default event handler\n * @param {goog.events.Event} e Event object.\n */\ngoog.events.EventHandler.prototype.handleEvent = function(e) {\n  'use strict';\n  throw new Error('EventHandler.handleEvent not implemented');\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Provides a utility for tracing and debugging WebChannel\n *     requests.\n *\n */\n\n\ngoog.provide('goog.labs.net.webChannel.WebChannelDebug');\n\ngoog.require('goog.json');\ngoog.require('goog.log');\ngoog.requireType('goog.Uri');\ngoog.requireType('goog.net.XmlHttp.ReadyState');\n\n\n\n/**\n * Logs and keeps a buffer of debugging info for the Channel.\n *\n * @constructor\n * @struct\n * @final\n */\ngoog.labs.net.webChannel.WebChannelDebug = function() {\n  'use strict';\n  /**\n   * The logger instance.\n   * @const\n   * @private {?goog.log.Logger}\n   */\n  this.logger_ = goog.log.getLogger('goog.labs.net.webChannel.WebChannelDebug');\n\n  /**\n   * Whether to enable redact. Defaults to true.\n   * @private {boolean}\n   */\n  this.redactEnabled_ = true;\n};\n\n\ngoog.scope(function() {\n'use strict';\nvar WebChannelDebug = goog.labs.net.webChannel.WebChannelDebug;\n\n\n/**\n * Turns off redact.\n */\nWebChannelDebug.prototype.disableRedact = function() {\n  'use strict';\n  this.redactEnabled_ = false;\n};\n\n\n/**\n * Logs that the browser went offline during the lifetime of a request.\n * @param {goog.Uri} url The URL being requested.\n */\nWebChannelDebug.prototype.browserOfflineResponse = function(url) {\n  'use strict';\n  this.info(function() {\n    'use strict';\n    return 'BROWSER_OFFLINE: ' + url;\n  });\n};\n\n\n/**\n * Logs an XmlHttp request..\n * @param {string} verb The request type (GET/POST).\n * @param {goog.Uri} uri The request destination.\n * @param {string|number|undefined} id The request id.\n * @param {number} attempt Which attempt # the request was.\n * @param {?string} postData The data posted in the request.\n */\nWebChannelDebug.prototype.xmlHttpChannelRequest = function(\n    verb, uri, id, attempt, postData) {\n  'use strict';\n  var self = this;\n  this.info(function() {\n    'use strict';\n    return 'XMLHTTP REQ (' + id + ') [attempt ' + attempt + ']: ' + verb +\n        '\\n' + uri + '\\n' + self.maybeRedactPostData_(postData);\n  });\n};\n\n\n/**\n * Logs the meta data received from an XmlHttp request.\n * @param {string} verb The request type (GET/POST).\n * @param {goog.Uri} uri The request destination.\n * @param {string|number|undefined} id The request id.\n * @param {number} attempt Which attempt # the request was.\n * @param {goog.net.XmlHttp.ReadyState} readyState The ready state.\n * @param {number} statusCode The HTTP status code.\n */\nWebChannelDebug.prototype.xmlHttpChannelResponseMetaData = function(\n    verb, uri, id, attempt, readyState, statusCode) {\n  'use strict';\n  this.info(function() {\n    'use strict';\n    return 'XMLHTTP RESP (' + id + ') [ attempt ' + attempt + ']: ' + verb +\n        '\\n' + uri + '\\n' + readyState + ' ' + statusCode;\n  });\n};\n\n\n/**\n * Logs the response data received from an XmlHttp request.\n * @param {string|number|undefined} id The request id.\n * @param {?string} responseText The response text.\n * @param {?string=} opt_desc Optional request description.\n */\nWebChannelDebug.prototype.xmlHttpChannelResponseText = function(\n    id, responseText, opt_desc) {\n  'use strict';\n  var self = this;\n  this.info(function() {\n    'use strict';\n    return 'XMLHTTP TEXT (' + id + '): ' + self.redactResponse_(responseText) +\n        (opt_desc ? ' ' + opt_desc : '');\n  });\n};\n\n\n/**\n * Logs a request timeout.\n * @param {goog.Uri} uri The uri that timed out.\n */\nWebChannelDebug.prototype.timeoutResponse = function(uri) {\n  'use strict';\n  this.info(function() {\n    'use strict';\n    return 'TIMEOUT: ' + uri;\n  });\n};\n\n\n/**\n * Logs a debug message.\n * @param {!goog.log.Loggable} text The message.\n */\nWebChannelDebug.prototype.debug = function(text) {\n  'use strict';\n  goog.log.fine(this.logger_, text);\n};\n\n\n/**\n * Logs an exception\n * @param {Error} e The error or error event.\n * @param {goog.log.Loggable=} opt_msg The optional message,\n *     defaults to 'Exception'.\n */\nWebChannelDebug.prototype.dumpException = function(e, opt_msg) {\n  'use strict';\n  goog.log.error(this.logger_, opt_msg || 'Exception', e);\n};\n\n\n/**\n * Logs an info message.\n * @param {!goog.log.Loggable} text The message.\n */\nWebChannelDebug.prototype.info = function(text) {\n  'use strict';\n  goog.log.info(this.logger_, text);\n};\n\n\n/**\n * Logs a warning message.\n * @param {!goog.log.Loggable} text The message.\n */\nWebChannelDebug.prototype.warning = function(text) {\n  'use strict';\n  goog.log.warning(this.logger_, text);\n};\n\n\n/**\n * Logs a severe message.\n * @param {!goog.log.Loggable} text The message.\n */\nWebChannelDebug.prototype.severe = function(text) {\n  'use strict';\n  goog.log.error(this.logger_, text);\n};\n\n\n/**\n * Removes potentially private data from a response so that we don't\n * accidentally save private and personal data to the server logs.\n * @param {?string} responseText A JSON response to clean.\n * @return {?string} The cleaned response.\n * @private\n */\nWebChannelDebug.prototype.redactResponse_ = function(responseText) {\n  'use strict';\n  if (!this.redactEnabled_) {\n    return responseText;\n  }\n\n  if (!responseText) {\n    return null;\n  }\n\n  try {\n    var responseArray = JSON.parse(responseText);\n    if (responseArray) {\n      for (var i = 0; i < responseArray.length; i++) {\n        if (Array.isArray(responseArray[i])) {\n          this.maybeRedactArray_(responseArray[i]);\n        }\n      }\n    }\n\n    return goog.json.serialize(responseArray);\n  } catch (e) {\n    this.debug('Exception parsing expected JS array - probably was not JS');\n    return responseText;\n  }\n};\n\n\n/**\n * Removes data from a response array that may be sensitive.\n * @param {!Array<?>} array The array to clean.\n * @private\n */\nWebChannelDebug.prototype.maybeRedactArray_ = function(array) {\n  'use strict';\n  if (array.length < 2) {\n    return;\n  }\n  var dataPart = array[1];\n  if (!Array.isArray(dataPart)) {\n    return;\n  }\n  if (dataPart.length < 1) {\n    return;\n  }\n\n  var type = dataPart[0];\n  if (type != 'noop' && type != 'stop' && type != 'close') {\n    // redact all fields in the array\n    for (var i = 1; i < dataPart.length; i++) {\n      dataPart[i] = '';\n    }\n  }\n};\n\n\n/**\n * Removes potentially private data from a request POST body so that we don't\n * accidentally save private and personal data to the server logs.\n * @param {?string} data The data string to clean.\n * @return {?string} The data string with sensitive data replaced by 'redacted'.\n * @private\n */\nWebChannelDebug.prototype.maybeRedactPostData_ = function(data) {\n  'use strict';\n  if (!this.redactEnabled_) {\n    return data;\n  }\n\n  if (!data) {\n    return null;\n  }\n  var out = '';\n  var params = data.split('&');\n  for (var i = 0; i < params.length; i++) {\n    var param = params[i];\n    var keyValue = param.split('=');\n    if (keyValue.length > 1) {\n      var key = keyValue[0];\n      var value = keyValue[1];\n\n      var keyParts = key.split('_');\n      if (keyParts.length >= 2 && keyParts[1] == 'type') {\n        out += key + '=' + value + '&';\n      } else {\n        out += key + '=' +\n            'redacted' +\n            '&';\n      }\n    }\n  }\n  return out;\n};\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Static utilities for collecting stats associated with\n * ChannelRequest.\n *\n */\n\n\ngoog.provide('goog.labs.net.webChannel.requestStats');\ngoog.provide('goog.labs.net.webChannel.requestStats.Event');\ngoog.provide('goog.labs.net.webChannel.requestStats.ServerReachability');\ngoog.provide('goog.labs.net.webChannel.requestStats.ServerReachabilityEvent');\ngoog.provide('goog.labs.net.webChannel.requestStats.Stat');\ngoog.provide('goog.labs.net.webChannel.requestStats.StatEvent');\ngoog.provide('goog.labs.net.webChannel.requestStats.TimingEvent');\n\ngoog.require('goog.events.Event');\ngoog.require('goog.events.EventTarget');\n\n\ngoog.scope(function() {\n'use strict';\nconst requestStats = goog.labs.net.webChannel.requestStats;\n\n\n/**\n * Events fired.\n * @const\n */\nrequestStats.Event = {};\n\n\n/**\n * Singleton event target for firing stat events\n * @type {?goog.events.EventTarget}\n * @private\n */\nrequestStats.eventTarget_ = null;\n\n/**\n * Singleton event target for firing stat events\n * @return {!goog.events.EventTarget}\n * @private\n */\nrequestStats.getStatEventTarget_ = function() {\n  'use strict';\n  requestStats.eventTarget_ =\n      requestStats.eventTarget_ || new goog.events.EventTarget();\n  return requestStats.eventTarget_;\n};\n\n/**\n * The type of event that occurs every time some information about how reachable\n * the server is is discovered.\n */\nrequestStats.Event.SERVER_REACHABILITY_EVENT = 'serverreachability';\n\n\n/**\n * Types of events which reveal information about the reachability of the\n * server.\n * @enum {number}\n */\nrequestStats.ServerReachability = {\n  REQUEST_MADE: 1,\n  REQUEST_SUCCEEDED: 2,\n  REQUEST_FAILED: 3,\n  BACK_CHANNEL_ACTIVITY: 4  // any response data received\n};\n\n\n\n/**\n * Event class for SERVER_REACHABILITY_EVENT.\n *\n * @param {goog.events.EventTarget} target The stat event target for\n       the channel.\n * @param {requestStats.ServerReachability} reachabilityType\n *     The reachability event type.\n * @constructor\n * @extends {goog.events.Event}\n */\nrequestStats.ServerReachabilityEvent = function(target, reachabilityType) {\n  'use strict';\n  goog.events.Event.call(\n      this, requestStats.Event.SERVER_REACHABILITY_EVENT, target);\n\n  /**\n   * @type {requestStats.ServerReachability}\n   */\n  this.reachabilityType = reachabilityType;\n};\ngoog.inherits(requestStats.ServerReachabilityEvent, goog.events.Event);\n\n\n/**\n * Notify the channel that a particular fine grained network event has occurred.\n * Should be considered package-private.\n * @param {requestStats.ServerReachability} reachabilityType\n *     The reachability event type.\n */\nrequestStats.notifyServerReachabilityEvent = function(reachabilityType) {\n  'use strict';\n  const target = requestStats.getStatEventTarget_();\n  target.dispatchEvent(\n      new requestStats.ServerReachabilityEvent(target, reachabilityType));\n};\n\n\n/**\n * Stat Event that fires when things of interest happen that may be useful for\n * applications to know about for stats or debugging purposes.\n */\nrequestStats.Event.STAT_EVENT = 'statevent';\n\n\n/**\n * Enum that identifies events for statistics that are interesting to track.\n * @enum {number}\n */\nrequestStats.Stat = {\n  /** Event indicating a new connection attempt. */\n  CONNECT_ATTEMPT: 0,\n\n  /** Event indicating a connection error due to a general network problem. */\n  ERROR_NETWORK: 1,\n\n  /**\n   * Event indicating a connection error that isn't due to a general network\n   * problem.\n   */\n  ERROR_OTHER: 2,\n\n  /** Event indicating the start of test stage one. */\n  TEST_STAGE_ONE_START: 3,\n\n  /** Event indicating the start of test stage two. */\n  TEST_STAGE_TWO_START: 4,\n\n  /** Event indicating the first piece of test data was received. */\n  TEST_STAGE_TWO_DATA_ONE: 5,\n\n  /**\n   * Event indicating that the second piece of test data was received and it was\n   * received separately from the first.\n   */\n  TEST_STAGE_TWO_DATA_TWO: 6,\n\n  /** Event indicating both pieces of test data were received simultaneously. */\n  TEST_STAGE_TWO_DATA_BOTH: 7,\n\n  /** Event indicating stage one of the test request failed. */\n  TEST_STAGE_ONE_FAILED: 8,\n\n  /** Event indicating stage two of the test request failed. */\n  TEST_STAGE_TWO_FAILED: 9,\n\n  /**\n   * Event indicating that a buffering proxy is likely between the client and\n   * the server.\n   */\n  PROXY: 10,\n\n  /**\n   * Event indicating that no buffering proxy is likely between the client and\n   * the server.\n   */\n  NOPROXY: 11,\n\n  /** Event indicating an unknown SID error. */\n  REQUEST_UNKNOWN_SESSION_ID: 12,\n\n  /** Event indicating a bad status code was received. */\n  REQUEST_BAD_STATUS: 13,\n\n  /** Event indicating incomplete data was received */\n  REQUEST_INCOMPLETE_DATA: 14,\n\n  /** Event indicating bad data was received */\n  REQUEST_BAD_DATA: 15,\n\n  /** Event indicating no data was received when data was expected. */\n  REQUEST_NO_DATA: 16,\n\n  /** Event indicating a request timeout. */\n  REQUEST_TIMEOUT: 17,\n\n  /**\n   * Event indicating that the server never received our hanging GET and so it\n   * is being retried.\n   */\n  BACKCHANNEL_MISSING: 18,\n\n  /**\n   * Event indicating that we have determined that our hanging GET is not\n   * receiving data when it should be. Thus it is dead dead and will be retried.\n   */\n  BACKCHANNEL_DEAD: 19,\n\n  /**\n   * The browser declared itself offline during the lifetime of a request, or\n   * was offline when a request was initially made.\n   */\n  BROWSER_OFFLINE: 20\n};\n\n\n\n/**\n * Event class for STAT_EVENT.\n *\n * @param {goog.events.EventTarget} eventTarget The stat event target for\n       the channel.\n * @param {requestStats.Stat} stat The stat.\n * @constructor\n * @extends {goog.events.Event}\n */\nrequestStats.StatEvent = function(eventTarget, stat) {\n  'use strict';\n  goog.events.Event.call(this, requestStats.Event.STAT_EVENT, eventTarget);\n\n  /**\n   * The stat\n   * @type {requestStats.Stat}\n   */\n  this.stat = stat;\n};\ngoog.inherits(requestStats.StatEvent, goog.events.Event);\n\n\n/**\n * Returns the singleton event target for stat events.\n * @return {!goog.events.EventTarget} The event target for stat events.\n */\nrequestStats.getStatEventTarget = function() {\n  'use strict';\n  return requestStats.getStatEventTarget_();\n};\n\n\n/**\n * Helper function to call the stat event callback.\n * @param {requestStats.Stat} stat The stat.\n */\nrequestStats.notifyStatEvent = function(stat) {\n  'use strict';\n  const target = requestStats.getStatEventTarget_();\n  target.dispatchEvent(new requestStats.StatEvent(target, stat));\n};\n\n\n/**\n * An event that fires when POST requests complete successfully, indicating\n * the size of the POST and the round trip time.\n */\nrequestStats.Event.TIMING_EVENT = 'timingevent';\n\n\n\n/**\n * Event class for requestStats.Event.TIMING_EVENT\n *\n * @param {goog.events.EventTarget} target The stat event target for\n       the channel.\n * @param {number} size The number of characters in the POST data.\n * @param {number} rtt The total round trip time from POST to response in MS.\n * @param {number} retries The number of times the POST had to be retried.\n * @constructor\n * @extends {goog.events.Event}\n */\nrequestStats.TimingEvent = function(target, size, rtt, retries) {\n  'use strict';\n  goog.events.Event.call(this, requestStats.Event.TIMING_EVENT, target);\n\n  /**\n   * @type {number}\n   */\n  this.size = size;\n\n  /**\n   * @type {number}\n   */\n  this.rtt = rtt;\n\n  /**\n   * @type {number}\n   */\n  this.retries = retries;\n};\ngoog.inherits(requestStats.TimingEvent, goog.events.Event);\n\n\n/**\n * Helper function to notify listeners about POST request performance.\n *\n * @param {number} size Number of characters in the POST data.\n * @param {number} rtt The amount of time from POST start to response.\n * @param {number} retries The number of times the POST had to be retried.\n */\nrequestStats.notifyTimingEvent = function(size, rtt, retries) {\n  'use strict';\n  const target = requestStats.getStatEventTarget_();\n  target.dispatchEvent(\n      new requestStats.TimingEvent(target, size, rtt, retries));\n};\n\n\n/**\n * Allows the application to set an execution hooks for when a channel\n * starts processing requests. This is useful to track timing or logging\n * special information. The function takes no parameters and return void.\n * @param {Function} startHook  The function for the start hook.\n */\nrequestStats.setStartThreadExecutionHook = function(startHook) {\n  'use strict';\n  requestStats.startExecutionHook_ = startHook;\n};\n\n\n/**\n * Allows the application to set an execution hooks for when a channel\n * stops processing requests. This is useful to track timing or logging\n * special information. The function takes no parameters and return void.\n * @param {Function} endHook  The function for the end hook.\n */\nrequestStats.setEndThreadExecutionHook = function(endHook) {\n  'use strict';\n  requestStats.endExecutionHook_ = endHook;\n};\n\n\n/**\n * Application provided execution hook for the start hook.\n *\n * @type {Function}\n * @private\n */\nrequestStats.startExecutionHook_ = function() {};\n\n\n/**\n * Application provided execution hook for the end hook.\n *\n * @type {Function}\n * @private\n */\nrequestStats.endExecutionHook_ = function() {};\n\n\n/**\n * Helper function to call the start hook\n */\nrequestStats.onStartExecution = function() {\n  'use strict';\n  requestStats.startExecutionHook_();\n};\n\n\n/**\n * Helper function to call the end hook\n */\nrequestStats.onEndExecution = function() {\n  'use strict';\n  requestStats.endExecutionHook_();\n};\n\n\n/**\n * Wrapper around SafeTimeout which calls the start and end execution hooks\n * with a try...finally block.\n * @param {Function} fn The callback function.\n * @param {number} ms The time in MS for the timer.\n * @return {number} The ID of the timer.\n */\nrequestStats.setTimeout = function(fn, ms) {\n  'use strict';\n  if (typeof fn !== 'function') {\n    throw new Error('Fn must not be null and must be a function');\n  }\n  return goog.global.setTimeout(function() {\n    'use strict';\n    requestStats.onStartExecution();\n    try {\n      fn();\n    } finally {\n      requestStats.onEndExecution();\n    }\n  }, ms);\n};\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Error codes shared between goog.net.IframeIo and\n * goog.net.XhrIo.\n */\n\ngoog.provide('goog.net.ErrorCode');\n\n\n/**\n * Error codes\n * @enum {number}\n */\ngoog.net.ErrorCode = {\n\n  /**\n   * There is no error condition.\n   */\n  NO_ERROR: 0,\n\n  /**\n   * The most common error from iframeio, unfortunately, is that the browser\n   * responded with an error page that is classed as a different domain. The\n   * situations, are when a browser error page  is shown -- 404, access denied,\n   * DNS failure, connection reset etc.)\n   *\n   */\n  ACCESS_DENIED: 1,\n\n  /**\n   * Currently the only case where file not found will be caused is when the\n   * code is running on the local file system and a non-IE browser makes a\n   * request to a file that doesn't exist.\n   */\n  FILE_NOT_FOUND: 2,\n\n  /**\n   * If Firefox shows a browser error page, such as a connection reset by\n   * server or access denied, then it will fail silently without the error or\n   * load handlers firing.\n   */\n  FF_SILENT_ERROR: 3,\n\n  /**\n   * Custom error provided by the client through the error check hook.\n   */\n  CUSTOM_ERROR: 4,\n\n  /**\n   * Exception was thrown while processing the request.\n   */\n  EXCEPTION: 5,\n\n  /**\n   * The Http response returned a non-successful http status code.\n   */\n  HTTP_ERROR: 6,\n\n  /**\n   * The request was aborted.\n   */\n  ABORT: 7,\n\n  /**\n   * The request timed out.\n   */\n  TIMEOUT: 8,\n\n  /**\n   * The resource is not available offline.\n   */\n  OFFLINE: 9,\n};\n\n\n/**\n * Returns a friendly error message for an error code. These messages are for\n * debugging and are not localized.\n * @param {goog.net.ErrorCode} errorCode An error code.\n * @return {string} A message for debugging.\n */\ngoog.net.ErrorCode.getDebugMessage = function(errorCode) {\n  'use strict';\n  switch (errorCode) {\n    case goog.net.ErrorCode.NO_ERROR:\n      return 'No Error';\n\n    case goog.net.ErrorCode.ACCESS_DENIED:\n      return 'Access denied to content document';\n\n    case goog.net.ErrorCode.FILE_NOT_FOUND:\n      return 'File not found';\n\n    case goog.net.ErrorCode.FF_SILENT_ERROR:\n      return 'Firefox silently errored';\n\n    case goog.net.ErrorCode.CUSTOM_ERROR:\n      return 'Application custom error';\n\n    case goog.net.ErrorCode.EXCEPTION:\n      return 'An exception occurred';\n\n    case goog.net.ErrorCode.HTTP_ERROR:\n      return 'Http response at 400 or 500 level';\n\n    case goog.net.ErrorCode.ABORT:\n      return 'Request was aborted';\n\n    case goog.net.ErrorCode.TIMEOUT:\n      return 'Request timed out';\n\n    case goog.net.ErrorCode.OFFLINE:\n      return 'The resource is not available offline';\n\n    default:\n      return 'Unrecognized error code';\n  }\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Common events for the network classes.\n */\n\n\ngoog.provide('goog.net.EventType');\n\n\n/**\n * Event names for network events\n * @enum {string}\n */\ngoog.net.EventType = {\n  COMPLETE: 'complete',\n  SUCCESS: 'success',\n  ERROR: 'error',\n  ABORT: 'abort',\n  READY: 'ready',\n  READY_STATE_CHANGE: 'readystatechange',\n  TIMEOUT: 'timeout',\n  INCREMENTAL_DATA: 'incrementaldata',\n  PROGRESS: 'progress',\n  // DOWNLOAD_PROGRESS and UPLOAD_PROGRESS are special events dispatched by\n  // goog.net.XhrIo to allow binding listeners specific to each type of\n  // progress.\n  DOWNLOAD_PROGRESS: 'downloadprogress',\n  UPLOAD_PROGRESS: 'uploadprogress',\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Interface for a factory for creating XMLHttpRequest objects\n * and metadata about them.\n */\n\ngoog.provide('goog.net.XmlHttpFactory');\n\n/** @suppress {extraRequire} Typedef. */\ngoog.require('goog.net.XhrLike');\n\n\n\n/**\n * Abstract base class for an XmlHttpRequest factory.\n * @constructor\n */\ngoog.net.XmlHttpFactory = function() {};\n\n\n/**\n * Cache of options - we only actually call internalGetOptions once.\n * @type {?Object}\n * @private\n */\ngoog.net.XmlHttpFactory.prototype.cachedOptions_ = null;\n\n\n/**\n * @return {!goog.net.XhrLike.OrNative} A new XhrLike instance.\n */\ngoog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;\n\n\n/**\n * @return {Object} Options describing how xhr objects obtained from this\n *     factory should be used.\n */\ngoog.net.XmlHttpFactory.prototype.getOptions = function() {\n  'use strict';\n  return this.cachedOptions_ ||\n      (this.cachedOptions_ = this.internalGetOptions());\n};\n\n\n/**\n * Override this method in subclasses to preserve the caching offered by\n * getOptions().\n * @return {Object} Options describing how xhr objects obtained from this\n *     factory should be used.\n * @protected\n */\ngoog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview The API spec for the WebChannel messaging library.\n *\n * Similar to HTML5 WebSocket, WebChannel offers an abstraction for\n * point-to-point socket-like communication between a browser client and\n * a remote origin.\n *\n * WebChannels are created via <code>WebChannel</code>. Multiple WebChannels\n * may be multiplexed over the same WebChannelTransport, which encapsulates\n * the underlying physical connectivity over standard wire protocols\n * such as HTTP.\n *\n * A WebChannel in turn represents a logical communication channel between\n * the client and server endpoint. A WebChannel remains open for as long\n * as the client or server endpoint allows.\n *\n * Messages are delivered in-order and reliably over the same WebChannel,\n * and the choice of the underlying wire protocols is completely transparent\n * to the API users.\n *\n * Note that we have no immediate plan to move this API out of labs. While\n * the implementation is production ready, the API is subject to change.\n */\n\ngoog.provide('goog.net.WebChannel');\ngoog.provide('goog.net.WebChannel.Options');\n\ngoog.require('goog.events');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.Listenable');\ngoog.require('goog.net.XmlHttpFactory');\n\n\n\n/**\n * A WebChannel represents a logical bi-directional channel over which the\n * client communicates with a remote server that holds the other endpoint\n * of the channel. A WebChannel is always created in the context of a shared\n * {@link WebChannelTransport} instance. It is up to the underlying client-side\n * and server-side implementations to decide how or when multiplexing is\n * to be enabled.\n *\n * @interface\n * @extends {goog.events.Listenable}\n */\ngoog.net.WebChannel = function() {};\n\n\n\n/**\n * This interface defines a pluggable API to allow WebChannel runtime to support\n * customized algorithms in order to recover from transient failures such as\n * those failures caused by network or proxies (intermediaries).\n *\n * The algorithm may also choose to fail-fast, e.g. switch the client to some\n * offline mode.\n *\n * Extra measurements and logging could also be implemented in the custom\n * module, which has the full knowledge of all the state transitions\n * (due to failures).\n *\n * A default algorithm will be provided by the webchannel library itself. Custom\n * algorithms are expected to be tailored to specific client platforms or\n * networking environments, e.g. mobile, cellular network.\n *\n * @interface\n */\ngoog.net.WebChannel.FailureRecovery = function() {};\n\n\n/**\n * Configuration spec for newly created WebChannel instances.\n *\n * WebChannels are configured in the context of the containing\n * {@link WebChannelTransport}. The configuration parameters are specified\n * when a new instance of WebChannel is created via {@link WebChannelTransport}.\n * @record\n */\ngoog.net.WebChannel.Options = function() {};\n\n/**\n * Transport-metadata support.\n *\n * Custom HTTP headers to be added to every message sent to the\n * server. This object is mutable, and custom headers may be changed, removed,\n * or added during the runtime after a channel has been opened.\n *\n * Custom headers may trigger CORS preflight. See other related options.\n * @type {!Object<string, string>|undefined}\n */\ngoog.net.WebChannel.Options.prototype.messageHeaders;\n\n/**\n * Transport-metadata support.\n *\n * Similar to messageHeaders, but any custom HTTP headers will\n * be sent only once when the channel is opened as part of the handshae request.\n * Typical usage is to send an auth header to the server, which only checks\n * the auth header at the time during the handshake when the channel is opened.\n * @type {!Object<string, string>|undefined}\n */\ngoog.net.WebChannel.Options.prototype.initMessageHeaders;\n\n/**\n * Sent as initMessageHeaders via X-WebChannel-Content-Type,\n * to inform the server the MIME type of WebChannel messages.\n * @type {string|undefined}\n */\ngoog.net.WebChannel.Options.prototype.messageContentType;\n\n/**\n * Transport-metadata support.\n *\n * Custom url query parameters to be added to every message\n * sent to the server. This object is mutable, and custom parameters may be\n * changed, removed or added during the runtime after a channel has been opened.\n *\n * TODO: initMessageUrlParams\n * TODO: closeMessageUrlParams  (custom url query params to be added to the\n * channel-close message. Custom headers are not supported due to the use of\n * SendBeacon)\n *\n * @type {!Object<string, string>|undefined}\n */\ngoog.net.WebChannel.Options.prototype.messageUrlParams;\n\n/**\n * Whether a special header should be added to\n * each message so that the server can dispatch webchannel messages without\n * knowing the URL path prefix. Defaults to false.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.clientProtocolHeaderRequired;\n\n/**\n * The maximum number of in-flight HTTP requests allowed\n * when SPDY is enabled. Currently we only detect SPDY in Chrome.\n * This parameter defaults to 10. When SPDY is not enabled, this parameter\n * will have no effect.\n * @type {number|undefined}\n */\ngoog.net.WebChannel.Options.prototype.concurrentRequestLimit;\n\n/**\n * Setting this to true to allow the use of sub-domains\n * (as configured by the server) to send XHRs with the CORS withCredentials\n * bit set to true.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.supportsCrossDomainXhr;\n\n/**\n * Whether to bypass v8 encoding of client-sent messages.\n * This defaults to false now due to legacy servers. New applications should\n * always configure this option to true.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.sendRawJson;\n\n/**\n * The URL parameter name that contains the session id (for sticky routing of\n * HTTP requests). When this param is specified, a server that supports this\n * option will respond with an opaque session id as part of the initial\n * handshake (via the X-HTTP-Session-Id header); and all the subsequent requests\n * will contain the httpSessionIdParam. This option will take precedence over\n * any duplicated parameter specified with messageUrlParams, whose value will be\n * ignored.\n * @type {string|undefined}\n */\ngoog.net.WebChannel.Options.prototype.httpSessionIdParam;\n\n/**\n * The URL parameter name to allow custom HTTP\n * headers to be overwritten as a URL param to bypass CORS preflight.\n *\n * @type {string|undefined}\n */\ngoog.net.WebChannel.Options.prototype.httpHeadersOverwriteParam;\n\n/**\n * Whether to encode Options.initMessageHeaders in the HTTP request body.\n * This option defaults to false. If true, Options.httpHeadersOverwriteParam\n * will be ignored.\n *\n * This option should not be set if Options.fastHandshake is set (which\n * uses GET for handshake).\n *\n * Web-only feature.\n *\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.encodeInitMessageHeaders;\n\n/**\n * Whether to force long-polling from client to server.\n * This defaults to false. Long-polling may be necessary when a (MITM) proxy\n * is buffering data sent by the server.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.forceLongPolling;\n\n/**\n * Whether to enable automatic detection of buffering proxies. In the presence\n * of any buffering proxy, webchannel will use long-polling to send messages\n * from the server to the client. This option defaults to false.\n * Currently when fastHandshake is enabled, this option will be ignored.\n * Compared to \"forceLongPolling\", this option may introduce up to 2-RTT\n * extra latency for delivering messages generated immediately after the\n * handshake.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.detectBufferingProxy;\n\n/**\n * Enable true 0-RTT message delivery, including\n * leveraging QUIC 0-RTT (which requires GET to be used). This option\n * defaults to false. Note it is allowed to send messages before Open event is\n * received, after a channel has been opened. In order to enable 0-RTT,\n * messages will be encoded as part of URL and therefore there needs be a size\n * limit for those initial messages that are sent immediately as part of the\n * GET handshake request. With sendRawJson=true, this limit is currently set\n * to 4K chars and data beyond this limit will be buffered till the handshake\n * (1-RTT) finishes. With sendRawJson=false, it's up to the application\n * to limit the amount of data that is sent as part of the handshake.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.fastHandshake;\n\n/**\n * Enable the blocking RPC semantics for the handshake:\n * 1) the completion of handshake is blocked by the server-side application\n * logic for handling the handshake (HTTP) request; 2) the client application\n * will inspect the handshake (HTTP) response headers as generated\n * by the server application (v.s. by only the webchannel runtime). This option\n * defaults to false.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.blockingHandshake;\n\n/**\n * Whether to disable logging redact. By default, redact is\n * enabled to remove any message payload or user-provided info\n * from closure logs.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.disableRedact;\n\n/**\n * Inform the server about the client profile to enable\n * customized configs that are optimized for certain clients or environments.\n * Currently this information is sent via X-WebChannel-Client-Profile header.\n * @type {string|undefined}\n */\ngoog.net.WebChannel.Options.prototype.clientProfile;\n\n/**\n * The internal channel parameter name to allow\n * experimental channel configurations. Supported options include fastfail,\n * baseRetryDelayMs, retryDelaySeedMs, forwardChannelMaxRetries and\n * forwardChannelRequestTimeoutMs. Note that these options are subject to\n * change.\n * @type {!Object<string, boolean|number>|undefined}\n */\ngoog.net.WebChannel.Options.prototype.internalChannelParams;\n\n/**\n * Allows the caller to override the factory used to create\n * XMLHttpRequest objects. This is introduced to disable CORS on firefox OS.\n * @type {!goog.net.XmlHttpFactory|undefined}\n */\ngoog.net.WebChannel.Options.prototype.xmlHttpFactory;\n\n/**\n * Client-side thresholds that decide when to refresh\n * an underlying HTTP request, to limit memory consumption due to XHR buffering\n * or compression context. The client-side thresholds should be significantly\n * smaller than the server-side thresholds. This allows the client to eliminate\n * any latency introduced by request refreshing, i.e. an RTT window during which\n * messages may be buffered on the server-side. Supported params include\n * totalBytesReceived, totalDurationMs.\n * @type {!Object<string, number>|undefined}\n */\ngoog.net.WebChannel.Options.prototype.requestRefreshThresholds;\n\n/**\n * This is an experimental feature to use WHATWG Fetch/streams (when supported)\n * for the backchannel. If a custom 'xmlHttpFactory' is speficied, this option\n * will not be effective. This option defaults to false now and will eventually\n * be turned on by default.\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.useFetchStreams;\n\n/**\n * Opt-in to enable Chrome origin trials from the WebChannel client. See\n * https://github.com/GoogleChrome/OriginTrials\n *\n * Origin trial history:\n * - fetch upload (11/2020 - 07/2021)\n * https://developers.chrome.com/origintrials/#/view_trial/3524066708417413121\n *\n * Participating in the origin trials will help Chrome to release new Web\n * platform features sooner, which will in turn help improve WebChannel\n * performance.\n *\n * Origin trials are not expected to interfere with WebChannel wire messages\n * and should not introduce any noticeable overhead.\n *\n * This is enabled by default with any on-going origin-trial.\n *\n * @type {boolean|undefined}\n */\ngoog.net.WebChannel.Options.prototype.enableOriginTrials;\n\n\n/**\n * Types that are allowed as message data.\n *\n * Note that JS objects (sent by the client) can only have string encoded\n * values due to the limitation of the current wire protocol.\n *\n * Unicode strings (sent by the server) may or may not need be escaped, as\n * decided by the server.\n *\n * @typedef {(!ArrayBuffer|!Blob|!Object<string, !Object|string>|!Array|string)}\n */\ngoog.net.WebChannel.MessageData;\n\n\n/**\n * Open the WebChannel against the URI specified in the constructor.\n */\ngoog.net.WebChannel.prototype.open = goog.abstractMethod;\n\n\n/**\n * Close the WebChannel.\n *\n * This is a full close (shutdown) with no guarantee of FIFO delivery in respect\n * to any in-flight messages sent to the server.\n *\n * If you need such a guarantee, see the Half the halfClose() method.\n */\ngoog.net.WebChannel.prototype.close = goog.abstractMethod;\n\n\n/**\n * Half-close the WebChannel.\n *\n * Half-close semantics:\n * 1. delivered as a regular message in FIFO programming order\n * 2. the server is expected to return a half-close too (with or without\n *    application involved), which will trigger a full close (shutdown)\n *    on the client side\n * 3. for now, the half-close event defined for server-initiated\n *    half-close is not exposed to the client application\n * 4. a client-side half-close may be triggered internally when the client\n *    receives a half-close from the server; and the client is expected to\n *    do a full close after the half-close is acked and delivered\n *    on the server-side.\n * 5. Full close is always a forced one. See the close() method.\n *\n * New messages sent after halfClose() will be dropped.\n *\n * NOTE: This is not yet implemented, and will throw an exception if called.\n */\ngoog.net.WebChannel.prototype.halfClose = goog.abstractMethod;\n\n\n/**\n * Sends a message to the server that maintains the other endpoint of\n * the WebChannel.\n *\n * O-RTT behavior:\n * 1. messages sent before open() is called will always be delivered as\n *    part of the handshake, i.e. with 0-RTT\n * 2. messages sent after open() is called but before the OPEN event\n *    is received will be delivered as part of the handshake if\n *    send() is called from the same execution context as open().\n * 3. otherwise, those messages will be buffered till the handshake\n *    is completed (which will fire the OPEN event).\n *\n * @param {!goog.net.WebChannel.MessageData} message The message to send.\n */\ngoog.net.WebChannel.prototype.send = goog.abstractMethod;\n\n\n/**\n * Common events fired by WebChannels.\n * @enum {string}\n */\ngoog.net.WebChannel.EventType = {\n  /** Dispatched when the channel is opened. */\n  OPEN: goog.events.getUniqueId('open'),\n\n  /** Dispatched when the channel is closed. */\n  CLOSE: goog.events.getUniqueId('close'),\n\n  /**\n   * Dispatched when the channel is aborted due to errors.\n   *\n   * For backward compatibility reasons, a CLOSE event will also be\n   * dispatched, following the ERROR event, which indicates that the channel\n   * has been completely shutdown .\n   */\n  ERROR: goog.events.getUniqueId('error'),\n\n  /** Dispatched when the channel has received a new message. */\n  MESSAGE: goog.events.getUniqueId('message')\n};\n\n\n\n/**\n * The event interface for the MESSAGE event.\n *\n * @constructor\n * @extends {goog.events.Event}\n */\ngoog.net.WebChannel.MessageEvent = function() {\n  'use strict';\n  goog.net.WebChannel.MessageEvent.base(\n      this, 'constructor', goog.net.WebChannel.EventType.MESSAGE);\n};\ngoog.inherits(goog.net.WebChannel.MessageEvent, goog.events.Event);\n\n\n/**\n * The content of the message received from the server.\n *\n * @type {!goog.net.WebChannel.MessageData}\n */\ngoog.net.WebChannel.MessageEvent.prototype.data;\n\n\n/**\n * The metadata key when the MESSAGE event represents a metadata message.\n *\n * @type {string|undefined}\n */\ngoog.net.WebChannel.MessageEvent.prototype.metadataKey;\n\n\n/**\n * Metadata as HTTP status code. Typically sent before the channel is\n * half-closed by the server. To be implemented.\n *\n * @type {number|undefined}\n */\ngoog.net.WebChannel.MessageEvent.prototype.statusCode;\n\n\n/**\n * Metadata as HTTP headers. Typically sent before the channel is\n * half-closed by the server. To be implemented.\n *\n * @type {!Object<string, string>|undefined}\n */\ngoog.net.WebChannel.MessageEvent.prototype.responseHeaders;\n\n\n/**\n * WebChannel level error conditions.\n *\n * Summary of error debugging and reporting in WebChannel:\n *\n * Network Error\n * 1. By default the webchannel library will set the error status to\n *    NETWORK_ERROR when a channel has to be aborted or closed. NETWORK_ERROR\n *    may be recovered by the application by retrying and opening a new channel.\n * 2. There may be lost messages (not acked by the server) when a channel is\n *    aborted. Currently we don't have a public API to retrieve messages that\n *    are waiting to be acked on the client side. File a bug if you think it\n *    is useful to expose such an API.\n * 3. Details of why a channel fails are available via closure debug logs,\n *    and stats events (see webchannel/requeststats.js). Those are internal\n *    stats and are subject to change. File a bug if you think it's useful to\n *    version and expose such stats as part of the WebChannel API.\n *\n * Server Error\n * 1. SERVER_ERROR is intended to indicate a non-recoverable condition, e.g.\n *    when auth fails.\n * 2. We don't currently generate any such errors, because most of the time\n *    it's the responsibility of upper-layer frameworks or the application\n *    itself to indicate to the client why a webchannel has been failed\n *    by the server.\n * 3. When a channel is failed by the server explicitly, we still signal\n *    NETWORK_ERROR to the client. Explicit server failure may happen when the\n *    server does a fail-over, or becomes overloaded, or conducts a forced\n *    shutdown etc.\n * 4. We use some heuristic to decide if the network (aka cloud) is down\n *    v.s. the actual server is down.\n *\n *  RuntimeProperties.getLastStatusCode is a useful state that we expose to\n *  the client to indicate the HTTP response status code of the last HTTP\n *  request initiated by the WebChannel client library, for debugging\n *  purposes only.\n *\n *  See WebChannel.Options.backChannelFailureRecovery and\n *  WebChannel.FailureRecovery to install a custom failure-recovery algorithm.\n *\n * @enum {number}\n */\ngoog.net.WebChannel.ErrorStatus = {\n  /** No error has occurred. */\n  OK: 0,\n\n  /** Communication to the server has failed. */\n  NETWORK_ERROR: 1,\n\n  /** The server fails to accept or process the WebChannel. */\n  SERVER_ERROR: 2\n};\n\n\n\n/**\n * The event interface for the ERROR event.\n *\n * @constructor\n * @extends {goog.events.Event}\n */\ngoog.net.WebChannel.ErrorEvent = function() {\n  'use strict';\n  goog.net.WebChannel.ErrorEvent.base(\n      this, 'constructor', goog.net.WebChannel.EventType.ERROR);\n};\ngoog.inherits(goog.net.WebChannel.ErrorEvent, goog.events.Event);\n\n\n/**\n * The error status.\n *\n * @type {!goog.net.WebChannel.ErrorStatus}\n */\ngoog.net.WebChannel.ErrorEvent.prototype.status;\n\n\n/**\n * @return {!goog.net.WebChannel.RuntimeProperties} The runtime properties\n * of the WebChannel instance.\n */\ngoog.net.WebChannel.prototype.getRuntimeProperties = goog.abstractMethod;\n\n\n\n/**\n * The runtime properties of the WebChannel instance.\n *\n * This class is defined for debugging and monitoring purposes, as well as for\n * runtime functions that the application may choose to manage by itself.\n *\n * @interface\n */\ngoog.net.WebChannel.RuntimeProperties = function() {};\n\n\n/**\n * @return {number} The effective limit for the number of concurrent HTTP\n * requests that are allowed to be made for sending messages from the client\n * to the server. When SPDY is not enabled, this limit will be one.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.getConcurrentRequestLimit =\n    goog.abstractMethod;\n\n\n/**\n * For applications that need support multiple channels (e.g. from\n * different tabs) to the same origin, use this method to decide if SPDY is\n * enabled and therefore it is safe to open multiple channels.\n *\n * If SPDY is disabled, the application may choose to limit the number of active\n * channels to one or use other means such as sub-domains to work around\n * the browser connection limit.\n *\n * @return {boolean} Whether SPDY is enabled for the origin against which\n * the channel is created.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.isSpdyEnabled =\n    goog.abstractMethod;\n\n\n/**\n * @return {number} The number of requests (for sending messages to the server)\n * that are pending. If this number is approaching the value of\n * getConcurrentRequestLimit(), client-to-server message delivery may experience\n * a higher latency.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.getPendingRequestCount =\n    goog.abstractMethod;\n\n\n/**\n * For applications to query the current HTTP session id, sent by the server\n * during the initial handshake.\n *\n * @return {?string} the HTTP session id or null if no HTTP session is in use.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.getHttpSessionId =\n    goog.abstractMethod;\n\n\n/**\n * Experimental API.\n *\n * This method generates an in-band commit request to the server, which will\n * ack the commit request as soon as all messages sent prior to this commit\n * request have been committed by the application.\n *\n * Committing a message has a stronger semantics than delivering a message\n * to the application. Detail spec:\n * https://github.com/bidiweb/webchannel/blob/master/commit.md\n *\n * Timeout or cancellation is not supported and the application is expected to\n * abort the channel if the commit-ack fails to arrive in time.\n *\n * ===\n *\n * This is currently implemented only in the client layer and the commit\n * callback will be invoked after all the pending client-sent messages have been\n * delivered by the server-side webchannel endpoint. This semantics is\n * different and weaker than what's required for end-to-end ack which requires\n * the server application to ack the in-order delivery of messages that are sent\n * before the commit request is issued.\n *\n * Commit should only be called after the channel open event is received.\n * Duplicated commits are allowed and only the last callback is guaranteed.\n * Commit called after the channel has been closed will be ignored.\n *\n * @param {function()} callback The callback will be invoked once an\n * ack has been received for the current commit or any newly issued commit.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.commit = goog.abstractMethod;\n\n\n/**\n * This method may be used by the application to recover from a peer failure\n * or to enable sender-initiated flow-control.\n *\n * Detail spec: https://github.com/bidiweb/webchannel/blob/master/commit.md\n *\n * Note that the caller should NOT modify the list of returned messages.\n *\n * @return {!Array<!goog.net.WebChannel.MessageData>} The list of messages that\n * have not received commit-ack from the server; or if no commit has been\n * issued, the list of messages that have not been delivered to the server\n * application.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.getNonAckedMessages =\n    goog.abstractMethod;\n\n\n/**\n * A low water-mark message count to notify the application when the\n * flow-control condition is cleared, that is, when the application is\n * able to send more messages.\n *\n * We expect the application to configure a high water-mark message count,\n * which is checked via getNonAckedMessageCount(). When the high water-mark\n * is exceeded, the application should install a callback via this method\n * to be notified when to start to send new messages.\n *\n * This is not yet implemented.\n *\n * @param {number} count The low water-mark count. It is an error to pass\n * a non-positive value.\n * @param {function()} callback The call back to notify the application\n * when NonAckedMessageCount is below the specified low water-mark count.\n * Any previously registered callback is cleared. This new callback will\n * be cleared once it has been fired, or when the channel is closed or aborted.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.notifyNonAckedMessageCount =\n    goog.abstractMethod;\n\n\n/**\n * Experimental API.\n *\n * This method registers a callback to handle the commit request sent\n * by the server. Commit protocol spec:\n * https://github.com/bidiweb/webchannel/blob/master/commit.md\n *\n * This is not yet implemented.\n *\n * @param {function(!Object)} callback The callback will take an opaque\n * commitId which needs be passed back to the server when an ack-commit\n * response is generated by the client application, via ackCommit().\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.onCommit = goog.abstractMethod;\n\n\n/**\n * Experimental API.\n *\n * This method is used by the application to generate an ack-commit response\n * for the given commitId. Commit protocol spec:\n * https://github.com/bidiweb/webchannel/blob/master/commit.md\n *\n * This is not yet implemented.\n *\n * @param {!Object} commitId The commitId which denotes the commit request\n * from the server that needs be ack'ed.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.ackCommit = goog.abstractMethod;\n\n\n/**\n * Transport-metadata support.\n *\n * TODO: getLastResponseHeaders (only for non-200 status)\n * TODO: getInitStatusCode   (handshake)\n * TODO: getInitResponseHeaders  (handshake)\n *\n * Note that response headers from client-initiated close (abort) are not\n * available.\n *\n * In future when client-initiated half-close is supported, its response status\n * will be available via this API.\n *\n * @return {number} The non-200 HTTP status code received that causes the\n * channel to be aborted.\n */\ngoog.net.WebChannel.RuntimeProperties.prototype.getLastStatusCode =\n    goog.abstractMethod;\n\n\n/**\n * Enum to indicate the current recovery state.\n *\n * @enum {string}\n */\ngoog.net.WebChannel.FailureRecovery.State = {\n  /** Initial state. */\n  INIT: 'init',\n\n  /** Once a failure has been detected. */\n  FAILED: 'failed',\n\n  /**\n   * Once a recovery operation has been issued, e.g. a new request to resume\n   * communication.\n   */\n  RECOVERING: 'recovering',\n\n  /** The channel has been closed.  */\n  CLOSED: 'closed'\n};\n\n\n/**\n * Enum to indicate different failure conditions as detected by the webchannel\n * runtime.\n *\n * This enum is to be used only between the runtime and FailureRecovery module,\n * and new states are expected to be introduced in future.\n *\n * @enum {string}\n */\ngoog.net.WebChannel.FailureRecovery.FailureCondition = {\n  /**\n   * The HTTP response returned a non-successful http status code.\n   */\n  HTTP_ERROR: 'http_error',\n\n  /**\n   * The request was aborted.\n   */\n  ABORT: 'abort',\n\n  /**\n   * The request timed out.\n   */\n  TIMEOUT: 'timeout',\n\n  /**\n   * Exception was thrown while processing the request/response.\n   */\n  EXCEPTION: 'exception'\n};\n\n\n/**\n * @return {!goog.net.WebChannel.FailureRecovery.State} the current state,\n * mainly for debugging use.\n */\ngoog.net.WebChannel.FailureRecovery.prototype.getState = goog.abstractMethod;\n\n\n/**\n * This method is for WebChannel runtime to set the current failure condition\n * and to provide a callback for the algorithm to signal to the runtime\n * when it is time to issue a recovery operation, e.g. a new request to the\n * server.\n *\n * Supported transitions include:\n *   INIT->FAILED\n *   FAILED->FAILED (re-entry ok)\n *   RECOVERY->FAILED.\n *\n * Ignored if state == CLOSED.\n *\n * Advanced implementations are expected to track all the state transitions\n * and their timestamps for monitoring purposes.\n *\n * @param {!goog.net.WebChannel.FailureRecovery.FailureCondition} failure The\n * new failure condition generated by the WebChannel runtime.\n * @param {!Function} operation The callback function to the WebChannel\n * runtime to issue a recovery operation, e.g. a new request. E.g. the default\n * recovery algorithm will issue timeout-based recovery operations.\n * Post-condition for the callback: state transition to RECOVERING.\n *\n * @return {!goog.net.WebChannel.FailureRecovery.State} The updated state\n * as decided by the failure recovery module. Upon a recoverable failure event,\n * the state is transitioned to RECOVERING; or the state is transitioned to\n * FAILED which indicates a fail-fast decision for the runtime to execute.\n */\ngoog.net.WebChannel.FailureRecovery.prototype.setFailure = goog.abstractMethod;\n\n\n/**\n * The Webchannel runtime needs call this method when webchannel is closed or\n * aborted.\n *\n * Once the instance is closed, any access to the instance will be a no-op.\n */\ngoog.net.WebChannel.FailureRecovery.prototype.close = goog.abstractMethod;\n\n\n/**\n * A request header to indicate to the server the messaging protocol\n * each HTTP message is speaking.\n *\n * @type {string}\n */\ngoog.net.WebChannel.X_CLIENT_PROTOCOL = 'X-Client-Protocol';\n\n\n/**\n * The value for x-client-protocol when the messaging protocol is WebChannel.\n *\n * @type {string}\n */\ngoog.net.WebChannel.X_CLIENT_PROTOCOL_WEB_CHANNEL = 'webchannel';\n\n\n/**\n * A response header for the server to signal the wire-protocol that\n * the browser establishes with the server (or proxy), e.g. \"spdy\" (aka http/2)\n * \"quic\". This information avoids the need to use private APIs to decide if\n * HTTP requests are multiplexed etc.\n *\n * @type {string}\n */\ngoog.net.WebChannel.X_CLIENT_WIRE_PROTOCOL = 'X-Client-Wire-Protocol';\n\n\n/**\n * A response header for the server to send back the HTTP session id as part of\n * the initial handshake. The value of the HTTP session id is opaque to the\n * WebChannel protocol.\n *\n * @type {string}\n */\ngoog.net.WebChannel.X_HTTP_SESSION_ID = 'X-HTTP-Session-Id';\n\n\n/**\n * A response header for the server to send back any initial response data as a\n * header to avoid any possible buffering by an intermediary, which may\n * be undesired during the handshake.\n *\n * @type {string}\n */\ngoog.net.WebChannel.X_HTTP_INITIAL_RESPONSE = 'X-HTTP-Initial-Response';\n\n\n/**\n * A request header for specifying the content-type of WebChannel messages,\n * e.g. application-defined JSON encoding styles. Currently this header\n * is sent by the client via initMessageHeaders when the channel is opened.\n *\n * @type {string}\n */\ngoog.net.WebChannel.X_WEBCHANNEL_CONTENT_TYPE = 'X-WebChannel-Content-Type';\n\n\n/**\n * A request header for specifying the client profile in order to apply\n * customized config params on the server side, e.g. timeouts.\n *\n * @type {string}\n */\ngoog.net.WebChannel.X_WEBCHANNEL_CLIENT_PROFILE = 'X-WebChannel-Client-Profile';\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Low level handling of XMLHttpRequest.\n */\n\ngoog.provide('goog.net.DefaultXmlHttpFactory');\ngoog.provide('goog.net.XmlHttp');\ngoog.provide('goog.net.XmlHttp.OptionType');\ngoog.provide('goog.net.XmlHttp.ReadyState');\ngoog.provide('goog.net.XmlHttpDefines');\n\ngoog.require('goog.asserts');\ngoog.require('goog.net.WrapperXmlHttpFactory');\ngoog.require('goog.net.XmlHttpFactory');\ngoog.requireType('goog.net.XhrLike');\n\n\n/**\n * Static class for creating XMLHttpRequest objects.\n * @return {!goog.net.XhrLike.OrNative} A new XMLHttpRequest object.\n */\ngoog.net.XmlHttp = function() {\n  'use strict';\n  return goog.net.XmlHttp.factory_.createInstance();\n};\n\n\n/**\n * @define {boolean} Whether to assume XMLHttpRequest exists. Setting this to\n *     true bypasses the ActiveX probing code.\n * NOTE(ruilopes): Due to the way JSCompiler works, this define *will not* strip\n * out the ActiveX probing code from binaries.  To achieve this, use\n * `goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR` instead.\n * TODO(ruilopes): Collapse both defines.\n */\ngoog.net.XmlHttp.ASSUME_NATIVE_XHR =\n    goog.define('goog.net.XmlHttp.ASSUME_NATIVE_XHR', false);\n\n\n/** @const */\ngoog.net.XmlHttpDefines = {};\n\n\n/**\n * @define {boolean} Whether to assume XMLHttpRequest exists. Setting this to\n *     true eliminates the ActiveX probing code.\n */\ngoog.net.XmlHttpDefines.ASSUME_NATIVE_XHR =\n    goog.define('goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR', false);\n\n\n/**\n * Gets the options to use with the XMLHttpRequest objects obtained using\n * the static methods.\n * @return {Object} The options.\n */\ngoog.net.XmlHttp.getOptions = function() {\n  'use strict';\n  return goog.net.XmlHttp.factory_.getOptions();\n};\n\n\n/**\n * Type of options that an XmlHttp object can have.\n * @enum {number}\n */\ngoog.net.XmlHttp.OptionType = {\n  /**\n   * Whether a goog.nullFunction should be used to clear the onreadystatechange\n   * handler instead of null.\n   */\n  USE_NULL_FUNCTION: 0,\n\n  /**\n   * NOTE(user): In IE if send() errors on a *local* request the readystate\n   * is still changed to COMPLETE.  We need to ignore it and allow the\n   * try/catch around send() to pick up the error.\n   */\n  LOCAL_REQUEST_ERROR: 1,\n};\n\n\n/**\n * Status constants for XMLHTTP, matches:\n * https://msdn.microsoft.com/en-us/library/ms534361(v=vs.85).aspx\n * @enum {number}\n */\ngoog.net.XmlHttp.ReadyState = {\n  /**\n   * Constant for when xmlhttprequest.readyState is uninitialized\n   */\n  UNINITIALIZED: 0,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is loading.\n   */\n  LOADING: 1,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is loaded.\n   */\n  LOADED: 2,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is in an interactive state.\n   */\n  INTERACTIVE: 3,\n\n  /**\n   * Constant for when xmlhttprequest.readyState is completed\n   */\n  COMPLETE: 4,\n};\n\n\n/**\n * The global factory instance for creating XMLHttpRequest objects.\n * @type {goog.net.XmlHttpFactory}\n * @private\n */\ngoog.net.XmlHttp.factory_;\n\n\n/**\n * Sets the factories for creating XMLHttpRequest objects and their options.\n * @param {Function} factory The factory for XMLHttpRequest objects.\n * @param {Function} optionsFactory The factory for options.\n * @deprecated Use setGlobalFactory instead.\n */\ngoog.net.XmlHttp.setFactory = function(factory, optionsFactory) {\n  'use strict';\n  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(\n      goog.asserts.assert(factory), goog.asserts.assert(optionsFactory)));\n};\n\n\n/**\n * Sets the global factory object.\n * @param {!goog.net.XmlHttpFactory} factory New global factory object.\n */\ngoog.net.XmlHttp.setGlobalFactory = function(factory) {\n  'use strict';\n  goog.net.XmlHttp.factory_ = factory;\n};\n\n\n\n/**\n * Default factory to use when creating xhr objects.  You probably shouldn't be\n * instantiating this directly, but rather using it via goog.net.XmlHttp.\n * @extends {goog.net.XmlHttpFactory}\n * @constructor\n */\ngoog.net.DefaultXmlHttpFactory = function() {\n  'use strict';\n  goog.net.XmlHttpFactory.call(this);\n};\ngoog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);\n\n\n/** @override */\ngoog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {\n  'use strict';\n  const progId = this.getProgId_();\n  if (progId) {\n    return new ActiveXObject(progId);\n  } else {\n    return new XMLHttpRequest();\n  }\n};\n\n\n/** @override */\ngoog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {\n  'use strict';\n  const progId = this.getProgId_();\n  const options = {};\n  if (progId) {\n    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;\n    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true;\n  }\n  return options;\n};\n\n\n/**\n * The ActiveX PROG ID string to use to create xhr's in IE. Lazily initialized.\n * @type {string|undefined}\n * @private\n */\ngoog.net.DefaultXmlHttpFactory.prototype.ieProgId_;\n\n\n/**\n * Initialize the private state used by other functions.\n * @return {string} The ActiveX PROG ID string to use to create xhr's in IE.\n * @private\n */\ngoog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {\n  'use strict';\n  if (goog.net.XmlHttp.ASSUME_NATIVE_XHR ||\n      goog.net.XmlHttpDefines.ASSUME_NATIVE_XHR) {\n    return '';\n  }\n\n  // The following blog post describes what PROG IDs to use to create the\n  // XMLHTTP object in Internet Explorer:\n  // http://blogs.msdn.com/xmlteam/archive/2006/10/23/using-the-right-version-of-msxml-in-internet-explorer.aspx\n  // However we do not (yet) fully trust that this will be OK for old versions\n  // of IE on Win9x so we therefore keep the last 2.\n  if (!this.ieProgId_ && typeof XMLHttpRequest == 'undefined' &&\n      typeof ActiveXObject != 'undefined') {\n    // Candidate Active X types.\n    const ACTIVE_X_IDENTS = [\n      'MSXML2.XMLHTTP.6.0',\n      'MSXML2.XMLHTTP.3.0',\n      'MSXML2.XMLHTTP',\n      'Microsoft.XMLHTTP',\n    ];\n    for (let i = 0; i < ACTIVE_X_IDENTS.length; i++) {\n      const candidate = ACTIVE_X_IDENTS[i];\n\n      try {\n        new ActiveXObject(candidate);\n        // NOTE(user): cannot assign progid and return candidate in one line\n        // because JSCompiler complaings: BUG 658126\n        this.ieProgId_ = candidate;\n        return candidate;\n      } catch (e) {\n        // do nothing; try next choice\n      }\n    }\n\n    // couldn't find any matches\n    throw new Error(\n        'Could not create ActiveXObject. ActiveX might be disabled,' +\n        ' or MSXML might not be installed');\n  }\n\n  return /** @type {string} */ (this.ieProgId_);\n};\n\n\n// Set the global factory to an instance of the default factory.\ngoog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory());\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Definition of the ChannelRequest class. The request\n * object encapsulates the logic for making a single request, either for the\n * forward channel, back channel, or test channel, to the server. It contains\n * the logic for the two types of transports we use:\n * XMLHTTP and Image request. It provides timeout detection. More transports\n * to be added in future, such as Fetch, WebSocket.\n *\n */\n\n\ngoog.provide('goog.labs.net.webChannel.ChannelRequest');\n\ngoog.require('goog.Timer');\ngoog.require('goog.asserts');\ngoog.require('goog.async.Throttle');\ngoog.require('goog.dispose');\ngoog.require('goog.events.EventHandler');\ngoog.require('goog.labs.net.webChannel.Channel');\ngoog.require('goog.labs.net.webChannel.WebChannelDebug');\ngoog.require('goog.labs.net.webChannel.environment');\ngoog.require('goog.labs.net.webChannel.requestStats');\ngoog.require('goog.net.ErrorCode');\ngoog.require('goog.net.EventType');\ngoog.require('goog.net.WebChannel');\ngoog.require('goog.net.XmlHttp');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.userAgent');\ngoog.requireType('goog.Uri');\ngoog.requireType('goog.events.Event');\ngoog.requireType('goog.labs.net.webChannel.Wire.QueuedMap');\ngoog.requireType('goog.net.XhrIo');\n\n\n\n/**\n * A new ChannelRequest is created for each request to the server.\n *\n * @param {goog.labs.net.webChannel.Channel} channel\n *     The channel that owns this request.\n * @param {goog.labs.net.webChannel.WebChannelDebug} channelDebug A\n *     WebChannelDebug to use for logging.\n * @param {string=} opt_sessionId The session id for the channel.\n * @param {string|number=} opt_requestId The request id for this request.\n * @param {number=} opt_retryId The retry id for this request.\n * @constructor\n * @struct\n * @final\n */\ngoog.labs.net.webChannel.ChannelRequest = function(\n    channel, channelDebug, opt_sessionId, opt_requestId, opt_retryId) {\n  'use strict';\n  /**\n   * The channel object that owns the request.\n   * @private {goog.labs.net.webChannel.Channel}\n   */\n  this.channel_ = channel;\n\n  /**\n   * The channel debug to use for logging\n   * @private {goog.labs.net.webChannel.WebChannelDebug}\n   */\n  this.channelDebug_ = channelDebug;\n\n  /**\n   * The Session ID for the channel.\n   * @private {string|undefined}\n   */\n  this.sid_ = opt_sessionId;\n\n  /**\n   * The RID (request ID) for the request.\n   * @private {string|number|undefined}\n   */\n  this.rid_ = opt_requestId;\n\n  /**\n   * The attempt number of the current request.\n   * @private {number}\n   */\n  this.retryId_ = opt_retryId || 1;\n\n  /**\n   * An object to keep track of the channel request event listeners.\n   * @private {!goog.events.EventHandler<\n   *     !goog.labs.net.webChannel.ChannelRequest>}\n   */\n  this.eventHandler_ = new goog.events.EventHandler(this);\n\n  /**\n   * The timeout in ms before failing the request.\n   * @private {number}\n   */\n  this.timeout_ = goog.labs.net.webChannel.ChannelRequest.TIMEOUT_MS_;\n\n  /**\n   * A timer for polling responseText in browsers that don't fire\n   * onreadystatechange during incremental loading of responseText.\n   * @private {goog.Timer}\n   */\n  this.pollingTimer_ =\n      new goog.Timer(goog.labs.net.webChannel.environment.getPollingInterval());\n\n  /**\n   * Extra HTTP headers to add to all the requests sent to the server.\n   * @private {?Object}\n   */\n  this.extraHeaders_ = null;\n\n\n  /**\n   * Whether the request was successful. This is only set to true after the\n   * request successfully completes.\n   * @private {boolean}\n   */\n  this.successful_ = false;\n\n\n  /**\n   * The TimerID of the timer used to detect if the request has timed-out.\n   * @type {?number}\n   * @private\n   */\n  this.watchDogTimerId_ = null;\n\n  /**\n   * The time in the future when the request will timeout.\n   * @private {?number}\n   */\n  this.watchDogTimeoutTime_ = null;\n\n  /**\n   * The time the request started.\n   * @private {?number}\n   */\n  this.requestStartTime_ = null;\n\n  /**\n   * The type of request (XMLHTTP, IMG)\n   * @private {?number}\n   */\n  this.type_ = null;\n\n  /**\n   * The base Uri for the request. The includes all the parameters except the\n   * one that indicates the retry number.\n   * @private {?goog.Uri}\n   */\n  this.baseUri_ = null;\n\n  /**\n   * The request Uri that was actually used for the most recent request attempt.\n   * @private {?goog.Uri}\n   */\n  this.requestUri_ = null;\n\n  /**\n   * The post data, if the request is a post.\n   * @private {?string}\n   */\n  this.postData_ = null;\n\n  /**\n   * An array of pending messages that we have either received a non-successful\n   * response for, or no response at all, and which therefore may or may not\n   * have been received by the server.\n   * @private {!Array<goog.labs.net.webChannel.Wire.QueuedMap>}\n   */\n  this.pendingMessages_ = [];\n\n  /**\n   * The XhrLte request if the request is using XMLHTTP\n   * @private {?goog.net.XhrIo}\n   */\n  this.xmlHttp_ = null;\n\n  /**\n   * The position of where the next unprocessed chunk starts in the response\n   * text.\n   * @private {number}\n   */\n  this.xmlHttpChunkStart_ = 0;\n\n  /**\n   * The verb (Get or Post) for the request.\n   * @private {?string}\n   */\n  this.verb_ = null;\n\n  /**\n   * The last error if the request failed.\n   * @private {?goog.labs.net.webChannel.ChannelRequest.Error}\n   */\n  this.lastError_ = null;\n\n  /**\n   * The last status code received.\n   * @private {number}\n   */\n  this.lastStatusCode_ = -1;\n\n  /**\n   * Whether the request has been cancelled due to a call to cancel.\n   * @private {boolean}\n   */\n  this.cancelled_ = false;\n\n  /**\n   * A throttle time in ms for readystatechange events for the backchannel.\n   * Useful for throttling when ready state is INTERACTIVE (partial data).\n   * If set to zero no throttle is used.\n   *\n   * See WebChannelBase.prototype.readyStateChangeThrottleMs_\n   *\n   * @private {number}\n   */\n  this.readyStateChangeThrottleMs_ = 0;\n\n  /**\n   * The throttle for readystatechange events for the current request, or null\n   * if there is none.\n   * @private {?goog.async.Throttle}\n   */\n  this.readyStateChangeThrottle_ = null;\n\n  /**\n   * Whether to the result is expected to be encoded for chunking and thus\n   * requires decoding.\n   * @private {boolean}\n   */\n  this.decodeChunks_ = false;\n\n  /**\n   * Whether to decode x-http-initial-response.\n   * @private {boolean}\n   */\n  this.decodeInitialResponse_ = false;\n\n  /**\n   * Whether x-http-initial-response has been decoded (dispatched).\n   * @private {boolean}\n   */\n  this.initialResponseDecoded_ = false;\n\n  /**\n   * Whether the first byte of response body has arrived, for a successful\n   * response.\n   * @private {boolean}\n   */\n  this.firstByteReceived_ = false;\n\n  /**\n   * The current state of fetch responses if webchannel is using WHATWG\n   * fetch/streams.\n   * @private {!goog.labs.net.webChannel.FetchResponseState}\n   */\n  this.fetchResponseState_ = new goog.labs.net.webChannel.FetchResponseState();\n};\n\n/**\n * A collection of fetch/stream properties.\n * @struct\n * @constructor\n */\ngoog.labs.net.webChannel.FetchResponseState = function() {\n  'use strict';\n  /**\n   * The TextDecoder for decoding Uint8Array responses from fetch request.\n   * @type {?goog.global.TextDecoder}\n   */\n  this.textDecoder = null;\n\n  /**\n   * The unconsumed response text from the fetch requests.\n   * @type {string}\n   */\n  this.responseBuffer = '';\n\n  /**\n   * Whether or not the response body has arrived.\n   * @type {boolean}\n   */\n  this.responseArrivedForFetch = false;\n};\n\n\ngoog.scope(function() {\n'use strict';\nconst WebChannel = goog.net.WebChannel;\nconst Channel = goog.labs.net.webChannel.Channel;\nconst ChannelRequest = goog.labs.net.webChannel.ChannelRequest;\nconst FetchResponseState = goog.labs.net.webChannel.FetchResponseState;\nconst requestStats = goog.labs.net.webChannel.requestStats;\nconst WebChannelDebug = goog.labs.net.webChannel.WebChannelDebug;\nconst environment = goog.labs.net.webChannel.environment;\n\n/**\n * Default timeout in MS for a request. The server must return data within this\n * time limit for the request to not timeout.\n * @private {number}\n */\nChannelRequest.TIMEOUT_MS_ = 45 * 1000;\n\n\n/**\n * Enum for channel requests type\n * @enum {number}\n * @private\n */\nChannelRequest.Type_ = {\n  /**\n   * XMLHTTP requests.\n   */\n  XML_HTTP: 1,\n\n  /**\n   * IMG requests.\n   */\n  CLOSE_REQUEST: 2\n};\n\n\n/**\n * Enum type for identifying an error.\n * @enum {number}\n */\nChannelRequest.Error = {\n  /**\n   * Errors due to a non-200 status code.\n   */\n  STATUS: 0,\n\n  /**\n   * Errors due to no data being returned.\n   */\n  NO_DATA: 1,\n\n  /**\n   * Errors due to a timeout.\n   */\n  TIMEOUT: 2,\n\n  /**\n   * Errors due to the server returning an unknown.\n   */\n  UNKNOWN_SESSION_ID: 3,\n\n  /**\n   * Errors due to bad data being received.\n   */\n  BAD_DATA: 4,\n\n  /**\n   * Errors due to the handler throwing an exception.\n   */\n  HANDLER_EXCEPTION: 5,\n\n  /**\n   * The browser declared itself offline during the request.\n   */\n  BROWSER_OFFLINE: 6\n};\n\n\n/**\n * Returns a useful error string for debugging based on the specified error\n * code.\n * @param {?ChannelRequest.Error} errorCode The error code.\n * @param {number} statusCode The HTTP status code.\n * @return {string} The error string for the given code combination.\n */\nChannelRequest.errorStringFromCode = function(errorCode, statusCode) {\n  'use strict';\n  switch (errorCode) {\n    case ChannelRequest.Error.STATUS:\n      return 'Non-200 return code (' + statusCode + ')';\n    case ChannelRequest.Error.NO_DATA:\n      return 'XMLHTTP failure (no data)';\n    case ChannelRequest.Error.TIMEOUT:\n      return 'HttpConnection timeout';\n    default:\n      return 'Unknown error';\n  }\n};\n\n\n/**\n * Sentinel value used to indicate an invalid chunk in a multi-chunk response.\n * @private {!Object}\n */\nChannelRequest.INVALID_CHUNK_ = {};\n\n\n/**\n * Sentinel value used to indicate an incomplete chunk in a multi-chunk\n * response.\n * @private {!Object}\n */\nChannelRequest.INCOMPLETE_CHUNK_ = {};\n\n\n/**\n * Returns whether XHR streaming is supported on this browser.\n *\n * @return {boolean} Whether XHR streaming is supported.\n * @see http://code.google.com/p/closure-library/issues/detail?id=346\n */\nChannelRequest.supportsXhrStreaming = function() {\n  'use strict';\n  return !goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(10);\n};\n\n\n/**\n * Sets extra HTTP headers to add to all the requests sent to the server.\n *\n * @param {Object} extraHeaders The HTTP headers.\n */\nChannelRequest.prototype.setExtraHeaders = function(extraHeaders) {\n  'use strict';\n  this.extraHeaders_ = extraHeaders;\n};\n\n\n/**\n * Overrides the default HTTP method.\n *\n * @param {string} verb The HTTP method\n */\nChannelRequest.prototype.setVerb = function(verb) {\n  'use strict';\n  this.verb_ = verb;\n};\n\n\n/**\n * Sets the timeout for a request\n *\n * @param {number} timeout   The timeout in MS for when we fail the request.\n */\nChannelRequest.prototype.setTimeout = function(timeout) {\n  'use strict';\n  this.timeout_ = timeout;\n};\n\n\n/**\n * Sets the throttle for handling onreadystatechange events for the request.\n *\n * @param {number} throttle The throttle in ms.  A value of zero indicates\n *     no throttle.\n */\nChannelRequest.prototype.setReadyStateChangeThrottle = function(throttle) {\n  'use strict';\n  this.readyStateChangeThrottleMs_ = throttle;\n};\n\n\n/**\n * Sets the pending messages that this request is handling.\n *\n * @param {!Array<goog.labs.net.webChannel.Wire.QueuedMap>} pendingMessages\n *     The pending messages for this request.\n */\nChannelRequest.prototype.setPendingMessages = function(pendingMessages) {\n  'use strict';\n  this.pendingMessages_ = pendingMessages;\n};\n\n\n/**\n * Gets the pending messages that this request is handling, in case of a retry.\n *\n * @return {!Array<goog.labs.net.webChannel.Wire.QueuedMap>} The pending\n *     messages for this request.\n */\nChannelRequest.prototype.getPendingMessages = function() {\n  'use strict';\n  return this.pendingMessages_;\n};\n\n\n/**\n * Uses XMLHTTP to send an HTTP POST to the server.\n *\n * @param {goog.Uri} uri  The uri of the request.\n * @param {?string} postData  The data for the post body.\n * @param {boolean} decodeChunks  Whether to the result is expected to be\n *     encoded for chunking and thus requires decoding.\n */\nChannelRequest.prototype.xmlHttpPost = function(uri, postData, decodeChunks) {\n  'use strict';\n  this.type_ = ChannelRequest.Type_.XML_HTTP;\n  this.baseUri_ = uri.clone().makeUnique();\n  this.postData_ = postData;\n  this.decodeChunks_ = decodeChunks;\n  this.sendXmlHttp_(null /* hostPrefix */);\n};\n\n\n/**\n * Uses XMLHTTP to send an HTTP GET to the server.\n *\n * @param {goog.Uri} uri  The uri of the request.\n * @param {boolean} decodeChunks  Whether to the result is expected to be\n *     encoded for chunking and thus requires decoding.\n * @param {?string} hostPrefix  The host prefix, if we might be using a\n *     secondary domain.  Note that it should also be in the URL, adding this\n *     won't cause it to be added to the URL.\n */\nChannelRequest.prototype.xmlHttpGet = function(uri, decodeChunks, hostPrefix) {\n  'use strict';\n  this.type_ = ChannelRequest.Type_.XML_HTTP;\n  this.baseUri_ = uri.clone().makeUnique();\n  this.postData_ = null;\n  this.decodeChunks_ = decodeChunks;\n\n  this.sendXmlHttp_(hostPrefix);\n};\n\n\n/**\n * Sends a request via XMLHTTP according to the current state of the request\n * object.\n *\n * @param {?string} hostPrefix The host prefix, if we might be using a secondary\n *     domain.\n * @private\n */\nChannelRequest.prototype.sendXmlHttp_ = function(hostPrefix) {\n  'use strict';\n  this.requestStartTime_ = Date.now();\n  this.ensureWatchDogTimer_();\n\n  // clone the base URI to create the request URI. The request uri has the\n  // attempt number as a parameter which helps in debugging.\n  this.requestUri_ = this.baseUri_.clone();\n  this.requestUri_.setParameterValues('t', this.retryId_);\n\n  // send the request either as a POST or GET\n  this.xmlHttpChunkStart_ = 0;\n  const useSecondaryDomains = this.channel_.shouldUseSecondaryDomains();\n  this.fetchResponseState_ = new FetchResponseState();\n  // If the request is a GET request, start a backchannel to transfer streaming\n  // data. Note that WebChannel GET request can also be used for closing the\n  // channel as in method ChannelRequest#sendCloseRequest.\n  // The second parameter of Channel#createXhrIo is JS only.\n  this.xmlHttp_ = this.channel_.createXhrIo(\n      useSecondaryDomains ? hostPrefix : null, !this.postData_);\n\n  if (this.readyStateChangeThrottleMs_ > 0) {\n    this.readyStateChangeThrottle_ = new goog.async.Throttle(\n        goog.bind(this.xmlHttpHandler_, this, this.xmlHttp_),\n        this.readyStateChangeThrottleMs_);\n  }\n\n  this.eventHandler_.listen(\n      this.xmlHttp_, goog.net.EventType.READY_STATE_CHANGE,\n      this.readyStateChangeHandler_);\n\n  const headers =\n      this.extraHeaders_ ? goog.object.clone(this.extraHeaders_) : {};\n  if (this.postData_) {\n    if (!this.verb_) {\n      this.verb_ = 'POST';\n    }\n    headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    this.xmlHttp_.send(this.requestUri_, this.verb_, this.postData_, headers);\n  } else {\n    this.verb_ = 'GET';\n    this.xmlHttp_.send(this.requestUri_, this.verb_, null, headers);\n  }\n  requestStats.notifyServerReachabilityEvent(\n      requestStats.ServerReachability.REQUEST_MADE);\n  this.channelDebug_.xmlHttpChannelRequest(\n      this.verb_, this.requestUri_, this.rid_, this.retryId_, this.postData_);\n};\n\n\n/**\n * Handles a readystatechange event.\n * @param {goog.events.Event} evt The event.\n * @private\n */\nChannelRequest.prototype.readyStateChangeHandler_ = function(evt) {\n  'use strict';\n  const xhr = /** @type {goog.net.XhrIo} */ (evt.target);\n  const throttle = this.readyStateChangeThrottle_;\n  if (throttle &&\n      xhr.getReadyState() == goog.net.XmlHttp.ReadyState.INTERACTIVE) {\n    // Only throttle in the partial data case.\n    this.channelDebug_.debug('Throttling readystatechange.');\n    throttle.fire();\n  } else {\n    // If we haven't throttled, just handle response directly.\n    this.xmlHttpHandler_(xhr);\n  }\n};\n\n\n/**\n * XmlHttp handler\n * @param {goog.net.XhrIo} xmlhttp The XhrIo object for the current request.\n * @private\n */\nChannelRequest.prototype.xmlHttpHandler_ = function(xmlhttp) {\n  'use strict';\n  requestStats.onStartExecution();\n\n  try {\n    if (xmlhttp == this.xmlHttp_) {\n      this.onXmlHttpReadyStateChanged_();\n    } else {\n      this.channelDebug_.warning(\n          'Called back with an ' +\n          'unexpected xmlhttp');\n    }\n  } catch (ex) {\n    this.channelDebug_.debug('Failed call to OnXmlHttpReadyStateChanged_');\n    if (this.hasResponseBody_()) {\n      const channelRequest = this;\n      this.channelDebug_.dumpException(ex, function() {\n        'use strict';\n        return 'ResponseText: ' + channelRequest.xmlHttp_.getResponseText();\n      });\n    } else {\n      this.channelDebug_.dumpException(ex, 'No response text');\n    }\n  } finally {\n    requestStats.onEndExecution();\n  }\n};\n\n\n/**\n * Called by the readystate handler for XMLHTTP requests.\n *\n * @private\n */\nChannelRequest.prototype.onXmlHttpReadyStateChanged_ = function() {\n  'use strict';\n  const readyState = this.xmlHttp_.getReadyState();\n  const errorCode = this.xmlHttp_.getLastErrorCode();\n  const statusCode = this.xmlHttp_.getStatus();\n\n  // we get partial results in browsers that support ready state interactive.\n  // We also make sure that getResponseText is not null in interactive mode\n  // before we continue.\n  if (readyState < goog.net.XmlHttp.ReadyState.INTERACTIVE ||\n      (readyState == goog.net.XmlHttp.ReadyState.INTERACTIVE &&\n       !environment.isPollingRequired() &&  // otherwise, go on to startPolling\n       !this.hasResponseBody_())) {\n    return;  // not yet ready\n  }\n\n  // Dispatch any appropriate network events.\n  if (!this.cancelled_ && readyState == goog.net.XmlHttp.ReadyState.COMPLETE &&\n      errorCode != goog.net.ErrorCode.ABORT) {\n    // Pretty conservative, these are the only known scenarios which we'd\n    // consider indicative of a truly non-functional network connection.\n    if (errorCode == goog.net.ErrorCode.TIMEOUT || statusCode <= 0) {\n      requestStats.notifyServerReachabilityEvent(\n          requestStats.ServerReachability.REQUEST_FAILED);\n    } else {\n      requestStats.notifyServerReachabilityEvent(\n          requestStats.ServerReachability.REQUEST_SUCCEEDED);\n    }\n  }\n\n  // got some data so cancel the watchdog timer\n  this.cancelWatchDogTimer_();\n\n  const status = this.xmlHttp_.getStatus();\n  this.lastStatusCode_ = status;\n  const responseText = this.decodeXmlHttpResponse_();\n\n  if (!this.hasResponseBody_()) {\n    const channelRequest = this;\n    this.channelDebug_.debug(function() {\n      'use strict';\n      return 'No response text for uri ' + channelRequest.requestUri_ +\n          ' status ' + status;\n    });\n  }\n  this.successful_ = (status == 200);\n\n  this.channelDebug_.xmlHttpChannelResponseMetaData(\n      /** @type {string} */ (this.verb_), this.requestUri_, this.rid_,\n      this.retryId_, readyState, status);\n\n  if (!this.successful_) {\n    if (status == 400 && responseText.indexOf('Unknown SID') > 0) {\n      // the server error string will include 'Unknown SID' which indicates the\n      // server doesn't know about the session (maybe it got restarted, maybe\n      // the user got moved to another server, etc.,). Handlers can special\n      // case this error\n      this.lastError_ = ChannelRequest.Error.UNKNOWN_SESSION_ID;\n      requestStats.notifyStatEvent(\n          requestStats.Stat.REQUEST_UNKNOWN_SESSION_ID);\n      this.channelDebug_.warning('XMLHTTP Unknown SID (' + this.rid_ + ')');\n    } else {\n      this.lastError_ = ChannelRequest.Error.STATUS;\n      requestStats.notifyStatEvent(requestStats.Stat.REQUEST_BAD_STATUS);\n      this.channelDebug_.warning(\n          'XMLHTTP Bad status ' + status + ' (' + this.rid_ + ')');\n    }\n    this.cleanup_();\n    this.dispatchFailure_();\n    return;\n  }\n\n  if (this.shouldCheckInitialResponse_()) {\n    const initialResponse = this.getInitialResponse_();\n    if (initialResponse) {\n      this.channelDebug_.xmlHttpChannelResponseText(\n          this.rid_, initialResponse,\n          'Initial handshake response via ' +\n              WebChannel.X_HTTP_INITIAL_RESPONSE);\n      this.initialResponseDecoded_ = true;\n      this.safeOnRequestData_(initialResponse);\n    } else {\n      this.successful_ = false;\n      this.lastError_ = ChannelRequest.Error.UNKNOWN_SESSION_ID;  // fail-fast\n      requestStats.notifyStatEvent(\n          requestStats.Stat.REQUEST_UNKNOWN_SESSION_ID);\n      this.channelDebug_.warning(\n          'XMLHTTP Missing X_HTTP_INITIAL_RESPONSE' +\n          ' (' + this.rid_ + ')');\n      this.cleanup_();\n      this.dispatchFailure_();\n      return;\n    }\n  }\n\n  if (this.decodeChunks_) {\n    this.decodeNextChunks_(readyState, responseText);\n    if (environment.isPollingRequired() && this.successful_ &&\n        readyState == goog.net.XmlHttp.ReadyState.INTERACTIVE) {\n      this.startPolling_();\n    }\n  } else {\n    this.channelDebug_.xmlHttpChannelResponseText(\n        this.rid_, responseText, null);\n    this.safeOnRequestData_(responseText);\n  }\n\n  if (readyState == goog.net.XmlHttp.ReadyState.COMPLETE) {\n    this.cleanup_();\n  }\n\n  if (!this.successful_) {\n    return;\n  }\n\n  if (!this.cancelled_) {\n    if (readyState == goog.net.XmlHttp.ReadyState.COMPLETE) {\n      this.channel_.onRequestComplete(this);\n    } else {\n      // The default is false, the result from this callback shouldn't carry\n      // over to the next callback, otherwise the request looks successful if\n      // the watchdog timer gets called\n      this.successful_ = false;\n      this.ensureWatchDogTimer_();\n    }\n  }\n};\n\n\n/**\n * Whether we need check the initial-response header that is sent during the\n * fast handshake.\n *\n * @return {boolean} true if the initial-response header is yet to be processed.\n * @private\n */\nChannelRequest.prototype.shouldCheckInitialResponse_ = function() {\n  'use strict';\n  return this.decodeInitialResponse_ && !this.initialResponseDecoded_;\n};\n\n\n/**\n * Queries the initial response header that is sent during the handshake.\n *\n * @return {?string} The non-empty header value or null.\n * @private\n */\nChannelRequest.prototype.getInitialResponse_ = function() {\n  'use strict';\n  if (this.xmlHttp_) {\n    const value = this.xmlHttp_.getStreamingResponseHeader(\n        WebChannel.X_HTTP_INITIAL_RESPONSE);\n    if (value && !goog.string.isEmptyOrWhitespace(value)) {\n      return value;\n    }\n  }\n\n  return null;\n};\n\n\n/**\n * Check if the initial response header has been handled.\n *\n * @return {boolean} true if X_HTTP_INITIAL_RESPONSE has been handled.\n */\nChannelRequest.prototype.isInitialResponseDecoded = function() {\n  'use strict';\n  return this.initialResponseDecoded_;\n};\n\n\n/**\n * Decodes X_HTTP_INITIAL_RESPONSE if present.\n */\nChannelRequest.prototype.setDecodeInitialResponse = function() {\n  'use strict';\n  this.decodeInitialResponse_ = true;\n};\n\n\n\n/**\n * Decodes the responses from XhrIo object.\n * @returns {string} responseText\n * @private\n */\nChannelRequest.prototype.decodeXmlHttpResponse_ = function() {\n  'use strict';\n  if (!this.useFetchStreamsForResponse_()) {\n    return this.xmlHttp_.getResponseText();\n  }\n  const responseChunks =\n      /** @type {!Array<!Uint8Array>} */ (this.xmlHttp_.getResponse());\n  let responseText = '';\n  const responseLength = responseChunks.length;\n  const requestCompleted =\n      this.xmlHttp_.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE;\n  if (!this.fetchResponseState_.textDecoder) {\n    if (typeof TextDecoder === 'undefined') {\n      this.channelDebug_.severe(\n          'TextDecoder is not supported by this browser.');\n      this.cleanup_();\n      this.dispatchFailure_();\n      return '';\n    }\n    this.fetchResponseState_.textDecoder = new goog.global.TextDecoder();\n  }\n  for (let i = 0; i < responseLength; i++) {\n    this.fetchResponseState_.responseArrivedForFetch = true;\n    const isLastChunk = requestCompleted && i == responseLength - 1;\n    responseText += this.fetchResponseState_.textDecoder.decode(\n        responseChunks[i], {stream: isLastChunk});\n  }\n  responseChunks.splice(0, responseLength);\n  this.fetchResponseState_.responseBuffer += responseText;\n  this.xmlHttpChunkStart_ = 0;\n  return this.fetchResponseState_.responseBuffer;\n};\n\n\n/**\n * Whether or not the response has response body.\n * @private\n * @returns {boolean}\n */\nChannelRequest.prototype.hasResponseBody_ = function() {\n  'use strict';\n  if (!this.xmlHttp_) {\n    return false;\n  }\n  if (this.fetchResponseState_.responseArrivedForFetch) {\n    return true;\n  }\n  return !(!this.xmlHttp_.getResponseText() && !this.xmlHttp_.getResponse());\n};\n\n/**\n * Whether or not the response body is streamed.\n * @private\n * @returns {boolean}\n */\nChannelRequest.prototype.useFetchStreamsForResponse_ = function() {\n  'use strict';\n  if (!this.xmlHttp_) {\n    return false;\n  }\n  return (\n      this.verb_ == 'GET' && this.type_ != ChannelRequest.Type_.CLOSE_REQUEST &&\n      this.channel_.usesFetchStreams());\n};\n\n\n/**\n * Resets the response buffer if the saved chunk has been processed.\n * @private\n * @param {string|!Object|undefined} chunkText\n */\nChannelRequest.prototype.maybeResetBuffer_ = function(chunkText) {\n  'use strict';\n  if (this.useFetchStreamsForResponse_() &&\n      chunkText != ChannelRequest.INCOMPLETE_CHUNK_ &&\n      chunkText != ChannelRequest.INVALID_CHUNK_) {\n    this.fetchResponseState_.responseBuffer = '';\n    this.xmlHttpChunkStart_ = 0;\n  }\n};\n\n\n/**\n * Decodes the next set of available chunks in the response.\n * @param {number} readyState The value of readyState.\n * @param {string} responseText The value of responseText.\n * @private\n */\nChannelRequest.prototype.decodeNextChunks_ = function(\n    readyState, responseText) {\n  'use strict';\n  let decodeNextChunksSuccessful = true;\n\n  let chunkText;\n  while (!this.cancelled_ && this.xmlHttpChunkStart_ < responseText.length) {\n    chunkText = this.getNextChunk_(responseText);\n    if (chunkText == ChannelRequest.INCOMPLETE_CHUNK_) {\n      if (readyState == goog.net.XmlHttp.ReadyState.COMPLETE) {\n        // should have consumed entire response when the request is done\n        this.lastError_ = ChannelRequest.Error.BAD_DATA;\n        requestStats.notifyStatEvent(requestStats.Stat.REQUEST_INCOMPLETE_DATA);\n        decodeNextChunksSuccessful = false;\n      }\n      this.channelDebug_.xmlHttpChannelResponseText(\n          this.rid_, null, '[Incomplete Response]');\n      break;\n    } else if (chunkText == ChannelRequest.INVALID_CHUNK_) {\n      this.lastError_ = ChannelRequest.Error.BAD_DATA;\n      requestStats.notifyStatEvent(requestStats.Stat.REQUEST_BAD_DATA);\n      this.channelDebug_.xmlHttpChannelResponseText(\n          this.rid_, responseText, '[Invalid Chunk]');\n      decodeNextChunksSuccessful = false;\n      break;\n    } else {\n      this.channelDebug_.xmlHttpChannelResponseText(\n          this.rid_, /** @type {string} */ (chunkText), null);\n      this.safeOnRequestData_(/** @type {string} */ (chunkText));\n    }\n  }\n\n  this.maybeResetBuffer_(chunkText);\n\n  if (readyState == goog.net.XmlHttp.ReadyState.COMPLETE &&\n      responseText.length == 0 &&\n      !this.fetchResponseState_.responseArrivedForFetch) {\n    // also an error if we didn't get any response\n    this.lastError_ = ChannelRequest.Error.NO_DATA;\n    requestStats.notifyStatEvent(requestStats.Stat.REQUEST_NO_DATA);\n    decodeNextChunksSuccessful = false;\n  }\n\n  this.successful_ = this.successful_ && decodeNextChunksSuccessful;\n\n  if (!decodeNextChunksSuccessful) {\n    // malformed response - we make this trigger retry logic\n    this.channelDebug_.xmlHttpChannelResponseText(\n        this.rid_, responseText, '[Invalid Chunked Response]');\n    this.cleanup_();\n    this.dispatchFailure_();\n  } else {\n    if (responseText.length > 0 && !this.firstByteReceived_) {\n      this.firstByteReceived_ = true;\n      this.channel_.onFirstByteReceived(this, responseText);\n    }\n  }\n};\n\n\n/**\n * Polls the response for new data.\n * @private\n */\nChannelRequest.prototype.pollResponse_ = function() {\n  'use strict';\n  if (!this.xmlHttp_) {\n    return;  // already closed\n  }\n  const readyState = this.xmlHttp_.getReadyState();\n  const responseText = this.xmlHttp_.getResponseText();\n  if (this.xmlHttpChunkStart_ < responseText.length) {\n    this.cancelWatchDogTimer_();\n    this.decodeNextChunks_(readyState, responseText);\n    if (this.successful_ &&\n        readyState != goog.net.XmlHttp.ReadyState.COMPLETE) {\n      this.ensureWatchDogTimer_();\n    }\n  }\n};\n\n\n/**\n * Starts a polling interval for changes to responseText of the\n * XMLHttpRequest, for browsers that don't fire onreadystatechange\n * as data comes in incrementally.  This timer is disabled in\n * cleanup_().\n * @private\n */\nChannelRequest.prototype.startPolling_ = function() {\n  'use strict';\n  this.eventHandler_.listen(\n      this.pollingTimer_, goog.Timer.TICK, this.pollResponse_);\n  this.pollingTimer_.start();\n};\n\n\n/**\n * Returns the next chunk of a chunk-encoded response. This is not standard\n * HTTP chunked encoding because browsers don't expose the chunk boundaries to\n * the application through XMLHTTP. So we have an additional chunk encoding at\n * the application level that lets us tell where the beginning and end of\n * individual responses are so that we can only try to eval a complete JS array.\n *\n * The encoding is the size of the chunk encoded as a decimal string followed\n * by a newline followed by the data.\n *\n * @param {string} responseText The response text from the XMLHTTP response.\n * @return {string|!Object} The next chunk string or a sentinel object\n *                         indicating a special condition.\n * @private\n */\nChannelRequest.prototype.getNextChunk_ = function(responseText) {\n  'use strict';\n  const sizeStartIndex = this.xmlHttpChunkStart_;\n  const sizeEndIndex = responseText.indexOf('\\n', sizeStartIndex);\n  if (sizeEndIndex == -1) {\n    return ChannelRequest.INCOMPLETE_CHUNK_;\n  }\n\n  const sizeAsString = responseText.substring(sizeStartIndex, sizeEndIndex);\n  const size = Number(sizeAsString);\n  if (isNaN(size)) {\n    return ChannelRequest.INVALID_CHUNK_;\n  }\n\n  const chunkStartIndex = sizeEndIndex + 1;\n  if (chunkStartIndex + size > responseText.length) {\n    return ChannelRequest.INCOMPLETE_CHUNK_;\n  }\n\n  const chunkText = responseText.substr(chunkStartIndex, size);\n  this.xmlHttpChunkStart_ = chunkStartIndex + size;\n  return chunkText;\n};\n\n\n/**\n * Uses an IMG tag or navigator.sendBeacon to send an HTTP get to the server.\n *\n * This is only currently used to terminate the connection, as an IMG tag is\n * the most reliable way to send something to the server while the page\n * is getting torn down.\n *\n * Navigator.sendBeacon is available on Chrome and Firefox as a formal\n * solution to ensure delivery without blocking window close. See\n * https://developer.mozilla.org/en-US/docs/Web/API/Navigator/sendBeacon\n *\n * For Chrome Apps, sendBeacon is always necessary due to Content Security\n * Policy (CSP) violation of using an IMG tag.\n *\n * For react-native, we use xhr to send the actual close request, and assume\n * there is no page-close issue with react-native.\n *\n * @param {goog.Uri} uri The uri to send a request to.\n */\nChannelRequest.prototype.sendCloseRequest = function(uri) {\n  'use strict';\n  this.type_ = ChannelRequest.Type_.CLOSE_REQUEST;\n  this.baseUri_ = uri.clone().makeUnique();\n\n  let requestSent = false;\n\n  if (goog.global.navigator && goog.global.navigator.sendBeacon) {\n    // empty string body to avoid 413 error on chrome < 41\n    requestSent =\n        goog.global.navigator.sendBeacon(this.baseUri_.toString(), '');\n  }\n\n  if (!requestSent && goog.global.Image) {\n    const eltImg = new Image();\n    eltImg.src = this.baseUri_;\n    requestSent = true;\n  }\n\n  if (!requestSent) {\n    // no handler is set to match the sendBeacon/Image behavior\n    this.xmlHttp_ = this.channel_.createXhrIo(null);\n    this.xmlHttp_.send(this.baseUri_);\n  }\n\n  this.requestStartTime_ = Date.now();\n  this.ensureWatchDogTimer_();\n};\n\n\n/**\n * Cancels the request no matter what the underlying transport is.\n */\nChannelRequest.prototype.cancel = function() {\n  'use strict';\n  this.cancelled_ = true;\n  this.cleanup_();\n};\n\n\n/**\n * Resets the timeout.\n *\n * @param {number=} opt_timeout The new timeout\n */\nChannelRequest.prototype.resetTimeout = function(opt_timeout) {\n  'use strict';\n  if (opt_timeout) {\n    this.setTimeout(opt_timeout);\n  }\n  // restart only if a timer is currently set\n  if (this.watchDogTimerId_) {\n    this.cancelWatchDogTimer_();\n    this.ensureWatchDogTimer_();\n  }\n};\n\n\n/**\n * Ensures that there is watchdog timeout which is used to ensure that\n * the connection completes in time.\n *\n * @private\n */\nChannelRequest.prototype.ensureWatchDogTimer_ = function() {\n  'use strict';\n  this.watchDogTimeoutTime_ = Date.now() + this.timeout_;\n  this.startWatchDogTimer_(this.timeout_);\n};\n\n\n/**\n * Starts the watchdog timer which is used to ensure that the connection\n * completes in time.\n * @param {number} time The number of milliseconds to wait.\n * @private\n */\nChannelRequest.prototype.startWatchDogTimer_ = function(time) {\n  'use strict';\n  if (this.watchDogTimerId_ != null) {\n    // assertion\n    throw new Error('WatchDog timer not null');\n  }\n  this.watchDogTimerId_ =\n      requestStats.setTimeout(goog.bind(this.onWatchDogTimeout_, this), time);\n};\n\n\n/**\n * Cancels the watchdog timer if it has been started.\n *\n * @private\n */\nChannelRequest.prototype.cancelWatchDogTimer_ = function() {\n  'use strict';\n  if (this.watchDogTimerId_) {\n    goog.global.clearTimeout(this.watchDogTimerId_);\n    this.watchDogTimerId_ = null;\n  }\n};\n\n\n/**\n * Called when the watchdog timer is triggered. It also handles a case where it\n * is called too early which we suspect may be happening sometimes\n * (not sure why)\n *\n * @private\n */\nChannelRequest.prototype.onWatchDogTimeout_ = function() {\n  'use strict';\n  this.watchDogTimerId_ = null;\n  const now = Date.now();\n  goog.asserts.assert(\n      this.watchDogTimeoutTime_, 'WatchDog timeout time missing?');\n  if (now - this.watchDogTimeoutTime_ >= 0) {\n    this.handleTimeout_();\n  } else {\n    // got called too early for some reason\n    this.channelDebug_.warning('WatchDog timer called too early');\n    this.startWatchDogTimer_(this.watchDogTimeoutTime_ - now);\n  }\n};\n\n\n/**\n * Called when the request has actually timed out. Will cleanup and notify the\n * channel of the failure.\n *\n * @private\n */\nChannelRequest.prototype.handleTimeout_ = function() {\n  'use strict';\n  if (this.successful_) {\n    // Should never happen.\n    this.channelDebug_.severe(\n        'Received watchdog timeout even though request loaded successfully');\n  }\n\n  this.channelDebug_.timeoutResponse(this.requestUri_);\n\n  // IMG or SendBeacon requests never notice if they were successful,\n  // and always 'time out'. This fact says nothing about reachability.\n  if (this.type_ != ChannelRequest.Type_.CLOSE_REQUEST) {\n    requestStats.notifyServerReachabilityEvent(\n        requestStats.ServerReachability.REQUEST_FAILED);\n    requestStats.notifyStatEvent(requestStats.Stat.REQUEST_TIMEOUT);\n  }\n\n  this.cleanup_();\n\n  // Set error and dispatch failure.\n  // This is called for CLOSE_REQUEST too to ensure channel_.onRequestComplete.\n  this.lastError_ = ChannelRequest.Error.TIMEOUT;\n  this.dispatchFailure_();\n};\n\n\n/**\n * Notifies the channel that this request failed.\n * @private\n */\nChannelRequest.prototype.dispatchFailure_ = function() {\n  'use strict';\n  if (this.channel_.isClosed() || this.cancelled_) {\n    return;\n  }\n\n  this.channel_.onRequestComplete(this);\n};\n\n\n/**\n * Cleans up the objects used to make the request. This function is\n * idempotent.\n *\n * @private\n */\nChannelRequest.prototype.cleanup_ = function() {\n  'use strict';\n  this.cancelWatchDogTimer_();\n\n  goog.dispose(this.readyStateChangeThrottle_);\n  this.readyStateChangeThrottle_ = null;\n\n  // Stop the polling timer, if necessary.\n  this.pollingTimer_.stop();\n\n  // Unhook all event handlers.\n  this.eventHandler_.removeAll();\n\n  if (this.xmlHttp_) {\n    // clear out this.xmlHttp_ before aborting so we handle getting reentered\n    // inside abort\n    const xmlhttp = this.xmlHttp_;\n    this.xmlHttp_ = null;\n    xmlhttp.abort();\n    xmlhttp.dispose();\n  }\n};\n\n\n/**\n * Indicates whether the request was successful. Only valid after the handler\n * is called to indicate completion of the request.\n *\n * @return {boolean} True if the request succeeded.\n */\nChannelRequest.prototype.getSuccess = function() {\n  'use strict';\n  return this.successful_;\n};\n\n\n/**\n * If the request was not successful, returns the reason.\n *\n * @return {?ChannelRequest.Error}  The last error.\n */\nChannelRequest.prototype.getLastError = function() {\n  'use strict';\n  return this.lastError_;\n};\n\n\n/**\n * Returns the status code of the last request.\n * @return {number} The status code of the last request.\n */\nChannelRequest.prototype.getLastStatusCode = function() {\n  'use strict';\n  return this.lastStatusCode_;\n};\n\n\n/**\n * Returns the session id for this channel.\n *\n * @return {string|undefined} The session ID.\n */\nChannelRequest.prototype.getSessionId = function() {\n  'use strict';\n  return this.sid_;\n};\n\n\n/**\n * Returns the request id for this request. Each request has a unique request\n * id and the request IDs are a sequential increasing count.\n *\n * @return {string|number|undefined} The request ID.\n */\nChannelRequest.prototype.getRequestId = function() {\n  'use strict';\n  return this.rid_;\n};\n\n\n/**\n * Returns the data for a post, if this request is a post.\n *\n * @return {?string} The POST data provided by the request initiator.\n */\nChannelRequest.prototype.getPostData = function() {\n  'use strict';\n  return this.postData_;\n};\n\n\n/**\n * Returns the XhrIo request object.\n *\n * @return {?goog.net.XhrIo} Any XhrIo request created for this object.\n */\nChannelRequest.prototype.getXhr = function() {\n  'use strict';\n  return this.xmlHttp_;\n};\n\n\n/**\n * Returns the time that the request started, if it has started.\n *\n * @return {?number} The time the request started, as returned by Date.now().\n */\nChannelRequest.prototype.getRequestStartTime = function() {\n  'use strict';\n  return this.requestStartTime_;\n};\n\n\n/**\n * Helper to call the callback's onRequestData, which catches any\n * exception.\n * @param {string} data The request data.\n * @private\n */\nChannelRequest.prototype.safeOnRequestData_ = function(data) {\n  'use strict';\n  try {\n    this.channel_.onRequestData(this, data);\n    const stats = requestStats.ServerReachability;\n    requestStats.notifyServerReachabilityEvent(stats.BACK_CHANNEL_ACTIVITY);\n  } catch (e) {\n    // Dump debug info, but keep going without closing the channel.\n    this.channelDebug_.dumpException(e, 'Error in httprequest callback');\n  }\n};\n\n\n/**\n * Convenience factory method.\n *\n * @param {Channel} channel The channel object that owns this request.\n * @param {WebChannelDebug} channelDebug A WebChannelDebug to use for logging.\n * @param {string=} opt_sessionId  The session id for the channel.\n * @param {string|number=} opt_requestId  The request id for this request.\n * @param {number=} opt_retryId  The retry id for this request.\n * @return {!ChannelRequest} The created channel request.\n */\nChannelRequest.createChannelRequest = function(\n    channel, channelDebug, opt_sessionId, opt_requestId, opt_retryId) {\n  'use strict';\n  return new ChannelRequest(\n      channel, channelDebug, opt_sessionId, opt_requestId, opt_retryId);\n};\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A single module to define user-agent specific environment\n * details.\n *\n */\n\ngoog.module('goog.labs.net.webChannel.environment');\n\ngoog.module.declareLegacyNamespace();\n\nvar userAgent = goog.require('goog.userAgent');\n\n\n/**\n * The default polling interval in millis for Edge.\n *\n * Currently on edge, new-chunk events may be not be fired (at all) if a new\n * chunk arrives within 50ms following the previous chunk. This may be fixed\n * in future, which requires changes to the whatwg spec too.\n *\n * @private @const {number}\n */\nvar EDGE_POLLING_INTERVAL_ = 125;\n\n\n/**\n * History:\n *\n * IE11 is still using Trident, the traditional engine for IE.\n * Edge is using EdgeHTML, a fork of Trident. We are seeing the same issue\n * on IE-11 (reported in 2017), so treat IE the same as Edge for now.\n *\n * We used to do polling for Opera (only) with an 250ms interval, because Opera\n * only fires readyState == INTERACTIVE once. Opera switched to WebKit in 2013,\n * and then to Blink (chrome).\n *\n * TODO(user): check the raw UA string to keep polling for old, mobile operas\n * that may still be affected. For old Opera, double the polling interval\n * to 250ms.\n *\n * @return {boolean} True if polling is required with XHR.\n */\nexports.isPollingRequired = function() {\n  return userAgent.EDGE_OR_IE;\n};\n\n\n/**\n * How often to poll (in MS) for changes to responseText in browsers that don't\n * fire onreadystatechange during incremental loading of the response body.\n *\n * @return {number|undefined} The polling interval (MS) for the current U-A;\n * or undefined if polling is not supposed to be enabled.\n */\nexports.getPollingInterval = function() {\n  if (userAgent.EDGE_OR_IE) {\n    return EDGE_POLLING_INTERVAL_;\n  }\n\n  return undefined;\n};\n\n/**\n * Origin trial token for google.com\n *\n * https://developers.chrome.com/origintrials/#/trials\n *\n * http://googlechrome.github.io/OriginTrials/check-token.html\n * Origin: https://google.com:443\n * Matches Subdomains? Yes\n * Matches Third-party? Yes\n * Feature: FetchUploadStreaming\n * Up to Chrome 95 (ends with the rollout of next Chrome release), no later\n * than Nov 9, 2021\n *\n * Token for googleapis.com will be registered after google.com's is deployed.\n *\n */\nconst OT_TOKEN_GOOGLE_COM =\n    'A0eNbltY1nd4MP7XTHXnTxWogDL6mWTdgIIKfKOTJoUHNbFFMZQBoiHHjJ9UK9lgYndWFaxOWR7ld8uUjcWmcwIAAAB/eyJvcmlnaW4iOiJodHRwczovL2dvb2dsZS5jb206NDQzIiwiZmVhdHVyZSI6IkZldGNoVXBsb2FkU3RyZWFtaW5nIiwiZXhwaXJ5IjoxNjM2NTAyMzk5LCJpc1N1YmRvbWFpbiI6dHJ1ZSwiaXNUaGlyZFBhcnR5Ijp0cnVlfQ==';\n\n\n/**\n * Creates ReadableStream to upload\n * @return {!ReadableStream} ReadableStream to upload\n */\nfunction createStream() {\n  const encoder = new goog.global.TextEncoder();\n  return new goog.global.ReadableStream({\n    start: controller => {\n      for (const obj of ['test\\r\\n', 'test\\r\\n']) {\n        controller.enqueue(encoder.encode(obj));\n      }\n      controller.close();\n    }\n  });\n}\n\n/**\n * Detect the user agent is chrome and its version is higher than M90.\n * This code is hard-coded from goog.labs.userAgent.browser to avoid file size\n * increasing.\n * @return {boolean} Whether the above is true.\n */\nfunction isChromeM90OrHigher() {\n  const userAgentStr = function() {\n    const navigator = goog.global.navigator;\n    if (navigator) {\n      const userAgent = navigator.userAgent;\n      if (userAgent) {\n        return userAgent;\n      }\n    }\n    return '';\n  }();\n\n  const matchUserAgent = function(str) {\n    return userAgentStr.indexOf(str) != -1;\n  };\n\n  if (!matchUserAgent('Chrome') || matchUserAgent('Edg')) {\n    return false;\n  }\n\n  const match = /Chrome\\/(\\d+)/.exec(userAgentStr);\n  const chromeVersion = parseInt(match[1], 10);\n  return chromeVersion >= 90;\n}\n\n/**\n * Detect the URL origin is *.google.com.\n * @param {string} url The target URL.\n * @return {boolean} Whether the above is true.\n */\nfunction isUrlGoogle(url) {\n  const match = /\\/\\/([^\\/]+)\\//.exec(url);\n  if (!match) {\n    return false;\n  }\n  const origin = match[1];\n  return origin.endsWith('google.com');\n}\n\n/**\n * The flag to run the origin trials code only once.\n */\nlet isStartOriginTrialsCalled = false;\n\n/**\n * For Fetch/upload OT, make three requests against the server endpoint.\n * POST requests contain only dummy payload.\n *\n * https://developers.chrome.com/origintrials/#/view_trial/3524066708417413121\n *\n * This function is expected to be called from background during the handshake.\n * Exceptions will be logged by the caller.\n *\n * No stats or logs are collected on the client-side. To be disabled once the\n * OT is expired.\n *\n * @param {string} path The base URL path for the requests\n * @param {function(*)} logError A function to execute when exceptions are\n *     caught.\n */\nexports.startOriginTrials = function(path, logError) {\n  if (isStartOriginTrialsCalled) {\n    return;\n  }\n  isStartOriginTrialsCalled = true;\n  // NE: may need check if path has already contains query params?\n\n  // Accept only Chrome M90 or later due to service worker support.\n  if (!isChromeM90OrHigher()) {\n    return;\n  }\n\n  // Accept only only google.com and subdoamins.\n  if (!isUrlGoogle(path)) {\n    return;\n  }\n  // Since 3P OT is not supported yet, we should check the current page matches\n  // the path (absolute one?) to disable this OT for cross-origin calls\n  if (!window || !window.document || !isUrlGoogle(window.document.URL)) {\n    return;\n  }\n\n  // Enable origin trial by injecting OT <meta> tag\n  const tokenElement =\n      /** @type {! HTMLMetaElement} */ (document.createElement('meta'));\n  tokenElement.httpEquiv = 'origin-trial';\n  tokenElement.content = OT_TOKEN_GOOGLE_COM;\n  // appendChild() synchronously enables OT.\n  document.head.appendChild(tokenElement);\n\n  // Check if fetch upload stream is actually enabled.\n  // By the spec, Streaming request doesn't has the Content-Type header:\n  // https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n  // If Chrome doesn't support Streaming, the body stream is converted to a\n  // string \"[object ReadableStream]\" for fallback then it has \"Content-Type:\n  // text/plain;charset=UTF-8\".\n  const supportsRequestStreams = !new Request('', {\n                                    body: new ReadableStream(),\n                                    method: 'POST',\n                                  }).headers.has('Content-Type');\n  if (!supportsRequestStreams) {\n    return;\n  }\n\n  // 1st req:  path?ot=1\n  // non-streaming upload request\n  goog.global.fetch(`${path}?ot=1`, {method: 'POST', body: 'test\\r\\n'})\n      .catch(logError);\n\n  // 2nd req:  path?ot=2\n  // h2-only streaming upload request\n  goog.global\n      .fetch(`${path}?ot=2`, {\n        method: 'POST',\n        body: createStream(),\n        allowHTTP1ForStreamingUpload: false,\n      })\n      .catch(logError);\n\n  // 3rd req:  path?ot=3\n  // h1-allowed streaming upload request\n  goog.global\n      .fetch(`${path}?ot=3`, {\n        method: 'POST',\n        body: createStream(),\n        allowHTTP1ForStreamingUpload: true,\n      })\n      .catch(logError);\n\n  // Example calling a Chrome API:\n  // goog.global.chrome.loadTimes().wasFetchedViaSpdy\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Base WebChannel implementation.\n */\n\n\ngoog.provide('goog.labs.net.webChannel.WebChannelBase');\n\ngoog.require('goog.Uri');\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.async.run');\ngoog.require('goog.collections.maps');\ngoog.require('goog.json');\ngoog.require('goog.labs.net.webChannel.Channel');\ngoog.require('goog.labs.net.webChannel.ChannelRequest');\ngoog.require('goog.labs.net.webChannel.ConnectionState');\ngoog.require('goog.labs.net.webChannel.ForwardChannelRequestPool');\ngoog.require('goog.labs.net.webChannel.WebChannelDebug');\ngoog.require('goog.labs.net.webChannel.Wire');\ngoog.require('goog.labs.net.webChannel.WireV8');\ngoog.require('goog.labs.net.webChannel.environment');\ngoog.require('goog.labs.net.webChannel.netUtils');\ngoog.require('goog.labs.net.webChannel.requestStats');\ngoog.require('goog.net.FetchXmlHttpFactory');\ngoog.require('goog.net.WebChannel');\ngoog.require('goog.net.XhrIo');\ngoog.require('goog.net.XmlHttpFactory');\ngoog.require('goog.net.rpc.HttpCors');\ngoog.require('goog.object');\ngoog.require('goog.string');\ngoog.require('goog.structs');\n\ngoog.scope(function() {\n'use strict';\nconst WebChannel = goog.net.WebChannel;\nconst ChannelRequest = goog.labs.net.webChannel.ChannelRequest;\nconst ConnectionState = goog.labs.net.webChannel.ConnectionState;\nconst ForwardChannelRequestPool =\n    goog.labs.net.webChannel.ForwardChannelRequestPool;\nconst WebChannelDebug = goog.labs.net.webChannel.WebChannelDebug;\nconst Wire = goog.labs.net.webChannel.Wire;\nconst WireV8 = goog.labs.net.webChannel.WireV8;\nconst environment = goog.labs.net.webChannel.environment;\nconst netUtils = goog.labs.net.webChannel.netUtils;\nconst requestStats = goog.labs.net.webChannel.requestStats;\n\nconst httpCors = goog.module.get('goog.net.rpc.HttpCors');\n\n/**\n * @define {boolean} If WebChannel should compile with Origin Trial features.\n */\nconst ALLOW_ORIGIN_TRIAL_FEATURES =\n    goog.define('goog.net.webChannel.ALLOW_ORIGIN_TRIAL_FEATURES', true);\n\n/**\n * Gets an internal channel parameter in a type-safe way.\n *\n * @param {string} paramName the key of the parameter to fetch.\n * @param {!T} defaultValue the default value to return\n * @param {!goog.net.WebChannel.Options=} options Configuration for the\n *        WebChannel instance.\n * @return {T}\n * @template T\n */\nfunction getInternalChannelParam(paramName, defaultValue, options) {\n  if (!options || !options.internalChannelParams) {\n    return defaultValue;\n  }\n  return /** @type {T} */ (options.internalChannelParams[paramName]) ||\n      defaultValue;\n}\n\n/**\n * This WebChannel implementation is branched off goog.net.BrowserChannel\n * for now. Ongoing changes to goog.net.BrowserChannel will be back\n * ported to this implementation as needed.\n *\n * @param {!goog.net.WebChannel.Options=} opt_options Configuration for the\n *        WebChannel instance.\n * @param {number=} opt_clientVersion An application-specific version number\n *        that is sent to the server when connected.\n * @param {!ConnectionState=} opt_conn Previously determined connection\n *        conditions.\n * @constructor\n * @struct\n * @implements {goog.labs.net.webChannel.Channel}\n */\ngoog.labs.net.webChannel.WebChannelBase = function(\n    opt_options, opt_clientVersion, opt_conn) {\n  'use strict';\n  /**\n   * The client library version (capabilities).\n   * @private {number}\n   */\n  this.clientVersion_ = opt_clientVersion || 0;\n\n  /**\n   * The server library version (capabilities).\n   * @private {number}\n   */\n  this.serverVersion_ = 0;\n\n\n  /**\n   * An array of queued maps that need to be sent to the server.\n   * @private {!Array<Wire.QueuedMap>}\n   */\n  this.outgoingMaps_ = [];\n\n  /**\n   * The channel debug used for logging\n   * @private {!WebChannelDebug}\n   */\n  this.channelDebug_ = new WebChannelDebug();\n\n  /**\n   * Connectivity state.\n   * @private {!ConnectionState}\n   */\n  this.connState_ = opt_conn || new ConnectionState();\n\n  /**\n   * Extra HTTP headers to add to all the requests sent to the server.\n   * @private {?Object}\n   */\n  this.extraHeaders_ = null;\n\n  /**\n   * Extra HTTP headers to add to the init request(s) sent to the server.\n   * @private {?Object}\n   */\n  this.initHeaders_ = null;\n\n  /**\n   * @private {?string} The URL param name to overwrite custom HTTP headers\n   * to bypass CORS preflight.\n   */\n  this.httpHeadersOverwriteParam_ = null;\n\n  /**\n   * Extra parameters to add to all the requests sent to the server.\n   * @private {?Object}\n   */\n  this.extraParams_ = null;\n\n  /**\n   * Parameter name for the http session id.\n   * @private {?string}\n   */\n  this.httpSessionIdParam_ = null;\n\n  /**\n   * The http session id, to be sent with httpSessionIdParam_ with each\n   * request after the initial handshake.\n   * @private {?string}\n   */\n  this.httpSessionId_ = null;\n\n  /**\n   * The ChannelRequest object for the backchannel.\n   * @private {?ChannelRequest}\n   */\n  this.backChannelRequest_ = null;\n\n  /**\n   * The relative path (in the context of the page hosting the browser channel)\n   * for making requests to the server.\n   * @private {?string}\n   */\n  this.path_ = null;\n\n  /**\n   * The absolute URI for the forwardchannel request.\n   * @private {?goog.Uri}\n   */\n  this.forwardChannelUri_ = null;\n\n  /**\n   * The absolute URI for the backchannel request.\n   * @private {?goog.Uri}\n   */\n  this.backChannelUri_ = null;\n\n  /**\n   * A subdomain prefix for using a subdomain in IE for the backchannel\n   * requests.\n   * @private {?string}\n   */\n  this.hostPrefix_ = null;\n\n  /**\n   * Whether we allow the use of a subdomain in IE for the backchannel requests.\n   * @private {boolean}\n   */\n  this.allowHostPrefix_ = true;\n\n  /**\n   * The next id to use for the RID (request identifier) parameter. This\n   * identifier uniquely identifies the forward channel request.\n   * @private {number}\n   */\n  this.nextRid_ = 0;\n\n  /**\n   * The id to use for the next outgoing map. This identifier uniquely\n   * identifies a sent map.\n   * @private {number}\n   */\n  this.nextMapId_ = 0;\n\n  /**\n   * Whether to fail forward-channel requests after one try or a few tries.\n   * @private {boolean}\n   */\n  this.failFast_ = getInternalChannelParam('failFast', false, opt_options);\n\n  /**\n   * The handler that receive callbacks for state changes and data.\n   * @private {?goog.labs.net.webChannel.WebChannelBase.Handler}\n   */\n  this.handler_ = null;\n\n  /**\n   * Timer identifier for asynchronously making a forward channel request.\n   * This is set to true if the func is scheduled with async.run, which\n   * is equivalent to setTimeout(0).\n   * @private {?number|?boolean}\n   */\n  this.forwardChannelTimerId_ = null;\n\n  /**\n   * Timer identifier for asynchronously making a back channel request.\n   * @private {?number}\n   */\n  this.backChannelTimerId_ = null;\n\n  /**\n   * Timer identifier for the timer that waits for us to retry the backchannel\n   * in the case where it is dead and no longer receiving data.\n   * @private {?number}\n   */\n  this.deadBackChannelTimerId_ = null;\n\n  /**\n   * Whether the client's network conditions can support streamed responses.\n   * @private {?boolean}\n   */\n  this.enableStreaming_ = null;\n\n  /**\n   * Whether streaming mode is allowed. In certain debugging situations, it's\n   * useful to disable this.\n   * @private {boolean}\n   */\n  this.allowStreamingMode_ = true;\n\n  /**\n   * The array identifier of the last array received from the server for the\n   * backchannel request.\n   * @private {number}\n   */\n  this.lastArrayId_ = -1;\n\n  /**\n   * The array id of the last array sent by the server that we know about.\n   * @private {number}\n   */\n  this.lastPostResponseArrayId_ = -1;\n\n  /**\n   * The last status code received (until `State.CLOSED` is reached).\n   * @private {number}\n   */\n  this.lastStatusCode_ = -1;\n\n  /**\n   * Number of times we have retried the current forward channel request.\n   * @private {number}\n   */\n  this.forwardChannelRetryCount_ = 0;\n\n  /**\n   * Number of times in a row that we have retried the current back channel\n   * request and received no data.\n   * @private {number}\n   */\n  this.backChannelRetryCount_ = 0;\n\n  /**\n   * The attempt id for the current back channel request. Starts at 1 and\n   * increments for each reconnect. The server uses this to log if our\n   * connection is flaky or not.\n   * @private {number}\n   */\n  this.backChannelAttemptId_ = 0;\n\n  /**\n   * The base part of the time before firing next retry request. Default is 5\n   * seconds. Note that a random delay is added (see {@link retryDelaySeedMs_})\n   * for all retries, and linear backoff is applied to the sum for subsequent\n   * retries.\n   * @private {number}\n   */\n  this.baseRetryDelayMs_ =\n      getInternalChannelParam('baseRetryDelayMs', 5 * 1000, opt_options);\n\n  /**\n   * A random time between 0 and this number of MS is added to the\n   * {@link baseRetryDelayMs_}. Default is 10 seconds.\n   * @private {number}\n   */\n  this.retryDelaySeedMs_ =\n      getInternalChannelParam('retryDelaySeedMs', 10 * 1000, opt_options);\n\n  /**\n   * Maximum number of attempts to connect to the server for forward channel\n   * requests. Defaults to 2.\n   * @private {number}\n   */\n  this.forwardChannelMaxRetries_ =\n      getInternalChannelParam('forwardChannelMaxRetries', 2, opt_options);\n\n  /**\n   * The timeout in milliseconds for a forward channel request. Defaults to 20\n   * seconds. Note that part of this timeout can be randomized.\n   * @private {number}\n   */\n  this.forwardChannelRequestTimeoutMs_ = getInternalChannelParam(\n      'forwardChannelRequestTimeoutMs', 20 * 1000, opt_options);\n\n  /**\n   * The custom factory used to create XMLHttpRequest objects.\n   * @private {!goog.net.XmlHttpFactory | undefined}\n   */\n  this.xmlHttpFactory_ =\n      (opt_options && opt_options.xmlHttpFactory) || undefined;\n\n  /**\n   * Whether or not this channel uses WHATWG Fetch/streams.\n   * @private {boolean}\n   */\n  this.usesFetchStreams_ =\n      (opt_options && opt_options.useFetchStreams) || false;\n\n  /**\n   * The timeout in milliseconds for a back channel request. Defaults to using\n   * the timeout configured in ChannelRequest (45s). If server-side\n   * keepaliveInterval is known to the client, set the backchannel request\n   * timeout to 1.5 * keepaliveInterval (ms).\n   *\n   * @private {number|undefined}\n   */\n  this.backChannelRequestTimeoutMs_ = undefined;\n\n  /**\n   * A throttle time in ms for readystatechange events for the backchannel.\n   * Useful for throttling when ready state is INTERACTIVE (partial data).\n   *\n   * This throttle is useful if the server sends large data chunks down the\n   * backchannel.  It prevents examining XHR partial data on every readystate\n   * change event.  This is useful because large chunks can trigger hundreds\n   * of readystatechange events, each of which takes ~5ms or so to handle,\n   * in turn making the UI unresponsive for a significant period.\n   *\n   * If set to zero no throttle is used.\n   * @private {number}\n   */\n  this.readyStateChangeThrottleMs_ = 0;\n\n  /**\n   * Whether cross origin requests are supported for the channel.\n   *\n   * See {@link goog.net.XhrIo#setWithCredentials}.\n   * @private {boolean}\n   */\n  this.supportsCrossDomainXhrs_ =\n      (opt_options && opt_options.supportsCrossDomainXhr) || false;\n\n  /**\n   * The current session id.\n   * @private {string}\n   */\n  this.sid_ = '';\n\n  /**\n   * The current ChannelRequest pool for the forward channel.\n   * @private {!ForwardChannelRequestPool}\n   */\n  this.forwardChannelRequestPool_ = new ForwardChannelRequestPool(\n      opt_options && opt_options.concurrentRequestLimit);\n\n  /**\n   * The V8 codec.\n   * @private {!WireV8}\n   */\n  this.wireCodec_ = new WireV8();\n\n  /**\n   * Whether to turn on the fast handshake behavior.\n   *\n   * @private {boolean}\n   */\n  this.fastHandshake_ = (opt_options && opt_options.fastHandshake) || false;\n\n  /**\n   * Whether to encode initMessageHeaders in the body.\n   *\n   * @private {boolean}\n   */\n  this.encodeInitMessageHeaders_ =\n      (opt_options && opt_options.encodeInitMessageHeaders) || false;\n\n  if (this.fastHandshake_ && this.encodeInitMessageHeaders_) {\n    this.channelDebug_.warning(\n        'Ignore encodeInitMessageHeaders because fastHandshake is set.');\n    this.encodeInitMessageHeaders_ = false;\n  }\n\n  /**\n   * Whether to signal to the server to enable blocking handshake.\n   *\n   * @private {boolean}\n   */\n  this.blockingHandshake_ =\n      (opt_options && opt_options.blockingHandshake) || false;\n\n\n  if (opt_options && opt_options.disableRedact) {\n    this.channelDebug_.disableRedact();\n  }\n\n  if (opt_options && opt_options.forceLongPolling) {\n    this.allowStreamingMode_ = false;\n  }\n\n  /**\n   * Whether to detect buffering proxies.\n   *\n   * fastHandshake + detectBufferingProxy are yet to be implemented.\n   *\n   * @private {boolean}\n   */\n  this.detectBufferingProxy_ =\n      (!this.fastHandshake_ && this.allowStreamingMode_ && opt_options &&\n       opt_options.detectBufferingProxy) ||\n      false;\n\n  /**\n   * Callback when all the pending client-sent messages have been flushed.\n   *\n   * @private {function()|undefined}\n   */\n  this.forwardChannelFlushedCallback_ = undefined;\n\n  /**\n   * TODO(user): move all backchannel states to its own class similar to\n   * forwardchannelrequestpool.js and log more stats.\n   *\n   * The estimated handshake RTT (ms) as measured from when the handshake\n   * request is sent and when the handshake response headers are received.\n   * If the value is 0, the RTT is unknown.\n   *\n   * @private {number}\n   */\n  this.handshakeRttMs_ = 0;\n\n  /**\n   * If BP detection is done or still in progress.\n   * Should only be checked when detectBufferingProxy is turned on.\n   * @private {boolean}\n   */\n  this.bpDetectionDone_ = false;\n\n  /**\n   * The timer for detecting buffering proxy. This needs be reset with each\n   * backchannel request. If this is not null, bpDetectionDone_ == false.\n   * @private {?number}\n   */\n  this.bpDetectionTimerId_ = null;\n\n  /***\n   * Whether to attempt Chrome Origin Trials as part of the handshake.\n   * @private @const {boolean}\n   */\n  this.enableOriginTrials_ = ALLOW_ORIGIN_TRIAL_FEATURES &&\n      (!opt_options || opt_options.enableOriginTrials !== false);\n\n  /**\n   * The array of non-acked maps at the time of channel close. Refer to\n   * `getNonAckedMessagesWithClosedChannel()` API for definitions of non-acked\n   * messages.\n   *\n   * @private {?Array<!Wire.QueuedMap>}\n   */\n  this.nonAckedMapsAtChannelClose_ = null;\n};\n\nconst WebChannelBase = goog.labs.net.webChannel.WebChannelBase;\n\n\n/**\n * The channel version that we negotiated with the server for this session.\n * Starts out as the version we request, and then is changed to the negotiated\n * version after the initial open.\n * @private {number}\n */\nWebChannelBase.prototype.channelVersion_ = Wire.LATEST_CHANNEL_VERSION;\n\n\n/**\n * Enum type for the channel state machine.\n * @enum {number}\n */\nWebChannelBase.State = {\n  /** The channel is closed. */\n  CLOSED: 0,\n\n  /** The channel has been initialized but hasn't yet initiated a connection. */\n  INIT: 1,\n\n  /** The channel is in the process of opening a connection to the server. */\n  OPENING: 2,\n\n  /** The channel is open. */\n  OPENED: 3\n};\n\n\n/**\n * The current state of the WebChannel.\n * @private {!WebChannelBase.State}\n */\nWebChannelBase.prototype.state_ = WebChannelBase.State.INIT;\n\n\n/**\n * The timeout in milliseconds for a forward channel request.\n * @type {number}\n */\nWebChannelBase.FORWARD_CHANNEL_RETRY_TIMEOUT = 20 * 1000;\n\n\n/**\n * Maximum number of attempts to connect to the server for back channel\n * requests.\n * @type {number}\n */\nWebChannelBase.BACK_CHANNEL_MAX_RETRIES = 3;\n\n\n/**\n * A number in MS of how long we guess the maxmium amount of time a round trip\n * to the server should take. In the future this could be substituted with a\n * real measurement of the RTT.\n * @type {number}\n */\nWebChannelBase.RTT_ESTIMATE = 3 * 1000;\n\n\n/**\n * When retrying for an inactive channel, we will multiply the total delay by\n * this number.\n * @type {number}\n */\nWebChannelBase.INACTIVE_CHANNEL_RETRY_FACTOR = 2;\n\n\n/**\n * Enum type for identifying an error.\n * @enum {number}\n */\nWebChannelBase.Error = {\n  /** Value that indicates no error has occurred. */\n  OK: 0,\n\n  /** An error due to a request failing. */\n  REQUEST_FAILED: 2,\n\n  /** An error due to the user being logged out. */\n  LOGGED_OUT: 4,\n\n  /** An error due to server response which contains no data. */\n  NO_DATA: 5,\n\n  /** An error due to a server response indicating an unknown session id */\n  UNKNOWN_SESSION_ID: 6,\n\n  /** An error due to a server response requesting to stop the channel. */\n  STOP: 7,\n\n  /** A general network error. */\n  NETWORK: 8,\n\n  /** An error due to bad data being returned from the server. */\n  BAD_DATA: 10,\n\n  /** An error due to a response that is not parsable. */\n  BAD_RESPONSE: 11\n};\n\n\n/**\n * Internal enum type for the two channel types.\n * @enum {number}\n * @private\n */\nWebChannelBase.ChannelType_ = {\n  FORWARD_CHANNEL: 1,\n\n  BACK_CHANNEL: 2\n};\n\n\n/**\n * The maximum number of maps that can be sent in one POST. Should match\n * MAX_MAPS_PER_REQUEST on the server code.\n * @type {number}\n * @private\n */\nWebChannelBase.MAX_MAPS_PER_REQUEST_ = 1000;\n\n\n/**\n * The maximum number of utf-8 chars that can be sent in one GET to enable 0-RTT\n * handshake.\n *\n *  @const @private {number}\n */\nWebChannelBase.MAX_CHARS_PER_GET_ = 4 * 1024;\n\n\n/**\n * A guess at a cutoff at which to no longer assume the backchannel is dead\n * when we are slow to receive data. Number in bytes.\n *\n * Assumption: The worst bandwidth we work on is 50 kilobits/sec\n * 50kbits/sec * (1 byte / 8 bits) * 6 sec dead backchannel timeout\n * @type {number}\n */\nWebChannelBase.OUTSTANDING_DATA_BACKCHANNEL_RETRY_CUTOFF = 37500;\n\n\n/**\n * @return {number} The server version or 0 if undefined\n */\nWebChannelBase.prototype.getServerVersion = function() {\n  'use strict';\n  return this.serverVersion_;\n};\n\n\n/**\n * @return {!ForwardChannelRequestPool} The forward channel request pool.\n */\nWebChannelBase.prototype.getForwardChannelRequestPool = function() {\n  'use strict';\n  return this.forwardChannelRequestPool_;\n};\n\n\n/**\n * @return {!Object} The codec object.\n */\nWebChannelBase.prototype.getWireCodec = function() {\n  'use strict';\n  return this.wireCodec_;\n};\n\n\n/**\n * Returns the logger.\n *\n * @return {!WebChannelDebug} The channel debug object.\n */\nWebChannelBase.prototype.getChannelDebug = function() {\n  'use strict';\n  return this.channelDebug_;\n};\n\n\n/**\n * Sets the logger.\n *\n * @param {!WebChannelDebug} channelDebug The channel debug object.\n */\nWebChannelBase.prototype.setChannelDebug = function(channelDebug) {\n  'use strict';\n  this.channelDebug_ = channelDebug;\n};\n\n\n/**\n * Starts the channel. This initiates connections to the server.\n *\n * @param {string} channelPath  The path for the channel connection.\n * @param {!Object=} opt_extraParams Extra parameter keys and values to add to\n *     the requests.\n * @param {string=} opt_oldSessionId  Session ID from a previous session.\n * @param {number=} opt_oldArrayId  The last array ID from a previous session.\n */\nWebChannelBase.prototype.connect = function(\n    channelPath, opt_extraParams, opt_oldSessionId, opt_oldArrayId) {\n  'use strict';\n  this.channelDebug_.debug('connect()');\n\n  this.startOriginTrials_(channelPath);\n\n  requestStats.notifyStatEvent(requestStats.Stat.CONNECT_ATTEMPT);\n\n  this.path_ = channelPath;\n  this.extraParams_ = opt_extraParams || {};\n\n  // Attach parameters about the previous session if reconnecting.\n  if (opt_oldSessionId && opt_oldArrayId !== undefined) {\n    this.extraParams_['OSID'] = opt_oldSessionId;\n    this.extraParams_['OAID'] = opt_oldArrayId;\n  }\n\n  this.enableStreaming_ = this.allowStreamingMode_;\n  this.connectChannel_();\n};\n\n\n/**\n * Disconnects and closes the channel.\n */\nWebChannelBase.prototype.disconnect = function() {\n  'use strict';\n  this.channelDebug_.debug('disconnect()');\n\n  this.cancelRequests_();\n\n  if (this.state_ == WebChannelBase.State.OPENED) {\n    const rid = this.nextRid_++;\n    const uri = this.forwardChannelUri_.clone();\n    uri.setParameterValue('SID', this.sid_);\n    uri.setParameterValue('RID', rid);\n    uri.setParameterValue('TYPE', 'terminate');\n\n    this.addAdditionalParams_(uri);\n\n    const request = ChannelRequest.createChannelRequest(\n        this, this.channelDebug_, this.sid_, rid);\n    request.sendCloseRequest(uri);\n  }\n\n  this.onClose_();\n};\n\n\n/**\n * Returns the session id of the channel. Only available after the\n * channel has been opened.\n * @return {string} Session ID.\n */\nWebChannelBase.prototype.getSessionId = function() {\n  'use strict';\n  return this.sid_;\n};\n\n\n/**\n * Starts the connection.\n * @private\n */\nWebChannelBase.prototype.connectChannel_ = function() {\n  'use strict';\n  this.channelDebug_.debug('connectChannel_()');\n  this.ensureInState_(WebChannelBase.State.INIT, WebChannelBase.State.CLOSED);\n  this.forwardChannelUri_ =\n      this.getForwardChannelUri(/** @type {string} */ (this.path_));\n  this.ensureForwardChannel_();\n};\n\n\n/**\n * Starts the Origin Trials.\n * @param {string} channelPath  The path for the channel connection.\n * @private\n */\nWebChannelBase.prototype.startOriginTrials_ = function(channelPath) {\n  'use strict';\n\n  if (!this.enableOriginTrials_) {\n    return;\n  }\n\n  this.channelDebug_.info('Origin Trials enabled.');\n  goog.async.run(goog.bind(this.runOriginTrials_, this, channelPath));\n};\n\n\n/**\n * Runs the Origin Trials.\n * @param {string} channelPath  The path for the channel connection.\n * @private\n */\nWebChannelBase.prototype.runOriginTrials_ = function(channelPath) {\n  'use strict';\n\n  try {\n    // Since startOriginTrials might throw exceptions asynchronously, we should\n    // capture it in promise-catch.\n    environment.startOriginTrials(channelPath, e => {\n      this.channelDebug_.dumpException(\n          /** @type {?Error} */ (e), 'Error in running origin trials');\n    });\n    this.channelDebug_.info('Origin Trials invoked: ' + channelPath);\n  } catch (e) {\n    this.channelDebug_.dumpException(e, 'Error in running origin trials');\n  }\n};\n\n\n/**\n * Cancels backchannel request.\n * @private\n */\nWebChannelBase.prototype.cancelBackChannelRequest_ = function() {\n  'use strict';\n  if (this.backChannelRequest_) {\n    this.clearBpDetectionTimer_();\n    this.backChannelRequest_.cancel();\n    this.backChannelRequest_ = null;\n  }\n};\n\n\n/**\n * Cancels all outstanding requests.\n * @private\n */\nWebChannelBase.prototype.cancelRequests_ = function() {\n  'use strict';\n  this.cancelBackChannelRequest_();\n\n  if (this.backChannelTimerId_) {\n    goog.global.clearTimeout(this.backChannelTimerId_);\n    this.backChannelTimerId_ = null;\n  }\n\n  this.clearDeadBackchannelTimer_();\n\n  this.forwardChannelRequestPool_.cancel();\n\n  if (this.forwardChannelTimerId_) {\n    this.clearForwardChannelTimer_();\n  }\n};\n\n\n/**\n * Clears the forward channel timer.\n * @private\n */\nWebChannelBase.prototype.clearForwardChannelTimer_ = function() {\n  'use strict';\n  if (typeof this.forwardChannelTimerId_ === 'number') {\n    goog.global.clearTimeout(this.forwardChannelTimerId_);\n  }\n\n  this.forwardChannelTimerId_ = null;\n};\n\n\n/**\n * Returns the extra HTTP headers to add to all the requests sent to the server.\n *\n * @return {Object} The HTTP headers, or null.\n */\nWebChannelBase.prototype.getExtraHeaders = function() {\n  'use strict';\n  return this.extraHeaders_;\n};\n\n\n/**\n * Sets extra HTTP headers to add to all the requests sent to the server.\n *\n * @param {Object} extraHeaders The HTTP headers, or null.\n */\nWebChannelBase.prototype.setExtraHeaders = function(extraHeaders) {\n  'use strict';\n  this.extraHeaders_ = extraHeaders;\n};\n\n\n/**\n * Returns the extra HTTP headers to add to the init requests\n * sent to the server.\n *\n * @return {Object} The HTTP headers, or null.\n */\nWebChannelBase.prototype.getInitHeaders = function() {\n  'use strict';\n  return this.initHeaders_;\n};\n\n\n/**\n * Sets extra HTTP headers to add to the init requests sent to the server.\n *\n * @param {Object} initHeaders The HTTP headers, or null.\n */\nWebChannelBase.prototype.setInitHeaders = function(initHeaders) {\n  'use strict';\n  this.initHeaders_ = initHeaders;\n};\n\n\n/**\n * Sets the URL param name to overwrite custom HTTP headers.\n *\n * @param {string} httpHeadersOverwriteParam The URL param name.\n */\nWebChannelBase.prototype.setHttpHeadersOverwriteParam = function(\n    httpHeadersOverwriteParam) {\n  'use strict';\n  this.httpHeadersOverwriteParam_ = httpHeadersOverwriteParam;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.setHttpSessionIdParam = function(httpSessionIdParam) {\n  'use strict';\n  this.httpSessionIdParam_ = httpSessionIdParam;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.getHttpSessionIdParam = function() {\n  'use strict';\n  return this.httpSessionIdParam_;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.setHttpSessionId = function(httpSessionId) {\n  'use strict';\n  this.httpSessionId_ = httpSessionId;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.getHttpSessionId = function() {\n  'use strict';\n  return this.httpSessionId_;\n};\n\n\n/**\n * Sets the throttle for handling onreadystatechange events for the request.\n *\n * @param {number} throttle The throttle in ms.  A value of zero indicates\n *     no throttle.\n */\nWebChannelBase.prototype.setReadyStateChangeThrottle = function(throttle) {\n  'use strict';\n  this.readyStateChangeThrottleMs_ = throttle;\n};\n\n\n/**\n * Sets whether cross origin requests are supported for the channel.\n *\n * Setting this allows the creation of requests to secondary domains and\n * sends XHRs with the CORS withCredentials bit set to true.\n *\n * In order for cross-origin requests to work, the server will also need to set\n * CORS response headers as per:\n * https://developer.mozilla.org/en-US/docs/HTTP_access_control\n *\n * See {@link goog.net.XhrIo#setWithCredentials}.\n * @param {boolean} supportCrossDomain Whether cross domain XHRs are supported.\n */\nWebChannelBase.prototype.setSupportsCrossDomainXhrs = function(\n    supportCrossDomain) {\n  'use strict';\n  this.supportsCrossDomainXhrs_ = supportCrossDomain;\n};\n\n\n/**\n * Returns the handler used for channel callback events.\n *\n * @return {WebChannelBase.Handler} The handler.\n */\nWebChannelBase.prototype.getHandler = function() {\n  'use strict';\n  return this.handler_;\n};\n\n\n/**\n * Sets the handler used for channel callback events.\n * @param {WebChannelBase.Handler} handler The handler to set.\n */\nWebChannelBase.prototype.setHandler = function(handler) {\n  'use strict';\n  this.handler_ = handler;\n};\n\n\n/**\n * Returns whether the channel allows the use of a subdomain. There may be\n * cases where this isn't allowed.\n * @return {boolean} Whether a host prefix is allowed.\n */\nWebChannelBase.prototype.getAllowHostPrefix = function() {\n  'use strict';\n  return this.allowHostPrefix_;\n};\n\n\n/**\n * Sets whether the channel allows the use of a subdomain. There may be cases\n * where this isn't allowed, for example, logging in with troutboard where\n * using a subdomain causes Apache to force the user to authenticate twice.\n * @param {boolean} allowHostPrefix Whether a host prefix is allowed.\n */\nWebChannelBase.prototype.setAllowHostPrefix = function(allowHostPrefix) {\n  'use strict';\n  this.allowHostPrefix_ = allowHostPrefix;\n};\n\n\n/**\n * Returns whether the channel is buffered or not.  This may be\n * queried in the WebChannelBase.okToMakeRequest() callback.\n *\n * @return {boolean} Whether the channel is buffered.\n */\nWebChannelBase.prototype.isBuffered = function() {\n  'use strict';\n  return !this.enableStreaming_;\n};\n\n\n/**\n * Returns whether streaming mode is allowed. In certain debugging situations,\n * it's useful for the application to have a way to disable streaming mode for a\n * user.\n\n * @return {boolean} Whether streaming mode is allowed.\n */\nWebChannelBase.prototype.getAllowStreamingMode = function() {\n  'use strict';\n  return this.allowStreamingMode_;\n};\n\n\n/**\n * Sets whether streaming mode is allowed. In certain debugging situations, it's\n * useful for the application to have a way to disable streaming mode for a\n * user.\n * @param {boolean} allowStreamingMode  Whether streaming mode is allowed.\n */\nWebChannelBase.prototype.setAllowStreamingMode = function(allowStreamingMode) {\n  'use strict';\n  this.allowStreamingMode_ = allowStreamingMode;\n};\n\n\n/**\n * Sends a request to the server. The format of the request is a Map data\n * structure of key/value pairs. These maps are then encoded in a format\n * suitable for the wire and then reconstituted as a Map data structure that\n * the server can process.\n * @param {!Object|!goog.collections.maps.MapLike} map The map to send.\n * @param {!Object=} opt_context The context associated with the map.\n */\nWebChannelBase.prototype.sendMap = function(map, opt_context) {\n  'use strict';\n  goog.asserts.assert(\n      this.state_ != WebChannelBase.State.CLOSED,\n      'Invalid operation: sending map when state is closed');\n\n  // We can only send 1000 maps per POST, but typically we should never have\n  // that much to send, so warn if we exceed that (we still send all the maps).\n  if (this.outgoingMaps_.length == WebChannelBase.MAX_MAPS_PER_REQUEST_) {\n    // severe() is temporary so that we get these uploaded and can figure out\n    // what's causing them. Afterwards can change to warning().\n    this.channelDebug_.severe(function() {\n      'use strict';\n      return 'Already have ' + WebChannelBase.MAX_MAPS_PER_REQUEST_ +\n          ' queued maps upon queueing ' + goog.json.serialize(map);\n    });\n  }\n\n  this.outgoingMaps_.push(\n      new Wire.QueuedMap(this.nextMapId_++, map, opt_context));\n\n  // Messages need be buffered during OPENING to avoid server-side race\n  if (this.state_ == WebChannelBase.State.OPENED) {\n    this.ensureForwardChannel_();\n  }\n};\n\n\n/**\n * When set to true, this changes the behavior of the forward channel so it\n * will not retry requests; it will fail after one network failure, and if\n * there was already one network failure, the request will fail immediately.\n * @param {boolean} failFast  Whether or not to fail fast.\n */\nWebChannelBase.prototype.setFailFast = function(failFast) {\n  'use strict';\n  this.failFast_ = failFast;\n  this.channelDebug_.info('setFailFast: ' + failFast);\n  if ((this.forwardChannelRequestPool_.hasPendingRequest() ||\n       this.forwardChannelTimerId_) &&\n      this.forwardChannelRetryCount_ > this.getForwardChannelMaxRetries()) {\n    const self = this;\n    this.channelDebug_.info(function() {\n      'use strict';\n      return 'Retry count ' + self.forwardChannelRetryCount_ +\n          ' > new maxRetries ' + self.getForwardChannelMaxRetries() +\n          '. Fail immediately!';\n    });\n\n    if (!this.forwardChannelRequestPool_.forceComplete(\n            goog.bind(this.onRequestComplete, this))) {\n      // i.e., this.forwardChannelTimerId_\n      this.clearForwardChannelTimer_();\n      // The error code from the last failed request is gone, so just use a\n      // generic one.\n      this.signalError_(WebChannelBase.Error.REQUEST_FAILED);\n    }\n  }\n};\n\n\n/**\n * @return {number} The max number of forward-channel retries, which will be 0\n * in fail-fast mode.\n */\nWebChannelBase.prototype.getForwardChannelMaxRetries = function() {\n  'use strict';\n  return this.failFast_ ? 0 : this.forwardChannelMaxRetries_;\n};\n\n\n/**\n * Sets the maximum number of attempts to connect to the server for forward\n * channel requests.\n * @param {number} retries The maximum number of attempts.\n */\nWebChannelBase.prototype.setForwardChannelMaxRetries = function(retries) {\n  'use strict';\n  this.forwardChannelMaxRetries_ = retries;\n};\n\n\n/**\n * Sets the timeout for a forward channel request.\n * @param {number} timeoutMs The timeout in milliseconds.\n */\nWebChannelBase.prototype.setForwardChannelRequestTimeout = function(timeoutMs) {\n  'use strict';\n  this.forwardChannelRequestTimeoutMs_ = timeoutMs;\n};\n\n\n/**\n * @return {number} The max number of back-channel retries, which is a constant.\n */\nWebChannelBase.prototype.getBackChannelMaxRetries = function() {\n  'use strict';\n  // Back-channel retries is a constant.\n  return WebChannelBase.BACK_CHANNEL_MAX_RETRIES;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.isClosed = function() {\n  'use strict';\n  return this.state_ == WebChannelBase.State.CLOSED;\n};\n\n\n/**\n * Returns the channel state.\n * @return {WebChannelBase.State} The current state of the channel.\n */\nWebChannelBase.prototype.getState = function() {\n  'use strict';\n  return this.state_;\n};\n\n\n/**\n * @return {number} The last status code received (until `State.CLOSED` is\n * reached).\n */\nWebChannelBase.prototype.getLastStatusCode = function() {\n  'use strict';\n  return this.lastStatusCode_;\n};\n\n\n/**\n * @return {number} The last array id received.\n */\nWebChannelBase.prototype.getLastArrayId = function() {\n  'use strict';\n  return this.lastArrayId_;\n};\n\n\n/**\n * Returns whether there are outstanding requests servicing the channel.\n * @return {boolean} true if there are outstanding requests.\n */\nWebChannelBase.prototype.hasOutstandingRequests = function() {\n  'use strict';\n  return this.getOutstandingRequests_() != 0;\n};\n\n\n/**\n * Returns the number of outstanding requests.\n * @return {number} The number of outstanding requests to the server.\n * @private\n */\nWebChannelBase.prototype.getOutstandingRequests_ = function() {\n  'use strict';\n  let count = 0;\n  if (this.backChannelRequest_) {\n    count++;\n  }\n  count += this.forwardChannelRequestPool_.getRequestCount();\n  return count;\n};\n\n\n/**\n * Ensures that a forward channel request is scheduled.\n * @private\n */\nWebChannelBase.prototype.ensureForwardChannel_ = function() {\n  'use strict';\n  if (this.forwardChannelRequestPool_.isFull()) {\n    // enough connection in process - no need to start a new request\n    return;\n  }\n\n  if (this.forwardChannelTimerId_) {\n    // no need to start a new request - one is already scheduled\n    return;\n  }\n\n  // Use async.run instead of setTimeout(0) to avoid the 1s message delay\n  // from chrome/firefox background tabs\n  this.forwardChannelTimerId_ = true;\n  goog.async.run(this.onStartForwardChannelTimer_, this);\n\n  this.forwardChannelRetryCount_ = 0;\n};\n\n\n/**\n * Schedules a forward-channel retry for the specified request, unless the max\n * retries has been reached.\n * @param {!ChannelRequest} request The failed request to retry.\n * @return {boolean} true iff a retry was scheduled.\n * @private\n */\nWebChannelBase.prototype.maybeRetryForwardChannel_ = function(request) {\n  'use strict';\n  if (this.forwardChannelRequestPool_.getRequestCount() >=\n      this.forwardChannelRequestPool_.getMaxSize() -\n          (this.forwardChannelTimerId_ ? 1 : 0)) {\n    // Should be impossible to be called in this state.\n    this.channelDebug_.severe('Unexpected retry request is scheduled.');\n    return false;\n  }\n\n  if (this.forwardChannelTimerId_) {\n    this.channelDebug_.debug(\n        'Use the retry request that is already scheduled.');\n    this.outgoingMaps_ =\n        request.getPendingMessages().concat(this.outgoingMaps_);\n    return true;\n  }\n\n  // No retry for open_() and fail-fast\n  if (this.state_ == WebChannelBase.State.INIT ||\n      this.state_ == WebChannelBase.State.OPENING ||\n      (this.forwardChannelRetryCount_ >= this.getForwardChannelMaxRetries())) {\n    return false;\n  }\n\n  this.channelDebug_.debug('Going to retry POST');\n\n  this.forwardChannelTimerId_ = requestStats.setTimeout(\n      goog.bind(this.onStartForwardChannelTimer_, this, request),\n      this.getRetryTime_(this.forwardChannelRetryCount_));\n  this.forwardChannelRetryCount_++;\n  return true;\n};\n\n\n/**\n * Timer callback for ensureForwardChannel\n * @param {ChannelRequest=} opt_retryRequest A failed request\n * to retry.\n * @private\n */\nWebChannelBase.prototype.onStartForwardChannelTimer_ = function(\n    opt_retryRequest) {\n  'use strict';\n  // null is possible if scheduled with async.run\n  if (this.forwardChannelTimerId_) {\n    this.forwardChannelTimerId_ = null;\n    this.startForwardChannel_(opt_retryRequest);\n  }\n};\n\n\n/**\n * Begins a new forward channel operation to the server.\n * @param {ChannelRequest=} opt_retryRequest A failed request to retry.\n * @private\n */\nWebChannelBase.prototype.startForwardChannel_ = function(opt_retryRequest) {\n  'use strict';\n  this.channelDebug_.debug('startForwardChannel_');\n  if (!this.okToMakeRequest_()) {\n    return;  // channel is cancelled\n  } else if (this.state_ == WebChannelBase.State.INIT) {\n    if (opt_retryRequest) {\n      this.channelDebug_.severe('Not supposed to retry the open');\n      return;\n    }\n    this.open_();\n    this.state_ = WebChannelBase.State.OPENING;\n  } else if (this.state_ == WebChannelBase.State.OPENED) {\n    if (opt_retryRequest) {\n      this.makeForwardChannelRequest_(opt_retryRequest);\n      return;\n    }\n\n    if (this.outgoingMaps_.length == 0) {\n      this.channelDebug_.debug(\n          'startForwardChannel_ returned: ' +\n          'nothing to send');\n      // no need to start a new forward channel request\n      return;\n    }\n\n    if (this.forwardChannelRequestPool_.isFull()) {\n      // Should be impossible to be called in this state.\n      this.channelDebug_.severe(\n          'startForwardChannel_ returned: ' +\n          'connection already in progress');\n      return;\n    }\n\n    this.makeForwardChannelRequest_();\n    this.channelDebug_.debug('startForwardChannel_ finished, sent request');\n  }\n};\n\n\n/**\n * Establishes a new channel session with the server.\n * @private\n */\nWebChannelBase.prototype.open_ = function() {\n  'use strict';\n  this.channelDebug_.debug('open_()');\n  this.nextRid_ = Math.floor(Math.random() * 100000);\n\n  const rid = this.nextRid_++;\n  const request =\n      ChannelRequest.createChannelRequest(this, this.channelDebug_, '', rid);\n\n  // mix the init headers\n  let extraHeaders = this.extraHeaders_;\n  if (this.initHeaders_) {\n    if (extraHeaders) {\n      extraHeaders = goog.object.clone(extraHeaders);\n      goog.object.extend(extraHeaders, this.initHeaders_);\n    } else {\n      extraHeaders = this.initHeaders_;\n    }\n  }\n\n  if (this.httpHeadersOverwriteParam_ === null &&\n      !this.encodeInitMessageHeaders_) {\n    request.setExtraHeaders(extraHeaders);\n    extraHeaders = null;\n  }\n\n  let requestText = this.dequeueOutgoingMaps_(\n      request,\n      this.fastHandshake_ ? this.getMaxNumMessagesForFastHandshake_() :\n                            WebChannelBase.MAX_MAPS_PER_REQUEST_);\n\n  const uri = this.forwardChannelUri_.clone();\n  uri.setParameterValue('RID', rid);\n\n  if (this.clientVersion_ > 0) {\n    uri.setParameterValue('CVER', this.clientVersion_);\n  }\n\n  // http-session-id to be generated as the response\n  if (this.getHttpSessionIdParam()) {\n    uri.setParameterValue(\n        WebChannel.X_HTTP_SESSION_ID, this.getHttpSessionIdParam());\n  }\n\n  this.addAdditionalParams_(uri);\n\n  if (extraHeaders) {\n    if (this.encodeInitMessageHeaders_) {\n      let encodedHeaders =\n          httpCors.generateEncodedHttpHeadersOverwriteParam(extraHeaders);\n      requestText = 'headers=' + encodedHeaders + '&' + requestText;\n    } else if (this.httpHeadersOverwriteParam_) {\n      httpCors.setHttpHeadersWithOverwriteParam(\n          uri, this.httpHeadersOverwriteParam_, extraHeaders);\n    }  // else - should not happen\n  }\n\n  this.forwardChannelRequestPool_.addRequest(request);\n\n  if (this.blockingHandshake_) {\n    uri.setParameterValue('TYPE', 'init');  // default to blocking in future\n  }\n\n  // Check the option and use GET to enable QUIC 0-RTT\n  if (this.fastHandshake_) {\n    uri.setParameterValue('$req', requestText);\n\n    // enable handshake upgrade\n    uri.setParameterValue('SID', 'null');\n    request.setDecodeInitialResponse();\n\n    request.xmlHttpPost(uri, null, true);  // Send as a GET\n  } else {\n    request.xmlHttpPost(uri, requestText, true);\n  }\n};\n\n\n/**\n * @return {number} The number of raw JSON messages to be encoded\n * with the fast-handshake (GET) request, including zero. If messages are not\n * encoded as raw JSON data, return WebChannelBase.MAX_MAPS_PER_REQUEST_\n * @private\n */\nWebChannelBase.prototype.getMaxNumMessagesForFastHandshake_ = function() {\n  'use strict';\n  let total = 0;\n  for (let i = 0; i < this.outgoingMaps_.length; i++) {\n    const map = this.outgoingMaps_[i];\n    const size = map.getRawDataSize();\n    if (size === undefined) {\n      break;\n    }\n    total += size;\n\n    if (total > WebChannelBase.MAX_CHARS_PER_GET_) {\n      return i;\n    }\n\n    if (total === WebChannelBase.MAX_CHARS_PER_GET_ ||\n        i === this.outgoingMaps_.length - 1) {\n      return i + 1;\n    }\n  }\n\n  return WebChannelBase.MAX_MAPS_PER_REQUEST_;\n};\n\n\n\n/**\n * Makes a forward channel request using XMLHTTP.\n * @param {!ChannelRequest=} opt_retryRequest A failed request to retry.\n * @private\n */\nWebChannelBase.prototype.makeForwardChannelRequest_ = function(\n    opt_retryRequest) {\n  'use strict';\n  let rid;\n  if (opt_retryRequest) {\n    rid = opt_retryRequest.getRequestId();  // Reuse the same RID for a retry\n  } else {\n    rid = this.nextRid_++;\n  }\n\n  const uri = this.forwardChannelUri_.clone();\n  uri.setParameterValue('SID', this.sid_);\n  uri.setParameterValue('RID', rid);\n  uri.setParameterValue('AID', this.lastArrayId_);\n\n  this.addAdditionalParams_(uri);\n\n  if (this.httpHeadersOverwriteParam_ && this.extraHeaders_) {\n    httpCors.setHttpHeadersWithOverwriteParam(\n        uri, this.httpHeadersOverwriteParam_, this.extraHeaders_);\n  }\n\n  const request = ChannelRequest.createChannelRequest(\n      this, this.channelDebug_, this.sid_, rid,\n      this.forwardChannelRetryCount_ + 1);\n\n  if (this.httpHeadersOverwriteParam_ === null) {\n    request.setExtraHeaders(this.extraHeaders_);\n  }\n\n  let requestText;\n  if (opt_retryRequest) {\n    this.requeuePendingMaps_(opt_retryRequest);\n  }\n  requestText =\n      this.dequeueOutgoingMaps_(request, WebChannelBase.MAX_MAPS_PER_REQUEST_);\n\n  // Randomize from 50%-100% of the forward channel timeout to avoid\n  // a big hit if servers happen to die at once.\n  request.setTimeout(\n      Math.round(this.forwardChannelRequestTimeoutMs_ * 0.50) +\n      Math.round(this.forwardChannelRequestTimeoutMs_ * 0.50 * Math.random()));\n  this.forwardChannelRequestPool_.addRequest(request);\n  request.xmlHttpPost(uri, requestText, true);\n};\n\n\n/**\n * Adds additional query parameters from `extraParams_` and `handler_` to the\n * given URI.\n * @param {!goog.Uri} uri The URI to add the parameters to.\n * @private\n */\nWebChannelBase.prototype.addAdditionalParams_ = function(uri) {\n  'use strict';\n  if (this.extraParams_) {\n    goog.object.forEach(this.extraParams_, function(value, key) {\n      'use strict';\n      uri.setParameterValue(key, value);\n    });\n  }\n\n  if (this.handler_) {\n    const params = this.handler_.getAdditionalParams(this);\n    if (params) {\n      goog.structs.forEach(params, function(value, key, coll) {\n        'use strict';\n        uri.setParameterValue(key, value);\n      });\n    }\n  }\n};\n\n\n/**\n * Returns the request text from the outgoing maps and resets it.\n * @param {!ChannelRequest} request The new request for sending the messages.\n * @param {number} maxNum The maximum number of messages to be encoded\n * @return {string} The encoded request text created from all the currently\n *                  queued outgoing maps.\n * @private\n */\nWebChannelBase.prototype.dequeueOutgoingMaps_ = function(request, maxNum) {\n  'use strict';\n  const count = Math.min(this.outgoingMaps_.length, maxNum);\n\n  const badMapHandler = this.handler_ ?\n      goog.bind(this.handler_.badMapError, this.handler_, this) :\n      null;\n  const result = this.wireCodec_.encodeMessageQueue(\n      this.outgoingMaps_, count, badMapHandler);\n\n  request.setPendingMessages(this.outgoingMaps_.splice(0, count));\n\n  return result;\n};\n\n\n/**\n * Requeues unacknowledged sent arrays for retransmission in the next forward\n * channel request.\n * @param {!ChannelRequest} retryRequest A failed request to retry.\n * @private\n */\nWebChannelBase.prototype.requeuePendingMaps_ = function(retryRequest) {\n  'use strict';\n  this.outgoingMaps_ =\n      retryRequest.getPendingMessages().concat(this.outgoingMaps_);\n};\n\n\n/**\n * Ensures there is a backchannel request for receiving data from the server.\n * @private\n */\nWebChannelBase.prototype.ensureBackChannel_ = function() {\n  'use strict';\n  if (this.backChannelRequest_) {\n    // already have one\n    return;\n  }\n\n  if (this.backChannelTimerId_) {\n    // no need to start a new request - one is already scheduled\n    return;\n  }\n\n  this.backChannelAttemptId_ = 1;\n\n  // Use async.run instead of setTimeout(0) to avoid the 1s message delay\n  // from chrome/firefox background tabs\n  // backChannelTimerId_ stays unset, as with setTimeout(0)\n  goog.async.run(this.onStartBackChannelTimer_, this);\n\n  this.backChannelRetryCount_ = 0;\n};\n\n\n/**\n * Schedules a back-channel retry, unless the max retries has been reached.\n * @return {boolean} true iff a retry was scheduled.\n * @private\n */\nWebChannelBase.prototype.maybeRetryBackChannel_ = function() {\n  'use strict';\n  if (this.backChannelRequest_ || this.backChannelTimerId_) {\n    // Should be impossible to be called in this state.\n    this.channelDebug_.severe('Request already in progress');\n    return false;\n  }\n\n  if (this.backChannelRetryCount_ >= this.getBackChannelMaxRetries()) {\n    return false;\n  }\n\n  this.channelDebug_.debug('Going to retry GET');\n\n  this.backChannelAttemptId_++;\n  this.backChannelTimerId_ = requestStats.setTimeout(\n      goog.bind(this.onStartBackChannelTimer_, this),\n      this.getRetryTime_(this.backChannelRetryCount_));\n  this.backChannelRetryCount_++;\n  return true;\n};\n\n\n/**\n * Timer callback for ensureBackChannel_.\n * @private\n */\nWebChannelBase.prototype.onStartBackChannelTimer_ = function() {\n  'use strict';\n  this.backChannelTimerId_ = null;\n  this.startBackChannel_();\n\n  if (!this.detectBufferingProxy_) {\n    return;\n  }\n\n  if (this.bpDetectionDone_) {\n    return;\n  }\n\n  if (this.backChannelRequest_ == null || this.handshakeRttMs_ <= 0) {\n    this.channelDebug_.warning(\n        'Skip bpDetectionTimerId_ ' + this.backChannelRequest_ + ' ' +\n        this.handshakeRttMs_);\n    return;\n  }\n\n  // This goes with each new request until bpDetectionDone_\n  const bpDetectionTimeout = 2 * this.handshakeRttMs_;\n  this.channelDebug_.info('BP detection timer enabled: ' + bpDetectionTimeout);\n\n  this.bpDetectionTimerId_ = requestStats.setTimeout(\n      goog.bind(this.onBpDetectionTimer_, this), bpDetectionTimeout);\n};\n\n\n/**\n * Timer callback for bpDetection.\n * @private\n */\nWebChannelBase.prototype.onBpDetectionTimer_ = function() {\n  'use strict';\n  if (!this.bpDetectionTimerId_) {\n    this.channelDebug_.warning('Invalid operation.');\n    return;\n  }\n\n  this.bpDetectionTimerId_ = null;\n  this.channelDebug_.info('BP detection timeout reached.');\n\n  goog.asserts.assert(\n      this.backChannelRequest_ != null,\n      'Invalid state: no backchannel request');\n\n  // We wait for extra response payload in addition to just headers to\n  // cancel the timer.\n  if (this.backChannelRequest_.getXhr() != null) {\n    const responseData = this.backChannelRequest_.getXhr().getResponseText();\n    if (responseData) {\n      this.channelDebug_.warning(\n          'Timer should have been cancelled : ' + responseData);\n    }\n  }\n\n  // Enable long-polling\n  this.channelDebug_.info(\n      'Buffering proxy detected and switch to long-polling!');\n  this.enableStreaming_ = false;\n\n  this.bpDetectionDone_ = true;\n  requestStats.notifyStatEvent(requestStats.Stat.PROXY);\n\n  // Cancel the request and start a new one immediately\n  this.cancelBackChannelRequest_();\n  this.startBackChannel_();\n};\n\n\n/**\n * Clears the timer for BP detection.\n * @private\n */\nWebChannelBase.prototype.clearBpDetectionTimer_ = function() {\n  'use strict';\n  if (this.bpDetectionTimerId_ != null) {\n    this.channelDebug_.debug('Cancel the BP detection timer.');\n    goog.global.clearTimeout(this.bpDetectionTimerId_);\n    this.bpDetectionTimerId_ = null;\n  }\n};\n\n\n/**\n * Begins a new back channel operation to the server.\n * @private\n */\nWebChannelBase.prototype.startBackChannel_ = function() {\n  'use strict';\n  if (!this.okToMakeRequest_()) {\n    // channel is cancelled\n    return;\n  }\n\n  this.channelDebug_.debug('Creating new HttpRequest');\n  this.backChannelRequest_ = ChannelRequest.createChannelRequest(\n      this, this.channelDebug_, this.sid_, 'rpc', this.backChannelAttemptId_);\n\n  if (this.httpHeadersOverwriteParam_ === null) {\n    this.backChannelRequest_.setExtraHeaders(this.extraHeaders_);\n  }\n\n  this.backChannelRequest_.setReadyStateChangeThrottle(\n      this.readyStateChangeThrottleMs_);\n  const uri = this.backChannelUri_.clone();\n  uri.setParameterValue('RID', 'rpc');\n  uri.setParameterValue('SID', this.sid_);\n  uri.setParameterValue('CI', this.enableStreaming_ ? '0' : '1');\n  uri.setParameterValue('AID', this.lastArrayId_);\n  uri.setParameterValue('TYPE', 'xmlhttp');\n\n  this.addAdditionalParams_(uri);\n\n  if (this.httpHeadersOverwriteParam_ && this.extraHeaders_) {\n    httpCors.setHttpHeadersWithOverwriteParam(\n        uri, this.httpHeadersOverwriteParam_, this.extraHeaders_);\n  }\n\n  if (this.backChannelRequestTimeoutMs_) {\n    this.backChannelRequest_.setTimeout(this.backChannelRequestTimeoutMs_);\n  }\n\n  this.backChannelRequest_.xmlHttpGet(\n      uri, true /* decodeChunks */, this.hostPrefix_);\n\n  this.channelDebug_.debug('New Request created');\n};\n\n\n/**\n * Gives the handler a chance to return an error code and stop channel\n * execution. A handler might want to do this to check that the user is still\n * logged in, for example.\n * @private\n * @return {boolean} If it's OK to make a request.\n */\nWebChannelBase.prototype.okToMakeRequest_ = function() {\n  'use strict';\n  if (this.handler_) {\n    const result = this.handler_.okToMakeRequest(this);\n    if (result != WebChannelBase.Error.OK) {\n      this.channelDebug_.debug(\n          'Handler returned error code from okToMakeRequest');\n      this.signalError_(result);\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.onFirstByteReceived = function(request, responseText) {\n  'use strict';\n  if (this.backChannelRequest_ == request && this.detectBufferingProxy_) {\n    if (!this.bpDetectionDone_) {\n      this.channelDebug_.info(\n          'Great, no buffering proxy detected. Bytes received: ' +\n          responseText.length);\n      goog.asserts.assert(\n          this.bpDetectionTimerId_, 'Timer should not have been cancelled.');\n      this.clearBpDetectionTimer_();\n      this.bpDetectionDone_ = true;\n      requestStats.notifyStatEvent(requestStats.Stat.NOPROXY);\n    }\n  }\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.onRequestData = function(request, responseText) {\n  'use strict';\n  if (this.state_ == WebChannelBase.State.CLOSED ||\n      (this.backChannelRequest_ != request &&\n       !this.forwardChannelRequestPool_.hasRequest(request))) {\n    // either CLOSED or a request we don't know about (perhaps an old request)\n    return;\n  }\n\n  // first to check if request has been upgraded to backchannel\n  if (!request.isInitialResponseDecoded() &&\n      this.forwardChannelRequestPool_.hasRequest(request) &&\n      this.state_ == WebChannelBase.State.OPENED) {\n    let response;\n    try {\n      response = this.wireCodec_.decodeMessage(responseText);\n    } catch (ex) {\n      response = null;\n    }\n    if (Array.isArray(response) && response.length == 3) {\n      this.handlePostResponse_(/** @type {!Array<?>} */ (response), request);\n      this.onForwardChannelFlushed_();\n    } else {\n      this.channelDebug_.debug('Bad POST response data returned');\n      this.signalError_(WebChannelBase.Error.BAD_RESPONSE);\n    }\n  } else {\n    if (request.isInitialResponseDecoded() ||\n        this.backChannelRequest_ == request) {\n      this.clearDeadBackchannelTimer_();\n    }\n\n    if (!goog.string.isEmptyOrWhitespace(responseText)) {\n      let response = this.wireCodec_.decodeMessage(responseText);\n      this.onInput_(/** @type {!Array<?>} */ (response), request);\n    }\n  }\n};\n\n\n/**\n * Checks if we need call the flush callback.\n *\n * @private\n */\nWebChannelBase.prototype.onForwardChannelFlushed_ = function() {\n  'use strict';\n  if (this.forwardChannelRequestPool_.getRequestCount() <= 1) {\n    if (this.forwardChannelFlushedCallback_) {\n      try {\n        this.forwardChannelFlushedCallback_();\n      } catch (ex) {\n        this.channelDebug_.dumpException(\n            ex, 'Exception from forwardChannelFlushedCallback_ ');\n      }\n      // reset\n      this.forwardChannelFlushedCallback_ = undefined;\n    }\n  }\n};\n\n\n/**\n * Handles a POST response from the server.\n * @param {Array<number>} responseValues The key value pairs in\n *     the POST response.\n * @param {!ChannelRequest} forwardReq The forward channel request that\n * triggers this function call.\n * @private\n */\nWebChannelBase.prototype.handlePostResponse_ = function(\n    responseValues, forwardReq) {\n  'use strict';\n  // The first response value is set to 0 if server is missing backchannel.\n  if (responseValues[0] == 0) {\n    this.handleBackchannelMissing_(forwardReq);\n    return;\n  }\n  this.lastPostResponseArrayId_ = responseValues[1];\n  const outstandingArrays = this.lastPostResponseArrayId_ - this.lastArrayId_;\n  if (0 < outstandingArrays) {\n    const numOutstandingBackchannelBytes = responseValues[2];\n    this.channelDebug_.debug(\n        numOutstandingBackchannelBytes + ' bytes (in ' + outstandingArrays +\n        ' arrays) are outstanding on the BackChannel');\n    if (!this.shouldRetryBackChannel_(numOutstandingBackchannelBytes)) {\n      return;\n    }\n    if (!this.deadBackChannelTimerId_) {\n      // We expect to receive data within 2 RTTs or we retry the backchannel.\n      this.deadBackChannelTimerId_ = requestStats.setTimeout(\n          goog.bind(this.onBackChannelDead_, this),\n          2 * WebChannelBase.RTT_ESTIMATE);\n    }\n  }\n};\n\n\n/**\n * Handles a POST response from the server telling us that it has detected that\n * we have no hanging GET connection.\n * @param {!ChannelRequest} forwardReq The forward channel request that\n * triggers this function call.\n * @private\n */\nWebChannelBase.prototype.handleBackchannelMissing_ = function(forwardReq) {\n  'use strict';\n  // As long as the back channel was started before the POST was sent,\n  // we should retry the backchannel. We give a slight buffer of RTT_ESTIMATE\n  // so as not to excessively retry the backchannel\n  this.channelDebug_.debug('Server claims our backchannel is missing.');\n  if (this.backChannelTimerId_) {\n    this.channelDebug_.debug('But we are currently starting the request.');\n    return;\n  } else if (!this.backChannelRequest_) {\n    this.channelDebug_.warning('We do not have a BackChannel established');\n  } else if (\n      this.backChannelRequest_.getRequestStartTime() +\n          WebChannelBase.RTT_ESTIMATE <\n      forwardReq.getRequestStartTime()) {\n    this.clearDeadBackchannelTimer_();\n    this.cancelBackChannelRequest_();\n  } else {\n    return;\n  }\n  this.maybeRetryBackChannel_();\n  requestStats.notifyStatEvent(requestStats.Stat.BACKCHANNEL_MISSING);\n};\n\n\n/**\n * Determines whether we should start the process of retrying a possibly\n * dead backchannel.\n * @param {number} outstandingBytes The number of bytes for which the server has\n *     not yet received acknowledgement.\n * @return {boolean} Whether to start the backchannel retry timer.\n * @private\n */\nWebChannelBase.prototype.shouldRetryBackChannel_ = function(outstandingBytes) {\n  'use strict';\n  // Not too many outstanding bytes, not buffered and not after a retry.\n  return outstandingBytes <\n      WebChannelBase.OUTSTANDING_DATA_BACKCHANNEL_RETRY_CUTOFF &&\n      !this.isBuffered() && this.backChannelRetryCount_ == 0;\n};\n\n\n/**\n * Decides which host prefix should be used, if any.  If there is a handler,\n * allows the handler to validate a host prefix provided by the server, and\n * optionally override it.\n * @param {?string} serverHostPrefix The host prefix provided by the server.\n * @return {?string} The host prefix to actually use, if any. Will return null\n *     if the use of host prefixes was disabled via setAllowHostPrefix().\n * @override\n */\nWebChannelBase.prototype.correctHostPrefix = function(serverHostPrefix) {\n  'use strict';\n  if (this.allowHostPrefix_) {\n    if (this.handler_) {\n      return this.handler_.correctHostPrefix(serverHostPrefix);\n    }\n    return serverHostPrefix;\n  }\n  return null;\n};\n\n\n/**\n * Handles the timer that indicates that our backchannel is no longer able to\n * successfully receive data from the server.\n * @private\n */\nWebChannelBase.prototype.onBackChannelDead_ = function() {\n  'use strict';\n  if (this.deadBackChannelTimerId_ != null) {\n    this.deadBackChannelTimerId_ = null;\n    this.cancelBackChannelRequest_();\n    this.maybeRetryBackChannel_();\n    requestStats.notifyStatEvent(requestStats.Stat.BACKCHANNEL_DEAD);\n  }\n};\n\n\n/**\n * Clears the timer that indicates that our backchannel is no longer able to\n * successfully receive data from the server.\n * @private\n */\nWebChannelBase.prototype.clearDeadBackchannelTimer_ = function() {\n  'use strict';\n  if (this.deadBackChannelTimerId_ != null) {\n    goog.global.clearTimeout(this.deadBackChannelTimerId_);\n    this.deadBackChannelTimerId_ = null;\n  }\n};\n\n\n/**\n * Returns whether or not the given error/status combination is fatal or not.\n * On fatal errors we immediately close the session rather than retrying the\n * failed request.\n * @param {?ChannelRequest.Error} error The error code for the\n * failed request.\n * @param {number} statusCode The last HTTP status code.\n * @return {boolean} Whether or not the error is fatal.\n * @private\n */\nWebChannelBase.isFatalError_ = function(error, statusCode) {\n  'use strict';\n  return error == ChannelRequest.Error.UNKNOWN_SESSION_ID ||\n      (error == ChannelRequest.Error.STATUS && statusCode > 0);\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.onRequestComplete = function(request) {\n  'use strict';\n  this.channelDebug_.debug('Request complete');\n  let type;\n  let pendingMessages = null;\n  if (this.backChannelRequest_ == request) {\n    this.clearDeadBackchannelTimer_();\n    this.clearBpDetectionTimer_();\n    this.backChannelRequest_ = null;\n    type = WebChannelBase.ChannelType_.BACK_CHANNEL;\n  } else if (this.forwardChannelRequestPool_.hasRequest(request)) {\n    pendingMessages = request.getPendingMessages();\n    this.forwardChannelRequestPool_.removeRequest(request);\n    type = WebChannelBase.ChannelType_.FORWARD_CHANNEL;\n  } else {\n    // return if it was an old request from a previous session\n    return;\n  }\n\n  if (this.state_ == WebChannelBase.State.CLOSED) {\n    return;\n  }\n\n  this.lastStatusCode_ = request.getLastStatusCode();\n\n  if (request.getSuccess()) {\n    if (type == WebChannelBase.ChannelType_.FORWARD_CHANNEL) {\n      const size = request.getPostData() ? request.getPostData().length : 0;\n      requestStats.notifyTimingEvent(\n          size, Date.now() - request.getRequestStartTime(),\n          this.forwardChannelRetryCount_);\n      this.ensureForwardChannel_();\n      this.onSuccess_(request);\n    } else {  // i.e., back-channel\n      this.ensureBackChannel_();\n    }\n    return;\n  }\n  // Else unsuccessful. Fall through.\n\n  const lastError = request.getLastError();\n  if (!WebChannelBase.isFatalError_(lastError, this.lastStatusCode_)) {\n    // Maybe retry.\n    const self = this;\n    this.channelDebug_.debug(function() {\n      'use strict';\n      return 'Maybe retrying, last error: ' +\n          ChannelRequest.errorStringFromCode(lastError, self.lastStatusCode_);\n    });\n    if (type == WebChannelBase.ChannelType_.FORWARD_CHANNEL) {\n      if (this.maybeRetryForwardChannel_(request)) {\n        return;\n      }\n    }\n    if (type == WebChannelBase.ChannelType_.BACK_CHANNEL) {\n      if (this.maybeRetryBackChannel_()) {\n        return;\n      }\n    }\n    // Else exceeded max retries. Fall through.\n    this.channelDebug_.debug('Exceeded max number of retries');\n  } else {\n    // Else fatal error. Fall through and mark the pending maps as failed.\n    this.channelDebug_.debug('Not retrying due to error type');\n  }\n\n\n  // Abort the channel now\n\n  // Record pending messages from the failed request\n  if (pendingMessages && pendingMessages.length > 0) {\n    this.forwardChannelRequestPool_.addPendingMessages(pendingMessages);\n  }\n\n  this.channelDebug_.debug('Error: HTTP request failed');\n  switch (lastError) {\n    case ChannelRequest.Error.NO_DATA:\n      this.signalError_(WebChannelBase.Error.NO_DATA);\n      break;\n    case ChannelRequest.Error.BAD_DATA:\n      this.signalError_(WebChannelBase.Error.BAD_DATA);\n      break;\n    case ChannelRequest.Error.UNKNOWN_SESSION_ID:\n      this.signalError_(WebChannelBase.Error.UNKNOWN_SESSION_ID);\n      break;\n    default:\n      this.signalError_(WebChannelBase.Error.REQUEST_FAILED);\n      break;\n  }\n};\n\n\n/**\n * @param {number} retryCount Number of retries so far.\n * @return {number} Time in ms before firing next retry request.\n * @private\n */\nWebChannelBase.prototype.getRetryTime_ = function(retryCount) {\n  'use strict';\n  let retryTime = this.baseRetryDelayMs_ +\n      Math.floor(Math.random() * this.retryDelaySeedMs_);\n  if (!this.isActive()) {\n    this.channelDebug_.debug('Inactive channel');\n    retryTime = retryTime * WebChannelBase.INACTIVE_CHANNEL_RETRY_FACTOR;\n  }\n  // Backoff for subsequent retries\n  retryTime *= retryCount;\n  return retryTime;\n};\n\n\n/**\n * @param {number} baseDelayMs The base part of the retry delay, in ms.\n * @param {number} delaySeedMs A random delay between 0 and this is added to\n *     the base part.\n */\nWebChannelBase.prototype.setRetryDelay = function(baseDelayMs, delaySeedMs) {\n  'use strict';\n  this.baseRetryDelayMs_ = baseDelayMs;\n  this.retryDelaySeedMs_ = delaySeedMs;\n};\n\n\n/**\n * Apply any handshake control headers.\n * @param {!ChannelRequest} request The underlying request object\n * @private\n */\nWebChannelBase.prototype.applyControlHeaders_ = function(request) {\n  'use strict';\n  const xhr = request.getXhr();\n  if (xhr) {\n    const clientProtocol =\n        xhr.getStreamingResponseHeader(WebChannel.X_CLIENT_WIRE_PROTOCOL);\n    if (clientProtocol) {\n      this.forwardChannelRequestPool_.applyClientProtocol(clientProtocol);\n    }\n\n    if (this.getHttpSessionIdParam()) {\n      const httpSessionIdHeader =\n          xhr.getStreamingResponseHeader(WebChannel.X_HTTP_SESSION_ID);\n      if (httpSessionIdHeader) {\n        this.setHttpSessionId(httpSessionIdHeader);\n        // update the cached uri\n        const httpSessionIdParam = this.getHttpSessionIdParam();\n\n        this.forwardChannelUri_.setParameterValue(\n            /** @type {string} */ (httpSessionIdParam),  // never null\n            httpSessionIdHeader);\n      } else {\n        this.channelDebug_.warning(\n            'Missing X_HTTP_SESSION_ID in the handshake response');\n      }\n    }\n  }\n};\n\n\n/**\n * Processes the data returned by the server.\n * @param {!Array<!Array<?>>} respArray The response array returned\n *     by the server.\n * @param {!ChannelRequest} request The underlying request object\n * @private\n */\nWebChannelBase.prototype.onInput_ = function(respArray, request) {\n  'use strict';\n  const batch =\n      this.handler_ && this.handler_.channelHandleMultipleArrays ? [] : null;\n  for (let i = 0; i < respArray.length; i++) {\n    let nextArray = respArray[i];\n    this.lastArrayId_ = nextArray[0];\n    nextArray = nextArray[1];\n    if (this.state_ == WebChannelBase.State.OPENING) {\n      if (nextArray[0] == 'c') {\n        this.sid_ = nextArray[1];\n        this.hostPrefix_ = this.correctHostPrefix(nextArray[2]);\n\n        const negotiatedVersion = nextArray[3];\n        if (negotiatedVersion != null) {\n          this.channelVersion_ = negotiatedVersion;\n          this.channelDebug_.info('VER=' + this.channelVersion_);\n        }\n\n        const negotiatedServerVersion = nextArray[4];\n        if (negotiatedServerVersion != null) {\n          this.serverVersion_ = negotiatedServerVersion;\n          this.channelDebug_.info('SVER=' + this.serverVersion_);\n        }\n\n        // CVER=22\n        const serverKeepaliveMs = nextArray[5];\n        if (serverKeepaliveMs != null &&\n            typeof serverKeepaliveMs === 'number' && serverKeepaliveMs > 0) {\n          const timeout = 1.5 * serverKeepaliveMs;\n          this.backChannelRequestTimeoutMs_ = timeout;\n          this.channelDebug_.info('backChannelRequestTimeoutMs_=' + timeout);\n        }\n\n        this.applyControlHeaders_(request);\n\n        this.state_ = WebChannelBase.State.OPENED;\n        if (this.handler_) {\n          this.handler_.channelOpened(this);\n        }\n\n        if (this.detectBufferingProxy_) {\n          this.handshakeRttMs_ = Date.now() - request.getRequestStartTime();\n          this.channelDebug_.info(\n              'Handshake RTT: ' + this.handshakeRttMs_ + 'ms');\n        }\n\n        this.startBackchannelAfterHandshake_(request);\n\n        if (this.outgoingMaps_.length > 0) {\n          this.ensureForwardChannel_();\n        }\n      } else if (nextArray[0] == 'stop' || nextArray[0] == 'close') {\n        // treat close also as an abort\n        this.signalError_(WebChannelBase.Error.STOP);\n      }\n    } else if (this.state_ == WebChannelBase.State.OPENED) {\n      if (nextArray[0] == 'stop' || nextArray[0] == 'close') {\n        if (batch && !(batch.length === 0)) {\n          this.handler_.channelHandleMultipleArrays(this, batch);\n          batch.length = 0;\n        }\n        if (nextArray[0] == 'stop') {\n          this.signalError_(WebChannelBase.Error.STOP);\n        } else {\n          this.disconnect();\n        }\n      } else if (nextArray[0] == 'noop') {\n        // ignore - noop to keep connection happy\n      } else {\n        if (batch) {\n          batch.push(nextArray);\n        } else if (this.handler_) {\n          this.handler_.channelHandleArray(this, nextArray);\n        }\n      }\n      // We have received useful data on the back-channel, so clear its retry\n      // count. We do this because back-channels by design do not complete\n      // quickly, so on a flaky connection we could have many fail to complete\n      // fully but still deliver a lot of data before they fail. We don't want\n      // to count such failures towards the retry limit, because we don't want\n      // to give up on a session if we can still receive data.\n      this.backChannelRetryCount_ = 0;\n    }\n  }\n  if (batch && !(batch.length === 0)) {\n    this.handler_.channelHandleMultipleArrays(this, batch);\n  }\n};\n\n\n/**\n * Starts the backchannel after the handshake.\n *\n * @param {!ChannelRequest} request The underlying request object\n * @private\n */\nWebChannelBase.prototype.startBackchannelAfterHandshake_ = function(request) {\n  'use strict';\n  this.backChannelUri_ = this.getBackChannelUri(\n      this.hostPrefix_, /** @type {string} */ (this.path_));\n\n  if (request.isInitialResponseDecoded()) {\n    this.channelDebug_.debug('Upgrade the handshake request to a backchannel.');\n    this.forwardChannelRequestPool_.removeRequest(request);\n    request.resetTimeout(this.backChannelRequestTimeoutMs_);\n    this.backChannelRequest_ = request;\n  } else {\n    this.ensureBackChannel_();\n  }\n};\n\n\n/**\n * Helper to ensure the channel is in the expected state.\n * @param {...number} var_args The channel must be in one of the indicated\n *     states.\n * @private\n */\nWebChannelBase.prototype.ensureInState_ = function(var_args) {\n  'use strict';\n  goog.asserts.assert(\n      goog.array.contains(arguments, this.state_),\n      'Unexpected channel state: %s', this.state_);\n};\n\n\n/**\n * Signals an error has occurred.\n * @param {WebChannelBase.Error} error The error code for the failure.\n * @private\n */\nWebChannelBase.prototype.signalError_ = function(error) {\n  'use strict';\n  this.channelDebug_.info('Error code ' + error);\n  if (error == WebChannelBase.Error.REQUEST_FAILED) {\n    // Create a separate Internet connection to check\n    // if it's a server error or user's network error.\n    let imageUri = null;\n    if (this.handler_) {\n      imageUri = this.handler_.getNetworkTestImageUri(this);\n    }\n    netUtils.testNetwork(goog.bind(this.testNetworkCallback_, this), imageUri);\n  } else {\n    requestStats.notifyStatEvent(requestStats.Stat.ERROR_OTHER);\n  }\n  this.onError_(error);\n};\n\n\n/**\n * Callback for netUtils.testNetwork during error handling.\n * @param {boolean} networkUp Whether the network is up.\n * @private\n */\nWebChannelBase.prototype.testNetworkCallback_ = function(networkUp) {\n  'use strict';\n  if (networkUp) {\n    this.channelDebug_.info('Successfully pinged google.com');\n    requestStats.notifyStatEvent(requestStats.Stat.ERROR_OTHER);\n  } else {\n    this.channelDebug_.info('Failed to ping google.com');\n    requestStats.notifyStatEvent(requestStats.Stat.ERROR_NETWORK);\n    // Do not call onError_ again to eliminate duplicated Error events.\n  }\n};\n\n\n/**\n * Called when messages have been successfully sent from the queue.\n * @param {!ChannelRequest} request The request object\n * @private\n */\nWebChannelBase.prototype.onSuccess_ = function(request) {\n  'use strict';\n  if (this.handler_) {\n    this.handler_.channelSuccess(this, request);\n  }\n};\n\n\n/**\n * Called when we've determined the final error for a channel. It closes the\n * notifiers the handler of the error and closes the channel.\n * @param {WebChannelBase.Error} error  The error code for the failure.\n * @private\n */\nWebChannelBase.prototype.onError_ = function(error) {\n  'use strict';\n  this.channelDebug_.debug('HttpChannel: error - ' + error);\n  this.state_ = WebChannelBase.State.CLOSED;\n  if (this.handler_) {\n    this.handler_.channelError(this, error);\n  }\n  this.onClose_();\n  this.cancelRequests_();\n};\n\n\n/**\n * Called when the channel has been closed. It notifiers the handler of the\n * event, and reports any pending or undelivered maps.\n * @private\n */\nWebChannelBase.prototype.onClose_ = function() {\n  'use strict';\n  this.state_ = WebChannelBase.State.CLOSED;\n  this.nonAckedMapsAtChannelClose_ = [];\n  if (this.handler_) {\n    const pendingMessages =\n        this.forwardChannelRequestPool_.getPendingMessages();\n\n    if (pendingMessages.length == 0 && this.outgoingMaps_.length == 0) {\n      this.handler_.channelClosed(this);\n    } else {\n      this.channelDebug_.debug(\n          () => 'Number of undelivered maps' +\n              ', pending: ' + pendingMessages.length +\n              ', outgoing: ' + this.outgoingMaps_.length);\n\n      goog.array.extend(this.nonAckedMapsAtChannelClose_, pendingMessages);\n      goog.array.extend(this.nonAckedMapsAtChannelClose_, this.outgoingMaps_);\n\n      this.forwardChannelRequestPool_.clearPendingMessages();\n\n      const copyOfUndeliveredMaps = goog.array.clone(this.outgoingMaps_);\n      this.outgoingMaps_.length = 0;\n\n      this.handler_.channelClosed(this, pendingMessages, copyOfUndeliveredMaps);\n    }\n  }\n};\n\n/**\n * @return {!Array<!Wire.QueuedMap>} Returns the list of non-acked maps, both\n * during an active channel or after the channel is closed. Refer to the\n * `getNonAckedMessages()` API for definitions of non-acked messages.\n */\nWebChannelBase.prototype.getNonAckedMaps = function() {\n  if (this.state_ == WebChannelBase.State.CLOSED) {\n    goog.asserts.assert(\n        this.nonAckedMapsAtChannelClose_ != null,\n        'nonAckedMapsAtChannelClose_ is not set after channel close.');\n    return this.nonAckedMapsAtChannelClose_;\n  }\n\n  // The underlying message objects are not cloned and thus exposes a mutability\n  // risk, but is chosen to make strict equality (i.e. ===) checks possible for\n  // callers.\n  let unAckedMaps = [];\n  goog.array.extend(\n      unAckedMaps, this.forwardChannelRequestPool_.getPendingMessages());\n  goog.array.extend(unAckedMaps, this.outgoingMaps_);\n\n  return unAckedMaps;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.getForwardChannelUri = function(path) {\n  'use strict';\n  const uri = this.createDataUri(null, path);\n  this.channelDebug_.debug('GetForwardChannelUri: ' + uri);\n  return uri;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.getConnectionState = function() {\n  'use strict';\n  return this.connState_;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.getBackChannelUri = function(hostPrefix, path) {\n  'use strict';\n  const uri = this.createDataUri(\n      this.shouldUseSecondaryDomains() ? hostPrefix : null, path);\n  this.channelDebug_.debug('GetBackChannelUri: ' + uri);\n  return uri;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.createDataUri = function(\n    hostPrefix, path, opt_overridePort) {\n  'use strict';\n  let uri = goog.Uri.parse(path);\n  const uriAbsolute = (uri.getDomain() != '');\n  if (uriAbsolute) {\n    if (hostPrefix) {\n      uri.setDomain(hostPrefix + '.' + uri.getDomain());\n    }\n\n    uri.setPort(opt_overridePort || uri.getPort());\n  } else {\n    const locationPage = goog.global.location;\n    let hostName;\n    if (hostPrefix) {\n      hostName = hostPrefix + '.' + locationPage.hostname;\n    } else {\n      hostName = locationPage.hostname;\n    }\n\n    const port = opt_overridePort || +locationPage.port;\n\n    uri = goog.Uri.create(locationPage.protocol, null, hostName, port, path);\n  }\n\n  const param = this.getHttpSessionIdParam();\n  const value = this.getHttpSessionId();\n  if (param && value) {\n    uri.setParameterValue(param, value);\n  }\n\n  // Add the protocol version to the URI.\n  uri.setParameterValue('VER', this.channelVersion_);\n\n  this.addAdditionalParams_(uri);\n\n  return uri;\n};\n\n/**\n * @override\n * @param {?string} hostPrefix The host prefix, if we need an XhrIo object\n *     capable of calling a secondary domain.\n * @param {boolean=} isStreaming Whether or not fetch/streams are enabled for\n *     the underlying HTTP request.\n * @return {!goog.net.XhrIo} A new XhrIo object.\n */\nWebChannelBase.prototype.createXhrIo = function(hostPrefix, isStreaming) {\n  'use strict';\n  if (hostPrefix && !this.supportsCrossDomainXhrs_) {\n    throw new Error('Can\\'t create secondary domain capable XhrIo object.');\n  }\n  let xhr;\n  if (isStreaming && this.usesFetchStreams_ && !this.xmlHttpFactory_) {\n    xhr = new goog.net.XhrIo(\n        new goog.net.FetchXmlHttpFactory({streamBinaryChunks: true}));\n  } else {\n    xhr = new goog.net.XhrIo(this.xmlHttpFactory_);\n  }\n  xhr.setWithCredentials(this.supportsCrossDomainXhrs_);\n  return xhr;\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.isActive = function() {\n  'use strict';\n  return !!this.handler_ && this.handler_.isActive(this);\n};\n\n\n/**\n * @override\n */\nWebChannelBase.prototype.shouldUseSecondaryDomains = function() {\n  'use strict';\n  return this.supportsCrossDomainXhrs_;\n};\n\n\n/**\n * Sets (overwrites) the forward channel flush callback.\n *\n * @param {function()} callback The callback to be invoked.\n */\nWebChannelBase.prototype.setForwardChannelFlushCallback = function(callback) {\n  'use strict';\n  this.forwardChannelFlushedCallback_ = callback;\n};\n\n\n/**\n * Abstract base class for the channel handler\n * @constructor\n * @struct\n */\nWebChannelBase.Handler = function() {};\n\n\n/**\n * Callback handler for when a batch of response arrays is received from the\n * server. When null, batched dispatching is disabled.\n * @type {?function(!WebChannelBase, !Array<!Array<?>>)}\n */\nWebChannelBase.Handler.prototype.channelHandleMultipleArrays = null;\n\n\n/**\n * Whether it's okay to make a request to the server. A handler can return\n * false if the channel should fail. For example, if the user has logged out,\n * the handler may want all requests to fail immediately.\n * @param {WebChannelBase} channel The channel.\n * @return {WebChannelBase.Error} An error code. The code should\n * return WebChannelBase.Error.OK to indicate it's okay. Any other\n * error code will cause a failure.\n */\nWebChannelBase.Handler.prototype.okToMakeRequest = function(channel) {\n  'use strict';\n  return WebChannelBase.Error.OK;\n};\n\n\n/**\n * Indicates the WebChannel has successfully negotiated with the server\n * and can now send and receive data.\n * @param {WebChannelBase} channel The channel.\n */\nWebChannelBase.Handler.prototype.channelOpened = function(channel) {};\n\n\n/**\n * New input is available for the application to process.\n *\n * @param {WebChannelBase} channel The channel.\n * @param {Array<?>} array The data array.\n */\nWebChannelBase.Handler.prototype.channelHandleArray = function(\n    channel, array) {};\n\n\n/**\n * Indicates messages that have been successfully sent on the channel.\n *\n * @param {WebChannelBase} channel The channel.\n * @param {!ChannelRequest} request The request object that contains\n *     the pending messages that have been successfully delivered to the server.\n */\nWebChannelBase.Handler.prototype.channelSuccess = function(channel, request) {};\n\n\n/**\n * Indicates an error occurred on the WebChannel.\n *\n * @param {WebChannelBase} channel The channel.\n * @param {WebChannelBase.Error} error The error code.\n */\nWebChannelBase.Handler.prototype.channelError = function(channel, error) {};\n\n\n/**\n * Indicates the WebChannel is closed. Also notifies about which maps,\n * if any, that may not have been delivered to the server.\n * @param {WebChannelBase} channel The channel.\n * @param {Array<Wire.QueuedMap>=} opt_pendingMaps The\n *     array of pending maps, which may or may not have been delivered to the\n *     server.\n * @param {Array<Wire.QueuedMap>=} opt_undeliveredMaps\n *     The array of undelivered maps, which have definitely not been delivered\n *     to the server.\n */\nWebChannelBase.Handler.prototype.channelClosed = function(\n    channel, opt_pendingMaps, opt_undeliveredMaps) {};\n\n\n/**\n * Gets any parameters that should be added at the time another connection is\n * made to the server.\n * @param {WebChannelBase} channel The channel.\n * @return {!Object} Extra parameter keys and values to add to the requests.\n */\nWebChannelBase.Handler.prototype.getAdditionalParams = function(channel) {\n  'use strict';\n  return {};\n};\n\n\n/**\n * Gets the URI of an image that can be used to test network connectivity.\n * @param {WebChannelBase} channel The channel.\n * @return {goog.Uri?} A custom URI to load for the network test.\n */\nWebChannelBase.Handler.prototype.getNetworkTestImageUri = function(channel) {\n  'use strict';\n  return null;\n};\n\n\n/**\n * Gets whether this channel is currently active. This is used to determine the\n * length of time to wait before retrying.\n * @param {WebChannelBase} channel The channel.\n * @return {boolean} Whether the channel is currently active.\n */\nWebChannelBase.Handler.prototype.isActive = function(channel) {\n  'use strict';\n  return true;\n};\n\n/**\n * Whether or not this channel uses WHATWG Fetch/streams.\n * @override\n * @return {boolean}\n */\nWebChannelBase.prototype.usesFetchStreams = function() {\n  'use strict';\n  return this.usesFetchStreams_;\n};\n\n\n/**\n * Called by the channel if enumeration of the map throws an exception.\n * @param {WebChannelBase} channel The channel.\n * @param {Object} map The map that can't be enumerated.\n */\nWebChannelBase.Handler.prototype.badMapError = function(channel, map) {};\n\n\n/**\n * Allows the handler to override a host prefix provided by the server. Will\n * be called whenever the channel has received such a prefix and is considering\n * its use.\n * @param {?string} serverHostPrefix The host prefix provided by the server.\n * @return {?string} The host prefix the client should use.\n */\nWebChannelBase.Handler.prototype.correctHostPrefix = function(\n    serverHostPrefix) {\n  'use strict';\n  return serverHostPrefix;\n};\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Class for parsing and formatting URIs.\n *\n * This package is deprecated in favour of the Closure URL package (goog.url)\n * when manipulating URIs for use by a browser. This package uses regular\n * expressions to parse a potential URI which can fall out of sync with how a\n * browser will actually interpret the URI. See\n * `goog.uri.utils.setUrlPackageSupportLoggingHandler` for one way to identify\n * URIs that should instead be parsed using the URL package.\n *\n * Use goog.Uri(string) to parse a URI string.  Use goog.Uri.create(...) to\n * create a new instance of the goog.Uri object from Uri parts.\n *\n * e.g: <code>var myUri = new goog.Uri(window.location);</code>\n *\n * Implements RFC 3986 for parsing/formatting URIs.\n * http://www.ietf.org/rfc/rfc3986.txt\n *\n * Some changes have been made to the interface (more like .NETs), though the\n * internal representation is now of un-encoded parts, this will change the\n * behavior slightly.\n */\n\ngoog.provide('goog.Uri');\ngoog.provide('goog.Uri.QueryData');\n\ngoog.require('goog.array');\ngoog.require('goog.asserts');\ngoog.require('goog.collections.maps');\ngoog.require('goog.string');\ngoog.require('goog.structs');\ngoog.require('goog.uri.utils');\ngoog.require('goog.uri.utils.ComponentIndex');\ngoog.require('goog.uri.utils.StandardQueryParam');\n\n\n\n/**\n * This class contains setters and getters for the parts of the URI.\n * The <code>getXyz</code>/<code>setXyz</code> methods return the decoded part\n * -- so<code>goog.Uri.parse('/foo%20bar').getPath()</code> will return the\n * decoded path, <code>/foo bar</code>.\n *\n * Reserved characters (see RFC 3986 section 2.2) can be present in\n * their percent-encoded form in scheme, domain, and path URI components and\n * will not be auto-decoded. For example:\n * <code>goog.Uri.parse('rel%61tive/path%2fto/resource').getPath()</code> will\n * return <code>relative/path%2fto/resource</code>.\n *\n * The constructor accepts an optional unparsed, raw URI string.  The parser\n * is relaxed, so special characters that aren't escaped but don't cause\n * ambiguities will not cause parse failures.\n *\n * All setters return <code>this</code> and so may be chained, a la\n * <code>goog.Uri.parse('/foo').setFragment('part').toString()</code>.\n *\n * @param {*=} opt_uri Optional string URI to parse\n *        (use goog.Uri.create() to create a URI from parts), or if\n *        a goog.Uri is passed, a clone is created.\n * @param {boolean=} opt_ignoreCase If true, #getParameterValue will ignore\n * the case of the parameter name.\n *\n * @throws URIError If opt_uri is provided and URI is malformed (that is,\n *     if decodeURIComponent fails on any of the URI components).\n * @constructor\n * @struct\n */\ngoog.Uri = function(opt_uri, opt_ignoreCase) {\n  'use strict';\n  /**\n   * Scheme such as \"http\".\n   * @private {string}\n   */\n  this.scheme_ = '';\n\n  /**\n   * User credentials in the form \"username:password\".\n   * @private {string}\n   */\n  this.userInfo_ = '';\n\n  /**\n   * Domain part, e.g. \"www.google.com\".\n   * @private {string}\n   */\n  this.domain_ = '';\n\n  /**\n   * Port, e.g. 8080.\n   * @private {?number}\n   */\n  this.port_ = null;\n\n  /**\n   * Path, e.g. \"/tests/img.png\".\n   * @private {string}\n   */\n  this.path_ = '';\n\n  /**\n   * The fragment without the #.\n   * @private {string}\n   */\n  this.fragment_ = '';\n\n  /**\n   * Whether or not this Uri should be treated as Read Only.\n   * @private {boolean}\n   */\n  this.isReadOnly_ = false;\n\n  /**\n   * Whether or not to ignore case when comparing query params.\n   * @private {boolean}\n   */\n  this.ignoreCase_ = false;\n\n  /**\n   * Object representing query data.\n   * @private {!goog.Uri.QueryData}\n   */\n  this.queryData_;\n\n  // Parse in the uri string\n  var m;\n  if (opt_uri instanceof goog.Uri) {\n    this.ignoreCase_ = (opt_ignoreCase !== undefined) ? opt_ignoreCase :\n                                                        opt_uri.getIgnoreCase();\n    this.setScheme(opt_uri.getScheme());\n    this.setUserInfo(opt_uri.getUserInfo());\n    this.setDomain(opt_uri.getDomain());\n    this.setPort(opt_uri.getPort());\n    this.setPath(opt_uri.getPath());\n    this.setQueryData(opt_uri.getQueryData().clone());\n    this.setFragment(opt_uri.getFragment());\n  } else if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {\n    this.ignoreCase_ = !!opt_ignoreCase;\n\n    // Set the parts -- decoding as we do so.\n    // COMPATIBILITY NOTE - In IE, unmatched fields may be empty strings,\n    // whereas in other browsers they will be undefined.\n    this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || '', true);\n    this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || '', true);\n    this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || '', true);\n    this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);\n    this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || '', true);\n    this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || '', true);\n    this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || '', true);\n\n  } else {\n    this.ignoreCase_ = !!opt_ignoreCase;\n    this.queryData_ = new goog.Uri.QueryData(null, this.ignoreCase_);\n  }\n};\n\n\n/**\n * Parameter name added to stop caching.\n * @type {string}\n */\ngoog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;\n\n\n/**\n * @return {string} The string form of the url.\n * @override\n */\ngoog.Uri.prototype.toString = function() {\n  'use strict';\n  var out = [];\n\n  var scheme = this.getScheme();\n  if (scheme) {\n    out.push(\n        goog.Uri.encodeSpecialChars_(\n            scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true),\n        ':');\n  }\n\n  var domain = this.getDomain();\n  if (domain || scheme == 'file') {\n    out.push('//');\n\n    var userInfo = this.getUserInfo();\n    if (userInfo) {\n      out.push(\n          goog.Uri.encodeSpecialChars_(\n              userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true),\n          '@');\n    }\n\n    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));\n\n    var port = this.getPort();\n    if (port != null) {\n      out.push(':', String(port));\n    }\n  }\n\n  var path = this.getPath();\n  if (path) {\n    if (this.hasDomain() && path.charAt(0) != '/') {\n      out.push('/');\n    }\n    out.push(goog.Uri.encodeSpecialChars_(\n        path,\n        path.charAt(0) == '/' ? goog.Uri.reDisallowedInAbsolutePath_ :\n                                goog.Uri.reDisallowedInRelativePath_,\n        true));\n  }\n\n  var query = this.getEncodedQuery();\n  if (query) {\n    out.push('?', query);\n  }\n\n  var fragment = this.getFragment();\n  if (fragment) {\n    out.push(\n        '#',\n        goog.Uri.encodeSpecialChars_(\n            fragment, goog.Uri.reDisallowedInFragment_));\n  }\n  return out.join('');\n};\n\n\n/**\n * Resolves the given relative URI (a goog.Uri object), using the URI\n * represented by this instance as the base URI.\n *\n * There are several kinds of relative URIs:<br>\n * 1. foo - replaces the last part of the path, the whole query and fragment<br>\n * 2. /foo - replaces the path, the query and fragment<br>\n * 3. //foo - replaces everything from the domain on.  foo is a domain name<br>\n * 4. ?foo - replace the query and fragment<br>\n * 5. #foo - replace the fragment only\n *\n * Additionally, if relative URI has a non-empty path, all \"..\" and \".\"\n * segments will be resolved, as described in RFC 3986.\n *\n * @param {!goog.Uri} relativeUri The relative URI to resolve.\n * @return {!goog.Uri} The resolved URI.\n */\ngoog.Uri.prototype.resolve = function(relativeUri) {\n  'use strict';\n  var absoluteUri = this.clone();\n\n  // we satisfy these conditions by looking for the first part of relativeUri\n  // that is not blank and applying defaults to the rest\n\n  var overridden = relativeUri.hasScheme();\n\n  if (overridden) {\n    absoluteUri.setScheme(relativeUri.getScheme());\n  } else {\n    overridden = relativeUri.hasUserInfo();\n  }\n\n  if (overridden) {\n    absoluteUri.setUserInfo(relativeUri.getUserInfo());\n  } else {\n    overridden = relativeUri.hasDomain();\n  }\n\n  if (overridden) {\n    absoluteUri.setDomain(relativeUri.getDomain());\n  } else {\n    overridden = relativeUri.hasPort();\n  }\n\n  var path = relativeUri.getPath();\n  if (overridden) {\n    absoluteUri.setPort(relativeUri.getPort());\n  } else {\n    overridden = relativeUri.hasPath();\n    if (overridden) {\n      // resolve path properly\n      if (path.charAt(0) != '/') {\n        // path is relative\n        if (this.hasDomain() && !this.hasPath()) {\n          // RFC 3986, section 5.2.3, case 1\n          path = '/' + path;\n        } else {\n          // RFC 3986, section 5.2.3, case 2\n          var lastSlashIndex = absoluteUri.getPath().lastIndexOf('/');\n          if (lastSlashIndex != -1) {\n            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;\n          }\n        }\n      }\n      path = goog.Uri.removeDotSegments(path);\n    }\n  }\n\n  if (overridden) {\n    absoluteUri.setPath(path);\n  } else {\n    overridden = relativeUri.hasQuery();\n  }\n\n  if (overridden) {\n    absoluteUri.setQueryData(relativeUri.getQueryData().clone());\n  } else {\n    overridden = relativeUri.hasFragment();\n  }\n\n  if (overridden) {\n    absoluteUri.setFragment(relativeUri.getFragment());\n  }\n\n  return absoluteUri;\n};\n\n\n/**\n * Clones the URI instance.\n * @return {!goog.Uri} New instance of the URI object.\n */\ngoog.Uri.prototype.clone = function() {\n  'use strict';\n  return new goog.Uri(this);\n};\n\n\n/**\n * @return {string} The encoded scheme/protocol for the URI.\n */\ngoog.Uri.prototype.getScheme = function() {\n  'use strict';\n  return this.scheme_;\n};\n\n\n/**\n * Sets the scheme/protocol.\n * @throws URIError If opt_decode is true and newScheme is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newScheme New scheme value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setScheme = function(newScheme, opt_decode) {\n  'use strict';\n  this.enforceReadOnly();\n  this.scheme_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;\n\n  // remove an : at the end of the scheme so somebody can pass in\n  // window.location.protocol\n  if (this.scheme_) {\n    this.scheme_ = this.scheme_.replace(/:$/, '');\n  }\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the scheme has been set.\n */\ngoog.Uri.prototype.hasScheme = function() {\n  'use strict';\n  return !!this.scheme_;\n};\n\n\n/**\n * @return {string} The decoded user info.\n */\ngoog.Uri.prototype.getUserInfo = function() {\n  'use strict';\n  return this.userInfo_;\n};\n\n\n/**\n * Sets the userInfo.\n * @throws URIError If opt_decode is true and newUserInfo is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newUserInfo New userInfo value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {\n  'use strict';\n  this.enforceReadOnly();\n  this.userInfo_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the user info has been set.\n */\ngoog.Uri.prototype.hasUserInfo = function() {\n  'use strict';\n  return !!this.userInfo_;\n};\n\n\n/**\n * @return {string} The decoded domain.\n */\ngoog.Uri.prototype.getDomain = function() {\n  'use strict';\n  return this.domain_;\n};\n\n\n/**\n * Sets the domain.\n * @throws URIError If opt_decode is true and newDomain is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newDomain New domain value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setDomain = function(newDomain, opt_decode) {\n  'use strict';\n  this.enforceReadOnly();\n  this.domain_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the domain has been set.\n */\ngoog.Uri.prototype.hasDomain = function() {\n  'use strict';\n  return !!this.domain_;\n};\n\n\n/**\n * @return {?number} The port number.\n */\ngoog.Uri.prototype.getPort = function() {\n  'use strict';\n  return this.port_;\n};\n\n\n/**\n * Sets the port number.\n * @param {*} newPort Port number. Will be explicitly casted to a number.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setPort = function(newPort) {\n  'use strict';\n  this.enforceReadOnly();\n\n  if (newPort) {\n    newPort = Number(newPort);\n    if (isNaN(newPort) || newPort < 0) {\n      throw new Error('Bad port number ' + newPort);\n    }\n    this.port_ = newPort;\n  } else {\n    this.port_ = null;\n  }\n\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the port has been set.\n */\ngoog.Uri.prototype.hasPort = function() {\n  'use strict';\n  return this.port_ != null;\n};\n\n\n/**\n * @return {string} The decoded path.\n */\ngoog.Uri.prototype.getPath = function() {\n  'use strict';\n  return this.path_;\n};\n\n\n/**\n * Sets the path.\n * @throws URIError If opt_decode is true and newPath is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newPath New path value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setPath = function(newPath, opt_decode) {\n  'use strict';\n  this.enforceReadOnly();\n  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the path has been set.\n */\ngoog.Uri.prototype.hasPath = function() {\n  'use strict';\n  return !!this.path_;\n};\n\n\n/**\n * @return {boolean} Whether the query string has been set.\n */\ngoog.Uri.prototype.hasQuery = function() {\n  'use strict';\n  return this.queryData_.toString() !== '';\n};\n\n\n/**\n * Sets the query data.\n * @param {goog.Uri.QueryData|string|undefined} queryData QueryData object.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n *     Applies only if queryData is a string.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setQueryData = function(queryData, opt_decode) {\n  'use strict';\n  this.enforceReadOnly();\n\n  if (queryData instanceof goog.Uri.QueryData) {\n    this.queryData_ = queryData;\n    this.queryData_.setIgnoreCase(this.ignoreCase_);\n  } else {\n    if (!opt_decode) {\n      // QueryData accepts encoded query string, so encode it if\n      // opt_decode flag is not true.\n      queryData = goog.Uri.encodeSpecialChars_(\n          queryData, goog.Uri.reDisallowedInQuery_);\n    }\n    this.queryData_ = new goog.Uri.QueryData(queryData, this.ignoreCase_);\n  }\n\n  return this;\n};\n\n\n/**\n * Sets the URI query.\n * @param {string} newQuery New query value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setQuery = function(newQuery, opt_decode) {\n  'use strict';\n  return this.setQueryData(newQuery, opt_decode);\n};\n\n\n/**\n * @return {string} The encoded URI query, not including the ?.\n */\ngoog.Uri.prototype.getEncodedQuery = function() {\n  'use strict';\n  return this.queryData_.toString();\n};\n\n\n/**\n * @return {string} The decoded URI query, not including the ?.\n */\ngoog.Uri.prototype.getDecodedQuery = function() {\n  'use strict';\n  return this.queryData_.toDecodedString();\n};\n\n\n/**\n * Returns the query data.\n * @return {!goog.Uri.QueryData} QueryData object.\n */\ngoog.Uri.prototype.getQueryData = function() {\n  'use strict';\n  return this.queryData_;\n};\n\n\n/**\n * @return {string} The encoded URI query, not including the ?.\n *\n * Warning: This method, unlike other getter methods, returns encoded\n * value, instead of decoded one.\n */\ngoog.Uri.prototype.getQuery = function() {\n  'use strict';\n  return this.getEncodedQuery();\n};\n\n\n/**\n * Sets the value of the named query parameters, clearing previous values for\n * that key.\n *\n * @param {string} key The parameter to set.\n * @param {*} value The new value. Value does not need to be encoded.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setParameterValue = function(key, value) {\n  'use strict';\n  this.enforceReadOnly();\n  this.queryData_.set(key, value);\n  return this;\n};\n\n\n/**\n * Sets the values of the named query parameters, clearing previous values for\n * that key.  Not new values will currently be moved to the end of the query\n * string.\n *\n * So, <code>goog.Uri.parse('foo?a=b&c=d&e=f').setParameterValues('c', ['new'])\n * </code> yields <tt>foo?a=b&e=f&c=new</tt>.</p>\n *\n * @param {string} key The parameter to set.\n * @param {*} values The new values. If values is a single\n *     string then it will be treated as the sole value. Values do not need to\n *     be encoded.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setParameterValues = function(key, values) {\n  'use strict';\n  this.enforceReadOnly();\n\n  if (!Array.isArray(values)) {\n    values = [String(values)];\n  }\n\n  this.queryData_.setValues(key, values);\n\n  return this;\n};\n\n\n/**\n * Returns the value<b>s</b> for a given cgi parameter as a list of decoded\n * query parameter values.\n * @param {string} name The parameter to get values for.\n * @return {!Array<?>} The values for a given cgi parameter as a list of\n *     decoded query parameter values.\n */\ngoog.Uri.prototype.getParameterValues = function(name) {\n  'use strict';\n  return this.queryData_.getValues(name);\n};\n\n\n/**\n * Returns the first value for a given cgi parameter or undefined if the given\n * parameter name does not appear in the query string.\n * @param {string} paramName Unescaped parameter name.\n * @return {string|undefined} The first value for a given cgi parameter or\n *     undefined if the given parameter name does not appear in the query\n *     string.\n */\ngoog.Uri.prototype.getParameterValue = function(paramName) {\n  'use strict';\n  return /** @type {string|undefined} */ (this.queryData_.get(paramName));\n};\n\n\n/**\n * @return {string} The URI fragment, not including the #.\n */\ngoog.Uri.prototype.getFragment = function() {\n  'use strict';\n  return this.fragment_;\n};\n\n\n/**\n * Sets the URI fragment.\n * @throws URIError If opt_decode is true and newFragment is malformed (that is,\n *     if decodeURIComponent fails).\n * @param {string} newFragment New fragment value.\n * @param {boolean=} opt_decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setFragment = function(newFragment, opt_decode) {\n  'use strict';\n  this.enforceReadOnly();\n  this.fragment_ =\n      opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the URI has a fragment set.\n */\ngoog.Uri.prototype.hasFragment = function() {\n  'use strict';\n  return !!this.fragment_;\n};\n\n\n/**\n * Returns true if this has the same domain as that of uri2.\n * @param {!goog.Uri} uri2 The URI object to compare to.\n * @return {boolean} true if same domain; false otherwise.\n */\ngoog.Uri.prototype.hasSameDomainAs = function(uri2) {\n  'use strict';\n  return ((!this.hasDomain() && !uri2.hasDomain()) ||\n          this.getDomain() == uri2.getDomain()) &&\n      ((!this.hasPort() && !uri2.hasPort()) ||\n       this.getPort() == uri2.getPort());\n};\n\n\n/**\n * Adds a random parameter to the Uri.\n * @return {!goog.Uri} Reference to this Uri object.\n */\ngoog.Uri.prototype.makeUnique = function() {\n  'use strict';\n  this.enforceReadOnly();\n  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());\n\n  return this;\n};\n\n\n/**\n * Removes the named query parameter.\n *\n * @param {string} key The parameter to remove.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.removeParameter = function(key) {\n  'use strict';\n  this.enforceReadOnly();\n  this.queryData_.remove(key);\n  return this;\n};\n\n\n/**\n * Sets whether Uri is read only. If this goog.Uri is read-only,\n * enforceReadOnly_ will be called at the start of any function that may modify\n * this Uri.\n * @param {boolean} isReadOnly whether this goog.Uri should be read only.\n * @return {!goog.Uri} Reference to this Uri object.\n */\ngoog.Uri.prototype.setReadOnly = function(isReadOnly) {\n  'use strict';\n  this.isReadOnly_ = isReadOnly;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the URI is read only.\n */\ngoog.Uri.prototype.isReadOnly = function() {\n  'use strict';\n  return this.isReadOnly_;\n};\n\n\n/**\n * Checks if this Uri has been marked as read only, and if so, throws an error.\n * This should be called whenever any modifying function is called.\n */\ngoog.Uri.prototype.enforceReadOnly = function() {\n  'use strict';\n  if (this.isReadOnly_) {\n    throw new Error('Tried to modify a read-only Uri');\n  }\n};\n\n\n/**\n * Sets whether to ignore case.\n * NOTE: If there are already key/value pairs in the QueryData, and\n * ignoreCase_ is set to false, the keys will all be lower-cased.\n * @param {boolean} ignoreCase whether this goog.Uri should ignore case.\n * @return {!goog.Uri} Reference to this Uri object.\n */\ngoog.Uri.prototype.setIgnoreCase = function(ignoreCase) {\n  'use strict';\n  this.ignoreCase_ = ignoreCase;\n  if (this.queryData_) {\n    this.queryData_.setIgnoreCase(ignoreCase);\n  }\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether to ignore case.\n */\ngoog.Uri.prototype.getIgnoreCase = function() {\n  'use strict';\n  return this.ignoreCase_;\n};\n\n\n//==============================================================================\n// Static members\n//==============================================================================\n\n\n/**\n * Creates a uri from the string form.  Basically an alias of new goog.Uri().\n * If a Uri object is passed to parse then it will return a clone of the object.\n *\n * @throws URIError If parsing the URI is malformed. The passed URI components\n *     should all be parseable by decodeURIComponent.\n * @param {*} uri Raw URI string or instance of Uri\n *     object.\n * @param {boolean=} opt_ignoreCase Whether to ignore the case of parameter\n * names in #getParameterValue.\n * @return {!goog.Uri} The new URI object.\n */\ngoog.Uri.parse = function(uri, opt_ignoreCase) {\n  'use strict';\n  return uri instanceof goog.Uri ? uri.clone() :\n                                   new goog.Uri(uri, opt_ignoreCase);\n};\n\n\n/**\n * Creates a new goog.Uri object from unencoded parts.\n *\n * @param {?string=} opt_scheme Scheme/protocol or full URI to parse.\n * @param {?string=} opt_userInfo username:password.\n * @param {?string=} opt_domain www.google.com.\n * @param {?number=} opt_port 9830.\n * @param {?string=} opt_path /some/path/to/a/file.html.\n * @param {string|goog.Uri.QueryData=} opt_query a=1&b=2.\n * @param {?string=} opt_fragment The fragment without the #.\n * @param {boolean=} opt_ignoreCase Whether to ignore parameter name case in\n *     #getParameterValue.\n *\n * @return {!goog.Uri} The new URI object.\n */\ngoog.Uri.create = function(\n    opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query,\n    opt_fragment, opt_ignoreCase) {\n  'use strict';\n  var uri = new goog.Uri(null, opt_ignoreCase);\n\n  // Only set the parts if they are defined and not empty strings.\n  opt_scheme && uri.setScheme(opt_scheme);\n  opt_userInfo && uri.setUserInfo(opt_userInfo);\n  opt_domain && uri.setDomain(opt_domain);\n  opt_port && uri.setPort(opt_port);\n  opt_path && uri.setPath(opt_path);\n  opt_query && uri.setQueryData(opt_query);\n  opt_fragment && uri.setFragment(opt_fragment);\n\n  return uri;\n};\n\n\n/**\n * Resolves a relative Uri against a base Uri, accepting both strings and\n * Uri objects.\n *\n * @param {*} base Base Uri.\n * @param {*} rel Relative Uri.\n * @return {!goog.Uri} Resolved uri.\n */\ngoog.Uri.resolve = function(base, rel) {\n  'use strict';\n  if (!(base instanceof goog.Uri)) {\n    base = goog.Uri.parse(base);\n  }\n\n  if (!(rel instanceof goog.Uri)) {\n    rel = goog.Uri.parse(rel);\n  }\n\n  return base.resolve(rel);\n};\n\n\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {string} path A non-empty path component.\n * @return {string} Path component with removed dot segments.\n */\ngoog.Uri.removeDotSegments = function(path) {\n  'use strict';\n  if (path == '..' || path == '.') {\n    return '';\n\n  } else if (\n      !goog.string.contains(path, './') && !goog.string.contains(path, '/.')) {\n    // This optimization detects uris which do not contain dot-segments,\n    // and as a consequence do not require any processing.\n    return path;\n\n  } else {\n    var leadingSlash = goog.string.startsWith(path, '/');\n    var segments = path.split('/');\n    var out = [];\n\n    for (var pos = 0; pos < segments.length;) {\n      var segment = segments[pos++];\n\n      if (segment == '.') {\n        if (leadingSlash && pos == segments.length) {\n          out.push('');\n        }\n      } else if (segment == '..') {\n        if (out.length > 1 || out.length == 1 && out[0] != '') {\n          out.pop();\n        }\n        if (leadingSlash && pos == segments.length) {\n          out.push('');\n        }\n      } else {\n        out.push(segment);\n        leadingSlash = true;\n      }\n    }\n\n    return out.join('/');\n  }\n};\n\n\n/**\n * Decodes a value or returns the empty string if it isn't defined or empty.\n * @throws URIError If decodeURIComponent fails to decode val.\n * @param {string|undefined} val Value to decode.\n * @param {boolean=} opt_preserveReserved If true, restricted characters will\n *     not be decoded.\n * @return {string} Decoded value.\n * @private\n */\ngoog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {\n  'use strict';\n  // Don't use UrlDecode() here because val is not a query parameter.\n  if (!val) {\n    return '';\n  }\n\n  // decodeURI has the same output for '%2f' and '%252f'. We double encode %25\n  // so that we can distinguish between the 2 inputs. This is later undone by\n  // removeDoubleEncoding_.\n  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, '%2525')) :\n                                decodeURIComponent(val);\n};\n\n\n/**\n * If unescapedPart is non null, then escapes any characters in it that aren't\n * valid characters in a url and also escapes any special characters that\n * appear in extra.\n *\n * @param {*} unescapedPart The string to encode.\n * @param {RegExp} extra A character set of characters in [\\01-\\177].\n * @param {boolean=} opt_removeDoubleEncoding If true, remove double percent\n *     encoding.\n * @return {?string} null iff unescapedPart == null.\n * @private\n */\ngoog.Uri.encodeSpecialChars_ = function(\n    unescapedPart, extra, opt_removeDoubleEncoding) {\n  'use strict';\n  if (typeof unescapedPart === 'string') {\n    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);\n    if (opt_removeDoubleEncoding) {\n      // encodeURI double-escapes %XX sequences used to represent restricted\n      // characters in some URI components, remove the double escaping here.\n      encoded = goog.Uri.removeDoubleEncoding_(encoded);\n    }\n    return encoded;\n  }\n  return null;\n};\n\n\n/**\n * Converts a character in [\\01-\\177] to its unicode character equivalent.\n * @param {string} ch One character string.\n * @return {string} Encoded string.\n * @private\n */\ngoog.Uri.encodeChar_ = function(ch) {\n  'use strict';\n  var n = ch.charCodeAt(0);\n  return '%' + ((n >> 4) & 0xf).toString(16) + (n & 0xf).toString(16);\n};\n\n\n/**\n * Removes double percent-encoding from a string.\n * @param  {string} doubleEncodedString String\n * @return {string} String with double encoding removed.\n * @private\n */\ngoog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {\n  'use strict';\n  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, '%$1');\n};\n\n\n/**\n * Regular expression for characters that are disallowed in the scheme or\n * userInfo part of the URI.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\\/\\?@]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in a relative path.\n * Colon is included due to RFC 3986 3.3.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInRelativePath_ = /[\\#\\?:]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in an absolute path.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInAbsolutePath_ = /[\\#\\?]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in the query.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInQuery_ = /[\\#\\?@]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in the fragment.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInFragment_ = /#/g;\n\n\n/**\n * Checks whether two URIs have the same domain.\n * @param {string} uri1String First URI string.\n * @param {string} uri2String Second URI string.\n * @return {boolean} true if the two URIs have the same domain; false otherwise.\n */\ngoog.Uri.haveSameDomain = function(uri1String, uri2String) {\n  'use strict';\n  // Differs from goog.uri.utils.haveSameDomain, since this ignores scheme.\n  // TODO(gboyer): Have this just call goog.uri.util.haveSameDomain.\n  var pieces1 = goog.uri.utils.split(uri1String);\n  var pieces2 = goog.uri.utils.split(uri2String);\n  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] ==\n      pieces2[goog.uri.utils.ComponentIndex.DOMAIN] &&\n      pieces1[goog.uri.utils.ComponentIndex.PORT] ==\n      pieces2[goog.uri.utils.ComponentIndex.PORT];\n};\n\n\n\n/**\n * Class used to represent URI query parameters.  It is essentially a hash of\n * name-value pairs, though a name can be present more than once.\n *\n * Has the same interface as the collections in goog.structs.\n *\n * @param {?string=} opt_query Optional encoded query string to parse into\n *     the object.\n * @param {boolean=} opt_ignoreCase If true, ignore the case of the parameter\n *     name in #get.\n * @constructor\n * @struct\n * @final\n */\ngoog.Uri.QueryData = function(opt_query, opt_ignoreCase) {\n  'use strict';\n  /**\n   * The map containing name/value or name/array-of-values pairs.\n   * May be null if it requires parsing from the query string.\n   *\n   * We need to use a Map because we cannot guarantee that the key names will\n   * not be problematic for IE.\n   *\n   * @private {?Map<string, !Array<*>>}\n   */\n  this.keyMap_ = null;\n\n  /**\n   * The number of params, or null if it requires computing.\n   * @private {?number}\n   */\n  this.count_ = null;\n\n  /**\n   * Encoded query string, or null if it requires computing from the key map.\n   * @private {?string}\n   */\n  this.encodedQuery_ = opt_query || null;\n\n  /**\n   * If true, ignore the case of the parameter name in #get.\n   * @private {boolean}\n   */\n  this.ignoreCase_ = !!opt_ignoreCase;\n};\n\n\n/**\n * If the underlying key map is not yet initialized, it parses the\n * query string and fills the map with parsed data.\n * @private\n */\ngoog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {\n  'use strict';\n  if (!this.keyMap_) {\n    this.keyMap_ = /** @type {!Map<string, !Array<*>>} */ (new Map());\n    this.count_ = 0;\n    if (this.encodedQuery_) {\n      var self = this;\n      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {\n        'use strict';\n        self.add(goog.string.urlDecode(name), value);\n      });\n    }\n  }\n};\n\n\n/**\n * Creates a new query data instance from a map of names and values.\n *\n * @param {!goog.collections.maps.MapLike<string, ?>|!Object} map Map of string\n *     parameter names to parameter value. If parameter value is an array, it is\n *     treated as if the key maps to each individual value in the\n *     array.\n * @param {boolean=} opt_ignoreCase If true, ignore the case of the parameter\n *     name in #get.\n * @return {!goog.Uri.QueryData} The populated query data instance.\n */\ngoog.Uri.QueryData.createFromMap = function(map, opt_ignoreCase) {\n  'use strict';\n  var keys = goog.structs.getKeys(map);\n  if (typeof keys == 'undefined') {\n    throw new Error('Keys are undefined');\n  }\n\n  var queryData = new goog.Uri.QueryData(null, opt_ignoreCase);\n  var values = goog.structs.getValues(map);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = values[i];\n    if (!Array.isArray(value)) {\n      queryData.add(key, value);\n    } else {\n      queryData.setValues(key, value);\n    }\n  }\n  return queryData;\n};\n\n\n/**\n * Creates a new query data instance from parallel arrays of parameter names\n * and values. Allows for duplicate parameter names. Throws an error if the\n * lengths of the arrays differ.\n *\n * @param {!Array<string>} keys Parameter names.\n * @param {!Array<?>} values Parameter values.\n * @param {boolean=} opt_ignoreCase If true, ignore the case of the parameter\n *     name in #get.\n * @return {!goog.Uri.QueryData} The populated query data instance.\n */\ngoog.Uri.QueryData.createFromKeysValues = function(\n    keys, values, opt_ignoreCase) {\n  'use strict';\n  if (keys.length != values.length) {\n    throw new Error('Mismatched lengths for keys/values');\n  }\n  var queryData = new goog.Uri.QueryData(null, opt_ignoreCase);\n  for (var i = 0; i < keys.length; i++) {\n    queryData.add(keys[i], values[i]);\n  }\n  return queryData;\n};\n\n\n/**\n * @return {?number} The number of parameters.\n */\ngoog.Uri.QueryData.prototype.getCount = function() {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  return this.count_;\n};\n\n\n/**\n * Adds a key value pair.\n * @param {string} key Name.\n * @param {*} value Value.\n * @return {!goog.Uri.QueryData} Instance of this object.\n */\ngoog.Uri.QueryData.prototype.add = function(key, value) {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n\n  key = this.getKeyName_(key);\n  var values = this.keyMap_.get(key);\n  if (!values) {\n    this.keyMap_.set(key, (values = []));\n  }\n  values.push(value);\n  this.count_ = goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\n\n\n/**\n * Removes all the params with the given key.\n * @param {string} key Name.\n * @return {boolean} Whether any parameter was removed.\n */\ngoog.Uri.QueryData.prototype.remove = function(key) {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n\n  key = this.getKeyName_(key);\n  if (this.keyMap_.has(key)) {\n    this.invalidateCache_();\n\n    // Decrement parameter count.\n    this.count_ =\n        goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;\n    return this.keyMap_.delete(key);\n  }\n  return false;\n};\n\n\n/**\n * Clears the parameters.\n */\ngoog.Uri.QueryData.prototype.clear = function() {\n  'use strict';\n  this.invalidateCache_();\n  this.keyMap_ = null;\n  this.count_ = 0;\n};\n\n\n/**\n * @return {boolean} Whether we have any parameters.\n */\ngoog.Uri.QueryData.prototype.isEmpty = function() {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  return this.count_ == 0;\n};\n\n\n/**\n * Whether there is a parameter with the given name\n * @param {string} key The parameter name to check for.\n * @return {boolean} Whether there is a parameter with the given name.\n */\ngoog.Uri.QueryData.prototype.containsKey = function(key) {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  key = this.getKeyName_(key);\n  return this.keyMap_.has(key);\n};\n\n\n/**\n * Whether there is a parameter with the given value.\n * @param {*} value The value to check for.\n * @return {boolean} Whether there is a parameter with the given value.\n */\ngoog.Uri.QueryData.prototype.containsValue = function(value) {\n  'use strict';\n  // NOTE(arv): This solution goes through all the params even if it was the\n  // first param. We can get around this by not reusing code or by switching to\n  // iterators.\n  var vals = this.getValues();\n  return goog.array.contains(vals, value);\n};\n\n\n/**\n * Runs a callback on every key-value pair in the map, including duplicate keys.\n * This won't maintain original order when duplicate keys are interspersed (like\n * getKeys() / getValues()).\n * @param {function(this:SCOPE, ?, string, !goog.Uri.QueryData)} f\n * @param {SCOPE=} opt_scope The value of \"this\" inside f.\n * @template SCOPE\n */\ngoog.Uri.QueryData.prototype.forEach = function(f, opt_scope) {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(values, key) {\n    'use strict';\n    values.forEach(function(value) {\n      'use strict';\n      f.call(opt_scope, value, key, this);\n    }, this);\n  }, this);\n};\n\n\n/**\n * Returns all the keys of the parameters. If a key is used multiple times\n * it will be included multiple times in the returned array\n * @return {!Array<string>} All the keys of the parameters.\n */\ngoog.Uri.QueryData.prototype.getKeys = function() {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  // We need to get the values to know how many keys to add.\n  const vals = Array.from(this.keyMap_.values());\n  const keys = Array.from(this.keyMap_.keys());\n  const rv = [];\n  for (let i = 0; i < keys.length; i++) {\n    const val = vals[i];\n    for (let j = 0; j < val.length; j++) {\n      rv.push(keys[i]);\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Returns all the values of the parameters with the given name. If the query\n * data has no such key this will return an empty array. If no key is given\n * all values wil be returned.\n * @param {string=} opt_key The name of the parameter to get the values for.\n * @return {!Array<?>} All the values of the parameters with the given name.\n */\ngoog.Uri.QueryData.prototype.getValues = function(opt_key) {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  let rv = [];\n  if (typeof opt_key === 'string') {\n    if (this.containsKey(opt_key)) {\n      rv = rv.concat(this.keyMap_.get(this.getKeyName_(opt_key)));\n    }\n  } else {\n    // Return all values.\n    const values = Array.from(this.keyMap_.values());\n    for (let i = 0; i < values.length; i++) {\n      rv = rv.concat(values[i]);\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Sets a key value pair and removes all other keys with the same value.\n *\n * @param {string} key Name.\n * @param {*} value Value.\n * @return {!goog.Uri.QueryData} Instance of this object.\n */\ngoog.Uri.QueryData.prototype.set = function(key, value) {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n\n  // TODO(chrishenry): This could be better written as\n  // this.remove(key), this.add(key, value), but that would reorder\n  // the key (since the key is first removed and then added at the\n  // end) and we would have to fix unit tests that depend on key\n  // ordering.\n  key = this.getKeyName_(key);\n  if (this.containsKey(key)) {\n    this.count_ =\n        goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;\n  }\n  this.keyMap_.set(key, [value]);\n  this.count_ = goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\n\n\n/**\n * Returns the first value associated with the key. If the query data has no\n * such key this will return undefined or the optional default.\n * @param {string} key The name of the parameter to get the value for.\n * @param {*=} opt_default The default value to return if the query data\n *     has no such key.\n * @return {*} The first string value associated with the key, or opt_default\n *     if there's no value.\n */\ngoog.Uri.QueryData.prototype.get = function(key, opt_default) {\n  'use strict';\n  if (!key) {\n    return opt_default;\n  }\n  var values = this.getValues(key);\n  return values.length > 0 ? String(values[0]) : opt_default;\n};\n\n\n/**\n * Sets the values for a key. If the key already exists, this will\n * override all of the existing values that correspond to the key.\n * @param {string} key The key to set values for.\n * @param {!Array<?>} values The values to set.\n */\ngoog.Uri.QueryData.prototype.setValues = function(key, values) {\n  'use strict';\n  this.remove(key);\n\n  if (values.length > 0) {\n    this.invalidateCache_();\n    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));\n    this.count_ = goog.asserts.assertNumber(this.count_) + values.length;\n  }\n};\n\n\n/**\n * @return {string} Encoded query string.\n * @override\n */\ngoog.Uri.QueryData.prototype.toString = function() {\n  'use strict';\n  if (this.encodedQuery_) {\n    return this.encodedQuery_;\n  }\n\n  if (!this.keyMap_) {\n    return '';\n  }\n\n  const sb = [];\n\n  // In the past, we use this.getKeys() and this.getVals(), but that\n  // generates a lot of allocations as compared to simply iterating\n  // over the keys.\n  const keys = Array.from(this.keyMap_.keys());\n  for (var i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const encodedKey = goog.string.urlEncode(key);\n    const val = this.getValues(key);\n    for (var j = 0; j < val.length; j++) {\n      var param = encodedKey;\n      // Ensure that null and undefined are encoded into the url as\n      // literal strings.\n      if (val[j] !== '') {\n        param += '=' + goog.string.urlEncode(val[j]);\n      }\n      sb.push(param);\n    }\n  }\n\n  return this.encodedQuery_ = sb.join('&');\n};\n\n\n/**\n * @throws URIError If URI is malformed (that is, if decodeURIComponent fails on\n *     any of the URI components).\n * @return {string} Decoded query string.\n */\ngoog.Uri.QueryData.prototype.toDecodedString = function() {\n  'use strict';\n  return goog.Uri.decodeOrEmpty_(this.toString());\n};\n\n\n/**\n * Invalidate the cache.\n * @private\n */\ngoog.Uri.QueryData.prototype.invalidateCache_ = function() {\n  'use strict';\n  this.encodedQuery_ = null;\n};\n\n\n/**\n * Removes all keys that are not in the provided list. (Modifies this object.)\n * @param {Array<string>} keys The desired keys.\n * @return {!goog.Uri.QueryData} a reference to this object.\n */\ngoog.Uri.QueryData.prototype.filterKeys = function(keys) {\n  'use strict';\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(value, key) {\n    'use strict';\n    if (!goog.array.contains(keys, key)) {\n      this.remove(key);\n    }\n  }, this);\n  return this;\n};\n\n\n/**\n * Clone the query data instance.\n * @return {!goog.Uri.QueryData} New instance of the QueryData object.\n */\ngoog.Uri.QueryData.prototype.clone = function() {\n  'use strict';\n  var rv = new goog.Uri.QueryData();\n  rv.encodedQuery_ = this.encodedQuery_;\n  if (this.keyMap_) {\n    rv.keyMap_ = /** @type {!Map<string, !Array<*>>} */ (new Map(this.keyMap_));\n    rv.count_ = this.count_;\n  }\n  return rv;\n};\n\n\n/**\n * Helper function to get the key name from a JavaScript object. Converts\n * the object to a string, and to lower case if necessary.\n * @private\n * @param {*} arg The object to get a key name from.\n * @return {string} valid key name which can be looked up in #keyMap_.\n */\ngoog.Uri.QueryData.prototype.getKeyName_ = function(arg) {\n  'use strict';\n  var keyName = String(arg);\n  if (this.ignoreCase_) {\n    keyName = keyName.toLowerCase();\n  }\n  return keyName;\n};\n\n\n/**\n * Ignore case in parameter names.\n * NOTE: If there are already key/value pairs in the QueryData, and\n * ignoreCase_ is set to false, the keys will all be lower-cased.\n * @param {boolean} ignoreCase whether this goog.Uri should ignore case.\n */\ngoog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {\n  'use strict';\n  var resetKeys = ignoreCase && !this.ignoreCase_;\n  if (resetKeys) {\n    this.ensureKeyMapInitialized_();\n    this.invalidateCache_();\n    this.keyMap_.forEach(function(value, key) {\n      'use strict';\n      var lowerCase = key.toLowerCase();\n      if (key != lowerCase) {\n        this.remove(key);\n        this.setValues(lowerCase, value);\n      }\n    }, this);\n  }\n  this.ignoreCase_ = ignoreCase;\n};\n\n\n/**\n * Extends a query data object with another query data or map like object. This\n * operates 'in-place', it does not create a new QueryData object.\n *\n * @param {...(?goog.Uri.QueryData|?goog.collections.maps.MapLike<?,\n *     ?>|?Object)} var_args The object from which key value pairs will be\n *     copied. Note: does not accept null.\n * @suppress {deprecated} Use deprecated goog.structs.forEach to allow different\n * types of parameters.\n */\ngoog.Uri.QueryData.prototype.extend = function(var_args) {\n  'use strict';\n  for (var i = 0; i < arguments.length; i++) {\n    var data = arguments[i];\n    goog.structs.forEach(data, function(value, key) {\n      'use strict';\n      this.add(key, value);\n    }, this);\n  }\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utilities for string manipulation.\n */\n\n\n/**\n * Namespace for string utilities\n */\ngoog.provide('goog.string');\ngoog.provide('goog.string.Unicode');\n\ngoog.require('goog.dom.safe');\ngoog.require('goog.html.uncheckedconversions');\ngoog.require('goog.string.Const');\ngoog.require('goog.string.internal');\n\n\n/**\n * @define {boolean} Enables HTML escaping of lowercase letter \"e\" which helps\n * with detection of double-escaping as this letter is frequently used.\n */\ngoog.string.DETECT_DOUBLE_ESCAPING =\n    goog.define('goog.string.DETECT_DOUBLE_ESCAPING', false);\n\n\n/**\n * @define {boolean} Whether to force non-dom html unescaping.\n */\ngoog.string.FORCE_NON_DOM_HTML_UNESCAPING =\n    goog.define('goog.string.FORCE_NON_DOM_HTML_UNESCAPING', false);\n\n\n/**\n * Common Unicode string characters.\n * @enum {string}\n */\ngoog.string.Unicode = {\n  NBSP: '\\xa0'\n};\n\n\n/**\n * Fast prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix A string to look for at the start of `str`.\n * @return {boolean} True if `str` begins with `prefix`.\n */\ngoog.string.startsWith = goog.string.internal.startsWith;\n\n\n/**\n * Fast suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix`.\n */\ngoog.string.endsWith = goog.string.internal.endsWith;\n\n\n/**\n * Case-insensitive prefix-checker.\n * @param {string} str The string to check.\n * @param {string} prefix  A string to look for at the end of `str`.\n * @return {boolean} True if `str` begins with `prefix` (ignoring\n *     case).\n */\ngoog.string.caseInsensitiveStartsWith =\n    goog.string.internal.caseInsensitiveStartsWith;\n\n\n/**\n * Case-insensitive suffix-checker.\n * @param {string} str The string to check.\n * @param {string} suffix A string to look for at the end of `str`.\n * @return {boolean} True if `str` ends with `suffix` (ignoring\n *     case).\n */\ngoog.string.caseInsensitiveEndsWith =\n    goog.string.internal.caseInsensitiveEndsWith;\n\n\n/**\n * Case-insensitive equality checker.\n * @param {string} str1 First string to check.\n * @param {string} str2 Second string to check.\n * @return {boolean} True if `str1` and `str2` are the same string,\n *     ignoring case.\n */\ngoog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals;\n\n\n/**\n * Does simple python-style string substitution.\n * subs(\"foo%s hot%s\", \"bar\", \"dog\") becomes \"foobar hotdog\".\n * @param {string} str The string containing the pattern.\n * @param {...*} var_args The items to substitute into the pattern.\n * @return {string} A copy of `str` in which each occurrence of\n *     {@code %s} has been replaced an argument from `var_args`.\n */\ngoog.string.subs = function(str, var_args) {\n  'use strict';\n  const splitParts = str.split('%s');\n  let returnString = '';\n\n  const subsArguments = Array.prototype.slice.call(arguments, 1);\n  while (subsArguments.length &&\n         // Replace up to the last split part. We are inserting in the\n         // positions between split parts.\n         splitParts.length > 1) {\n    returnString += splitParts.shift() + subsArguments.shift();\n  }\n\n  return returnString + splitParts.join('%s');  // Join unused '%s'\n};\n\n\n/**\n * Converts multiple whitespace chars (spaces, non-breaking-spaces, new lines\n * and tabs) to a single space, and strips leading and trailing whitespace.\n * @param {string} str Input string.\n * @return {string} A copy of `str` with collapsed whitespace.\n */\ngoog.string.collapseWhitespace = function(str) {\n  'use strict';\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/[\\s\\xa0]+/g, ' ').replace(/^\\s+|\\s+$/g, '');\n};\n\n\n/**\n * Checks if a string is empty or contains only whitespaces.\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty or whitespace only.\n */\ngoog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace;\n\n\n/**\n * Checks if a string is empty.\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty.\n */\ngoog.string.isEmptyString = function(str) {\n  'use strict';\n  return str.length == 0;\n};\n\n\n/**\n * Checks if a string is empty or contains only whitespaces.\n *\n * @param {string} str The string to check.\n * @return {boolean} Whether `str` is empty or whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace instead.\n */\ngoog.string.isEmpty = goog.string.isEmptyOrWhitespace;\n\n\n/**\n * Checks if a string is null, undefined, empty or contains only whitespaces.\n * @param {*} str The string to check.\n * @return {boolean} Whether `str` is null, undefined, empty, or\n *     whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str))\n *     instead.\n */\ngoog.string.isEmptyOrWhitespaceSafe = function(str) {\n  'use strict';\n  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));\n};\n\n\n/**\n * Checks if a string is null, undefined, empty or contains only whitespaces.\n *\n * @param {*} str The string to check.\n * @return {boolean} Whether `str` is null, undefined, empty, or\n *     whitespace only.\n * @deprecated Use goog.string.isEmptyOrWhitespace instead.\n */\ngoog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;\n\n\n/**\n * Checks if a string is all breaking whitespace.\n * @param {string} str The string to check.\n * @return {boolean} Whether the string is all breaking whitespace.\n */\ngoog.string.isBreakingWhitespace = function(str) {\n  'use strict';\n  return !/[^\\t\\n\\r ]/.test(str);\n};\n\n\n/**\n * Checks if a string contains all letters.\n * @param {string} str string to check.\n * @return {boolean} True if `str` consists entirely of letters.\n */\ngoog.string.isAlpha = function(str) {\n  'use strict';\n  return !/[^a-zA-Z]/.test(str);\n};\n\n\n/**\n * Checks if a string contains only numbers.\n * @param {*} str string to check. If not a string, it will be\n *     casted to one.\n * @return {boolean} True if `str` is numeric.\n */\ngoog.string.isNumeric = function(str) {\n  'use strict';\n  return !/[^0-9]/.test(str);\n};\n\n\n/**\n * Checks if a string contains only numbers or letters.\n * @param {string} str string to check.\n * @return {boolean} True if `str` is alphanumeric.\n */\ngoog.string.isAlphaNumeric = function(str) {\n  'use strict';\n  return !/[^a-zA-Z0-9]/.test(str);\n};\n\n\n/**\n * Checks if a character is a space character.\n * @param {string} ch Character to check.\n * @return {boolean} True if `ch` is a space.\n */\ngoog.string.isSpace = function(ch) {\n  'use strict';\n  return ch == ' ';\n};\n\n\n/**\n * Checks if a character is a valid unicode character.\n * @param {string} ch Character to check.\n * @return {boolean} True if `ch` is a valid unicode character.\n */\ngoog.string.isUnicodeChar = function(ch) {\n  'use strict';\n  return ch.length == 1 && ch >= ' ' && ch <= '~' ||\n      ch >= '\\u0080' && ch <= '\\uFFFD';\n};\n\n\n/**\n * Takes a string and replaces newlines with a space. Multiple lines are\n * replaced with a single space.\n * @param {string} str The string from which to strip newlines.\n * @return {string} A copy of `str` stripped of newlines.\n */\ngoog.string.stripNewlines = function(str) {\n  'use strict';\n  return str.replace(/(\\r\\n|\\r|\\n)+/g, ' ');\n};\n\n\n/**\n * Replaces Windows and Mac new lines with unix style: \\r or \\r\\n with \\n.\n * @param {string} str The string to in which to canonicalize newlines.\n * @return {string} `str` A copy of {@code} with canonicalized newlines.\n */\ngoog.string.canonicalizeNewlines = function(str) {\n  'use strict';\n  return str.replace(/(\\r\\n|\\r|\\n)/g, '\\n');\n};\n\n\n/**\n * Normalizes whitespace in a string, replacing all whitespace chars with\n * a space.\n * @param {string} str The string in which to normalize whitespace.\n * @return {string} A copy of `str` with all whitespace normalized.\n */\ngoog.string.normalizeWhitespace = function(str) {\n  'use strict';\n  return str.replace(/\\xa0|\\s/g, ' ');\n};\n\n\n/**\n * Normalizes spaces in a string, replacing all consecutive spaces and tabs\n * with a single space. Replaces non-breaking space with a space.\n * @param {string} str The string in which to normalize spaces.\n * @return {string} A copy of `str` with all consecutive spaces and tabs\n *    replaced with a single space.\n */\ngoog.string.normalizeSpaces = function(str) {\n  'use strict';\n  return str.replace(/\\xa0|[ \\t]+/g, ' ');\n};\n\n\n/**\n * Removes the breaking spaces from the left and right of the string and\n * collapses the sequences of breaking spaces in the middle into single spaces.\n * The original and the result strings render the same way in HTML.\n * @param {string} str A string in which to collapse spaces.\n * @return {string} Copy of the string with normalized breaking spaces.\n */\ngoog.string.collapseBreakingSpaces = function(str) {\n  'use strict';\n  return str.replace(/[\\t\\r\\n ]+/g, ' ')\n      .replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, '');\n};\n\n\n/**\n * Trims white spaces to the left and right of a string.\n * @param {string} str The string to trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trim = goog.string.internal.trim;\n\n\n/**\n * Trims whitespaces at the left end of a string.\n * @param {string} str The string to left trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trimLeft = function(str) {\n  'use strict';\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/^[\\s\\xa0]+/, '');\n};\n\n\n/**\n * Trims whitespaces at the right end of a string.\n * @param {string} str The string to right trim.\n * @return {string} A trimmed copy of `str`.\n */\ngoog.string.trimRight = function(str) {\n  'use strict';\n  // Since IE doesn't include non-breaking-space (0xa0) in their \\s character\n  // class (as required by section 7.2 of the ECMAScript spec), we explicitly\n  // include it in the regexp to enforce consistent cross-browser behavior.\n  return str.replace(/[\\s\\xa0]+$/, '');\n};\n\n\n/**\n * A string comparator that ignores case.\n * -1 = str1 less than str2\n *  0 = str1 equals str2\n *  1 = str1 greater than str2\n *\n * @param {string} str1 The string to compare.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} The comparator result, as described above.\n */\ngoog.string.caseInsensitiveCompare =\n    goog.string.internal.caseInsensitiveCompare;\n\n\n/**\n * Compares two strings interpreting their numeric substrings as numbers.\n *\n * @param {string} str1 First string.\n * @param {string} str2 Second string.\n * @param {!RegExp} tokenizerRegExp Splits a string into substrings of\n *     non-negative integers, non-numeric characters and optionally fractional\n *     numbers starting with a decimal point.\n * @return {number} Negative if str1 < str2, 0 is str1 == str2, positive if\n *     str1 > str2.\n * @private\n */\ngoog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {\n  'use strict';\n  if (str1 == str2) {\n    return 0;\n  }\n  if (!str1) {\n    return -1;\n  }\n  if (!str2) {\n    return 1;\n  }\n\n  // Using match to split the entire string ahead of time turns out to be faster\n  // for most inputs than using RegExp.exec or iterating over each character.\n  const tokens1 = str1.toLowerCase().match(tokenizerRegExp);\n  const tokens2 = str2.toLowerCase().match(tokenizerRegExp);\n\n  const count = Math.min(tokens1.length, tokens2.length);\n\n  for (let i = 0; i < count; i++) {\n    const a = tokens1[i];\n    const b = tokens2[i];\n\n    // Compare pairs of tokens, returning if one token sorts before the other.\n    if (a != b) {\n      // Only if both tokens are integers is a special comparison required.\n      // Decimal numbers are sorted as strings (e.g., '.09' < '.1').\n      const num1 = parseInt(a, 10);\n      if (!isNaN(num1)) {\n        const num2 = parseInt(b, 10);\n        if (!isNaN(num2) && num1 - num2) {\n          return num1 - num2;\n        }\n      }\n      return a < b ? -1 : 1;\n    }\n  }\n\n  // If one string is a substring of the other, the shorter string sorts first.\n  if (tokens1.length != tokens2.length) {\n    return tokens1.length - tokens2.length;\n  }\n\n  // The two strings must be equivalent except for case (perfect equality is\n  // tested at the head of the function.) Revert to default ASCII string\n  // comparison to stabilize the sort.\n  return str1 < str2 ? -1 : 1;\n};\n\n\n/**\n * String comparison function that handles non-negative integer numbers in a\n * way humans might expect. Using this function, the string 'File 2.jpg' sorts\n * before 'File 10.jpg', and 'Version 1.9' before 'Version 1.10'. The comparison\n * is mostly case-insensitive, though strings that are identical except for case\n * are sorted with the upper-case strings before lower-case.\n *\n * This comparison function is up to 50x slower than either the default or the\n * case-insensitive compare. It should not be used in time-critical code, but\n * should be fast enough to sort several hundred short strings (like filenames)\n * with a reasonable delay.\n *\n * @param {string} str1 The string to compare in a numerically sensitive way.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} less than 0 if str1 < str2, 0 if str1 == str2, greater than\n *     0 if str1 > str2.\n */\ngoog.string.intAwareCompare = function(str1, str2) {\n  'use strict';\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\D+/g);\n};\n\n\n/**\n * String comparison function that handles non-negative integer and fractional\n * numbers in a way humans might expect. Using this function, the string\n * 'File 2.jpg' sorts before 'File 10.jpg', and '3.14' before '3.2'. Equivalent\n * to {@link goog.string.intAwareCompare} apart from the way how it interprets\n * dots.\n *\n * @param {string} str1 The string to compare in a numerically sensitive way.\n * @param {string} str2 The string to compare `str1` to.\n * @return {number} less than 0 if str1 < str2, 0 if str1 == str2, greater than\n *     0 if str1 > str2.\n */\ngoog.string.floatAwareCompare = function(str1, str2) {\n  'use strict';\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\.\\d+|\\D+/g);\n};\n\n\n/**\n * Alias for {@link goog.string.floatAwareCompare}.\n *\n * @param {string} str1\n * @param {string} str2\n * @return {number}\n */\ngoog.string.numerateCompare = goog.string.floatAwareCompare;\n\n\n/**\n * URL-encodes a string\n * @param {*} str The string to url-encode.\n * @return {string} An encoded copy of `str` that is safe for urls.\n *     Note that '#', ':', and other characters used to delimit portions\n *     of URLs *will* be encoded.\n */\ngoog.string.urlEncode = function(str) {\n  'use strict';\n  return encodeURIComponent(String(str));\n};\n\n\n/**\n * URL-decodes the string. We need to specially handle '+'s because\n * the javascript library doesn't convert them to spaces.\n * @param {string} str The string to url decode.\n * @return {string} The decoded `str`.\n */\ngoog.string.urlDecode = function(str) {\n  'use strict';\n  return decodeURIComponent(str.replace(/\\+/g, ' '));\n};\n\n\n/**\n * Converts \\n to <br>s or <br />s.\n * @param {string} str The string in which to convert newlines.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} A copy of `str` with converted newlines.\n */\ngoog.string.newLineToBr = goog.string.internal.newLineToBr;\n\n\n/**\n * Escapes double quote '\"' and single quote '\\'' characters in addition to\n * '&', '<', and '>' so that a string can be included in an HTML tag attribute\n * value within double or single quotes.\n *\n * It should be noted that > doesn't need to be escaped for the HTML or XML to\n * be valid, but it has been decided to escape it for consistency with other\n * implementations.\n *\n * With goog.string.DETECT_DOUBLE_ESCAPING, this function escapes also the\n * lowercase letter \"e\".\n *\n * NOTE(user):\n * HtmlEscape is often called during the generation of large blocks of HTML.\n * Using statics for the regular expressions and strings is an optimization\n * that can more than half the amount of time IE spends in this function for\n * large apps, since strings and regexes both contribute to GC allocations.\n *\n * Testing for the presence of a character before escaping increases the number\n * of function calls, but actually provides a speed increase for the average\n * case -- since the average case often doesn't require the escaping of all 4\n * characters and indexOf() is much cheaper than replace().\n * The worst case does suffer slightly from the additional calls, therefore the\n * opt_isLikelyToContainHtmlChars option has been included for situations\n * where all 4 HTML entities are very likely to be present and need escaping.\n *\n * Some benchmarks (times tended to fluctuate +-0.05ms):\n *                                     FireFox                     IE6\n * (no chars / average (mix of cases) / all 4 chars)\n * no checks                     0.13 / 0.22 / 0.22         0.23 / 0.53 / 0.80\n * indexOf                       0.08 / 0.17 / 0.26         0.22 / 0.54 / 0.84\n * indexOf + re test             0.07 / 0.17 / 0.28         0.19 / 0.50 / 0.85\n *\n * An additional advantage of checking if replace actually needs to be called\n * is a reduction in the number of object allocations, so as the size of the\n * application grows the difference between the various methods would increase.\n *\n * @param {string} str string to be escaped.\n * @param {boolean=} opt_isLikelyToContainHtmlChars Don't perform a check to see\n *     if the character needs replacing - use this option if you expect each of\n *     the characters to appear often. Leave false if you expect few html\n *     characters to occur in your strings, such as if you are escaping HTML.\n * @return {string} An escaped copy of `str`.\n */\ngoog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {\n  'use strict';\n  str = goog.string.internal.htmlEscape(str, opt_isLikelyToContainHtmlChars);\n  if (goog.string.DETECT_DOUBLE_ESCAPING) {\n    str = str.replace(goog.string.E_RE_, '&#101;');\n  }\n  return str;\n};\n\n\n/**\n * Regular expression that matches a lowercase letter \"e\", for use in escaping.\n * @const {!RegExp}\n * @private\n */\ngoog.string.E_RE_ = /e/g;\n\n\n/**\n * Unescapes an HTML string.\n *\n * @param {string} str The string to unescape.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapeEntities = function(str) {\n  'use strict';\n  if (goog.string.contains(str, '&')) {\n    // We are careful not to use a DOM if we do not have one or we explicitly\n    // requested non-DOM html unescaping.\n    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING &&\n        'document' in goog.global) {\n      return goog.string.unescapeEntitiesUsingDom_(str);\n    } else {\n      // Fall back on pure XML entities\n      return goog.string.unescapePureXmlEntities_(str);\n    }\n  }\n  return str;\n};\n\n\n/**\n * Unescapes a HTML string using the provided document.\n *\n * @param {string} str The string to unescape.\n * @param {!Document} document A document to use in escaping the string.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapeEntitiesWithDocument = function(str, document) {\n  'use strict';\n  if (goog.string.contains(str, '&')) {\n    return goog.string.unescapeEntitiesUsingDom_(str, document);\n  }\n  return str;\n};\n\n\n/**\n * Unescapes an HTML string using a DOM to resolve non-XML, non-numeric\n * entities. This function is XSS-safe and whitespace-preserving.\n * @private\n * @param {string} str The string to unescape.\n * @param {Document=} opt_document An optional document to use for creating\n *     elements. If this is not specified then the default window.document\n *     will be used.\n * @return {string} The unescaped `str` string.\n */\ngoog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {\n  'use strict';\n  /** @type {!Object<string, string>} */\n  const seen = {'&amp;': '&', '&lt;': '<', '&gt;': '>', '&quot;': '\"'};\n  /** @type {!Element} */\n  let div;\n  if (opt_document) {\n    div = opt_document.createElement('div');\n  } else {\n    div = goog.global.document.createElement('div');\n  }\n  // Match as many valid entity characters as possible. If the actual entity\n  // happens to be shorter, it will still work as innerHTML will return the\n  // trailing characters unchanged. Since the entity characters do not include\n  // open angle bracket, there is no chance of XSS from the innerHTML use.\n  // Since no whitespace is passed to innerHTML, whitespace is preserved.\n  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {\n    'use strict';\n    // Check for cached entity.\n    let value = seen[s];\n    if (value) {\n      return value;\n    }\n    // Check for numeric entity.\n    if (entity.charAt(0) == '#') {\n      // Prefix with 0 so that hex entities (e.g. &#x10) parse as hex numbers.\n      const n = Number('0' + entity.substr(1));\n      if (!isNaN(n)) {\n        value = String.fromCharCode(n);\n      }\n    }\n    // Fall back to innerHTML otherwise.\n    if (!value) {\n      // Append a non-entity character to avoid a bug in Webkit that parses\n      // an invalid entity at the end of innerHTML text as the empty string.\n      goog.dom.safe.setInnerHtml(\n          div,\n          goog.html.uncheckedconversions\n              .safeHtmlFromStringKnownToSatisfyTypeContract(\n                  goog.string.Const.from('Single HTML entity.'), s + ' '));\n      // Then remove the trailing character from the result.\n      value = div.firstChild.nodeValue.slice(0, -1);\n    }\n    // Cache and return.\n    return seen[s] = value;\n  });\n};\n\n\n/**\n * Unescapes XML entities.\n * @private\n * @param {string} str The string to unescape.\n * @return {string} An unescaped copy of `str`.\n */\ngoog.string.unescapePureXmlEntities_ = function(str) {\n  'use strict';\n  return str.replace(/&([^;]+);/g, function(s, entity) {\n    'use strict';\n    switch (entity) {\n      case 'amp':\n        return '&';\n      case 'lt':\n        return '<';\n      case 'gt':\n        return '>';\n      case 'quot':\n        return '\"';\n      default:\n        if (entity.charAt(0) == '#') {\n          // Prefix with 0 so that hex entities (e.g. &#x10) parse as hex.\n          const n = Number('0' + entity.substr(1));\n          if (!isNaN(n)) {\n            return String.fromCharCode(n);\n          }\n        }\n        // For invalid entities we just return the entity\n        return s;\n    }\n  });\n};\n\n\n/**\n * Regular expression that matches an HTML entity.\n * See also HTML5: Tokenization / Tokenizing character references.\n * @private\n * @type {!RegExp}\n */\ngoog.string.HTML_ENTITY_PATTERN_ = /&([^;\\s<&]+);?/g;\n\n\n/**\n * Do escaping of whitespace to preserve spatial formatting. We use character\n * entity #160 to make it safer for xml.\n * @param {string} str The string in which to escape whitespace.\n * @param {boolean=} opt_xml Whether to use XML compatible tags.\n * @return {string} An escaped copy of `str`.\n */\ngoog.string.whitespaceEscape = function(str, opt_xml) {\n  'use strict';\n  // This doesn't use goog.string.preserveSpaces for backwards compatibility.\n  return goog.string.newLineToBr(str.replace(/  /g, ' &#160;'), opt_xml);\n};\n\n\n/**\n * Preserve spaces that would be otherwise collapsed in HTML by replacing them\n * with non-breaking space Unicode characters.\n * @param {string} str The string in which to preserve whitespace.\n * @return {string} A copy of `str` with preserved whitespace.\n */\ngoog.string.preserveSpaces = function(str) {\n  'use strict';\n  return str.replace(/(^|[\\n ]) /g, '$1' + goog.string.Unicode.NBSP);\n};\n\n\n/**\n * Strip quote characters around a string.  The second argument is a string of\n * characters to treat as quotes.  This can be a single character or a string of\n * multiple character and in that case each of those are treated as possible\n * quote characters. For example:\n *\n * <pre>\n * goog.string.stripQuotes('\"abc\"', '\"`') --> 'abc'\n * goog.string.stripQuotes('`abc`', '\"`') --> 'abc'\n * </pre>\n *\n * @param {string} str The string to strip.\n * @param {string} quoteChars The quote characters to strip.\n * @return {string} A copy of `str` without the quotes.\n */\ngoog.string.stripQuotes = function(str, quoteChars) {\n  'use strict';\n  const length = quoteChars.length;\n  for (let i = 0; i < length; i++) {\n    const quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);\n    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {\n      return str.substring(1, str.length - 1);\n    }\n  }\n  return str;\n};\n\n\n/**\n * Truncates a string to a certain length and adds '...' if necessary.  The\n * length also accounts for the ellipsis, so a maximum length of 10 and a string\n * 'Hello World!' produces 'Hello W...'.\n * @param {string} str The string to truncate.\n * @param {number} chars Max number of characters.\n * @param {boolean=} opt_protectEscapedCharacters Whether to protect escaped\n *     characters from being cut off in the middle.\n * @return {string} The truncated `str` string.\n */\ngoog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {\n  'use strict';\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.unescapeEntities(str);\n  }\n\n  if (str.length > chars) {\n    str = str.substring(0, chars - 3) + '...';\n  }\n\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.htmlEscape(str);\n  }\n\n  return str;\n};\n\n\n/**\n * Truncate a string in the middle, adding \"...\" if necessary,\n * and favoring the beginning of the string.\n * @param {string} str The string to truncate the middle of.\n * @param {number} chars Max number of characters.\n * @param {boolean=} opt_protectEscapedCharacters Whether to protect escaped\n *     characters from being cutoff in the middle.\n * @param {number=} opt_trailingChars Optional number of trailing characters to\n *     leave at the end of the string, instead of truncating as close to the\n *     middle as possible.\n * @return {string} A truncated copy of `str`.\n */\ngoog.string.truncateMiddle = function(\n    str, chars, opt_protectEscapedCharacters, opt_trailingChars) {\n  'use strict';\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.unescapeEntities(str);\n  }\n\n  if (opt_trailingChars && str.length > chars) {\n    if (opt_trailingChars > chars) {\n      opt_trailingChars = chars;\n    }\n    const endPoint = str.length - opt_trailingChars;\n    const startPoint = chars - opt_trailingChars;\n    str = str.substring(0, startPoint) + '...' + str.substring(endPoint);\n  } else if (str.length > chars) {\n    // Favor the beginning of the string:\n    let half = Math.floor(chars / 2);\n    const endPos = str.length - half;\n    half += chars % 2;\n    str = str.substring(0, half) + '...' + str.substring(endPos);\n  }\n\n  if (opt_protectEscapedCharacters) {\n    str = goog.string.htmlEscape(str);\n  }\n\n  return str;\n};\n\n\n/**\n * Special chars that need to be escaped for goog.string.quote.\n * @private {!Object<string, string>}\n */\ngoog.string.specialEscapeChars_ = {\n  '\\0': '\\\\0',\n  '\\b': '\\\\b',\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n  '\\x0B': '\\\\x0B',  // '\\v' is not supported in JScript\n  '\"': '\\\\\"',\n  '\\\\': '\\\\\\\\',\n  // To support the use case of embedding quoted strings inside of script\n  // tags, we have to make sure HTML comments and opening/closing script tags do\n  // not appear in the resulting string. The specific strings that must be\n  // escaped are documented at:\n  // https://html.spec.whatwg.org/multipage/scripting.html#restrictions-for-contents-of-script-elements\n  '<': '\\\\u003C'  // NOTE: JSON.parse crashes on '\\\\x3c'.\n};\n\n\n/**\n * Character mappings used internally for goog.string.escapeChar.\n * @private {!Object<string, string>}\n */\ngoog.string.jsEscapeCache_ = {\n  '\\'': '\\\\\\''\n};\n\n\n/**\n * Encloses a string in double quotes and escapes characters so that the\n * string is a valid JS string. The resulting string is safe to embed in\n * `<script>` tags as \"<\" is escaped.\n * @param {string} s The string to quote.\n * @return {string} A copy of `s` surrounded by double quotes.\n */\ngoog.string.quote = function(s) {\n  'use strict';\n  s = String(s);\n  const sb = ['\"'];\n  for (let i = 0; i < s.length; i++) {\n    const ch = s.charAt(i);\n    const cc = ch.charCodeAt(0);\n    sb[i + 1] = goog.string.specialEscapeChars_[ch] ||\n        ((cc > 31 && cc < 127) ? ch : goog.string.escapeChar(ch));\n  }\n  sb.push('\"');\n  return sb.join('');\n};\n\n\n/**\n * Takes a string and returns the escaped string for that input string.\n * @param {string} str The string to escape.\n * @return {string} An escaped string representing `str`.\n */\ngoog.string.escapeString = function(str) {\n  'use strict';\n  const sb = [];\n  for (let i = 0; i < str.length; i++) {\n    sb[i] = goog.string.escapeChar(str.charAt(i));\n  }\n  return sb.join('');\n};\n\n\n/**\n * Takes a character and returns the escaped string for that character. For\n * example escapeChar(String.fromCharCode(15)) -> \"\\\\x0E\".\n * @param {string} c The character to escape.\n * @return {string} An escaped string representing `c`.\n */\ngoog.string.escapeChar = function(c) {\n  'use strict';\n  if (c in goog.string.jsEscapeCache_) {\n    return goog.string.jsEscapeCache_[c];\n  }\n\n  if (c in goog.string.specialEscapeChars_) {\n    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];\n  }\n\n  let rv = c;\n  const cc = c.charCodeAt(0);\n  if (cc > 31 && cc < 127) {\n    rv = c;\n  } else {\n    // tab is 9 but handled above\n    if (cc < 256) {\n      rv = '\\\\x';\n      if (cc < 16 || cc > 256) {\n        rv += '0';\n      }\n    } else {\n      rv = '\\\\u';\n      if (cc < 4096) {  // \\u1000\n        rv += '0';\n      }\n    }\n    rv += cc.toString(16).toUpperCase();\n  }\n\n  return goog.string.jsEscapeCache_[c] = rv;\n};\n\n\n/**\n * Determines whether a string contains a substring.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n */\ngoog.string.contains = goog.string.internal.contains;\n\n\n/**\n * Determines whether a string contains a substring, ignoring case.\n * @param {string} str The string to search.\n * @param {string} subString The substring to search for.\n * @return {boolean} Whether `str` contains `subString`.\n */\ngoog.string.caseInsensitiveContains =\n    goog.string.internal.caseInsensitiveContains;\n\n\n/**\n * Returns the non-overlapping occurrences of ss in s.\n * If either s or ss evalutes to false, then returns zero.\n * @param {string} s The string to look in.\n * @param {string} ss The string to look for.\n * @return {number} Number of occurrences of ss in s.\n */\ngoog.string.countOf = function(s, ss) {\n  'use strict';\n  return s && ss ? s.split(ss).length - 1 : 0;\n};\n\n\n/**\n * Removes a substring of a specified length at a specific\n * index in a string.\n * @param {string} s The base string from which to remove.\n * @param {number} index The index at which to remove the substring.\n * @param {number} stringLength The length of the substring to remove.\n * @return {string} A copy of `s` with the substring removed or the full\n *     string if nothing is removed or the input is invalid.\n */\ngoog.string.removeAt = function(s, index, stringLength) {\n  'use strict';\n  let resultStr = s;\n  // If the index is greater or equal to 0 then remove substring\n  if (index >= 0 && index < s.length && stringLength > 0) {\n    resultStr = s.substr(0, index) +\n        s.substr(index + stringLength, s.length - index - stringLength);\n  }\n  return resultStr;\n};\n\n\n/**\n * Removes the first occurrence of a substring from a string.\n * @param {string} str The base string from which to remove.\n * @param {string} substr The string to remove.\n * @return {string} A copy of `str` with `substr` removed or the\n *     full string if nothing is removed.\n */\ngoog.string.remove = function(str, substr) {\n  'use strict';\n  return str.replace(substr, '');\n};\n\n\n/**\n *  Removes all occurrences of a substring from a string.\n *  @param {string} s The base string from which to remove.\n *  @param {string} ss The string to remove.\n *  @return {string} A copy of `s` with `ss` removed or the full\n *      string if nothing is removed.\n */\ngoog.string.removeAll = function(s, ss) {\n  'use strict';\n  const re = new RegExp(goog.string.regExpEscape(ss), 'g');\n  return s.replace(re, '');\n};\n\n\n/**\n *  Replaces all occurrences of a substring of a string with a new substring.\n *  @param {string} s The base string from which to remove.\n *  @param {string} ss The string to replace.\n *  @param {string} replacement The replacement string.\n *  @return {string} A copy of `s` with `ss` replaced by\n *      `replacement` or the original string if nothing is replaced.\n */\ngoog.string.replaceAll = function(s, ss, replacement) {\n  'use strict';\n  const re = new RegExp(goog.string.regExpEscape(ss), 'g');\n  return s.replace(re, replacement.replace(/\\$/g, '$$$$'));\n};\n\n\n/**\n * Escapes characters in the string that are not safe to use in a RegExp.\n * @param {*} s The string to escape. If not a string, it will be casted\n *     to one.\n * @return {string} A RegExp safe, escaped copy of `s`.\n */\ngoog.string.regExpEscape = function(s) {\n  'use strict';\n  return String(s)\n      .replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1')\n      .replace(/\\x08/g, '\\\\x08');\n};\n\n\n/**\n * Repeats a string n times.\n * @param {string} string The string to repeat.\n * @param {number} length The number of times to repeat.\n * @return {string} A string containing `length` repetitions of\n *     `string`.\n */\ngoog.string.repeat = (String.prototype.repeat) ? function(string, length) {\n  'use strict';\n  // The native method is over 100 times faster than the alternative.\n  return string.repeat(length);\n} : function(string, length) {\n  'use strict';\n  return new Array(length + 1).join(string);\n};\n\n\n/**\n * Pads number to given length and optionally rounds it to a given precision.\n * For example:\n * <pre>padNumber(1.25, 2, 3) -> '01.250'\n * padNumber(1.25, 2) -> '01.25'\n * padNumber(1.25, 2, 1) -> '01.3'\n * padNumber(1.25, 0) -> '1.25'</pre>\n *\n * @param {number} num The number to pad.\n * @param {number} length The desired length.\n * @param {number=} opt_precision The desired precision.\n * @return {string} `num` as a string with the given options.\n */\ngoog.string.padNumber = function(num, length, opt_precision) {\n  'use strict';\n  if (!Number.isFinite(num)) return String(num);\n  let s =\n      (opt_precision !== undefined) ? num.toFixed(opt_precision) : String(num);\n  let index = s.indexOf('.');\n  if (index === -1) {\n    index = s.length;\n  }\n  const sign = s[0] === '-' ? '-' : '';\n  if (sign) {\n    s = s.substring(1);\n  }\n  return sign + goog.string.repeat('0', Math.max(0, length - index)) + s;\n};\n\n\n/**\n * Returns a string representation of the given object, with\n * null and undefined being returned as the empty string.\n *\n * @param {*} obj The object to convert.\n * @return {string} A string representation of the `obj`.\n */\ngoog.string.makeSafe = function(obj) {\n  'use strict';\n  return obj == null ? '' : String(obj);\n};\n\n/**\n * Returns a string with at least 64-bits of randomness.\n *\n * Doesn't trust JavaScript's random function entirely. Uses a combination of\n * random and current timestamp, and then encodes the string in base-36 to\n * make it shorter.\n *\n * @return {string} A random string, e.g. sn1s7vb4gcic.\n */\ngoog.string.getRandomString = function() {\n  'use strict';\n  const x = 2147483648;\n  return Math.floor(Math.random() * x).toString(36) +\n      Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);\n};\n\n\n/**\n * Compares two version numbers.\n *\n * @param {string|number} version1 Version of first item.\n * @param {string|number} version2 Version of second item.\n *\n * @return {number}  1 if `version1` is higher.\n *                   0 if arguments are equal.\n *                  -1 if `version2` is higher.\n */\ngoog.string.compareVersions = goog.string.internal.compareVersions;\n\n\n/**\n * String hash function similar to java.lang.String.hashCode().\n * The hash code for a string is computed as\n * s[0] * 31 ^ (n - 1) + s[1] * 31 ^ (n - 2) + ... + s[n - 1],\n * where s[i] is the ith character of the string and n is the length of\n * the string. We mod the result to make it between 0 (inclusive) and 2^32\n * (exclusive).\n * @param {string} str A string.\n * @return {number} Hash value for `str`, between 0 (inclusive) and 2^32\n *  (exclusive). The empty string returns 0.\n */\ngoog.string.hashCode = function(str) {\n  'use strict';\n  let result = 0;\n  for (let i = 0; i < str.length; ++i) {\n    // Normalize to 4 byte range, 0 ... 2^32.\n    result = (31 * result + str.charCodeAt(i)) >>> 0;\n  }\n  return result;\n};\n\n\n/**\n * The most recent unique ID. |0 is equivalent to Math.floor in this case.\n * @type {number}\n * @private\n */\ngoog.string.uniqueStringCounter_ = Math.random() * 0x80000000 | 0;\n\n\n/**\n * Generates and returns a string which is unique in the current document.\n * This is useful, for example, to create unique IDs for DOM elements.\n * @return {string} A unique id.\n */\ngoog.string.createUniqueString = function() {\n  'use strict';\n  return 'goog_' + goog.string.uniqueStringCounter_++;\n};\n\n\n/**\n * Converts the supplied string to a number, which may be Infinity or NaN.\n * This function strips whitespace: (toNumber(' 123') === 123)\n * This function accepts scientific notation: (toNumber('1e1') === 10)\n *\n * This is better than JavaScript's built-in conversions because, sadly:\n *     (Number(' ') === 0) and (parseFloat('123a') === 123)\n *\n * @param {string} str The string to convert.\n * @return {number} The number the supplied string represents, or NaN.\n */\ngoog.string.toNumber = function(str) {\n  'use strict';\n  const num = Number(str);\n  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {\n    return NaN;\n  }\n  return num;\n};\n\n\n/**\n * Returns whether the given string is lower camel case (e.g. \"isFooBar\").\n *\n * Note that this assumes the string is entirely letters.\n * @see http://en.wikipedia.org/wiki/CamelCase#Variations_and_synonyms\n *\n * @param {string} str String to test.\n * @return {boolean} Whether the string is lower camel case.\n */\ngoog.string.isLowerCamelCase = function(str) {\n  'use strict';\n  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);\n};\n\n\n/**\n * Returns whether the given string is upper camel case (e.g. \"FooBarBaz\").\n *\n * Note that this assumes the string is entirely letters.\n * @see http://en.wikipedia.org/wiki/CamelCase#Variations_and_synonyms\n *\n * @param {string} str String to test.\n * @return {boolean} Whether the string is upper camel case.\n */\ngoog.string.isUpperCamelCase = function(str) {\n  'use strict';\n  return /^([A-Z][a-z]*)+$/.test(str);\n};\n\n\n/**\n * Converts a string from selector-case to camelCase (e.g. from\n * \"multi-part-string\" to \"multiPartString\"), useful for converting\n * CSS selectors and HTML dataset keys to their equivalent JS properties.\n * @param {string} str The string in selector-case form.\n * @return {string} The string in camelCase form.\n */\ngoog.string.toCamelCase = function(str) {\n  'use strict';\n  return String(str).replace(/\\-([a-z])/g, function(all, match) {\n    'use strict';\n    return match.toUpperCase();\n  });\n};\n\n\n/**\n * Converts a string from camelCase to selector-case (e.g. from\n * \"multiPartString\" to \"multi-part-string\"), useful for converting JS\n * style and dataset properties to equivalent CSS selectors and HTML keys.\n * @param {string} str The string in camelCase form.\n * @return {string} The string in selector-case form.\n */\ngoog.string.toSelectorCase = function(str) {\n  'use strict';\n  return String(str).replace(/([A-Z])/g, '-$1').toLowerCase();\n};\n\n\n/**\n * Converts a string into TitleCase. First character of the string is always\n * capitalized in addition to the first letter of every subsequent word.\n * Words are delimited by one or more whitespaces by default. Custom delimiters\n * can optionally be specified to replace the default, which doesn't preserve\n * whitespace delimiters and instead must be explicitly included if needed.\n *\n * Default delimiter => \" \":\n *    goog.string.toTitleCase('oneTwoThree')    => 'OneTwoThree'\n *    goog.string.toTitleCase('one two three')  => 'One Two Three'\n *    goog.string.toTitleCase('  one   two   ') => '  One   Two   '\n *    goog.string.toTitleCase('one_two_three')  => 'One_two_three'\n *    goog.string.toTitleCase('one-two-three')  => 'One-two-three'\n *\n * Custom delimiter => \"_-.\":\n *    goog.string.toTitleCase('oneTwoThree', '_-.')       => 'OneTwoThree'\n *    goog.string.toTitleCase('one two three', '_-.')     => 'One two three'\n *    goog.string.toTitleCase('  one   two   ', '_-.')    => '  one   two   '\n *    goog.string.toTitleCase('one_two_three', '_-.')     => 'One_Two_Three'\n *    goog.string.toTitleCase('one-two-three', '_-.')     => 'One-Two-Three'\n *    goog.string.toTitleCase('one...two...three', '_-.') => 'One...Two...Three'\n *    goog.string.toTitleCase('one. two. three', '_-.')   => 'One. two. three'\n *    goog.string.toTitleCase('one-two.three', '_-.')     => 'One-Two.Three'\n *\n * @param {string} str String value in camelCase form.\n * @param {string=} opt_delimiters Custom delimiter character set used to\n *      distinguish words in the string value. Each character represents a\n *      single delimiter. When provided, default whitespace delimiter is\n *      overridden and must be explicitly included if needed.\n * @return {string} String value in TitleCase form.\n */\ngoog.string.toTitleCase = function(str, opt_delimiters) {\n  'use strict';\n  let delimiters = (typeof opt_delimiters === 'string') ?\n      goog.string.regExpEscape(opt_delimiters) :\n      '\\\\s';\n\n  // For IE8, we need to prevent using an empty character set. Otherwise,\n  // incorrect matching will occur.\n  delimiters = delimiters ? '|[' + delimiters + ']+' : '';\n\n  const regexp = new RegExp('(^' + delimiters + ')([a-z])', 'g');\n  return str.replace(regexp, function(all, p1, p2) {\n    'use strict';\n    return p1 + p2.toUpperCase();\n  });\n};\n\n\n/**\n * Capitalizes a string, i.e. converts the first letter to uppercase\n * and all other letters to lowercase, e.g.:\n *\n * goog.string.capitalize('one')     => 'One'\n * goog.string.capitalize('ONE')     => 'One'\n * goog.string.capitalize('one two') => 'One two'\n *\n * Note that this function does not trim initial whitespace.\n *\n * @param {string} str String value to capitalize.\n * @return {string} String value with first letter in uppercase.\n */\ngoog.string.capitalize = function(str) {\n  'use strict';\n  return String(str.charAt(0)).toUpperCase() +\n      String(str.substr(1)).toLowerCase();\n};\n\n\n/**\n * Parse a string in decimal or hexidecimal ('0xFFFF') form.\n *\n * To parse a particular radix, please use parseInt(string, radix) directly. See\n * https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/parseInt\n *\n * This is a wrapper for the built-in parseInt function that will only parse\n * numbers as base 10 or base 16.  Some JS implementations assume strings\n * starting with \"0\" are intended to be octal. ES3 allowed but discouraged\n * this behavior. ES5 forbids it.  This function emulates the ES5 behavior.\n *\n * For more information, see Mozilla JS Reference: http://goo.gl/8RiFj\n *\n * @param {string|number|null|undefined} value The value to be parsed.\n * @return {number} The number, parsed. If the string failed to parse, this\n *     will be NaN.\n */\ngoog.string.parseInt = function(value) {\n  'use strict';\n  // Force finite numbers to strings.\n  if (isFinite(value)) {\n    value = String(value);\n  }\n\n  if (typeof value === 'string') {\n    // If the string starts with '0x' or '-0x', parse as hex.\n    return /^\\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);\n  }\n\n  return NaN;\n};\n\n\n/**\n * Splits a string on a separator a limited number of times.\n *\n * This implementation is more similar to Python or Java, where the limit\n * parameter specifies the maximum number of splits rather than truncating\n * the number of results.\n *\n * See http://docs.python.org/2/library/stdtypes.html#str.split\n * See JavaDoc: http://goo.gl/F2AsY\n * See Mozilla reference: http://goo.gl/dZdZs\n *\n * @param {string} str String to split.\n * @param {string} separator The separator.\n * @param {number} limit The limit to the number of splits. The resulting array\n *     will have a maximum length of limit+1.  Negative numbers are the same\n *     as zero.\n * @return {!Array<string>} The string, split.\n */\ngoog.string.splitLimit = function(str, separator, limit) {\n  'use strict';\n  const parts = str.split(separator);\n  const returnVal = [];\n\n  // Only continue doing this while we haven't hit the limit and we have\n  // parts left.\n  while (limit > 0 && parts.length) {\n    returnVal.push(parts.shift());\n    limit--;\n  }\n\n  // If there are remaining parts, append them to the end.\n  if (parts.length) {\n    returnVal.push(parts.join(separator));\n  }\n\n  return returnVal;\n};\n\n\n/**\n * Finds the characters to the right of the last instance of any separator\n *\n * This function is similar to goog.string.path.baseName, except it can take a\n * list of characters to split the string on. It will return the rightmost\n * grouping of characters to the right of any separator as a left-to-right\n * oriented string.\n *\n * @see goog.string.path.baseName\n * @param {string} str The string\n * @param {string|!Array<string>} separators A list of separator characters\n * @return {string} The last part of the string with respect to the separators\n */\ngoog.string.lastComponent = function(str, separators) {\n  'use strict';\n  if (!separators) {\n    return str;\n  } else if (typeof separators == 'string') {\n    separators = [separators];\n  }\n\n  let lastSeparatorIndex = -1;\n  for (let i = 0; i < separators.length; i++) {\n    if (separators[i] == '') {\n      continue;\n    }\n    const currentSeparatorIndex = str.lastIndexOf(separators[i]);\n    if (currentSeparatorIndex > lastSeparatorIndex) {\n      lastSeparatorIndex = currentSeparatorIndex;\n    }\n  }\n  if (lastSeparatorIndex == -1) {\n    return str;\n  }\n  return str.slice(lastSeparatorIndex + 1);\n};\n\n\n/**\n * Computes the Levenshtein edit distance between two strings.\n * @param {string} a\n * @param {string} b\n * @return {number} The edit distance between the two strings.\n */\ngoog.string.editDistance = function(a, b) {\n  'use strict';\n  const v0 = [];\n  const v1 = [];\n\n  if (a == b) {\n    return 0;\n  }\n\n  if (!a.length || !b.length) {\n    return Math.max(a.length, b.length);\n  }\n\n  for (let i = 0; i < b.length + 1; i++) {\n    v0[i] = i;\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    v1[0] = i + 1;\n\n    for (let j = 0; j < b.length; j++) {\n      const cost = Number(a[i] != b[j]);\n      // Cost for the substring is the minimum of adding one character, removing\n      // one character, or a swap.\n      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);\n    }\n\n    for (let j = 0; j < v0.length; j++) {\n      v0[j] = v1[j];\n    }\n  }\n\n  return v1[b.length];\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview The dispose method is used to clean up references and\n * resources.\n */\n\ngoog.module('goog.dispose');\ngoog.module.declareLegacyNamespace();\n\n/**\n * Calls `dispose` on the argument if it supports it. If obj is not an\n *     object with a dispose() method, this is a no-op.\n * @param {*} obj The object to dispose of.\n */\nfunction dispose(obj) {\n  if (obj && typeof obj.dispose == 'function') {\n    obj.dispose();\n  }\n}\nexports = dispose;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Codec functions of the v8 wire protocol. Eventually we'd want\n * to support pluggable wire-format to improve wire efficiency and to enable\n * binary encoding. Such support will require an interface class, which\n * will be added later.\n *\n */\n\n\ngoog.provide('goog.labs.net.webChannel.WireV8');\n\ngoog.require('goog.asserts');\ngoog.require('goog.collections.maps');\ngoog.require('goog.json');\ngoog.require('goog.json.NativeJsonProcessor');\ngoog.require('goog.labs.net.webChannel.Wire');\ngoog.require('goog.structs');\ngoog.requireType('goog.string.Parser');\n\n\n\n/**\n * The v8 codec class.\n *\n * @constructor\n * @struct\n */\ngoog.labs.net.webChannel.WireV8 = function() {\n  'use strict';\n  /**\n   * Parser for a response payload. The parser should return an array.\n   * @private {!goog.string.Parser}\n   */\n  this.parser_ = new goog.json.NativeJsonProcessor();\n};\n\n\ngoog.scope(function() {\n'use strict';\nconst WireV8 = goog.labs.net.webChannel.WireV8;\nconst Wire = goog.labs.net.webChannel.Wire;\n\n\n/**\n * Encodes a standalone message into the wire format.\n *\n * May throw exception if the message object contains any invalid elements.\n *\n * @param {!Object|!goog.collections.maps.MapLike} message The message data.\n *     V8 only support JS objects (or Map).\n * @param {!Array<string>} buffer The text buffer to write the message to.\n * @param {string=} opt_prefix The prefix for each field of the object.\n */\nWireV8.prototype.encodeMessage = function(message, buffer, opt_prefix) {\n  'use strict';\n  const prefix = opt_prefix || '';\n  try {\n    goog.structs.forEach(message, function(value, key) {\n      'use strict';\n      let encodedValue = value;\n      if (goog.isObject(value)) {\n        encodedValue = goog.json.serialize(value);\n      }  // keep the fast-path for primitive types\n      buffer.push(prefix + key + '=' + encodeURIComponent(encodedValue));\n    });\n  } catch (ex) {\n    // We send a map here because lots of the retry logic relies on map IDs,\n    // so we have to send something (possibly redundant).\n    buffer.push(\n        prefix + 'type' +\n        '=' + encodeURIComponent('_badmap'));\n    throw ex;\n  }\n};\n\n\n/**\n * Encodes all the buffered messages of the forward channel.\n *\n * @param {!Array<Wire.QueuedMap>} messageQueue The message data.\n *     V8 only support JS objects.\n * @param {number} count The number of messages to be encoded.\n * @param {?function(!Object)} badMapHandler Callback for bad messages.\n * @return {string} the encoded messages\n */\nWireV8.prototype.encodeMessageQueue = function(\n    messageQueue, count, badMapHandler) {\n  'use strict';\n  let offset = -1;\n  while (true) {\n    const sb = ['count=' + count];\n    // To save a bit of bandwidth, specify the base mapId and the rest as\n    // offsets from it.\n    if (offset == -1) {\n      if (count > 0) {\n        offset = messageQueue[0].mapId;\n        sb.push('ofs=' + offset);\n      } else {\n        offset = 0;\n      }\n    } else {\n      sb.push('ofs=' + offset);\n    }\n    let done = true;\n    for (let i = 0; i < count; i++) {\n      let mapId = messageQueue[i].mapId;\n      const map = messageQueue[i].map;\n      mapId -= offset;\n      if (mapId < 0) {\n        // redo the encoding in case of retry/reordering, plus extra space\n        offset = Math.max(0, messageQueue[i].mapId - 100);\n        done = false;\n        continue;\n      }\n      try {\n        this.encodeMessage(map, sb, 'req' + mapId + '_');\n      } catch (ex) {\n        if (badMapHandler) {\n          badMapHandler(map);\n        }\n      }\n    }\n    if (done) {\n      return sb.join('&');\n    }\n  }\n};\n\n\n/**\n * Decodes a standalone message received from the wire. May throw exception\n * if text is ill-formatted.\n *\n * Must be valid JSON as it is insecure to use eval() to decode JS literals;\n * and eval() is disallowed in Chrome apps too.\n *\n * Invalid JS literals include null array elements, quotas etc.\n *\n * @param {string} messageText The string content as received from the wire.\n * @return {*} The decoded message object.\n */\nWireV8.prototype.decodeMessage = function(messageText) {\n  'use strict';\n  const response = this.parser_.parse(messageText);\n  goog.asserts.assert(Array.isArray(response));  // throw exception\n  return response;\n};\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview A pool of forward channel requests to enable real-time\n * messaging from the client to server.\n *\n */\n\ngoog.module('goog.labs.net.webChannel.ForwardChannelRequestPool');\n\ngoog.module.declareLegacyNamespace();\n\nconst ChannelRequest = goog.require('goog.labs.net.webChannel.ChannelRequest');\nconst Wire = goog.require('goog.labs.net.webChannel.Wire');\nconst array = goog.require('goog.array');\nconst googString = goog.require('goog.string');\n\n\n/**\n * This class represents the state of all forward channel requests.\n *\n * @param {number=} opt_maxPoolSize The maximum pool size.\n *\n * @struct @constructor @final\n */\nconst ForwardChannelRequestPool = function(opt_maxPoolSize) {\n  /**\n   * The max pool size as configured.\n   *\n   * @private {number}\n   */\n  this.maxPoolSizeConfigured_ =\n      opt_maxPoolSize || ForwardChannelRequestPool.MAX_POOL_SIZE_;\n\n  /**\n   * The current size limit of the request pool. This limit is meant to be\n   * read-only after the channel is fully opened.\n   *\n   * If SPDY or HTTP2 is enabled, set it to the max pool size, which is also\n   * configurable.\n   *\n   * @private {number}\n   */\n  this.maxSize_ = ForwardChannelRequestPool.isSpdyOrHttp2Enabled_() ?\n      this.maxPoolSizeConfigured_ :\n      1;\n\n  /**\n   * The container for all the pending request objects.\n   *\n   * @private {?Set<?ChannelRequest>}\n   */\n  this.requestPool_ = null;\n\n  if (this.maxSize_ > 1) {\n    this.requestPool_ = new Set();\n  }\n\n  /**\n   * The single request object when the pool size is limited to one.\n   *\n   * @private {?ChannelRequest}\n   */\n  this.request_ = null;\n\n  /**\n   * Saved pending messages when the pool is cancelled.\n   *\n   * @private {!Array<Wire.QueuedMap>}\n   */\n  this.pendingMessages_ = [];\n};\n\n\n/**\n * The default size limit of the request pool.\n *\n * @private {number}\n */\nForwardChannelRequestPool.MAX_POOL_SIZE_ = 10;\n\n\n/**\n * @return {boolean} True if SPDY or HTTP2 is enabled. Uses chrome-specific APIs\n *     as a fallback and will always return false for other browsers where\n *     PerformanceNavigationTiming is not available.\n * @private\n */\nForwardChannelRequestPool.isSpdyOrHttp2Enabled_ = function() {\n  if (goog.global.PerformanceNavigationTiming) {\n    const entrys = /** @type {!Array<!PerformanceNavigationTiming>} */ (\n        goog.global.performance.getEntriesByType('navigation'));\n    return entrys.length > 0 &&\n        (entrys[0].nextHopProtocol == 'hq' ||\n         entrys[0].nextHopProtocol == 'h2');\n  }\n  return !!(\n      goog.global.chrome && goog.global.chrome.loadTimes &&\n      goog.global.chrome.loadTimes() &&\n      goog.global.chrome.loadTimes().wasFetchedViaSpdy);\n};\n\n\n/**\n * Once we know the client protocol (from the handshake), check if we need\n * enable the request pool accordingly. This is more robust than using\n * browser-internal APIs (specific to Chrome).\n *\n * @param {string} clientProtocol The client protocol\n */\nForwardChannelRequestPool.prototype.applyClientProtocol = function(\n    clientProtocol) {\n  if (this.requestPool_) {\n    return;\n  }\n\n  if (googString.contains(clientProtocol, 'spdy') ||\n      googString.contains(clientProtocol, 'quic') ||\n      googString.contains(clientProtocol, 'h2')) {\n    this.maxSize_ = this.maxPoolSizeConfigured_;\n    this.requestPool_ = new Set();\n    if (this.request_) {\n      this.addRequest(this.request_);\n      this.request_ = null;\n    }\n  }\n};\n\n\n/**\n * @return {boolean} True if the pool is full.\n */\nForwardChannelRequestPool.prototype.isFull = function() {\n  if (this.request_) {\n    return true;\n  }\n\n  if (this.requestPool_) {\n    return this.requestPool_.size >= this.maxSize_;\n  }\n\n  return false;\n};\n\n\n/**\n * @return {number} The current size limit.\n */\nForwardChannelRequestPool.prototype.getMaxSize = function() {\n  return this.maxSize_;\n};\n\n\n/**\n * @return {number} The number of pending requests in the pool.\n */\nForwardChannelRequestPool.prototype.getRequestCount = function() {\n  if (this.request_) {\n    return 1;\n  }\n\n  if (this.requestPool_) {\n    return this.requestPool_.size;\n  }\n\n  return 0;\n};\n\n\n/**\n * @param {ChannelRequest} req The channel request.\n * @return {boolean} True if the request is a included inside the pool.\n */\nForwardChannelRequestPool.prototype.hasRequest = function(req) {\n  if (this.request_) {\n    return this.request_ == req;\n  }\n\n  if (this.requestPool_) {\n    return this.requestPool_.has(req);\n  }\n\n  return false;\n};\n\n\n/**\n * Adds a new request to the pool.\n *\n * @param {!ChannelRequest} req The new channel request.\n */\nForwardChannelRequestPool.prototype.addRequest = function(req) {\n  if (this.requestPool_) {\n    this.requestPool_.add(req);\n  } else {\n    this.request_ = req;\n  }\n};\n\n\n/**\n * Removes the given request from the pool.\n *\n * @param {ChannelRequest} req The channel request.\n * @return {boolean} Whether the request has been removed from the pool.\n */\nForwardChannelRequestPool.prototype.removeRequest = function(req) {\n  if (this.request_ && this.request_ == req) {\n    this.request_ = null;\n    return true;\n  }\n\n  if (this.requestPool_ && this.requestPool_.has(req)) {\n    this.requestPool_.delete(req);\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * Clears the pool and cancel all the pending requests.\n */\nForwardChannelRequestPool.prototype.cancel = function() {\n  // save any pending messages\n  this.pendingMessages_ = this.getPendingMessages();\n\n  if (this.request_) {\n    this.request_.cancel();\n    this.request_ = null;\n    return;\n  }\n\n  if (this.requestPool_ && this.requestPool_.size !== 0) {\n    for (const val of this.requestPool_.values()) {\n      val.cancel();\n    }\n    this.requestPool_.clear();\n  }\n};\n\n\n/**\n * @return {boolean} Whether there are any pending requests.\n */\nForwardChannelRequestPool.prototype.hasPendingRequest = function() {\n  return (this.request_ != null) ||\n      (this.requestPool_ != null && this.requestPool_.size !== 0);\n};\n\n\n/**\n * @return {!Array<Wire.QueuedMap>} All the pending messages from the pool,\n *     as a new array.\n */\nForwardChannelRequestPool.prototype.getPendingMessages = function() {\n  if (this.request_ != null) {\n    return this.pendingMessages_.concat(this.request_.getPendingMessages());\n  }\n\n  if (this.requestPool_ != null && this.requestPool_.size !== 0) {\n    let result = this.pendingMessages_;\n    for (const val of this.requestPool_.values()) {\n      result = result.concat(val.getPendingMessages());\n    }\n    return result;\n  }\n\n  return array.clone(this.pendingMessages_);\n};\n\n\n/**\n * Records pending messages, e.g. when a request receives a failed response.\n *\n * @param {!Array<Wire.QueuedMap>} messages Pending messages.\n */\nForwardChannelRequestPool.prototype.addPendingMessages = function(messages) {\n  this.pendingMessages_ = this.pendingMessages_.concat(messages);\n};\n\n\n/**\n * Clears any recorded pending messages.\n */\nForwardChannelRequestPool.prototype.clearPendingMessages = function() {\n  this.pendingMessages_.length = 0;\n};\n\n\n/**\n * Cancels all pending requests and force the completion of channel requests.\n *\n * Need go through the standard onRequestComplete logic to expose the max-retry\n * failure in the standard way.\n *\n * @param {function(!ChannelRequest)} onComplete The completion callback.\n * @return {boolean} true if any request has been forced to complete.\n */\nForwardChannelRequestPool.prototype.forceComplete = function(onComplete) {\n  if (this.request_ != null) {\n    this.request_.cancel();\n    onComplete(this.request_);\n    return true;\n  }\n\n  if (this.requestPool_ && this.requestPool_.size !== 0) {\n    for (const val of this.requestPool_.values()) {\n      val.cancel();\n      onComplete(val);\n    }\n    return true;\n  }\n\n  return false;\n};\n\nexports = ForwardChannelRequestPool;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Generics method for collection-like classes and objects.\n *\n *\n * This file contains functions to work with collections. It supports using\n * Map, Set, Array and Object and other classes that implement collection-like\n * methods.\n * @suppress {strictMissingProperties}\n */\n\n\ngoog.provide('goog.structs');\n\ngoog.require('goog.array');\ngoog.require('goog.object');\n\n\n// We treat an object as a dictionary if it has getKeys or it is an object that\n// isn't arrayLike.\n\n\n/**\n * Returns the number of values in the collection-like object.\n * @param {Object} col The collection-like object.\n * @return {number} The number of values in the collection-like object.\n */\ngoog.structs.getCount = function(col) {\n  'use strict';\n  if (col.getCount && typeof col.getCount == 'function') {\n    return col.getCount();\n  }\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    return col.length;\n  }\n  return goog.object.getCount(col);\n};\n\n\n/**\n * Returns the values of the collection-like object.\n * @param {Object} col The collection-like object.\n * @return {!Array<?>} The values in the collection-like object.\n */\ngoog.structs.getValues = function(col) {\n  'use strict';\n  if (col.getValues && typeof col.getValues == 'function') {\n    return col.getValues();\n  }\n  // ES6 Map and Set both define a values function that returns an iterator.\n  // The typeof check allows the compiler to remove the Map and Set polyfills\n  // if they are otherwise unused throughout the entire binary.\n  if ((typeof Map !== 'undefined' && col instanceof Map) ||\n      (typeof Set !== 'undefined' && col instanceof Set)) {\n    return Array.from(col.values());\n  }\n  if (typeof col === 'string') {\n    return col.split('');\n  }\n  if (goog.isArrayLike(col)) {\n    var rv = [];\n    var l = col.length;\n    for (var i = 0; i < l; i++) {\n      rv.push(col[i]);\n    }\n    return rv;\n  }\n  return goog.object.getValues(col);\n};\n\n\n/**\n * Returns the keys of the collection. Some collections have no notion of\n * keys/indexes and this function will return undefined in those cases.\n * @param {Object} col The collection-like object.\n * @return {!Array|undefined} The keys in the collection.\n */\ngoog.structs.getKeys = function(col) {\n  'use strict';\n  if (col.getKeys && typeof col.getKeys == 'function') {\n    return col.getKeys();\n  }\n  // if we have getValues but no getKeys we know this is a key-less collection\n  if (col.getValues && typeof col.getValues == 'function') {\n    return undefined;\n  }\n  // ES6 Map and Set both define a keys function that returns an iterator. For\n  // Sets this iterates over the same values as the values iterator.\n  // The typeof check allows the compiler to remove the Map and Set polyfills\n  // if they are otherwise unused throughout the entire binary.\n  if (typeof Map !== 'undefined' && col instanceof Map) {\n    return Array.from(col.keys());\n  }\n  // Unlike the native Set, goog.structs.Set does not expose keys as the values.\n  if (typeof Set !== 'undefined' && col instanceof Set) {\n    return undefined;\n  }\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    var rv = [];\n    var l = col.length;\n    for (var i = 0; i < l; i++) {\n      rv.push(i);\n    }\n    return rv;\n  }\n\n  return goog.object.getKeys(col);\n};\n\n\n/**\n * Whether the collection contains the given value. This is O(n) and uses\n * equals (==) to test the existence.\n * @param {Object} col The collection-like object.\n * @param {*} val The value to check for.\n * @return {boolean} True if the map contains the value.\n */\ngoog.structs.contains = function(col, val) {\n  'use strict';\n  if (col.contains && typeof col.contains == 'function') {\n    return col.contains(val);\n  }\n  if (col.containsValue && typeof col.containsValue == 'function') {\n    return col.containsValue(val);\n  }\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    return goog.array.contains(/** @type {!Array<?>} */ (col), val);\n  }\n  return goog.object.containsValue(col, val);\n};\n\n\n/**\n * Whether the collection is empty.\n * @param {Object} col The collection-like object.\n * @return {boolean} True if empty.\n */\ngoog.structs.isEmpty = function(col) {\n  'use strict';\n  if (col.isEmpty && typeof col.isEmpty == 'function') {\n    return col.isEmpty();\n  }\n\n  // We do not use goog.string.isEmptyOrWhitespace because here we treat the\n  // string as\n  // collection and as such even whitespace matters\n\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    return /** @type {!Array<?>} */ (col).length === 0;\n  }\n  return goog.object.isEmpty(col);\n};\n\n\n/**\n * Removes all the elements from the collection.\n * @param {Object} col The collection-like object.\n * @return {void}\n */\ngoog.structs.clear = function(col) {\n  'use strict';\n  // NOTE(arv): This should not contain strings because strings are immutable\n  if (col.clear && typeof col.clear == 'function') {\n    col.clear();\n  } else if (goog.isArrayLike(col)) {\n    goog.array.clear(/** @type {IArrayLike<?>} */ (col));\n  } else {\n    goog.object.clear(col);\n  }\n};\n\n\n/**\n * Calls a function for each value in a collection. The function takes\n * three arguments; the value, the key and the collection.\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):?} f The function to call for every value.\n *     This function takes\n *     3 arguments (the value, the key or undefined if the collection has no\n *     notion of keys, and the collection) and the return value is irrelevant.\n * @param {T=} opt_obj The object to be used as the value of 'this'\n *     within `f`.\n * @return {void}\n * @template T,S\n * @deprecated Use a more specific method, e.g. native Array.prototype.forEach,\n *     or for-of.\n */\ngoog.structs.forEach = function(col, f, opt_obj) {\n  'use strict';\n  if (col.forEach && typeof col.forEach == 'function') {\n    col.forEach(f, opt_obj);\n  } else if (goog.isArrayLike(col) || typeof col === 'string') {\n    Array.prototype.forEach.call(/** @type {!Array<?>} */ (col), f, opt_obj);\n  } else {\n    var keys = goog.structs.getKeys(col);\n    var values = goog.structs.getValues(col);\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n      f.call(/** @type {?} */ (opt_obj), values[i], keys && keys[i], col);\n    }\n  }\n};\n\n\n/**\n * Calls a function for every value in the collection. When a call returns true,\n * adds the value to a new collection (Array is returned by default).\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):boolean} f The function to call for every\n *     value. This function takes\n *     3 arguments (the value, the key or undefined if the collection has no\n *     notion of keys, and the collection) and should return a Boolean. If the\n *     return value is true the value is added to the result collection. If it\n *     is false the value is not included.\n * @param {T=} opt_obj The object to be used as the value of 'this'\n *     within `f`.\n * @return {!Object|!Array<?>} A new collection where the passed values are\n *     present. If col is a key-less collection an array is returned.  If col\n *     has keys and values a plain old JS object is returned.\n * @template T,S\n */\ngoog.structs.filter = function(col, f, opt_obj) {\n  'use strict';\n  if (typeof col.filter == 'function') {\n    return col.filter(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    return Array.prototype.filter.call(\n        /** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n\n  var rv;\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  if (keys) {\n    rv = {};\n    for (var i = 0; i < l; i++) {\n      if (f.call(/** @type {?} */ (opt_obj), values[i], keys[i], col)) {\n        rv[keys[i]] = values[i];\n      }\n    }\n  } else {\n    // We should not use Array#filter here since we want to make sure that\n    // the index is undefined as well as make sure that col is passed to the\n    // function.\n    rv = [];\n    for (var i = 0; i < l; i++) {\n      if (f.call(opt_obj, values[i], undefined, col)) {\n        rv.push(values[i]);\n      }\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Calls a function for every value in the collection and adds the result into a\n * new collection (defaults to creating a new Array).\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):V} f The function to call for every value.\n *     This function takes 3 arguments (the value, the key or undefined if the\n *     collection has no notion of keys, and the collection) and should return\n *     something. The result will be used as the value in the new collection.\n * @param {T=} opt_obj  The object to be used as the value of 'this'\n *     within `f`.\n * @return {!Object<V>|!Array<V>} A new collection with the new values.  If\n *     col is a key-less collection an array is returned.  If col has keys and\n *     values a plain old JS object is returned.\n * @template T,S,V\n */\ngoog.structs.map = function(col, f, opt_obj) {\n  'use strict';\n  if (typeof col.map == 'function') {\n    return col.map(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    return Array.prototype.map.call(/** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n\n  var rv;\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  if (keys) {\n    rv = {};\n    for (var i = 0; i < l; i++) {\n      rv[keys[i]] = f.call(/** @type {?} */ (opt_obj), values[i], keys[i], col);\n    }\n  } else {\n    // We should not use Array#map here since we want to make sure that\n    // the index is undefined as well as make sure that col is passed to the\n    // function.\n    rv = [];\n    for (var i = 0; i < l; i++) {\n      rv[i] = f.call(/** @type {?} */ (opt_obj), values[i], undefined, col);\n    }\n  }\n  return rv;\n};\n\n\n/**\n * Calls f for each value in a collection. If any call returns true this returns\n * true (without checking the rest). If all returns false this returns false.\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):boolean} f The function to call for every\n *     value. This function takes 3 arguments (the value, the key or undefined\n *     if the collection has no notion of keys, and the collection) and should\n *     return a boolean.\n * @param {T=} opt_obj  The object to be used as the value of 'this'\n *     within `f`.\n * @return {boolean} True if any value passes the test.\n * @template T,S\n */\ngoog.structs.some = function(col, f, opt_obj) {\n  'use strict';\n  if (typeof col.some == 'function') {\n    return col.some(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    return Array.prototype.some.call(\n        /** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  for (var i = 0; i < l; i++) {\n    if (f.call(/** @type {?} */ (opt_obj), values[i], keys && keys[i], col)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Calls f for each value in a collection. If all calls return true this return\n * true this returns true. If any returns false this returns false at this point\n *  and does not continue to check the remaining values.\n *\n * @param {S} col The collection-like object.\n * @param {function(this:T,?,?,S):boolean} f The function to call for every\n *     value. This function takes 3 arguments (the value, the key or\n *     undefined if the collection has no notion of keys, and the collection)\n *     and should return a boolean.\n * @param {T=} opt_obj  The object to be used as the value of 'this'\n *     within `f`.\n * @return {boolean} True if all key-value pairs pass the test.\n * @template T,S\n */\ngoog.structs.every = function(col, f, opt_obj) {\n  'use strict';\n  if (typeof col.every == 'function') {\n    return col.every(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col === 'string') {\n    return Array.prototype.every.call(\n        /** @type {!Array<?>} */ (col), f, opt_obj);\n  }\n  var keys = goog.structs.getKeys(col);\n  var values = goog.structs.getValues(col);\n  var l = values.length;\n  for (var i = 0; i < l; i++) {\n    if (!f.call(/** @type {?} */ (opt_obj), values[i], keys && keys[i], col)) {\n      return false;\n    }\n  }\n  return true;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Simple utilities for dealing with URI strings.\n *\n * This package is deprecated in favour of the Closure URL package (goog.url)\n * when manipulating URIs for use by a browser. This package uses regular\n * expressions to parse a potential URI which can fall out of sync with how a\n * browser will actually interpret the URI. See\n * `goog.uri.utils.setUrlPackageSupportLoggingHandler` for one way to identify\n * URIs that should instead be parsed using the URL package.\n *\n * This is intended to be a lightweight alternative to constructing goog.Uri\n * objects.  Whereas goog.Uri adds several kilobytes to the binary regardless\n * of how much of its functionality you use, this is designed to be a set of\n * mostly-independent utilities so that the compiler includes only what is\n * necessary for the task.  Estimated savings of porting is 5k pre-gzip and\n * 1.5k post-gzip.  To ensure the savings remain, future developers should\n * avoid adding new functionality to existing functions, but instead create\n * new ones and factor out shared code.\n *\n * Many of these utilities have limited functionality, tailored to common\n * cases.  The query parameter utilities assume that the parameter keys are\n * already encoded, since most keys are compile-time alphanumeric strings.  The\n * query parameter mutation utilities also do not tolerate fragment identifiers.\n *\n * By design, these functions can be slower than goog.Uri equivalents.\n * Repeated calls to some of functions may be quadratic in behavior for IE,\n * although the effect is somewhat limited given the 2kb limit.\n *\n * One advantage of the limited functionality here is that this approach is\n * less sensitive to differences in URI encodings than goog.Uri, since these\n * functions operate on strings directly, rather than decoding them and\n * then re-encoding.\n *\n * Uses features of RFC 3986 for parsing/formatting URIs:\n *   http://www.ietf.org/rfc/rfc3986.txt\n */\n\ngoog.provide('goog.uri.utils');\ngoog.provide('goog.uri.utils.ComponentIndex');\ngoog.provide('goog.uri.utils.QueryArray');\ngoog.provide('goog.uri.utils.QueryValue');\ngoog.provide('goog.uri.utils.StandardQueryParam');\n\ngoog.require('goog.asserts');\ngoog.require('goog.string');\n\n\n/**\n * Character codes inlined to avoid object allocations due to charCode.\n * @enum {number}\n * @private\n */\ngoog.uri.utils.CharCode_ = {\n  AMPERSAND: 38,\n  EQUAL: 61,\n  HASH: 35,\n  QUESTION: 63\n};\n\n\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?string=} opt_scheme The scheme such as 'http'.\n * @param {?string=} opt_userInfo The user name before the '@'.\n * @param {?string=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {(string|number|null)=} opt_port The port number.\n * @param {?string=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?string=} opt_queryData The URI-encoded query data.\n * @param {?string=} opt_fragment The URI-encoded fragment identifier.\n * @return {string} The fully combined URI.\n */\ngoog.uri.utils.buildFromEncodedParts = function(\n    opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData,\n    opt_fragment) {\n  'use strict';\n  var out = '';\n\n  if (opt_scheme) {\n    out += opt_scheme + ':';\n  }\n\n  if (opt_domain) {\n    out += '//';\n\n    if (opt_userInfo) {\n      out += opt_userInfo + '@';\n    }\n\n    out += opt_domain;\n\n    if (opt_port) {\n      out += ':' + opt_port;\n    }\n  }\n\n  if (opt_path) {\n    out += opt_path;\n  }\n\n  if (opt_queryData) {\n    out += '?' + opt_queryData;\n  }\n\n  if (opt_fragment) {\n    out += '#' + opt_fragment;\n  }\n\n  return out;\n};\n\n\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {@link http://www.ietf.org/rfc/rfc3986.txt} says in Appendix B\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n *\n * TODO(user): separate out the authority terminating characters once this\n * file is moved to ES6.\n * @type {!RegExp}\n * @private\n */\ngoog.uri.utils.splitRe_ = new RegExp(\n    '^' +  // Anchor against the entire string.\n    '(?:' +\n    '([^:/?#.]+)' +  // scheme - ignore special characters\n                     // used by other URL parts such as :,\n                     // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n    '(?:([^\\\\\\\\/?#]*)@)?' +  // userInfo\n    '([^\\\\\\\\/?#]*?)' +       // domain\n    '(?::([0-9]+))?' +       // port\n    '(?=[\\\\\\\\/?#]|$)' +      // authority-terminating character.\n    ')?' +\n    '([^?#]+)?' +          // path\n    '(?:\\\\?([^#]*))?' +    // query\n    '(?:#([\\\\s\\\\S]*))?' +  // fragment. Can't use '.*' with 's' flag as Firefox\n                           // doesn't support the flag, and can't use an\n                           // \"everything set\" ([^]) as IE10 doesn't match any\n                           // characters with it.\n    '$');\n\n\n/**\n * The index of each URI component in the return value of goog.uri.utils.split.\n * @enum {number}\n */\ngoog.uri.utils.ComponentIndex = {\n  SCHEME: 1,\n  USER_INFO: 2,\n  DOMAIN: 3,\n  PORT: 4,\n  PATH: 5,\n  QUERY_DATA: 6,\n  FRAGMENT: 7\n};\n\n/**\n * @type {?function(string)}\n * @private\n */\ngoog.uri.utils.urlPackageSupportLoggingHandler_ = null;\n\n/**\n * @param {?function(string)} handler The handler function to call when a URI\n *     with a protocol that is better supported by the Closure URL package is\n *     detected.\n */\ngoog.uri.utils.setUrlPackageSupportLoggingHandler = function(handler) {\n  'use strict';\n  goog.uri.utils.urlPackageSupportLoggingHandler_ = handler;\n};\n\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.ComponentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {string} uri The URI string to examine.\n * @return {!Array<string|undefined>} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\ngoog.uri.utils.split = function(uri) {\n  'use strict';\n  // See @return comment -- never null.\n  var result = /** @type {!Array<string|undefined>} */ (\n      uri.match(goog.uri.utils.splitRe_));\n  if (goog.uri.utils.urlPackageSupportLoggingHandler_ &&\n      ['http', 'https', 'ws', 'wss',\n       'ftp'].indexOf(result[goog.uri.utils.ComponentIndex.SCHEME]) >= 0) {\n    goog.uri.utils.urlPackageSupportLoggingHandler_(uri);\n  }\n  return result;\n};\n\n\n/**\n * @param {?string} uri A possibly null string.\n * @param {boolean=} opt_preserveReserved If true, percent-encoding of RFC-3986\n *     reserved characters will not be removed.\n * @return {?string} The string URI-decoded, or null if uri is null.\n * @private\n */\ngoog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {\n  'use strict';\n  if (!uri) {\n    return uri;\n  }\n\n  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);\n};\n\n\n/**\n * Gets a URI component by index.\n *\n * It is preferred to use the getPathEncoded() variety of functions ahead,\n * since they are more readable.\n *\n * @param {goog.uri.utils.ComponentIndex} componentIndex The component index.\n * @param {string} uri The URI to examine.\n * @return {?string} The still-encoded component, or null if the component\n *     is not present.\n * @private\n */\ngoog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {\n  'use strict';\n  // Convert undefined, null, and empty string into null.\n  return goog.uri.utils.split(uri)[componentIndex] || null;\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The protocol or scheme, or null if none.  Does not\n *     include trailing colons or slashes.\n */\ngoog.uri.utils.getScheme = function(uri) {\n  'use strict';\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.SCHEME, uri);\n};\n\n\n/**\n * Gets the effective scheme for the URL.  If the URL is relative then the\n * scheme is derived from the page's location.\n * @param {string} uri The URI to examine.\n * @return {string} The protocol or scheme, always lower case.\n */\ngoog.uri.utils.getEffectiveScheme = function(uri) {\n  'use strict';\n  var scheme = goog.uri.utils.getScheme(uri);\n  if (!scheme && goog.global.self && goog.global.self.location) {\n    var protocol = goog.global.self.location.protocol;\n    scheme = protocol.substr(0, protocol.length - 1);\n  }\n  // NOTE: When called from a web worker in Firefox 3.5, location may be null.\n  // All other browsers with web workers support self.location from the worker.\n  return scheme ? scheme.toLowerCase() : '';\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The user name still encoded, or null if none.\n */\ngoog.uri.utils.getUserInfoEncoded = function(uri) {\n  'use strict';\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.USER_INFO, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded user info, or null if none.\n */\ngoog.uri.utils.getUserInfo = function(uri) {\n  'use strict';\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getUserInfoEncoded(uri));\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The domain name still encoded, or null if none.\n */\ngoog.uri.utils.getDomainEncoded = function(uri) {\n  'use strict';\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.DOMAIN, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded domain, or null if none.\n */\ngoog.uri.utils.getDomain = function(uri) {\n  'use strict';\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getDomainEncoded(uri), true /* opt_preserveReserved */);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?number} The port number, or null if none.\n */\ngoog.uri.utils.getPort = function(uri) {\n  'use strict';\n  // Coerce to a number.  If the result of getComponentByIndex_ is null or\n  // non-numeric, the number coersion yields NaN.  This will then return\n  // null for all non-numeric cases (though also zero, which isn't a relevant\n  // port number).\n  return Number(\n             goog.uri.utils.getComponentByIndex_(\n                 goog.uri.utils.ComponentIndex.PORT, uri)) ||\n      null;\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The path still encoded, or null if none. Includes the\n *     leading slash, if any.\n */\ngoog.uri.utils.getPathEncoded = function(uri) {\n  'use strict';\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.PATH, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded path, or null if none.  Includes the leading\n *     slash, if any.\n */\ngoog.uri.utils.getPath = function(uri) {\n  'use strict';\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getPathEncoded(uri), true /* opt_preserveReserved */);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The query data still encoded, or null if none.  Does not\n *     include the question mark itself.\n */\ngoog.uri.utils.getQueryData = function(uri) {\n  'use strict';\n  return goog.uri.utils.getComponentByIndex_(\n      goog.uri.utils.ComponentIndex.QUERY_DATA, uri);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The fragment identifier, or null if none.  Does not\n *     include the hash mark itself.\n */\ngoog.uri.utils.getFragmentEncoded = function(uri) {\n  'use strict';\n  // The hash mark may not appear in any other part of the URL.\n  var hashIndex = uri.indexOf('#');\n  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @param {?string} fragment The encoded fragment identifier, or null if none.\n *     Does not include the hash mark itself.\n * @return {string} The URI with the fragment set.\n */\ngoog.uri.utils.setFragmentEncoded = function(uri, fragment) {\n  'use strict';\n  return goog.uri.utils.removeFragment(uri) + (fragment ? '#' + fragment : '');\n};\n\n\n/**\n * @param {string} uri The URI to examine.\n * @return {?string} The decoded fragment identifier, or null if none.  Does\n *     not include the hash mark.\n */\ngoog.uri.utils.getFragment = function(uri) {\n  'use strict';\n  return goog.uri.utils.decodeIfPossible_(\n      goog.uri.utils.getFragmentEncoded(uri));\n};\n\n\n/**\n * Extracts everything up to the port of the URI.\n * @param {string} uri The URI string.\n * @return {string} Everything up to and including the port.\n */\ngoog.uri.utils.getHost = function(uri) {\n  'use strict';\n  var pieces = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      pieces[goog.uri.utils.ComponentIndex.SCHEME],\n      pieces[goog.uri.utils.ComponentIndex.USER_INFO],\n      pieces[goog.uri.utils.ComponentIndex.DOMAIN],\n      pieces[goog.uri.utils.ComponentIndex.PORT]);\n};\n\n\n/**\n * Returns the origin for a given URL.\n * @param {string} uri The URI string.\n * @return {string} Everything up to and including the port.\n */\ngoog.uri.utils.getOrigin = function(uri) {\n  'use strict';\n  var pieces = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      pieces[goog.uri.utils.ComponentIndex.SCHEME], null /* opt_userInfo */,\n      pieces[goog.uri.utils.ComponentIndex.DOMAIN],\n      pieces[goog.uri.utils.ComponentIndex.PORT]);\n};\n\n\n/**\n * Extracts the path of the URL and everything after.\n * @param {string} uri The URI string.\n * @return {string} The URI, starting at the path and including the query\n *     parameters and fragment identifier.\n */\ngoog.uri.utils.getPathAndAfter = function(uri) {\n  'use strict';\n  var pieces = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH],\n      pieces[goog.uri.utils.ComponentIndex.QUERY_DATA],\n      pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);\n};\n\n\n/**\n * Gets the URI with the fragment identifier removed.\n * @param {string} uri The URI to examine.\n * @return {string} Everything preceding the hash mark.\n */\ngoog.uri.utils.removeFragment = function(uri) {\n  'use strict';\n  // The hash mark may not appear in any other part of the URL.\n  var hashIndex = uri.indexOf('#');\n  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);\n};\n\n\n/**\n * Ensures that two URI's have the exact same domain, scheme, and port.\n *\n * Unlike the version in goog.Uri, this checks protocol, and therefore is\n * suitable for checking against the browser's same-origin policy.\n *\n * @param {string} uri1 The first URI.\n * @param {string} uri2 The second URI.\n * @return {boolean} Whether they have the same scheme, domain and port.\n */\ngoog.uri.utils.haveSameDomain = function(uri1, uri2) {\n  'use strict';\n  var pieces1 = goog.uri.utils.split(uri1);\n  var pieces2 = goog.uri.utils.split(uri2);\n  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] ==\n      pieces2[goog.uri.utils.ComponentIndex.DOMAIN] &&\n      pieces1[goog.uri.utils.ComponentIndex.SCHEME] ==\n      pieces2[goog.uri.utils.ComponentIndex.SCHEME] &&\n      pieces1[goog.uri.utils.ComponentIndex.PORT] ==\n      pieces2[goog.uri.utils.ComponentIndex.PORT];\n};\n\n\n/**\n * Asserts that there are no fragment or query identifiers, only in uncompiled\n * mode.\n * @param {string} uri The URI to examine.\n * @private\n */\ngoog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {\n  'use strict';\n  goog.asserts.assert(\n      uri.indexOf('#') < 0 && uri.indexOf('?') < 0,\n      'goog.uri.utils: Fragment or query identifiers are not supported: [%s]',\n      uri);\n};\n\n\n/**\n * Supported query parameter values by the parameter serializing utilities.\n *\n * If a value is null or undefined, the key-value pair is skipped, as an easy\n * way to omit parameters conditionally.  Non-array parameters are converted\n * to a string and URI encoded.  Array values are expanded into multiple\n * &key=value pairs, with each element stringized and URI-encoded.\n *\n * @typedef {*}\n */\ngoog.uri.utils.QueryValue;\n\n\n/**\n * An array representing a set of query parameters with alternating keys\n * and values.\n *\n * Keys are assumed to be URI encoded already and live at even indices.  See\n * goog.uri.utils.QueryValue for details on how parameter values are encoded.\n *\n * Example:\n * <pre>\n * var data = [\n *   // Simple param: ?name=BobBarker\n *   'name', 'BobBarker',\n *   // Conditional param -- may be omitted entirely.\n *   'specialDietaryNeeds', hasDietaryNeeds() ? getDietaryNeeds() : null,\n *   // Multi-valued param: &house=LosAngeles&house=NewYork&house=null\n *   'house', ['LosAngeles', 'NewYork', null]\n * ];\n * </pre>\n *\n * @typedef {!Array<string|goog.uri.utils.QueryValue>}\n */\ngoog.uri.utils.QueryArray;\n\n\n/**\n * Parses encoded query parameters and calls callback function for every\n * parameter found in the string.\n *\n * Missing value of parameter (e.g. “…&key&…”) is treated as if the value was an\n * empty string.  Keys may be empty strings (e.g. “…&=value&…”) which also means\n * that “…&=&…” and “…&&…” will result in an empty key and value.\n *\n * @param {string} encodedQuery Encoded query string excluding question mark at\n *     the beginning.\n * @param {function(string, string)} callback Function called for every\n *     parameter found in query string.  The first argument (name) will not be\n *     urldecoded (so the function is consistent with buildQueryData), but the\n *     second will.  If the parameter has no value (i.e. “=” was not present)\n *     the second argument (value) will be an empty string.\n */\ngoog.uri.utils.parseQueryData = function(encodedQuery, callback) {\n  'use strict';\n  if (!encodedQuery) {\n    return;\n  }\n  var pairs = encodedQuery.split('&');\n  for (var i = 0; i < pairs.length; i++) {\n    var indexOfEquals = pairs[i].indexOf('=');\n    var name = null;\n    var value = null;\n    if (indexOfEquals >= 0) {\n      name = pairs[i].substring(0, indexOfEquals);\n      value = pairs[i].substring(indexOfEquals + 1);\n    } else {\n      name = pairs[i];\n    }\n    callback(name, value ? goog.string.urlDecode(value) : '');\n  }\n};\n\n\n/**\n * Split the URI into 3 parts where the [1] is the queryData without a leading\n * '?'. For example, the URI http://foo.com/bar?a=b#abc returns\n * ['http://foo.com/bar','a=b','#abc'].\n * @param {string} uri The URI to parse.\n * @return {!Array<string>} An array representation of uri of length 3 where the\n *     middle value is the queryData without a leading '?'.\n * @private\n */\ngoog.uri.utils.splitQueryData_ = function(uri) {\n  'use strict';\n  // Find the query data and hash.\n  var hashIndex = uri.indexOf('#');\n  if (hashIndex < 0) {\n    hashIndex = uri.length;\n  }\n  var questionIndex = uri.indexOf('?');\n  var queryData;\n  if (questionIndex < 0 || questionIndex > hashIndex) {\n    questionIndex = hashIndex;\n    queryData = '';\n  } else {\n    queryData = uri.substring(questionIndex + 1, hashIndex);\n  }\n  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];\n};\n\n\n/**\n * Join an array created by splitQueryData_ back into a URI.\n * @param {!Array<string>} parts A URI in the form generated by splitQueryData_.\n * @return {string} The joined URI.\n * @private\n */\ngoog.uri.utils.joinQueryData_ = function(parts) {\n  'use strict';\n  return parts[0] + (parts[1] ? '?' + parts[1] : '') + parts[2];\n};\n\n\n/**\n * @param {string} queryData\n * @param {string} newData\n * @return {string}\n * @private\n */\ngoog.uri.utils.appendQueryData_ = function(queryData, newData) {\n  'use strict';\n  if (!newData) {\n    return queryData;\n  }\n  return queryData ? queryData + '&' + newData : newData;\n};\n\n\n/**\n * @param {string} uri\n * @param {string} queryData\n * @return {string}\n * @private\n */\ngoog.uri.utils.appendQueryDataToUri_ = function(uri, queryData) {\n  'use strict';\n  if (!queryData) {\n    return uri;\n  }\n  var parts = goog.uri.utils.splitQueryData_(uri);\n  parts[1] = goog.uri.utils.appendQueryData_(parts[1], queryData);\n  return goog.uri.utils.joinQueryData_(parts);\n};\n\n\n/**\n * Appends key=value pairs to an array, supporting multi-valued objects.\n * @param {*} key The key prefix.\n * @param {goog.uri.utils.QueryValue} value The value to serialize.\n * @param {!Array<string>} pairs The array to which the 'key=value' strings\n *     should be appended.\n * @private\n */\ngoog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {\n  'use strict';\n  goog.asserts.assertString(key);\n  if (Array.isArray(value)) {\n    // Convince the compiler it's an array.\n    goog.asserts.assertArray(value);\n    for (var j = 0; j < value.length; j++) {\n      // Convert to string explicitly, to short circuit the null and array\n      // logic in this function -- this ensures that null and undefined get\n      // written as literal 'null' and 'undefined', and arrays don't get\n      // expanded out but instead encoded in the default way.\n      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);\n    }\n  } else if (value != null) {\n    // Skip a top-level null or undefined entirely.\n    pairs.push(\n        key +\n        // Check for empty string. Zero gets encoded into the url as literal\n        // strings.  For empty string, skip the equal sign, to be consistent\n        // with UriBuilder.java.\n        (value === '' ? '' : '=' + goog.string.urlEncode(value)));\n  }\n};\n\n\n/**\n * Builds a query data string from a sequence of alternating keys and values.\n * Currently generates \"&key&\" for empty args.\n *\n * @param {!IArrayLike<string|goog.uri.utils.QueryValue>} keysAndValues\n *     Alternating keys and values. See the QueryArray typedef.\n * @param {number=} opt_startIndex A start offset into the arary, defaults to 0.\n * @return {string} The encoded query string, in the form 'a=1&b=2'.\n */\ngoog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {\n  'use strict';\n  goog.asserts.assert(\n      Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0,\n      'goog.uri.utils: Key/value lists must be even in length.');\n\n  var params = [];\n  for (var i = opt_startIndex || 0; i < keysAndValues.length; i += 2) {\n    var key = /** @type {string} */ (keysAndValues[i]);\n    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);\n  }\n  return params.join('&');\n};\n\n\n/**\n * Builds a query data string from a map.\n * Currently generates \"&key&\" for empty args.\n *\n * @param {!Object<string, goog.uri.utils.QueryValue>} map An object where keys\n *     are URI-encoded parameter keys, and the values are arbitrary types\n *     or arrays. Keys with a null value are dropped.\n * @return {string} The encoded query string, in the form 'a=1&b=2'.\n */\ngoog.uri.utils.buildQueryDataFromMap = function(map) {\n  'use strict';\n  var params = [];\n  for (var key in map) {\n    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);\n  }\n  return params.join('&');\n};\n\n\n/**\n * Appends URI parameters to an existing URI.\n *\n * The variable arguments may contain alternating keys and values.  Keys are\n * assumed to be already URI encoded.  The values should not be URI-encoded,\n * and will instead be encoded by this function.\n * <pre>\n * appendParams('http://www.foo.com?existing=true',\n *     'key1', 'value1',\n *     'key2', 'value?willBeEncoded',\n *     'key3', ['valueA', 'valueB', 'valueC'],\n *     'key4', null);\n * result: 'http://www.foo.com?existing=true&' +\n *     'key1=value1&' +\n *     'key2=value%3FwillBeEncoded&' +\n *     'key3=valueA&key3=valueB&key3=valueC'\n * </pre>\n *\n * A single call to this function will not exhibit quadratic behavior in IE,\n * whereas multiple repeated calls may, although the effect is limited by\n * fact that URL's generally can't exceed 2kb.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {...(goog.uri.utils.QueryArray|goog.uri.utils.QueryValue)}\n * var_args\n *     An array or argument list conforming to goog.uri.utils.QueryArray.\n * @return {string} The URI with all query parameters added.\n */\ngoog.uri.utils.appendParams = function(uri, var_args) {\n  'use strict';\n  var queryData = arguments.length == 2 ?\n      goog.uri.utils.buildQueryData(arguments[1], 0) :\n      goog.uri.utils.buildQueryData(arguments, 1);\n  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);\n};\n\n\n/**\n * Appends query parameters from a map.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object<goog.uri.utils.QueryValue>} map An object where keys are\n *     URI-encoded parameter keys, and the values are arbitrary types or arrays.\n *     Keys with a null value are dropped.\n * @return {string} The new parameters.\n */\ngoog.uri.utils.appendParamsFromMap = function(uri, map) {\n  'use strict';\n  var queryData = goog.uri.utils.buildQueryDataFromMap(map);\n  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);\n};\n\n\n/**\n * Appends a single URI parameter.\n *\n * Repeated calls to this can exhibit quadratic behavior in IE6 due to the\n * way string append works, though it should be limited given the 2kb limit.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {string} key The key, which must already be URI encoded.\n * @param {*=} opt_value The value, which will be stringized and encoded\n *     (assumed not already to be encoded).  If omitted, undefined, or null, the\n *     key will be added as a valueless parameter.\n * @return {string} The URI with the query parameter added.\n */\ngoog.uri.utils.appendParam = function(uri, key, opt_value) {\n  'use strict';\n  var value = (opt_value != null) ? '=' + goog.string.urlEncode(opt_value) : '';\n  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);\n};\n\n\n/**\n * Finds the next instance of a query parameter with the specified name.\n *\n * Does not instantiate any objects.\n *\n * @param {string} uri The URI to search.  May contain a fragment identifier\n *     if opt_hashIndex is specified.\n * @param {number} startIndex The index to begin searching for the key at.  A\n *     match may be found even if this is one character after the ampersand.\n * @param {string} keyEncoded The URI-encoded key.\n * @param {number} hashOrEndIndex Index to stop looking at.  If a hash\n *     mark is present, it should be its index, otherwise it should be the\n *     length of the string.\n * @return {number} The position of the first character in the key's name,\n *     immediately after either a question mark or a dot.\n * @private\n */\ngoog.uri.utils.findParam_ = function(\n    uri, startIndex, keyEncoded, hashOrEndIndex) {\n  'use strict';\n  var index = startIndex;\n  var keyLength = keyEncoded.length;\n\n  // Search for the key itself and post-filter for surronuding punctuation,\n  // rather than expensively building a regexp.\n  while ((index = uri.indexOf(keyEncoded, index)) >= 0 &&\n         index < hashOrEndIndex) {\n    var precedingChar = uri.charCodeAt(index - 1);\n    // Ensure that the preceding character is '&' or '?'.\n    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND ||\n        precedingChar == goog.uri.utils.CharCode_.QUESTION) {\n      // Ensure the following character is '&', '=', '#', or NaN\n      // (end of string).\n      var followingChar = uri.charCodeAt(index + keyLength);\n      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL ||\n          followingChar == goog.uri.utils.CharCode_.AMPERSAND ||\n          followingChar == goog.uri.utils.CharCode_.HASH) {\n        return index;\n      }\n    }\n    index += keyLength + 1;\n  }\n\n  return -1;\n};\n\n\n/**\n * Regular expression for finding a hash mark or end of string.\n * @type {RegExp}\n * @private\n */\ngoog.uri.utils.hashOrEndRe_ = /#|$/;\n\n\n/**\n * Determines if the URI contains a specific key.\n *\n * Performs no object instantiations.\n *\n * @param {string} uri The URI to process.  May contain a fragment\n *     identifier.\n * @param {string} keyEncoded The URI-encoded key.  Case-sensitive.\n * @return {boolean} Whether the key is present.\n */\ngoog.uri.utils.hasParam = function(uri, keyEncoded) {\n  'use strict';\n  return goog.uri.utils.findParam_(\n             uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;\n};\n\n\n/**\n * Gets the first value of a query parameter.\n * @param {string} uri The URI to process.  May contain a fragment.\n * @param {string} keyEncoded The URI-encoded key.  Case-sensitive.\n * @return {?string} The first value of the parameter (URI-decoded), or null\n *     if the parameter is not found.\n */\ngoog.uri.utils.getParamValue = function(uri, keyEncoded) {\n  'use strict';\n  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);\n  var foundIndex =\n      goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);\n\n  if (foundIndex < 0) {\n    return null;\n  } else {\n    var endPosition = uri.indexOf('&', foundIndex);\n    if (endPosition < 0 || endPosition > hashOrEndIndex) {\n      endPosition = hashOrEndIndex;\n    }\n    // Progress forth to the end of the \"key=\" or \"key&\" substring.\n    foundIndex += keyEncoded.length + 1;\n    // Use substr, because it (unlike substring) will return empty string\n    // if foundIndex > endPosition.\n    return goog.string.urlDecode(\n        uri.substr(foundIndex, endPosition - foundIndex));\n  }\n};\n\n\n/**\n * Gets all values of a query parameter.\n * @param {string} uri The URI to process.  May contain a fragment.\n * @param {string} keyEncoded The URI-encoded key.  Case-sensitive.\n * @return {!Array<string>} All URI-decoded values with the given key.\n *     If the key is not found, this will have length 0, but never be null.\n */\ngoog.uri.utils.getParamValues = function(uri, keyEncoded) {\n  'use strict';\n  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);\n  var position = 0;\n  var foundIndex;\n  var result = [];\n\n  while ((foundIndex = goog.uri.utils.findParam_(\n              uri, position, keyEncoded, hashOrEndIndex)) >= 0) {\n    // Find where this parameter ends, either the '&' or the end of the\n    // query parameters.\n    position = uri.indexOf('&', foundIndex);\n    if (position < 0 || position > hashOrEndIndex) {\n      position = hashOrEndIndex;\n    }\n\n    // Progress forth to the end of the \"key=\" or \"key&\" substring.\n    foundIndex += keyEncoded.length + 1;\n    // Use substr, because it (unlike substring) will return empty string\n    // if foundIndex > position.\n    result.push(\n        goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));\n  }\n\n  return result;\n};\n\n\n/**\n * Regexp to find trailing question marks and ampersands.\n * @type {RegExp}\n * @private\n */\ngoog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;\n\n\n/**\n * Removes all instances of a query parameter.\n * @param {string} uri The URI to process.  Must not contain a fragment.\n * @param {string} keyEncoded The URI-encoded key.\n * @return {string} The URI with all instances of the parameter removed.\n */\ngoog.uri.utils.removeParam = function(uri, keyEncoded) {\n  'use strict';\n  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);\n  var position = 0;\n  var foundIndex;\n  var buffer = [];\n\n  // Look for a query parameter.\n  while ((foundIndex = goog.uri.utils.findParam_(\n              uri, position, keyEncoded, hashOrEndIndex)) >= 0) {\n    // Get the portion of the query string up to, but not including, the ?\n    // or & starting the parameter.\n    buffer.push(uri.substring(position, foundIndex));\n    // Progress to immediately after the '&'.  If not found, go to the end.\n    // Avoid including the hash mark.\n    position = Math.min(\n        (uri.indexOf('&', foundIndex) + 1) || hashOrEndIndex, hashOrEndIndex);\n  }\n\n  // Append everything that is remaining.\n  buffer.push(uri.substr(position));\n\n  // Join the buffer, and remove trailing punctuation that remains.\n  return buffer.join('').replace(\n      goog.uri.utils.trailingQueryPunctuationRe_, '$1');\n};\n\n\n/**\n * Replaces all existing definitions of a parameter with a single definition.\n *\n * Repeated calls to this can exhibit quadratic behavior due to the need to\n * find existing instances and reconstruct the string, though it should be\n * limited given the 2kb limit.  Consider using appendParams or setParamsFromMap\n * to update multiple parameters in bulk.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {string} keyEncoded The key, which must already be URI encoded.\n * @param {*} value The value, which will be stringized and encoded (assumed\n *     not already to be encoded).\n * @return {string} The URI with the query parameter added.\n */\ngoog.uri.utils.setParam = function(uri, keyEncoded, value) {\n  'use strict';\n  return goog.uri.utils.appendParam(\n      goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);\n};\n\n\n/**\n * Effeciently set or remove multiple query parameters in a URI. Order of\n * unchanged parameters will not be modified, all updated parameters will be\n * appended to the end of the query. Params with values of null or undefined are\n * removed.\n *\n * @param {string} uri The URI to process.\n * @param {!Object<string, goog.uri.utils.QueryValue>} params A list of\n *     parameters to update. If null or undefined, the param will be removed.\n * @return {string} An updated URI where the query data has been updated with\n *     the params.\n */\ngoog.uri.utils.setParamsFromMap = function(uri, params) {\n  'use strict';\n  var parts = goog.uri.utils.splitQueryData_(uri);\n  var queryData = parts[1];\n  var buffer = [];\n  if (queryData) {\n    queryData.split('&').forEach(function(pair) {\n      'use strict';\n      var indexOfEquals = pair.indexOf('=');\n      var name = indexOfEquals >= 0 ? pair.substr(0, indexOfEquals) : pair;\n      if (!params.hasOwnProperty(name)) {\n        buffer.push(pair);\n      }\n    });\n  }\n  parts[1] = goog.uri.utils.appendQueryData_(\n      buffer.join('&'), goog.uri.utils.buildQueryDataFromMap(params));\n  return goog.uri.utils.joinQueryData_(parts);\n};\n\n\n/**\n * Generates a URI path using a given URI and a path with checks to\n * prevent consecutive \"//\". The baseUri passed in must not contain\n * query or fragment identifiers. The path to append may not contain query or\n * fragment identifiers.\n *\n * @param {string} baseUri URI to use as the base.\n * @param {string} path Path to append.\n * @return {string} Updated URI.\n */\ngoog.uri.utils.appendPath = function(baseUri, path) {\n  'use strict';\n  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);\n\n  // Remove any trailing '/'\n  if (goog.string.endsWith(baseUri, '/')) {\n    baseUri = baseUri.substr(0, baseUri.length - 1);\n  }\n  // Remove any leading '/'\n  if (goog.string.startsWith(path, '/')) {\n    path = path.substr(1);\n  }\n  return '' + baseUri + '/' + path;\n};\n\n\n/**\n * Replaces the path.\n * @param {string} uri URI to use as the base.\n * @param {string} path New path.\n * @return {string} Updated URI.\n */\ngoog.uri.utils.setPath = function(uri, path) {\n  'use strict';\n  // Add any missing '/'.\n  if (!goog.string.startsWith(path, '/')) {\n    path = '/' + path;\n  }\n  var parts = goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(\n      parts[goog.uri.utils.ComponentIndex.SCHEME],\n      parts[goog.uri.utils.ComponentIndex.USER_INFO],\n      parts[goog.uri.utils.ComponentIndex.DOMAIN],\n      parts[goog.uri.utils.ComponentIndex.PORT], path,\n      parts[goog.uri.utils.ComponentIndex.QUERY_DATA],\n      parts[goog.uri.utils.ComponentIndex.FRAGMENT]);\n};\n\n\n/**\n * Standard supported query parameters.\n * @enum {string}\n */\ngoog.uri.utils.StandardQueryParam = {\n\n  /** Unused parameter for unique-ifying. */\n  RANDOM: 'zx'\n};\n\n\n/**\n * Sets the zx parameter of a URI to a random value.\n * @param {string} uri Any URI.\n * @return {string} That URI with the \"zx\" parameter added or replaced to\n *     contain a random string.\n */\ngoog.uri.utils.makeUnique = function(uri) {\n  'use strict';\n  return goog.uri.utils.setParam(\n      uri, goog.uri.utils.StandardQueryParam.RANDOM,\n      goog.string.getRandomString());\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Interface and shared data structures for implementing\n * different wire protocol versions.\n */\ngoog.provide('goog.labs.net.webChannel.Wire');\ngoog.provide('goog.labs.net.webChannel.Wire.QueuedMap');\n\n\n\ngoog.require('goog.collections.maps');\n\n\n\n/**\n * The interface class.\n * @interface\n */\ngoog.labs.net.webChannel.Wire = class {\n  constructor() {}\n};\n\n\n/**\n * The latest protocol version that this class supports. We request this version\n * from the server when opening the connection. Should match\n * LATEST_CHANNEL_VERSION on the server code.\n * @type {number}\n */\ngoog.labs.net.webChannel.Wire.LATEST_CHANNEL_VERSION = 8;\n\n\n/**\n * The JSON field key for the raw data wrapper object.\n * @type {string}\n */\ngoog.labs.net.webChannel.Wire.RAW_DATA_KEY = '__data__';\n\n\n\n/**\n * Simple container class for a (mapId, map) pair.\n */\ngoog.labs.net.webChannel.Wire.QueuedMap = class {\n  /**\n   * @param {number} mapId The id for this map.\n   * @param {!Object|!goog.collections.maps.MapLike} map The map itself.\n   * @param {!Object=} opt_context The context associated with the map.\n   */\n  constructor(mapId, map, opt_context) {\n    'use strict';\n    /**\n     * The id for this map.\n     * @type {number}\n     */\n    this.mapId = mapId;\n\n    /**\n     * The map itself.\n     * @type {!Object|!goog.collections.maps.MapLike}\n     */\n    this.map = map;\n\n    /**\n     * The context for the map.\n     * @type {Object}\n     */\n    this.context = opt_context || null;\n  }\n\n  /**\n   * @return {number|undefined} the size of the raw JSON message or\n   * undefined if the message is not encoded as a raw JSON message\n   */\n  getRawDataSize() {\n    'use strict';\n    if (goog.labs.net.webChannel.Wire.RAW_DATA_KEY in this.map) {\n      const data = this.map[goog.labs.net.webChannel.Wire.RAW_DATA_KEY];\n      if (typeof data === 'string') {\n        return data.length;\n      }\n    }\n\n    return undefined;\n  }\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\n/**\n * @fileoverview Defines a class for parsing JSON using the browser's built in\n * JSON library.\n */\n\ngoog.provide('goog.json.NativeJsonProcessor');\n\ngoog.require('goog.asserts');\ngoog.require('goog.json.Processor');\n\n\n\n/**\n * A class that parses and stringifies JSON using the browser's built-in JSON\n * library, if it is available.\n *\n * Note that the native JSON api has subtle differences across browsers, so\n * use this implementation with care.  See json_test#assertSerialize\n * for details on the differences from goog.json.\n *\n * This implementation is signficantly faster than goog.json, at least on\n * Chrome.  See json_perf.html for a perf test showing the difference.\n *\n * @param {?goog.json.Replacer=} opt_replacer An optional replacer to use during\n *     serialization.\n * @param {?goog.json.Reviver=} opt_reviver An optional reviver to use during\n *     parsing.\n * @constructor\n * @implements {goog.json.Processor}\n * @final\n */\ngoog.json.NativeJsonProcessor = function(opt_replacer, opt_reviver) {\n  'use strict';\n  goog.asserts.assert(goog.global['JSON'] !== undefined, 'JSON not defined');\n\n  /**\n   * @type {goog.json.Replacer|null|undefined}\n   * @private\n   */\n  this.replacer_ = opt_replacer;\n\n  /**\n   * @type {goog.json.Reviver|null|undefined}\n   * @private\n   */\n  this.reviver_ = opt_reviver;\n};\n\n\n/** @override */\ngoog.json.NativeJsonProcessor.prototype.stringify = function(object) {\n  'use strict';\n  return goog.global['JSON'].stringify(object, this.replacer_);\n};\n\n\n/** @override */\ngoog.json.NativeJsonProcessor.prototype.parse = function(s) {\n  'use strict';\n  return goog.global['JSON'].parse(s, this.reviver_);\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utility functions for managing networking, such as\n * testing network connectivity.\n *\n */\n\n\ngoog.provide('goog.labs.net.webChannel.netUtils');\n\ngoog.require('goog.Uri');\ngoog.require('goog.labs.net.webChannel.WebChannelDebug');\n\ngoog.scope(function() {\n'use strict';\nconst netUtils = goog.labs.net.webChannel.netUtils;\nconst WebChannelDebug = goog.labs.net.webChannel.WebChannelDebug;\n\n\n/**\n * Default timeout to allow for URI pings.\n * @type {number}\n */\nnetUtils.NETWORK_TIMEOUT = 10000;\n\n\n/**\n * Pings the network with an image URI to check if an error is a server error\n * or user's network error.\n *\n * The caller needs to add a 'rand' parameter to make sure the response is\n * not fulfilled by browser cache.\n *\n * @param {function(boolean)} callback The function to call back with results.\n * @param {goog.Uri=} opt_imageUri The URI (of an image) to use for the network\n *     test.\n */\nnetUtils.testNetwork = function(callback, opt_imageUri) {\n  'use strict';\n  let uri = opt_imageUri;\n  if (!uri) {\n    // default google.com image\n    uri = new goog.Uri('//www.google.com/images/cleardot.gif');\n\n    if (!(goog.global.location && goog.global.location.protocol == 'http')) {\n      uri.setScheme('https');  // e.g. chrome-extension\n    }\n    uri.makeUnique();\n  }\n\n  netUtils.testLoadImage(uri.toString(), netUtils.NETWORK_TIMEOUT, callback);\n};\n\n\n/**\n * Test loading the given image, retrying if necessary.\n * @param {string} url URL to the image.\n * @param {number} timeout Milliseconds before giving up.\n * @param {function(boolean)} callback Function to call with results.\n * @param {number} retries The number of times to retry.\n * @param {!WebChannelDebug} channelDebug The debug object\n * @param {number=} opt_pauseBetweenRetriesMS Optional number of milliseconds\n *     between retries - defaults to 0.\n */\nnetUtils.testLoadImageWithRetries = function(\n    url, timeout, callback, retries, channelDebug, opt_pauseBetweenRetriesMS) {\n  'use strict';\n  channelDebug.debug('TestLoadImageWithRetries: ' + opt_pauseBetweenRetriesMS);\n  if (retries == 0) {\n    // no more retries, give up\n    callback(false);\n    return;\n  }\n\n  const pauseBetweenRetries = opt_pauseBetweenRetriesMS || 0;\n  retries--;\n  netUtils.testLoadImage(url, timeout, function(succeeded) {\n    'use strict';\n    if (succeeded) {\n      callback(true);\n    } else {\n      // try again\n      goog.global.setTimeout(function() {\n        'use strict';\n        netUtils.testLoadImageWithRetries(\n            url, timeout, callback, retries, channelDebug, pauseBetweenRetries);\n      }, pauseBetweenRetries);\n    }\n  });\n};\n\n\n/**\n * Test loading the given image.\n * @param {string} url URL to the image.\n * @param {number} timeout Milliseconds before giving up.\n * @param {function(boolean)} callback Function to call with results.\n * @suppress {strictMissingProperties} Part of the go/strict_warnings_migration\n */\nnetUtils.testLoadImage = function(url, timeout, callback) {\n  'use strict';\n  const channelDebug = new WebChannelDebug();\n  channelDebug.debug('TestLoadImage: loading ' + url);\n  if (goog.global.Image) {\n    const img = new Image();\n    img.onload = goog.partial(\n        netUtils.imageCallback_, channelDebug, img, 'TestLoadImage: loaded',\n        true, callback);\n    img.onerror = goog.partial(\n        netUtils.imageCallback_, channelDebug, img, 'TestLoadImage: error',\n        false, callback);\n    img.onabort = goog.partial(\n        netUtils.imageCallback_, channelDebug, img, 'TestLoadImage: abort',\n        false, callback);\n    img.ontimeout = goog.partial(\n        netUtils.imageCallback_, channelDebug, img, 'TestLoadImage: timeout',\n        false, callback);\n\n    goog.global.setTimeout(function() {\n      'use strict';\n      if (img.ontimeout) {\n        img.ontimeout();\n      }\n    }, timeout);\n    img.src = url;\n  } else {\n    // log ERROR_OTHER from environements where Image is not supported\n    callback(false);\n  }\n};\n\n\n/**\n * Wrap the image callback with debug and cleanup logic.\n * @param {!WebChannelDebug} channelDebug The WebChannelDebug object.\n * @param {!Image} img The image element.\n * @param {string} debugText The debug text.\n * @param {boolean} result The result of image loading.\n * @param {function(boolean)} callback The image callback.\n * @private\n */\nnetUtils.imageCallback_ = function(\n    channelDebug, img, debugText, result, callback) {\n  'use strict';\n  try {\n    channelDebug.debug(debugText);\n    netUtils.clearImageCallbacks_(img);\n    callback(result);\n  } catch (e) {\n    channelDebug.dumpException(e);\n  }\n};\n\n\n/**\n * Clears handlers to avoid memory leaks.\n * @param {Image} img The image to clear handlers from.\n * @private\n * @suppress {strictMissingProperties} Part of the go/strict_warnings_migration\n */\nnetUtils.clearImageCallbacks_ = function(img) {\n  'use strict';\n  img.onload = null;\n  img.onerror = null;\n  img.onabort = null;\n  img.ontimeout = null;\n};\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\ngoog.provide('goog.net.FetchXmlHttp');\ngoog.provide('goog.net.FetchXmlHttpFactory');\n\ngoog.require('goog.asserts');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.functions');\ngoog.require('goog.log');\ngoog.require('goog.net.XhrLike');\ngoog.require('goog.net.XmlHttpFactory');\n\n\n\n/**\n * @record\n */\ngoog.net.FetchXmlHttpFactoryOptions = function() {\n  /**\n   * @type {!WorkerGlobalScope|undefined} The Service Worker global scope.\n   */\n  this.worker;\n\n  /**\n   * @type {boolean|undefined} Whether to store the FetchXmlHttp response as an\n   * array of Uint8Arrays.  If this is true then the 'responseType' attribute\n   * must be empty.\n   */\n  this.streamBinaryChunks;\n};\n\n\n\n/**\n * Factory for creating Xhr objects that uses the native fetch() method.\n * https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n * @param {!goog.net.FetchXmlHttpFactoryOptions} opts\n * @extends {goog.net.XmlHttpFactory}\n * @struct\n * @constructor\n */\ngoog.net.FetchXmlHttpFactory = function(opts) {\n  'use strict';\n  goog.net.FetchXmlHttpFactory.base(this, 'constructor');\n\n  /** @private @final {?WorkerGlobalScope} */\n  this.worker_ = opts.worker || null;\n\n  /** @private @final {boolean} */\n  this.streamBinaryChunks_ = opts.streamBinaryChunks || false;\n\n  /** @private {!RequestCredentials|undefined} */\n  this.credentialsMode_ = undefined;\n\n  /** @private {!RequestCache|undefined} */\n  this.cacheMode_ = undefined;\n};\ngoog.inherits(goog.net.FetchXmlHttpFactory, goog.net.XmlHttpFactory);\n\n\n/** @override */\ngoog.net.FetchXmlHttpFactory.prototype.createInstance = function() {\n  'use strict';\n  const instance =\n      new goog.net.FetchXmlHttp(this.worker_, this.streamBinaryChunks_);\n  if (this.credentialsMode_) {\n    instance.setCredentialsMode(this.credentialsMode_);\n  }\n  if (this.cacheMode_) {\n    instance.setCacheMode(this.cacheMode_);\n  }\n  return instance;\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttpFactory.prototype.internalGetOptions =\n    goog.functions.constant({});\n\n\n/**\n * @param {!RequestCredentials} credentialsMode The credentials mode of the\n *     Service Worker fetch.\n */\ngoog.net.FetchXmlHttpFactory.prototype.setCredentialsMode = function(\n    credentialsMode) {\n  'use strict';\n  this.credentialsMode_ = credentialsMode;\n};\n\n\n/**\n * @param {!RequestCache} cacheMode The cache mode of the Service Worker fetch.\n */\ngoog.net.FetchXmlHttpFactory.prototype.setCacheMode = function(cacheMode) {\n  'use strict';\n  this.cacheMode_ = cacheMode;\n};\n\n\n\n/**\n * FetchXmlHttp object constructor.\n * @param {?WorkerGlobalScope} worker\n * @param {boolean} streamBinaryChunks\n * @extends {goog.events.EventTarget}\n * @implements {goog.net.XhrLike}\n * @constructor\n * @struct\n */\ngoog.net.FetchXmlHttp = function(worker, streamBinaryChunks) {\n  'use strict';\n  goog.net.FetchXmlHttp.base(this, 'constructor');\n\n  /** @private @final {?WorkerGlobalScope} */\n  this.worker_ = worker;\n\n  /** @private @final {boolean} */\n  this.streamBinaryChunks_ = streamBinaryChunks;\n\n  /** @private {RequestCredentials|undefined} */\n  this.credentialsMode_ = undefined;\n\n  /** @private {RequestCache|undefined} */\n  this.cacheMode_ = undefined;\n\n  /**\n   * Request state.\n   * @type {goog.net.FetchXmlHttp.RequestState}\n   */\n  this.readyState = goog.net.FetchXmlHttp.RequestState.UNSENT;\n\n  /**\n   * HTTP status.\n   * @type {number}\n   */\n  this.status = 0;\n\n  /**\n   * HTTP status string.\n   * @type {string}\n   */\n  this.statusText = '';\n\n  /**\n   * Content of the response.\n   * @type {string|!ArrayBuffer|!Array<!Uint8Array>}\n   */\n  this.response = '';\n\n  /**\n   * Content of the response.\n   * @type {string}\n   */\n  this.responseText = '';\n\n  /**\n   * The type of the response.  If this is set to 'arraybuffer' the request will\n   * be discrete, streaming is only supported for text encoded requests.\n   * @type {string}\n   */\n  this.responseType = '';\n\n  /**\n   * Document response entity body.\n   * NOTE: This is always null and not supported by this class.\n   * @final {null}\n   */\n  this.responseXML = null;\n\n  /**\n   * Method to call when the state changes.\n   * @type {?function()}\n   */\n  this.onreadystatechange = null;\n\n  /** @private {!Headers} */\n  this.requestHeaders_ = new Headers();\n\n  /** @private {?Headers} */\n  this.responseHeaders_ = null;\n\n  /**\n   * Request method (GET or POST).\n   * @private {string}\n   */\n  this.method_ = 'GET';\n\n  /**\n   * Request URL.\n   * @private {string}\n   */\n  this.url_ = '';\n\n  /**\n   * Whether the request is in progress.\n   * @private {boolean}\n   */\n  this.inProgress_ = false;\n\n  /** @private @final {?goog.log.Logger} */\n  this.logger_ = goog.log.getLogger('goog.net.FetchXmlHttp');\n\n  /** @private {?Response} */\n  this.fetchResponse_ = null;\n\n  /** @private {!ReadableStreamDefaultReader|null} */\n  this.currentReader_ = null;\n\n  /** @private {?TextDecoder} */\n  this.textDecoder_ = null;\n};\ngoog.inherits(goog.net.FetchXmlHttp, goog.events.EventTarget);\n\n\n/**\n * State of the requests.\n * @enum {number}\n */\ngoog.net.FetchXmlHttp.RequestState = {\n  UNSENT: 0,\n  OPENED: 1,\n  HEADER_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4,\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.open = function(method, url, opt_async) {\n  'use strict';\n  goog.asserts.assert(!!opt_async, 'Only async requests are supported.');\n  if (this.readyState != goog.net.FetchXmlHttp.RequestState.UNSENT) {\n    this.abort();\n    throw new Error('Error reopening a connection');\n  }\n\n  this.method_ = method;\n  this.url_ = url;\n\n  this.readyState = goog.net.FetchXmlHttp.RequestState.OPENED;\n  this.dispatchCallback_();\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.send = function(opt_data) {\n  'use strict';\n  if (this.readyState != goog.net.FetchXmlHttp.RequestState.OPENED) {\n    this.abort();\n    throw new Error('need to call open() first. ');\n  }\n\n  this.inProgress_ = true;\n  const requestInit = {\n    headers: this.requestHeaders_,\n    method: this.method_,\n    credentials: this.credentialsMode_,\n    cache: this.cacheMode_,\n  };\n  if (opt_data) {\n    requestInit['body'] = opt_data;\n  }\n\n  (this.worker_ || goog.global)\n      .fetch(new Request(this.url_, /** @type {!RequestInit} */ (requestInit)))\n      .then(\n          this.handleResponse_.bind(this), this.handleSendFailure_.bind(this));\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.abort = function() {\n  'use strict';\n  this.response = this.responseText = '';\n  this.requestHeaders_ = new Headers();\n  this.status = 0;\n\n  if (!!this.currentReader_) {\n    this.currentReader_.cancel('Request was aborted.')\n        .catch(\n            e => goog.log.warning(\n                this.logger_, 'Fetch reader cancellation error.', e));\n  }\n\n  if (((this.readyState >= goog.net.FetchXmlHttp.RequestState.OPENED) &&\n       this.inProgress_) &&\n      (this.readyState != goog.net.FetchXmlHttp.RequestState.DONE)) {\n    this.inProgress_ = false;\n    this.requestDone_();\n  }\n\n  this.readyState = goog.net.FetchXmlHttp.RequestState.UNSENT;\n};\n\n\n/**\n * Handles the fetch response.\n * @param {!Response} response\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleResponse_ = function(response) {\n  'use strict';\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n\n  this.fetchResponse_ = response;\n\n  if (!this.responseHeaders_) {\n    this.status = this.fetchResponse_.status;\n    this.statusText = this.fetchResponse_.statusText;\n    this.responseHeaders_ = response.headers;\n    this.readyState = goog.net.FetchXmlHttp.RequestState.HEADER_RECEIVED;\n    this.dispatchCallback_();\n  }\n  // A callback may abort the request.\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n\n  this.readyState = goog.net.FetchXmlHttp.RequestState.LOADING;\n  this.dispatchCallback_();\n  // A callback may abort the request.\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n\n  if (this.responseType === 'arraybuffer') {\n    response.arrayBuffer().then(\n        this.handleResponseArrayBuffer_.bind(this),\n        this.handleSendFailure_.bind(this));\n  } else if (\n      typeof (goog.global.ReadableStream) !== 'undefined' &&\n      'body' in response) {\n    this.currentReader_ =\n        /** @type {!ReadableStreamDefaultReader} */ (response.body.getReader());\n    if (this.streamBinaryChunks_) {\n      if (this.responseType) {\n        throw new Error(\n            'responseType must be empty for \"streamBinaryChunks\" mode responses.');\n      }\n      this.response = [];\n    } else {\n      this.response = this.responseText = '';\n      this.textDecoder_ = new TextDecoder();\n    }\n    this.readInputFromFetch_();\n  } else {\n    response.text().then(\n        this.handleResponseText_.bind(this),\n        this.handleSendFailure_.bind(this));\n  }\n};\n\n\n/**\n * Reads the next chunk of data from the fetch response.\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.readInputFromFetch_ = function() {\n  'use strict';\n  this.currentReader_.read()\n      .then(this.handleDataFromStream_.bind(this))\n      .catch(this.handleSendFailure_.bind(this));\n};\n\n\n/**\n * Handles a chunk of data from the fetch response stream reader.\n * @param {!IIterableResult} result\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleDataFromStream_ = function(result) {\n  'use strict';\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n\n  if (this.streamBinaryChunks_ && result.value) {\n    // When streamBinaryChunks_ is enabled, \"response\" is an array\n    /** @type {!Array} */ (this.response)\n        .push(/** @type {!Uint8Array} */ (result.value));\n  } else if (!this.streamBinaryChunks_) {\n    const dataPacket = result.value ?\n        /** @type {!Uint8Array} */ (result.value) :\n        new Uint8Array(0);\n    const newText =\n        this.textDecoder_.decode(dataPacket, {stream: !result.done});\n    if (newText) {\n      this.responseText += newText;\n      this.response = this.responseText;\n    }\n  }\n  if (result.done) {\n    this.requestDone_();\n  } else {\n    this.dispatchCallback_();\n  }\n\n  if (this.readyState == goog.net.FetchXmlHttp.RequestState.LOADING) {\n    this.readInputFromFetch_();\n  }\n};\n\n/**\n * Handles the response text.\n * @param {string} responseText\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleResponseText_ = function(responseText) {\n  'use strict';\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n  this.response = this.responseText = responseText;\n  this.requestDone_();\n};\n\n\n/**\n * Handles the response text.\n * @param {!ArrayBuffer} responseArrayBuffer\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleResponseArrayBuffer_ = function(\n    responseArrayBuffer) {\n  'use strict';\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n  this.response = responseArrayBuffer;\n  this.requestDone_();\n};\n\n\n/**\n * Handles the send failure.\n * @param {*} error\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.handleSendFailure_ = function(error) {\n  'use strict';\n  const e = error instanceof Error ? error : Error(error);\n  goog.log.warning(this.logger_, 'Failed to fetch url ' + this.url_, e);\n  if (!this.inProgress_) {\n    // The request was aborted, ignore.\n    return;\n  }\n  this.requestDone_();\n};\n\n\n/**\n * Sets the request state to DONE and performs cleanup.\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.requestDone_ = function() {\n  'use strict';\n  this.readyState = goog.net.FetchXmlHttp.RequestState.DONE;\n\n  this.fetchResponse_ = null;\n  this.currentReader_ = null;\n  this.textDecoder_ = null;\n\n  this.dispatchCallback_();\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.setRequestHeader = function(header, value) {\n  'use strict';\n  this.requestHeaders_.append(header, value);\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.getResponseHeader = function(header) {\n  'use strict';\n  // TODO(user): This method should return null when the headers are not\n  // present or the specified header is missing. The externs need to be fixed.\n  if (!this.responseHeaders_) {\n    goog.log.warning(\n        this.logger_,\n        'Attempting to get response header but no headers have been received ' +\n            'for url: ' + this.url_);\n    return '';\n  }\n  return this.responseHeaders_.get(header.toLowerCase()) || '';\n};\n\n\n/** @override */\ngoog.net.FetchXmlHttp.prototype.getAllResponseHeaders = function() {\n  'use strict';\n  if (!this.responseHeaders_) {\n    goog.log.warning(\n        this.logger_,\n        'Attempting to get all response headers but no headers have been ' +\n            'received for url: ' + this.url_);\n    return '';\n  }\n  const lines = [];\n  const iter = this.responseHeaders_.entries();\n  let entry = iter.next();\n  while (!entry.done) {\n    const pair = entry.value;\n    lines.push(pair[0] + ': ' + pair[1]);\n    entry = iter.next();\n  }\n  return lines.join('\\r\\n');\n};\n\n\n/**\n * @param {!RequestCredentials} credentialsMode The credentials mode of the\n *     Service Worker fetch.\n */\ngoog.net.FetchXmlHttp.prototype.setCredentialsMode = function(credentialsMode) {\n  'use strict';\n  this.credentialsMode_ = credentialsMode;\n};\n\n/**\n * @return {!RequestCredentials|undefined} The credentials mode of the\n *     Service Worker fetch.\n */\ngoog.net.FetchXmlHttp.prototype.getCredentialsMode = function() {\n  'use strict';\n  return this.credentialsMode_;\n};\n\n/**\n * @param {!RequestCache} cacheMode The cache mode of the Service Worker fetch.\n */\ngoog.net.FetchXmlHttp.prototype.setCacheMode = function(cacheMode) {\n  'use strict';\n  this.cacheMode_ = cacheMode;\n};\n\n\n/**\n * Dispatches the callback, if the callback attribute is defined.\n * @private\n */\ngoog.net.FetchXmlHttp.prototype.dispatchCallback_ = function() {\n  'use strict';\n  if (this.onreadystatechange) {\n    this.onreadystatechange.call(this);\n  }\n};\n\n// Polyfill XmlHttpRequest's withCredentials property for specifying whether to\n// include credentials on cross domain requests.\nObject.defineProperty(goog.net.FetchXmlHttp.prototype, 'withCredentials', {\n  get:\n      /**\n       * @this {goog.net.FetchXmlHttp}\n       * @return {boolean} Whether to include credentials in cross domain\n       *     requests.\n       */\n      function() {\n        'use strict';\n        return this.getCredentialsMode() === 'include';\n      },\n\n  set:\n      /**\n       * @param {boolean} value Whether to include credentials in cross domain\n       *     requests.\n       * @this {goog.net.FetchXmlHttp}\n       **/\n      function(value) {\n        'use strict';\n        this.setCredentialsMode(value ? 'include' : 'same-origin');\n      }\n});\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Utilities for creating functions. Loosely inspired by these\n * java classes from the Guava library:\n * com.google.common.base.Functions\n * https://google.github.io/guava/releases/snapshot-jre/api/docs/index.html?com/google/common/base/Functions.html\n *\n * com.google.common.base.Predicates\n * https://google.github.io/guava/releases/snapshot-jre/api/docs/index.html?com/google/common/base/Predicates.html\n *\n * More about these can be found at\n * https://github.com/google/guava/wiki/FunctionalExplained\n */\n\n\ngoog.provide('goog.functions');\n\n\n/**\n * Creates a function that always returns the same value.\n * @param {T} retValue The value to return.\n * @return {function():T} The new function.\n * @template T\n */\ngoog.functions.constant = function(retValue) {\n  'use strict';\n  return function() {\n    'use strict';\n    return retValue;\n  };\n};\n\n\n/**\n * Always returns false.\n * @type {function(...): boolean}\n */\ngoog.functions.FALSE = function() {\n  'use strict';\n  return false;\n};\n\n\n/**\n * Always returns true.\n * @type {function(...): boolean}\n */\ngoog.functions.TRUE = function() {\n  'use strict';\n  return true;\n};\n\n\n/**\n * Always returns `null`.\n * @type {function(...): null}\n */\ngoog.functions.NULL = function() {\n  'use strict';\n  return null;\n};\n\n\n/**\n * Always returns `undefined`.\n * @type {function(...): undefined}\n */\ngoog.functions.UNDEFINED = function() {\n  return undefined;\n};\n\n/**\n * Always returns `undefined` (loosely-typed version).\n * @type {!Function}\n */\ngoog.functions.EMPTY = /** @type {?} */ (goog.functions.UNDEFINED);\n\n\n/**\n * A simple function that returns the first argument of whatever is passed\n * into it.\n * @param {T=} opt_returnValue The single value that will be returned.\n * @param {...*} var_args Optional trailing arguments. These are ignored.\n * @return {T} The first argument passed in, or undefined if nothing was passed.\n * @template T\n */\ngoog.functions.identity = function(opt_returnValue, var_args) {\n  'use strict';\n  return opt_returnValue;\n};\n\n\n/**\n * Creates a function that always throws an error with the given message.\n * @param {string} message The error message.\n * @return {!Function} The error-throwing function.\n */\ngoog.functions.error = function(message) {\n  'use strict';\n  return function() {\n    'use strict';\n    throw new Error(message);\n  };\n};\n\n\n/**\n * Creates a function that throws the given object.\n * @param {*} err An object to be thrown.\n * @return {!Function} The error-throwing function.\n */\ngoog.functions.fail = function(err) {\n  'use strict';\n  return function() {\n    'use strict';\n    throw err;\n  };\n};\n\n\n/**\n * Given a function, create a function that keeps opt_numArgs arguments and\n * silently discards all additional arguments.\n * @param {Function} f The original function.\n * @param {number=} opt_numArgs The number of arguments to keep. Defaults to 0.\n * @return {!Function} A version of f that only keeps the first opt_numArgs\n *     arguments.\n */\ngoog.functions.lock = function(f, opt_numArgs) {\n  'use strict';\n  opt_numArgs = opt_numArgs || 0;\n  return function() {\n    'use strict';\n    const self = /** @type {*} */ (this);\n    return f.apply(self, Array.prototype.slice.call(arguments, 0, opt_numArgs));\n  };\n};\n\n\n/**\n * Creates a function that returns its nth argument.\n * @param {number} n The position of the return argument.\n * @return {!Function} A new function.\n */\ngoog.functions.nth = function(n) {\n  'use strict';\n  return function() {\n    'use strict';\n    return arguments[n];\n  };\n};\n\n\n/**\n * Like goog.partial(), except that arguments are added after arguments to the\n * returned function.\n *\n * Usage:\n * function f(arg1, arg2, arg3, arg4) { ... }\n * var g = goog.functions.partialRight(f, arg3, arg4);\n * g(arg1, arg2);\n *\n * @param {!Function} fn A function to partially apply.\n * @param {...*} var_args Additional arguments that are partially applied to fn\n *     at the end.\n * @return {!Function} A partially-applied form of the function goog.partial()\n *     was invoked as a method of.\n */\ngoog.functions.partialRight = function(fn, var_args) {\n  'use strict';\n  const rightArgs = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    'use strict';\n    // Even in strict mode, IE10/11 and Edge (non-Chromium) use global context\n    // when free-calling functions. To catch cases where people were using this\n    // erroneously, we explicitly change the context to undefined to match\n    // strict mode specifications.\n    let self = /** @type {*} */ (this);\n    if (self === goog.global) {\n      self = undefined;\n    }\n    const newArgs = Array.prototype.slice.call(arguments);\n    newArgs.push.apply(newArgs, rightArgs);\n    return fn.apply(self, newArgs);\n  };\n};\n\n\n/**\n * Given a function, create a new function that swallows its return value\n * and replaces it with a new one.\n * @param {Function} f A function.\n * @param {T} retValue A new return value.\n * @return {function(...?):T} A new function.\n * @template T\n */\ngoog.functions.withReturnValue = function(f, retValue) {\n  'use strict';\n  return goog.functions.sequence(f, goog.functions.constant(retValue));\n};\n\n\n/**\n * Creates a function that returns whether its argument equals the given value.\n *\n * Example:\n * var key = goog.object.findKey(obj, goog.functions.equalTo('needle'));\n *\n * @param {*} value The value to compare to.\n * @param {boolean=} opt_useLooseComparison Whether to use a loose (==)\n *     comparison rather than a strict (===) one. Defaults to false.\n * @return {function(*):boolean} The new function.\n */\ngoog.functions.equalTo = function(value, opt_useLooseComparison) {\n  'use strict';\n  return function(other) {\n    'use strict';\n    return opt_useLooseComparison ? (value == other) : (value === other);\n  };\n};\n\n\n/**\n * Creates the composition of the functions passed in.\n * For example, (goog.functions.compose(f, g))(a) is equivalent to f(g(a)).\n * @param {function(...?):T} fn The final function.\n * @param {...Function} var_args A list of functions.\n * @return {function(...?):T} The composition of all inputs.\n * @template T\n */\ngoog.functions.compose = function(fn, var_args) {\n  'use strict';\n  const functions = arguments;\n  const length = functions.length;\n  return function() {\n    'use strict';\n    const self = /** @type {*} */ (this);\n    let result;\n    if (length) {\n      result = functions[length - 1].apply(self, arguments);\n    }\n\n    for (let i = length - 2; i >= 0; i--) {\n      result = functions[i].call(self, result);\n    }\n    return result;\n  };\n};\n\n\n/**\n * Creates a function that calls the functions passed in in sequence, and\n * returns the value of the last function. For example,\n * (goog.functions.sequence(f, g))(x) is equivalent to f(x),g(x).\n * @param {...Function} var_args A list of functions.\n * @return {!Function} A function that calls all inputs in sequence.\n */\ngoog.functions.sequence = function(var_args) {\n  'use strict';\n  const functions = arguments;\n  const length = functions.length;\n  return function() {\n    'use strict';\n    const self = /** @type {*} */ (this);\n    let result;\n    for (let i = 0; i < length; i++) {\n      result = functions[i].apply(self, arguments);\n    }\n    return result;\n  };\n};\n\n\n/**\n * Creates a function that returns true if each of its components evaluates\n * to true. The components are evaluated in order, and the evaluation will be\n * short-circuited as soon as a function returns false.\n * For example, (goog.functions.and(f, g))(x) is equivalent to f(x) && g(x).\n * @param {...Function} var_args A list of functions.\n * @return {function(...?):boolean} A function that ANDs its component\n *      functions.\n */\ngoog.functions.and = function(var_args) {\n  'use strict';\n  const functions = arguments;\n  const length = functions.length;\n  return function() {\n    'use strict';\n    const self = /** @type {*} */ (this);\n    for (let i = 0; i < length; i++) {\n      if (!functions[i].apply(self, arguments)) {\n        return false;\n      }\n    }\n    return true;\n  };\n};\n\n\n/**\n * Creates a function that returns true if any of its components evaluates\n * to true. The components are evaluated in order, and the evaluation will be\n * short-circuited as soon as a function returns true.\n * For example, (goog.functions.or(f, g))(x) is equivalent to f(x) || g(x).\n * @param {...Function} var_args A list of functions.\n * @return {function(...?):boolean} A function that ORs its component\n *    functions.\n */\ngoog.functions.or = function(var_args) {\n  'use strict';\n  const functions = arguments;\n  const length = functions.length;\n  return function() {\n    'use strict';\n    const self = /** @type {*} */ (this);\n    for (let i = 0; i < length; i++) {\n      if (functions[i].apply(self, arguments)) {\n        return true;\n      }\n    }\n    return false;\n  };\n};\n\n\n/**\n * Creates a function that returns the Boolean opposite of a provided function.\n * For example, (goog.functions.not(f))(x) is equivalent to !f(x).\n * @param {!Function} f The original function.\n * @return {function(...?):boolean} A function that delegates to f and returns\n * opposite.\n */\ngoog.functions.not = function(f) {\n  'use strict';\n  return function() {\n    'use strict';\n    const self = /** @type {*} */ (this);\n    return !f.apply(self, arguments);\n  };\n};\n\n\n/**\n * Generic factory function to construct an object given the constructor\n * and the arguments. Intended to be bound to create object factories.\n *\n * Example:\n *\n * var factory = goog.partial(goog.functions.create, Class);\n *\n * @param {function(new:T, ...)} constructor The constructor for the Object.\n * @param {...*} var_args The arguments to be passed to the constructor.\n * @return {T} A new instance of the class given in `constructor`.\n * @template T\n * @deprecated This function does not work with ES6 class constructors. Use\n *     arrow functions + spread args instead.\n */\ngoog.functions.create = function(constructor, var_args) {\n  'use strict';\n  /**\n   * @constructor\n   * @final\n   */\n  const temp = function() {};\n  temp.prototype = constructor.prototype;\n\n  // obj will have constructor's prototype in its chain and\n  // 'obj instanceof constructor' will be true.\n  const obj = new temp();\n\n  // obj is initialized by constructor.\n  // arguments is only array-like so lacks shift(), but can be used with\n  // the Array prototype function.\n  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));\n  return obj;\n};\n\n\n/**\n * @define {boolean} Whether the return value cache should be used.\n *    This should only be used to disable caches when testing.\n */\ngoog.functions.CACHE_RETURN_VALUE =\n    goog.define('goog.functions.CACHE_RETURN_VALUE', true);\n\n\n/**\n * Gives a wrapper function that caches the return value of a parameterless\n * function when first called.\n *\n * When called for the first time, the given function is called and its\n * return value is cached (thus this is only appropriate for idempotent\n * functions).  Subsequent calls will return the cached return value. This\n * allows the evaluation of expensive functions to be delayed until first used.\n *\n * To cache the return values of functions with parameters, see goog.memoize.\n *\n * @param {function():T} fn A function to lazily evaluate.\n * @return {function():T} A wrapped version the function.\n * @template T\n */\ngoog.functions.cacheReturnValue = function(fn) {\n  'use strict';\n  let called = false;\n  let value;\n\n  return function() {\n    'use strict';\n    if (!goog.functions.CACHE_RETURN_VALUE) {\n      return fn();\n    }\n\n    if (!called) {\n      value = fn();\n      called = true;\n    }\n\n    return value;\n  };\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once. All\n * additional calls are no-ops.\n *\n * This is particularly useful for initialization functions\n * that should be called, at most, once.\n *\n * @param {function():*} f Function to call.\n * @return {function():undefined} Wrapped function.\n */\ngoog.functions.once = function(f) {\n  'use strict';\n  // Keep a reference to the function that we null out when we're done with\n  // it -- that way, the function can be GC'd when we're done with it.\n  let inner = f;\n  return function() {\n    'use strict';\n    if (inner) {\n      const tmp = inner;\n      inner = null;\n      tmp();\n    }\n  };\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once per interval\n * (specified in milliseconds). If the wrapper function is called N times within\n * that interval, only the Nth call will go through.\n *\n * This is particularly useful for batching up repeated actions where the\n * last action should win. This can be used, for example, for refreshing an\n * autocomplete pop-up every so often rather than updating with every keystroke,\n * since the final text typed by the user is the one that should produce the\n * final autocomplete results. For more stateful debouncing with support for\n * pausing, resuming, and canceling debounced actions, use\n * `goog.async.Debouncer`.\n *\n * @param {function(this:SCOPE, ...?)} f Function to call.\n * @param {number} interval Interval over which to debounce. The function will\n *     only be called after the full interval has elapsed since the last call.\n * @param {SCOPE=} opt_scope Object in whose scope to call the function.\n * @return {function(...?): undefined} Wrapped function.\n * @template SCOPE\n */\ngoog.functions.debounce = function(f, interval, opt_scope) {\n  'use strict';\n  let timeout = 0;\n  return /** @type {function(...?)} */ (function(var_args) {\n    'use strict';\n    goog.global.clearTimeout(timeout);\n    const args = arguments;\n    timeout = goog.global.setTimeout(function() {\n      'use strict';\n      f.apply(opt_scope, args);\n    }, interval);\n  });\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once per interval\n * (specified in milliseconds). If the wrapper function is called N times in\n * that interval, both the 1st and the Nth calls will go through.\n *\n * This is particularly useful for limiting repeated user requests where the\n * the last action should win, but you also don't want to wait until the end of\n * the interval before sending a request out, as it leads to a perception of\n * slowness for the user.\n *\n * @param {function(this:SCOPE, ...?)} f Function to call.\n * @param {number} interval Interval over which to throttle. The function can\n *     only be called once per interval.\n * @param {SCOPE=} opt_scope Object in whose scope to call the function.\n * @return {function(...?): undefined} Wrapped function.\n * @template SCOPE\n */\ngoog.functions.throttle = function(f, interval, opt_scope) {\n  'use strict';\n  let timeout = 0;\n  let shouldFire = false;\n  let storedArgs = [];\n\n  const handleTimeout = function() {\n    'use strict';\n    timeout = 0;\n    if (shouldFire) {\n      shouldFire = false;\n      fire();\n    }\n  };\n\n  const fire = function() {\n    'use strict';\n    timeout = goog.global.setTimeout(handleTimeout, interval);\n    let args = storedArgs;\n    storedArgs = [];  // Avoid a space leak by clearing stored arguments.\n    f.apply(opt_scope, args);\n  };\n\n  return /** @type {function(...?)} */ (function(var_args) {\n    'use strict';\n    storedArgs = arguments;\n    if (!timeout) {\n      fire();\n    } else {\n      shouldFire = true;\n    }\n  });\n};\n\n\n/**\n * Wraps a function to allow it to be called, at most, once per interval\n * (specified in milliseconds). If the wrapper function is called N times within\n * that interval, only the 1st call will go through.\n *\n * This is particularly useful for limiting repeated user requests where the\n * first request is guaranteed to have all the data required to perform the\n * final action, so there's no need to wait until the end of the interval before\n * sending the request out.\n *\n * @param {function(this:SCOPE, ...?)} f Function to call.\n * @param {number} interval Interval over which to rate-limit. The function will\n *     only be called once per interval, and ignored for the remainer of the\n *     interval.\n * @param {SCOPE=} opt_scope Object in whose scope to call the function.\n * @return {function(...?): undefined} Wrapped function.\n * @template SCOPE\n */\ngoog.functions.rateLimit = function(f, interval, opt_scope) {\n  'use strict';\n  let timeout = 0;\n\n  const handleTimeout = function() {\n    'use strict';\n    timeout = 0;\n  };\n\n  return /** @type {function(...?)} */ (function(var_args) {\n    'use strict';\n    if (!timeout) {\n      timeout = goog.global.setTimeout(handleTimeout, interval);\n      f.apply(opt_scope, arguments);\n    }\n  });\n};\n\n/**\n * Returns true if the specified value is a function.\n * @param {*} val Variable to test.\n * @return {boolean} Whether variable is a function.\n */\ngoog.functions.isFunction = (val) => {\n  return typeof val === 'function';\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n\n/**\n * @fileoverview Utility to attempt native JSON processing, falling back to\n *     goog.json if not available.\n *\n *     This is intended as a drop-in for current users of goog.json who want\n *     to take advantage of native JSON if present.\n */\n\ngoog.provide('goog.json.hybrid');\n\ngoog.require('goog.asserts');\ngoog.require('goog.json');\n\n\n/**\n * Attempts to serialize the JSON string natively, falling back to\n * `goog.json.serialize` if unsuccessful.\n * @param {!Object} obj JavaScript object to serialize to JSON.\n * @return {string} Resulting JSON string.\n */\ngoog.json.hybrid.stringify = goog.json.USE_NATIVE_JSON ?\n    goog.global['JSON']['stringify'] :\n    function(obj) {\n      'use strict';\n      if (goog.global.JSON) {\n        try {\n          return goog.global.JSON.stringify(obj);\n        } catch (e) {\n          // Native serialization failed.  Fall through to retry with\n          // goog.json.serialize.\n        }\n      }\n\n      return goog.json.serialize(obj);\n    };\n\n\n/**\n * Attempts to parse the JSON string natively, falling back to\n * the supplied `fallbackParser` if unsuccessful.\n * @param {string} jsonString JSON string to parse.\n * @param {function(string):Object} fallbackParser Fallback JSON parser used\n *     if native\n * @return {?Object} Resulting JSON object.\n * @private\n */\ngoog.json.hybrid.parse_ = function(jsonString, fallbackParser) {\n  'use strict';\n  if (goog.global.JSON) {\n    try {\n      var obj = goog.global.JSON.parse(jsonString);\n      goog.asserts.assert(typeof obj == 'object');\n      return /** @type {?Object} */ (obj);\n    } catch (e) {\n      // Native parse failed.  Fall through to retry with goog.json.parse.\n    }\n  }\n\n  return fallbackParser(jsonString);\n};\n\n\n/**\n * Attempts to parse the JSON string natively, falling back to\n * `goog.json.parse` if unsuccessful.\n * @param {string} jsonString JSON string to parse.\n * @return {?Object} Resulting JSON object.\n */\ngoog.json.hybrid.parse = goog.json.USE_NATIVE_JSON ?\n    goog.global['JSON']['parse'] :\n    function(jsonString) {\n      'use strict';\n      return goog.json.hybrid.parse_(jsonString, goog.json.parse);\n    };\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Constants for HTTP status codes.\n */\n\ngoog.provide('goog.net.HttpStatus');\n\n\n/**\n * HTTP Status Codes defined in RFC 2616, RFC 6585, RFC 4918 and RFC 7538.\n * @see http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\n * @see http://tools.ietf.org/html/rfc6585\n * @see https://tools.ietf.org/html/rfc4918\n * @see https://tools.ietf.org/html/rfc7538\n * @enum {number}\n */\ngoog.net.HttpStatus = {\n  // Informational 1xx\n  CONTINUE: 100,\n  SWITCHING_PROTOCOLS: 101,\n\n  // Successful 2xx\n  OK: 200,\n  CREATED: 201,\n  ACCEPTED: 202,\n  NON_AUTHORITATIVE_INFORMATION: 203,\n  NO_CONTENT: 204,\n  RESET_CONTENT: 205,\n  PARTIAL_CONTENT: 206,\n  MULTI_STATUS: 207,\n\n  // Redirection 3xx\n  MULTIPLE_CHOICES: 300,\n  MOVED_PERMANENTLY: 301,\n  FOUND: 302,\n  SEE_OTHER: 303,\n  NOT_MODIFIED: 304,\n  USE_PROXY: 305,\n  TEMPORARY_REDIRECT: 307,\n  PERMANENT_REDIRECT: 308,\n\n  // Client Error 4xx\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  PAYMENT_REQUIRED: 402,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  METHOD_NOT_ALLOWED: 405,\n  NOT_ACCEPTABLE: 406,\n  PROXY_AUTHENTICATION_REQUIRED: 407,\n  REQUEST_TIMEOUT: 408,\n  CONFLICT: 409,\n  GONE: 410,\n  LENGTH_REQUIRED: 411,\n  PRECONDITION_FAILED: 412,\n  REQUEST_ENTITY_TOO_LARGE: 413,\n  REQUEST_URI_TOO_LONG: 414,\n  UNSUPPORTED_MEDIA_TYPE: 415,\n  REQUEST_RANGE_NOT_SATISFIABLE: 416,\n  EXPECTATION_FAILED: 417,\n  UNPROCESSABLE_ENTITY: 422,\n  LOCKED: 423,\n  FAILED_DEPENDENCY: 424,\n  PRECONDITION_REQUIRED: 428,\n  TOO_MANY_REQUESTS: 429,\n  REQUEST_HEADER_FIELDS_TOO_LARGE: 431,\n  CLIENT_CLOSED_REQUEST: 499,  // Nonstandard, used by GRPC\n\n  // Server Error 5xx\n  INTERNAL_SERVER_ERROR: 500,\n  NOT_IMPLEMENTED: 501,\n  BAD_GATEWAY: 502,\n  SERVICE_UNAVAILABLE: 503,\n  GATEWAY_TIMEOUT: 504,\n  HTTP_VERSION_NOT_SUPPORTED: 505,\n  INSUFFICIENT_STORAGE: 507,\n  NETWORK_AUTHENTICATION_REQUIRED: 511,\n\n  /*\n   * IE returns this code for 204 due to its use of URLMon, which returns this\n   * code for 'Operation Aborted'. The status text is 'Unknown', the response\n   * headers are ''. Known to occur on IE 6 on XP through IE9 on Win7.\n   */\n  QUIRK_IE_NO_CONTENT: 1223,\n};\n\n\n/**\n * Returns whether the given status should be considered successful.\n *\n * Successful codes are OK (200), CREATED (201), ACCEPTED (202),\n * NO CONTENT (204), PARTIAL CONTENT (206), NOT MODIFIED (304),\n * and IE's no content code (1223).\n *\n * @param {number} status The status code to test.\n * @return {boolean} Whether the status code should be considered successful.\n */\ngoog.net.HttpStatus.isSuccess = function(status) {\n  'use strict';\n  switch (status) {\n    case goog.net.HttpStatus.OK:\n    case goog.net.HttpStatus.CREATED:\n    case goog.net.HttpStatus.ACCEPTED:\n    case goog.net.HttpStatus.NO_CONTENT:\n    case goog.net.HttpStatus.PARTIAL_CONTENT:\n    case goog.net.HttpStatus.NOT_MODIFIED:\n    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:\n      return true;\n\n    default:\n      return false;\n  }\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Provides CORS support for HTTP based RPC requests.\n *\n * As part of net.rpc package, CORS features provided by this class\n * depend on the server support. Please check related specs to decide how\n * to enable any of the features provided by this class.\n */\n\ngoog.module('goog.net.rpc.HttpCors');\n\nconst GoogUri = goog.require('goog.Uri');\nconst googObject = goog.require('goog.object');\nconst googString = goog.require('goog.string');\nconst googUriUtils = goog.require('goog.uri.utils');\n\n\n/**\n * The default URL parameter name to overwrite http headers with a URL param\n * to avoid CORS preflight.\n *\n * See https://github.com/whatwg/fetch/issues/210#issue-129531743 for the spec.\n *\n * @type {string}\n */\nexports.HTTP_HEADERS_PARAM_NAME = '$httpHeaders';\n\n\n/**\n * The default URL parameter name to overwrite http method with a URL param\n * to avoid CORS preflight.\n *\n * See https://github.com/whatwg/fetch/issues/210#issue-129531743 for the spec.\n *\n * @type {string}\n */\nexports.HTTP_METHOD_PARAM_NAME = '$httpMethod';\n\n\n/**\n * Generates the URL parameter value with custom headers encoded as\n * HTTP/1.1 headers block.\n *\n * @param {!Object<string, string>} headers The custom headers.\n * @return {string} The URL param to overwrite custom HTTP headers.\n */\nexports.generateHttpHeadersOverwriteParam = function(headers) {\n  let result = '';\n  googObject.forEach(headers, function(value, key) {\n    result += key;\n    result += ':';\n    result += value;\n    result += '\\r\\n';\n  });\n  return result;\n};\n\n\n/**\n * Generates the URL-encoded URL parameter value with custom headers encoded as\n * HTTP/1.1 headers block.\n *\n * @param {!Object<string, string>} headers The custom headers.\n * @return {string} The URL param to overwrite custom HTTP headers.\n */\nexports.generateEncodedHttpHeadersOverwriteParam = function(headers) {\n  return googString.urlEncode(\n      exports.generateHttpHeadersOverwriteParam(headers));\n};\n\n\n/**\n * Sets custom HTTP headers via an overwrite URL param.\n *\n * @param {!GoogUri|string} url The URI object or a string path.\n * @param {string} urlParam The URL param name.\n * @param {!Object<string, string>} extraHeaders The HTTP headers.\n * @return {!GoogUri|string} The URI object or a string path with headers\n * encoded as a url param.\n */\nexports.setHttpHeadersWithOverwriteParam = function(\n    url, urlParam, extraHeaders) {\n  if (googObject.isEmpty(extraHeaders)) {\n    return url;\n  }\n  const httpHeaders = exports.generateHttpHeadersOverwriteParam(extraHeaders);\n  if (typeof url === 'string') {\n    return googUriUtils.appendParam(\n        url, googString.urlEncode(urlParam), httpHeaders);\n  } else {\n    url.setParameterValue(urlParam, httpHeaders);  // duplicate removed!\n    return url;\n  }\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Transport support for WebChannel.\n *\n * The <code>WebChannelTransport</code> implementation serves as the factory\n * for <code>WebChannel</code>, which offers an abstraction for\n * point-to-point socket-like communication similar to what BrowserChannel\n * or HTML5 WebSocket offers.\n */\n\ngoog.provide('goog.net.WebChannelTransport');\n\ngoog.requireType('goog.net.WebChannel');\ngoog.requireType('goog.net.WebChannel.Options');\n\n\n\n/**\n * A WebChannelTransport instance represents a shared context of logical\n * connectivity between a browser client and a remote origin.\n *\n * Over a single WebChannelTransport instance, multiple WebChannels may be\n * created against different URLs, which may all share the same\n * underlying connectivity (i.e. TCP connection) whenever possible.\n *\n * When multi-domains are supported, such as CORS, multiple origins may be\n * supported over a single WebChannelTransport instance at the same time.\n *\n * Sharing between different window contexts such as tabs is not addressed\n * by WebChannelTransport. Applications may choose HTML5 shared workers\n * or other techniques to access the same transport instance\n * across different window contexts.\n *\n * @interface\n */\ngoog.net.WebChannelTransport = function() {};\n\n\n/**\n * The client version. This integer value will be passed to the server\n * when a channel is opened to inform the server the client \"capabilities\".\n *\n * Wire protocol version is a different concept and is internal to the\n * transport implementation.\n *\n * @const\n * @type {number}\n */\ngoog.net.WebChannelTransport.CLIENT_VERSION = 22;\n\n\n/**\n * Create a new WebChannel instance.\n *\n * The new WebChannel is to be opened against the server-side resource\n * as specified by the given URL. See {@link goog.net.WebChannel} for detailed\n * semantics.\n *\n * @param {string} url The URL path for the new WebChannel instance.\n * @param {!goog.net.WebChannel.Options=} opt_options Configuration for the\n *     new WebChannel instance. The configuration object is reusable after\n *     the new channel instance is created.\n * @return {!goog.net.WebChannel} the newly created WebChannel instance.\n */\ngoog.net.WebChannelTransport.prototype.createWebChannel = goog.abstractMethod;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Implementation of a WebChannel transport using WebChannelBase.\n *\n * When WebChannelBase is used as the underlying transport, the capabilities\n * of the WebChannel are limited to what's supported by the implementation.\n * Particularly, multiplexing is not possible, and only strings are\n * supported as message types.\n */\n\ngoog.provide('goog.labs.net.webChannel.WebChannelBaseTransport');\n\ngoog.require('goog.asserts');\ngoog.require('goog.collections.maps');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.json');\ngoog.require('goog.labs.net.webChannel.ChannelRequest');\ngoog.require('goog.labs.net.webChannel.WebChannelBase');\ngoog.require('goog.labs.net.webChannel.Wire');\ngoog.require('goog.log');\ngoog.require('goog.net.WebChannel');\ngoog.require('goog.net.WebChannelTransport');\ngoog.require('goog.object');\ngoog.require('goog.string');\n\n\n\n/**\n * Implementation of {@link goog.net.WebChannelTransport} with\n * {@link goog.labs.net.webChannel.WebChannelBase} as the underlying channel\n * implementation.\n *\n * @constructor\n * @struct\n * @implements {goog.net.WebChannelTransport}\n * @final\n */\ngoog.labs.net.webChannel.WebChannelBaseTransport = function() {\n  'use strict';\n  if (!goog.labs.net.webChannel.ChannelRequest.supportsXhrStreaming()) {\n    throw new Error('Environmental error: no available transport.');\n  }\n};\n\n\ngoog.scope(function() {\n'use strict';\nconst WebChannelBaseTransport =\n    goog.labs.net.webChannel.WebChannelBaseTransport;\nconst WebChannelBase = goog.labs.net.webChannel.WebChannelBase;\nconst Wire = goog.labs.net.webChannel.Wire;\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.prototype.createWebChannel = function(\n    url, opt_options) {\n  'use strict';\n  return new WebChannelBaseTransport.Channel(url, opt_options);\n};\n\n\n\n/**\n * Implementation of the {@link goog.net.WebChannel} interface.\n *\n * @param {string} url The URL path for the new WebChannel instance.\n * @param {!goog.net.WebChannel.Options=} opt_options Configuration for the\n *     new WebChannel instance.\n *\n * @constructor\n * @implements {goog.net.WebChannel}\n * @extends {goog.events.EventTarget}\n * @final\n */\nWebChannelBaseTransport.Channel = function(url, opt_options) {\n  'use strict';\n  WebChannelBaseTransport.Channel.base(this, 'constructor');\n\n  /**\n   * @private {!WebChannelBase} The underlying channel object.\n   */\n  this.channel_ = new WebChannelBase(\n      opt_options, goog.net.WebChannelTransport.CLIENT_VERSION);\n\n  /**\n   * @private {string} The URL of the target server end-point.\n   */\n  this.url_ = url;\n\n  /**\n   * @private {goog.log.Logger} The logger for this class.\n   */\n  this.logger_ =\n      goog.log.getLogger('goog.labs.net.webChannel.WebChannelBaseTransport');\n\n  /**\n   * @private {Object<string, string>} Extra URL parameters\n   * to be added to each HTTP request.\n   */\n  this.messageUrlParams_ =\n      (opt_options && opt_options.messageUrlParams) || null;\n\n  let messageHeaders = (opt_options && opt_options.messageHeaders) || null;\n\n  // default is false\n  if (opt_options && opt_options.clientProtocolHeaderRequired) {\n    if (messageHeaders) {\n      goog.object.set(\n          messageHeaders, goog.net.WebChannel.X_CLIENT_PROTOCOL,\n          goog.net.WebChannel.X_CLIENT_PROTOCOL_WEB_CHANNEL);\n    } else {\n      messageHeaders = goog.object.create(\n          goog.net.WebChannel.X_CLIENT_PROTOCOL,\n          goog.net.WebChannel.X_CLIENT_PROTOCOL_WEB_CHANNEL);\n    }\n  }\n\n  this.channel_.setExtraHeaders(messageHeaders);\n\n  let initHeaders = (opt_options && opt_options.initMessageHeaders) || null;\n\n  if (opt_options && opt_options.messageContentType) {\n    if (initHeaders) {\n      goog.object.set(\n          initHeaders, goog.net.WebChannel.X_WEBCHANNEL_CONTENT_TYPE,\n          opt_options.messageContentType);\n    } else {\n      initHeaders = goog.object.create(\n          goog.net.WebChannel.X_WEBCHANNEL_CONTENT_TYPE,\n          opt_options.messageContentType);\n    }\n  }\n\n  if (opt_options && opt_options.clientProfile) {\n    if (initHeaders) {\n      goog.object.set(\n          initHeaders, goog.net.WebChannel.X_WEBCHANNEL_CLIENT_PROFILE,\n          opt_options.clientProfile);\n    } else {\n      initHeaders = goog.object.create(\n          goog.net.WebChannel.X_WEBCHANNEL_CLIENT_PROFILE,\n          opt_options.clientProfile);\n    }\n  }\n\n  this.channel_.setInitHeaders(initHeaders);\n\n  const httpHeadersOverwriteParam =\n      opt_options && opt_options.httpHeadersOverwriteParam;\n  if (httpHeadersOverwriteParam &&\n      !goog.string.isEmptyOrWhitespace(httpHeadersOverwriteParam)) {\n    this.channel_.setHttpHeadersOverwriteParam(httpHeadersOverwriteParam);\n  }\n\n  /**\n   * @private {boolean} Whether to enable CORS.\n   */\n  this.supportsCrossDomainXhr_ =\n      (opt_options && opt_options.supportsCrossDomainXhr) || false;\n\n  /**\n   * @private {boolean} Whether to send raw Json and bypass v8 wire format.\n   */\n  this.sendRawJson_ = (opt_options && opt_options.sendRawJson) || false;\n\n  // Note that httpSessionIdParam will be ignored if the same parameter name\n  // has already been specified with messageUrlParams\n  const httpSessionIdParam = opt_options && opt_options.httpSessionIdParam;\n  if (httpSessionIdParam &&\n      !goog.string.isEmptyOrWhitespace(httpSessionIdParam)) {\n    this.channel_.setHttpSessionIdParam(httpSessionIdParam);\n    if (goog.object.containsKey(this.messageUrlParams_, httpSessionIdParam)) {\n      goog.object.remove(this.messageUrlParams_, httpSessionIdParam);\n      goog.log.warning(\n          this.logger_,\n          'Ignore httpSessionIdParam also specified with messageUrlParams: ' +\n              httpSessionIdParam);\n    }\n  }\n\n  /**\n   * The channel handler.\n   *\n   * @private {!WebChannelBaseTransport.Channel.Handler_}\n   */\n  this.channelHandler_ = new WebChannelBaseTransport.Channel.Handler_(this);\n};\ngoog.inherits(WebChannelBaseTransport.Channel, goog.events.EventTarget);\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.prototype.open = function() {\n  'use strict';\n  this.channel_.setHandler(this.channelHandler_);\n  if (this.supportsCrossDomainXhr_) {\n    this.channel_.setSupportsCrossDomainXhrs(true);\n  }\n  this.channel_.connect(this.url_, (this.messageUrlParams_ || undefined));\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.prototype.close = function() {\n  'use strict';\n  this.channel_.disconnect();\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.prototype.halfClose = function() {\n  'use strict';\n  // to be implemented\n  throw new Error('Not implemented');\n};\n\n\n/**\n * The WebChannelBase only supports object types.\n *\n * @param {!goog.net.WebChannel.MessageData} message The message to send.\n *\n * @override\n */\nWebChannelBaseTransport.Channel.prototype.send = function(message) {\n  'use strict';\n  this.channel_.sendMap(this.messageToMapObject_(message));\n};\n\n\n/**\n * Converts a message to the map used by the underlying channel.\n *\n * @param {!goog.net.WebChannel.MessageData} message\n * @return {!Object|!goog.collections.maps.MapLike}\n */\nWebChannelBaseTransport.Channel.prototype.messageToMapObject_ = function(\n    message) {\n  'use strict';\n  goog.asserts.assert(\n      goog.isObject(message) || typeof message === 'string',\n      'only object type or raw string is supported');\n\n  if (typeof message === 'string') {\n    const rawJson = {};\n    rawJson[Wire.RAW_DATA_KEY] = message;\n    return rawJson;\n  }\n\n  if (this.sendRawJson_) {\n    const rawJson = {};\n    rawJson[Wire.RAW_DATA_KEY] = goog.json.serialize(message);\n    return rawJson;\n  }\n\n  return message;\n};\n\n\n/**\n * Converts the map used by the underlying channel to a message.\n *\n * NOTE: In the case of the message being JS Object or string, the exact same\n * object passed during `messageToMapObject_()` is returned. In the case of raw\n * JSON, an equal (but not the same) object is returned (due to serialization).\n *\n * @param {!Object|!goog.collections.maps.MapLike} map\n * @return {!goog.net.WebChannel.MessageData}\n */\nWebChannelBaseTransport.Channel.prototype.mapObjectToMessage_ = function(map) {\n  'use strict';\n  if (Wire.RAW_DATA_KEY in map) {\n    const rawMessage = map[Wire.RAW_DATA_KEY];\n\n    if (this.sendRawJson_) {\n      return /** @type {!goog.net.WebChannel.MessageData} */ (\n          goog.json.parse(rawMessage));\n    } else {  // string message\n      return rawMessage;\n    }\n  }\n\n  return map;\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.prototype.disposeInternal = function() {\n  'use strict';\n  this.channel_.setHandler(null);\n  delete this.channelHandler_;\n  this.channel_.disconnect();\n  delete this.channel_;\n\n  WebChannelBaseTransport.Channel.base(this, 'disposeInternal');\n};\n\n\n\n/**\n * The message event.\n *\n * @param {!Array<?>|!Object} array The data array from the underlying channel.\n * @constructor\n * @extends {goog.net.WebChannel.MessageEvent}\n * @final\n */\nWebChannelBaseTransport.Channel.MessageEvent = function(array) {\n  'use strict';\n  WebChannelBaseTransport.Channel.MessageEvent.base(this, 'constructor');\n\n  // single-metadata only\n  const metadata = array['__sm__'];\n  if (metadata) {\n    this.metadataKey = goog.object.getAnyKey(metadata);\n    if (this.metadataKey) {\n      this.data = goog.object.get(metadata, this.metadataKey);\n    } else {\n      this.data = metadata;  // empty\n    }\n  } else {\n    this.data = array;\n  }\n};\ngoog.inherits(\n    WebChannelBaseTransport.Channel.MessageEvent,\n    goog.net.WebChannel.MessageEvent);\n\n\n\n/**\n * The error event.\n *\n * @param {WebChannelBase.Error} error The error code.\n * @constructor\n * @extends {goog.net.WebChannel.ErrorEvent}\n * @final\n */\nWebChannelBaseTransport.Channel.ErrorEvent = function(error) {\n  'use strict';\n  WebChannelBaseTransport.Channel.ErrorEvent.base(this, 'constructor');\n\n  /**\n   * High-level status code.\n   */\n  this.status = goog.net.WebChannel.ErrorStatus.NETWORK_ERROR;\n\n  /**\n   * @const {WebChannelBase.Error} Internal error code, for debugging use only.\n   */\n  this.errorCode = error;\n};\ngoog.inherits(\n    WebChannelBaseTransport.Channel.ErrorEvent, goog.net.WebChannel.ErrorEvent);\n\n\n\n/**\n * Implementation of {@link WebChannelBase.Handler} interface.\n *\n * @param {!WebChannelBaseTransport.Channel} channel The enclosing WebChannel.\n *\n * @constructor\n * @extends {WebChannelBase.Handler}\n * @private\n */\nWebChannelBaseTransport.Channel.Handler_ = function(channel) {\n  'use strict';\n  WebChannelBaseTransport.Channel.Handler_.base(this, 'constructor');\n\n  /**\n   * @type {!WebChannelBaseTransport.Channel}\n   * @private\n   */\n  this.channel_ = channel;\n};\ngoog.inherits(WebChannelBaseTransport.Channel.Handler_, WebChannelBase.Handler);\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.Handler_.prototype.channelOpened = function(\n    channel) {\n  'use strict';\n  goog.log.info(\n      this.channel_.logger_, 'WebChannel opened on ' + this.channel_.url_);\n  this.channel_.dispatchEvent(goog.net.WebChannel.EventType.OPEN);\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.Handler_.prototype.channelHandleArray =\n    function(channel, array) {\n  'use strict';\n  goog.asserts.assert(array, 'array expected to be defined');\n  this.channel_.dispatchEvent(\n      new WebChannelBaseTransport.Channel.MessageEvent(array));\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.Handler_.prototype.channelError = function(\n    channel, error) {\n  'use strict';\n  goog.log.info(\n      this.channel_.logger_,\n      'WebChannel aborted on ' + this.channel_.url_ +\n          ' due to channel error: ' + error);\n  this.channel_.dispatchEvent(\n      new WebChannelBaseTransport.Channel.ErrorEvent(error));\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.Handler_.prototype.channelClosed = function(\n    channel, opt_pendingMaps, opt_undeliveredMaps) {\n  'use strict';\n  goog.log.info(\n      this.channel_.logger_, 'WebChannel closed on ' + this.channel_.url_);\n  this.channel_.dispatchEvent(goog.net.WebChannel.EventType.CLOSE);\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.Channel.prototype.getRuntimeProperties = function() {\n  'use strict';\n  return new WebChannelBaseTransport.ChannelProperties(this, this.channel_);\n};\n\n\n\n/**\n * Implementation of the {@link goog.net.WebChannel.RuntimeProperties}.\n *\n * @param {!WebChannelBaseTransport.Channel} transportChannel The transport\n *     channel object.\n * @param {!WebChannelBase} channel The underlying channel object.\n *\n * @constructor\n * @implements {goog.net.WebChannel.RuntimeProperties}\n * @final\n */\nWebChannelBaseTransport.ChannelProperties = function(\n    transportChannel, channel) {\n  'use strict';\n  /**\n   * The transport channel object.\n   *\n   * @private @const {!WebChannelBaseTransport.Channel}\n   */\n  this.transportChannel_ = transportChannel;\n\n  /**\n   * The underlying channel object.\n   *\n   * @private @const {!WebChannelBase}\n   */\n  this.channel_ = channel;\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.getConcurrentRequestLimit =\n    function() {\n  'use strict';\n  return this.channel_.getForwardChannelRequestPool().getMaxSize();\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.isSpdyEnabled = function() {\n  'use strict';\n  return this.getConcurrentRequestLimit() > 1;\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.getPendingRequestCount =\n    function() {\n  'use strict';\n  return this.channel_.getForwardChannelRequestPool().getRequestCount();\n};\n\n\n/**\n * @override\n * @return {!Array<!goog.net.WebChannel.MessageData>}\n */\nWebChannelBaseTransport.ChannelProperties.prototype.getNonAckedMessages =\n    function() {\n  'use strict';\n  return this.channel_.getNonAckedMaps().map(\n      queued_map => this.transportChannel_.mapObjectToMessage_(queued_map.map));\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.getHttpSessionId =\n    function() {\n  'use strict';\n  return this.channel_.getHttpSessionId();\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.commit = function(\n    callback) {\n  'use strict';\n  this.channel_.setForwardChannelFlushCallback(callback);\n};\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.notifyNonAckedMessageCount =\n    goog.abstractMethod;\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.onCommit =\n    goog.abstractMethod;\n\n\n/**\n * @override\n */\nWebChannelBaseTransport.ChannelProperties.prototype.ackCommit =\n    goog.abstractMethod;\n\n\n/** @override */\nWebChannelBaseTransport.ChannelProperties.prototype.getLastStatusCode =\n    function() {\n  'use strict';\n  return this.channel_.getLastStatusCode();\n};\n});  // goog.scope\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Abstract cryptographic hash interface.\n *\n * See goog.crypt.Sha1 and goog.crypt.Md5 for sample implementations.\n */\n\ngoog.provide('goog.crypt.Hash');\n\n\n\n/**\n * Create a cryptographic hash instance.\n *\n * @constructor\n * @struct\n */\ngoog.crypt.Hash = function() {\n  'use strict';\n  /**\n   * The block size for the hasher.\n   * @type {number}\n   */\n  this.blockSize = -1;\n};\n\n\n/**\n * Resets the internal accumulator.\n */\ngoog.crypt.Hash.prototype.reset = goog.abstractMethod;\n\n\n/**\n * Adds a byte array (array with values in [0-255] range) or a string (must\n * only contain 8-bit, i.e., Latin1 characters) to the internal accumulator.\n *\n * Many hash functions operate on blocks of data and implement optimizations\n * when a full chunk of data is readily available. Hence it is often preferable\n * to provide large chunks of data (a kilobyte or more) than to repeatedly\n * call the update method with few tens of bytes. If this is not possible, or\n * not feasible, it might be good to provide data in multiplies of hash block\n * size (often 64 bytes). Please see the implementation and performance tests\n * of your favourite hash.\n *\n * @param {Array<number>|Uint8Array|string} bytes Data used for the update.\n * @param {number=} opt_length Number of bytes to use.\n */\ngoog.crypt.Hash.prototype.update = goog.abstractMethod;\n\n\n/**\n * @return {!Array<number>} The finalized hash computed\n *     from the internal accumulator.\n */\ngoog.crypt.Hash.prototype.digest = goog.abstractMethod;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview MD5 cryptographic hash.\n * Implementation of http://tools.ietf.org/html/rfc1321 with common\n * optimizations and tweaks (see http://en.wikipedia.org/wiki/MD5).\n *\n * Usage:\n *   var md5 = new goog.crypt.Md5();\n *   md5.update(bytes);\n *   var hash = md5.digest();\n *\n * Performance:\n *   Chrome 23              ~680 Mbit/s\n *   Chrome 13 (in a VM)    ~250 Mbit/s\n *   Firefox 6.0 (in a VM)  ~100 Mbit/s\n *   IE9 (in a VM)           ~27 Mbit/s\n *   Firefox 3.6             ~15 Mbit/s\n *   IE8 (in a VM)           ~13 Mbit/s\n */\n\ngoog.provide('goog.crypt.Md5');\n\ngoog.require('goog.crypt.Hash');\n\n\n\n/**\n * MD5 cryptographic hash constructor.\n * @constructor\n * @extends {goog.crypt.Hash}\n * @final\n * @struct\n */\ngoog.crypt.Md5 = function() {\n  'use strict';\n  goog.crypt.Md5.base(this, 'constructor');\n\n  this.blockSize = 512 / 8;\n\n  /**\n   * Holds the current values of accumulated A-D variables (MD buffer).\n   * @type {!Array<number>}\n   * @private\n   */\n  this.chain_ = new Array(4);\n\n  /**\n   * A buffer holding the data until the whole block can be processed.\n   * @type {!Array<number>}\n   * @private\n   */\n  this.block_ = new Array(this.blockSize);\n\n  /**\n   * The length of yet-unprocessed data as collected in the block.\n   * @type {number}\n   * @private\n   */\n  this.blockLength_ = 0;\n\n  /**\n   * The total length of the message so far.\n   * @type {number}\n   * @private\n   */\n  this.totalLength_ = 0;\n\n  this.reset();\n};\ngoog.inherits(goog.crypt.Md5, goog.crypt.Hash);\n\n\n/**\n * Integer rotation constants used by the abbreviated implementation.\n * They are hardcoded in the unrolled implementation, so it is left\n * here commented out.\n * @type {Array<number>}\n * @private\n *\ngoog.crypt.Md5.S_ = [\n  7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22,\n  5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20,\n  4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23,\n  6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21\n];\n */\n\n/**\n * Sine function constants used by the abbreviated implementation.\n * They are hardcoded in the unrolled implementation, so it is left\n * here commented out.\n * @type {Array<number>}\n * @private\n *\ngoog.crypt.Md5.T_ = [\n  0xd76aa478, 0xe8c7b756, 0x242070db, 0xc1bdceee,\n  0xf57c0faf, 0x4787c62a, 0xa8304613, 0xfd469501,\n  0x698098d8, 0x8b44f7af, 0xffff5bb1, 0x895cd7be,\n  0x6b901122, 0xfd987193, 0xa679438e, 0x49b40821,\n  0xf61e2562, 0xc040b340, 0x265e5a51, 0xe9b6c7aa,\n  0xd62f105d, 0x02441453, 0xd8a1e681, 0xe7d3fbc8,\n  0x21e1cde6, 0xc33707d6, 0xf4d50d87, 0x455a14ed,\n  0xa9e3e905, 0xfcefa3f8, 0x676f02d9, 0x8d2a4c8a,\n  0xfffa3942, 0x8771f681, 0x6d9d6122, 0xfde5380c,\n  0xa4beea44, 0x4bdecfa9, 0xf6bb4b60, 0xbebfbc70,\n  0x289b7ec6, 0xeaa127fa, 0xd4ef3085, 0x04881d05,\n  0xd9d4d039, 0xe6db99e5, 0x1fa27cf8, 0xc4ac5665,\n  0xf4292244, 0x432aff97, 0xab9423a7, 0xfc93a039,\n  0x655b59c3, 0x8f0ccc92, 0xffeff47d, 0x85845dd1,\n  0x6fa87e4f, 0xfe2ce6e0, 0xa3014314, 0x4e0811a1,\n  0xf7537e82, 0xbd3af235, 0x2ad7d2bb, 0xeb86d391\n];\n */\n\n\n/** @override */\ngoog.crypt.Md5.prototype.reset = function() {\n  'use strict';\n  this.chain_[0] = 0x67452301;\n  this.chain_[1] = 0xefcdab89;\n  this.chain_[2] = 0x98badcfe;\n  this.chain_[3] = 0x10325476;\n\n  this.blockLength_ = 0;\n  this.totalLength_ = 0;\n};\n\n\n/**\n * Internal compress helper function. It takes a block of data (64 bytes)\n * and updates the accumulator.\n * @param {Array<number>|Uint8Array|string} buf The block to compress.\n * @param {number=} opt_offset Offset of the block in the buffer.\n * @private\n */\ngoog.crypt.Md5.prototype.compress_ = function(buf, opt_offset) {\n  'use strict';\n  if (!opt_offset) {\n    opt_offset = 0;\n  }\n\n  // We allocate the array every time, but it's cheap in practice.\n  var X = new Array(16);\n\n  // Get 16 little endian words. It is not worth unrolling this for Chrome 11.\n  if (typeof buf === 'string') {\n    for (var i = 0; i < 16; ++i) {\n      X[i] = (buf.charCodeAt(opt_offset++)) |\n          (buf.charCodeAt(opt_offset++) << 8) |\n          (buf.charCodeAt(opt_offset++) << 16) |\n          (buf.charCodeAt(opt_offset++) << 24);\n    }\n  } else {\n    for (var i = 0; i < 16; ++i) {\n      X[i] = (buf[opt_offset++]) | (buf[opt_offset++] << 8) |\n          (buf[opt_offset++] << 16) | (buf[opt_offset++] << 24);\n    }\n  }\n\n  var A = this.chain_[0];\n  var B = this.chain_[1];\n  var C = this.chain_[2];\n  var D = this.chain_[3];\n  var sum = 0;\n\n  /*\n   * This is an abbreviated implementation, it is left here commented out for\n   * reference purposes. See below for an unrolled version in use.\n   *\n  var f, n, tmp;\n  for (var i = 0; i < 64; ++i) {\n\n    if (i < 16) {\n      f = (D ^ (B & (C ^ D)));\n      n = i;\n    } else if (i < 32) {\n      f = (C ^ (D & (B ^ C)));\n      n = (5 * i + 1) % 16;\n    } else if (i < 48) {\n      f = (B ^ C ^ D);\n      n = (3 * i + 5) % 16;\n    } else {\n      f = (C ^ (B | (~D)));\n      n = (7 * i) % 16;\n    }\n\n    tmp = D;\n    D = C;\n    C = B;\n    sum = (A + f + goog.crypt.Md5.T_[i] + X[n]) & 0xffffffff;\n    B += ((sum << goog.crypt.Md5.S_[i]) & 0xffffffff) |\n         (sum >>> (32 - goog.crypt.Md5.S_[i]));\n    A = tmp;\n  }\n   */\n\n  /*\n   * This is an unrolled MD5 implementation, which gives ~30% speedup compared\n   * to the abbreviated implementation above, as measured on Chrome 11. It is\n   * important to keep 32-bit croppings to minimum and inline the integer\n   * rotation.\n   */\n  sum = (A + (D ^ (B & (C ^ D))) + X[0] + 0xd76aa478) & 0xffffffff;\n  A = B + (((sum << 7) & 0xffffffff) | (sum >>> 25));\n  sum = (D + (C ^ (A & (B ^ C))) + X[1] + 0xe8c7b756) & 0xffffffff;\n  D = A + (((sum << 12) & 0xffffffff) | (sum >>> 20));\n  sum = (C + (B ^ (D & (A ^ B))) + X[2] + 0x242070db) & 0xffffffff;\n  C = D + (((sum << 17) & 0xffffffff) | (sum >>> 15));\n  sum = (B + (A ^ (C & (D ^ A))) + X[3] + 0xc1bdceee) & 0xffffffff;\n  B = C + (((sum << 22) & 0xffffffff) | (sum >>> 10));\n  sum = (A + (D ^ (B & (C ^ D))) + X[4] + 0xf57c0faf) & 0xffffffff;\n  A = B + (((sum << 7) & 0xffffffff) | (sum >>> 25));\n  sum = (D + (C ^ (A & (B ^ C))) + X[5] + 0x4787c62a) & 0xffffffff;\n  D = A + (((sum << 12) & 0xffffffff) | (sum >>> 20));\n  sum = (C + (B ^ (D & (A ^ B))) + X[6] + 0xa8304613) & 0xffffffff;\n  C = D + (((sum << 17) & 0xffffffff) | (sum >>> 15));\n  sum = (B + (A ^ (C & (D ^ A))) + X[7] + 0xfd469501) & 0xffffffff;\n  B = C + (((sum << 22) & 0xffffffff) | (sum >>> 10));\n  sum = (A + (D ^ (B & (C ^ D))) + X[8] + 0x698098d8) & 0xffffffff;\n  A = B + (((sum << 7) & 0xffffffff) | (sum >>> 25));\n  sum = (D + (C ^ (A & (B ^ C))) + X[9] + 0x8b44f7af) & 0xffffffff;\n  D = A + (((sum << 12) & 0xffffffff) | (sum >>> 20));\n  sum = (C + (B ^ (D & (A ^ B))) + X[10] + 0xffff5bb1) & 0xffffffff;\n  C = D + (((sum << 17) & 0xffffffff) | (sum >>> 15));\n  sum = (B + (A ^ (C & (D ^ A))) + X[11] + 0x895cd7be) & 0xffffffff;\n  B = C + (((sum << 22) & 0xffffffff) | (sum >>> 10));\n  sum = (A + (D ^ (B & (C ^ D))) + X[12] + 0x6b901122) & 0xffffffff;\n  A = B + (((sum << 7) & 0xffffffff) | (sum >>> 25));\n  sum = (D + (C ^ (A & (B ^ C))) + X[13] + 0xfd987193) & 0xffffffff;\n  D = A + (((sum << 12) & 0xffffffff) | (sum >>> 20));\n  sum = (C + (B ^ (D & (A ^ B))) + X[14] + 0xa679438e) & 0xffffffff;\n  C = D + (((sum << 17) & 0xffffffff) | (sum >>> 15));\n  sum = (B + (A ^ (C & (D ^ A))) + X[15] + 0x49b40821) & 0xffffffff;\n  B = C + (((sum << 22) & 0xffffffff) | (sum >>> 10));\n  sum = (A + (C ^ (D & (B ^ C))) + X[1] + 0xf61e2562) & 0xffffffff;\n  A = B + (((sum << 5) & 0xffffffff) | (sum >>> 27));\n  sum = (D + (B ^ (C & (A ^ B))) + X[6] + 0xc040b340) & 0xffffffff;\n  D = A + (((sum << 9) & 0xffffffff) | (sum >>> 23));\n  sum = (C + (A ^ (B & (D ^ A))) + X[11] + 0x265e5a51) & 0xffffffff;\n  C = D + (((sum << 14) & 0xffffffff) | (sum >>> 18));\n  sum = (B + (D ^ (A & (C ^ D))) + X[0] + 0xe9b6c7aa) & 0xffffffff;\n  B = C + (((sum << 20) & 0xffffffff) | (sum >>> 12));\n  sum = (A + (C ^ (D & (B ^ C))) + X[5] + 0xd62f105d) & 0xffffffff;\n  A = B + (((sum << 5) & 0xffffffff) | (sum >>> 27));\n  sum = (D + (B ^ (C & (A ^ B))) + X[10] + 0x02441453) & 0xffffffff;\n  D = A + (((sum << 9) & 0xffffffff) | (sum >>> 23));\n  sum = (C + (A ^ (B & (D ^ A))) + X[15] + 0xd8a1e681) & 0xffffffff;\n  C = D + (((sum << 14) & 0xffffffff) | (sum >>> 18));\n  sum = (B + (D ^ (A & (C ^ D))) + X[4] + 0xe7d3fbc8) & 0xffffffff;\n  B = C + (((sum << 20) & 0xffffffff) | (sum >>> 12));\n  sum = (A + (C ^ (D & (B ^ C))) + X[9] + 0x21e1cde6) & 0xffffffff;\n  A = B + (((sum << 5) & 0xffffffff) | (sum >>> 27));\n  sum = (D + (B ^ (C & (A ^ B))) + X[14] + 0xc33707d6) & 0xffffffff;\n  D = A + (((sum << 9) & 0xffffffff) | (sum >>> 23));\n  sum = (C + (A ^ (B & (D ^ A))) + X[3] + 0xf4d50d87) & 0xffffffff;\n  C = D + (((sum << 14) & 0xffffffff) | (sum >>> 18));\n  sum = (B + (D ^ (A & (C ^ D))) + X[8] + 0x455a14ed) & 0xffffffff;\n  B = C + (((sum << 20) & 0xffffffff) | (sum >>> 12));\n  sum = (A + (C ^ (D & (B ^ C))) + X[13] + 0xa9e3e905) & 0xffffffff;\n  A = B + (((sum << 5) & 0xffffffff) | (sum >>> 27));\n  sum = (D + (B ^ (C & (A ^ B))) + X[2] + 0xfcefa3f8) & 0xffffffff;\n  D = A + (((sum << 9) & 0xffffffff) | (sum >>> 23));\n  sum = (C + (A ^ (B & (D ^ A))) + X[7] + 0x676f02d9) & 0xffffffff;\n  C = D + (((sum << 14) & 0xffffffff) | (sum >>> 18));\n  sum = (B + (D ^ (A & (C ^ D))) + X[12] + 0x8d2a4c8a) & 0xffffffff;\n  B = C + (((sum << 20) & 0xffffffff) | (sum >>> 12));\n  sum = (A + (B ^ C ^ D) + X[5] + 0xfffa3942) & 0xffffffff;\n  A = B + (((sum << 4) & 0xffffffff) | (sum >>> 28));\n  sum = (D + (A ^ B ^ C) + X[8] + 0x8771f681) & 0xffffffff;\n  D = A + (((sum << 11) & 0xffffffff) | (sum >>> 21));\n  sum = (C + (D ^ A ^ B) + X[11] + 0x6d9d6122) & 0xffffffff;\n  C = D + (((sum << 16) & 0xffffffff) | (sum >>> 16));\n  sum = (B + (C ^ D ^ A) + X[14] + 0xfde5380c) & 0xffffffff;\n  B = C + (((sum << 23) & 0xffffffff) | (sum >>> 9));\n  sum = (A + (B ^ C ^ D) + X[1] + 0xa4beea44) & 0xffffffff;\n  A = B + (((sum << 4) & 0xffffffff) | (sum >>> 28));\n  sum = (D + (A ^ B ^ C) + X[4] + 0x4bdecfa9) & 0xffffffff;\n  D = A + (((sum << 11) & 0xffffffff) | (sum >>> 21));\n  sum = (C + (D ^ A ^ B) + X[7] + 0xf6bb4b60) & 0xffffffff;\n  C = D + (((sum << 16) & 0xffffffff) | (sum >>> 16));\n  sum = (B + (C ^ D ^ A) + X[10] + 0xbebfbc70) & 0xffffffff;\n  B = C + (((sum << 23) & 0xffffffff) | (sum >>> 9));\n  sum = (A + (B ^ C ^ D) + X[13] + 0x289b7ec6) & 0xffffffff;\n  A = B + (((sum << 4) & 0xffffffff) | (sum >>> 28));\n  sum = (D + (A ^ B ^ C) + X[0] + 0xeaa127fa) & 0xffffffff;\n  D = A + (((sum << 11) & 0xffffffff) | (sum >>> 21));\n  sum = (C + (D ^ A ^ B) + X[3] + 0xd4ef3085) & 0xffffffff;\n  C = D + (((sum << 16) & 0xffffffff) | (sum >>> 16));\n  sum = (B + (C ^ D ^ A) + X[6] + 0x04881d05) & 0xffffffff;\n  B = C + (((sum << 23) & 0xffffffff) | (sum >>> 9));\n  sum = (A + (B ^ C ^ D) + X[9] + 0xd9d4d039) & 0xffffffff;\n  A = B + (((sum << 4) & 0xffffffff) | (sum >>> 28));\n  sum = (D + (A ^ B ^ C) + X[12] + 0xe6db99e5) & 0xffffffff;\n  D = A + (((sum << 11) & 0xffffffff) | (sum >>> 21));\n  sum = (C + (D ^ A ^ B) + X[15] + 0x1fa27cf8) & 0xffffffff;\n  C = D + (((sum << 16) & 0xffffffff) | (sum >>> 16));\n  sum = (B + (C ^ D ^ A) + X[2] + 0xc4ac5665) & 0xffffffff;\n  B = C + (((sum << 23) & 0xffffffff) | (sum >>> 9));\n  sum = (A + (C ^ (B | (~D))) + X[0] + 0xf4292244) & 0xffffffff;\n  A = B + (((sum << 6) & 0xffffffff) | (sum >>> 26));\n  sum = (D + (B ^ (A | (~C))) + X[7] + 0x432aff97) & 0xffffffff;\n  D = A + (((sum << 10) & 0xffffffff) | (sum >>> 22));\n  sum = (C + (A ^ (D | (~B))) + X[14] + 0xab9423a7) & 0xffffffff;\n  C = D + (((sum << 15) & 0xffffffff) | (sum >>> 17));\n  sum = (B + (D ^ (C | (~A))) + X[5] + 0xfc93a039) & 0xffffffff;\n  B = C + (((sum << 21) & 0xffffffff) | (sum >>> 11));\n  sum = (A + (C ^ (B | (~D))) + X[12] + 0x655b59c3) & 0xffffffff;\n  A = B + (((sum << 6) & 0xffffffff) | (sum >>> 26));\n  sum = (D + (B ^ (A | (~C))) + X[3] + 0x8f0ccc92) & 0xffffffff;\n  D = A + (((sum << 10) & 0xffffffff) | (sum >>> 22));\n  sum = (C + (A ^ (D | (~B))) + X[10] + 0xffeff47d) & 0xffffffff;\n  C = D + (((sum << 15) & 0xffffffff) | (sum >>> 17));\n  sum = (B + (D ^ (C | (~A))) + X[1] + 0x85845dd1) & 0xffffffff;\n  B = C + (((sum << 21) & 0xffffffff) | (sum >>> 11));\n  sum = (A + (C ^ (B | (~D))) + X[8] + 0x6fa87e4f) & 0xffffffff;\n  A = B + (((sum << 6) & 0xffffffff) | (sum >>> 26));\n  sum = (D + (B ^ (A | (~C))) + X[15] + 0xfe2ce6e0) & 0xffffffff;\n  D = A + (((sum << 10) & 0xffffffff) | (sum >>> 22));\n  sum = (C + (A ^ (D | (~B))) + X[6] + 0xa3014314) & 0xffffffff;\n  C = D + (((sum << 15) & 0xffffffff) | (sum >>> 17));\n  sum = (B + (D ^ (C | (~A))) + X[13] + 0x4e0811a1) & 0xffffffff;\n  B = C + (((sum << 21) & 0xffffffff) | (sum >>> 11));\n  sum = (A + (C ^ (B | (~D))) + X[4] + 0xf7537e82) & 0xffffffff;\n  A = B + (((sum << 6) & 0xffffffff) | (sum >>> 26));\n  sum = (D + (B ^ (A | (~C))) + X[11] + 0xbd3af235) & 0xffffffff;\n  D = A + (((sum << 10) & 0xffffffff) | (sum >>> 22));\n  sum = (C + (A ^ (D | (~B))) + X[2] + 0x2ad7d2bb) & 0xffffffff;\n  C = D + (((sum << 15) & 0xffffffff) | (sum >>> 17));\n  sum = (B + (D ^ (C | (~A))) + X[9] + 0xeb86d391) & 0xffffffff;\n  B = C + (((sum << 21) & 0xffffffff) | (sum >>> 11));\n\n  this.chain_[0] = (this.chain_[0] + A) & 0xffffffff;\n  this.chain_[1] = (this.chain_[1] + B) & 0xffffffff;\n  this.chain_[2] = (this.chain_[2] + C) & 0xffffffff;\n  this.chain_[3] = (this.chain_[3] + D) & 0xffffffff;\n};\n\n\n/** @override */\ngoog.crypt.Md5.prototype.update = function(bytes, opt_length) {\n  'use strict';\n  if (opt_length === undefined) {\n    opt_length = bytes.length;\n  }\n  var lengthMinusBlock = opt_length - this.blockSize;\n\n  // Copy some object properties to local variables in order to save on access\n  // time from inside the loop (~10% speedup was observed on Chrome 11).\n  var block = this.block_;\n  var blockLength = this.blockLength_;\n  var i = 0;\n\n  // The outer while loop should execute at most twice.\n  while (i < opt_length) {\n    // When we have no data in the block to top up, we can directly process the\n    // input buffer (assuming it contains sufficient data). This gives ~30%\n    // speedup on Chrome 14 and ~70% speedup on Firefox 6.0, but requires that\n    // the data is provided in large chunks (or in multiples of 64 bytes).\n    if (blockLength == 0) {\n      while (i <= lengthMinusBlock) {\n        this.compress_(bytes, i);\n        i += this.blockSize;\n      }\n    }\n\n    if (typeof bytes === 'string') {\n      while (i < opt_length) {\n        block[blockLength++] = bytes.charCodeAt(i++);\n        if (blockLength == this.blockSize) {\n          this.compress_(block);\n          blockLength = 0;\n          // Jump to the outer loop so we use the full-block optimization.\n          break;\n        }\n      }\n    } else {\n      while (i < opt_length) {\n        block[blockLength++] = bytes[i++];\n        if (blockLength == this.blockSize) {\n          this.compress_(block);\n          blockLength = 0;\n          // Jump to the outer loop so we use the full-block optimization.\n          break;\n        }\n      }\n    }\n  }\n\n  this.blockLength_ = blockLength;\n  this.totalLength_ += opt_length;\n};\n\n\n/** @override */\ngoog.crypt.Md5.prototype.digest = function() {\n  'use strict';\n  // This must accommodate at least 1 padding byte (0x80), 8 bytes of\n  // total bitlength, and must end at a 64-byte boundary.\n  var pad = new Array(\n      (this.blockLength_ < 56 ? this.blockSize : this.blockSize * 2) -\n      this.blockLength_);\n\n  // Add padding: 0x80 0x00*\n  pad[0] = 0x80;\n  for (var i = 1; i < pad.length - 8; ++i) {\n    pad[i] = 0;\n  }\n  // Add the total number of bits, little endian 64-bit integer.\n  var totalBits = this.totalLength_ * 8;\n  for (var i = pad.length - 8; i < pad.length; ++i) {\n    pad[i] = totalBits & 0xff;\n    totalBits /= 0x100;  // Don't use bit-shifting here!\n  }\n  this.update(pad);\n\n  var digest = new Array(16);\n  var n = 0;\n  for (var i = 0; i < 4; ++i) {\n    for (var j = 0; j < 32; j += 8) {\n      digest[n++] = (this.chain_[i] >>> j) & 0xff;\n    }\n  }\n  return digest;\n};\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Defines an Integer class for representing (potentially)\n * infinite length two's-complement integer values.\n *\n * For the specific case of 64-bit integers, use goog.math.Long, which is more\n * efficient.\n */\n\ngoog.provide('goog.math.Integer');\n\ngoog.require('goog.reflect');\n\n/**\n * Constructs a two's-complement integer an array containing bits of the\n * integer in 32-bit (signed) pieces, given in little-endian order (i.e.,\n * lowest-order bits in the first piece), and the sign of -1 or 0.\n *\n * See the from* functions below for other convenient ways of constructing\n * Integers.\n *\n * The internal representation of an integer is an array of 32-bit signed\n * pieces, along with a sign (0 or -1) that indicates the contents of all the\n * other 32-bit pieces out to infinity.  We use 32-bit pieces because these are\n * the size of integers on which JavaScript performs bit-operations.  For\n * operations like addition and multiplication, we split each number into 16-bit\n * pieces, which can easily be multiplied within JavaScript's floating-point\n * representation without overflow or change in sign.\n *\n * @struct\n * @constructor\n * @param {Array<number>} bits Array containing the bits of the number.\n * @param {number} sign The sign of the number: -1 for negative and 0 positive.\n * @final\n */\ngoog.math.Integer = function(bits, sign) {\n  'use strict';\n  /**\n   * @type {number}\n   * @private\n   */\n  this.sign_ = sign;\n\n  // Note: using a local variable while initializing the array helps the\n  // compiler understand that assigning to the array is local side-effect and\n  // that enables the entire constructor to be seen as side-effect free.\n  var localBits = [];\n\n  // Copy the 32-bit signed integer values passed in.  We prune out those at the\n  // top that equal the sign since they are redundant.\n  var top = true;\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    var val = bits[i] | 0;\n    if (!top || val != sign) {\n      localBits[i] = val;\n      top = false;\n    }\n  }\n\n  /**\n   * @type {!Array<number>}\n   * @private\n   * @const\n   */\n  this.bits_ = localBits;\n};\n\n\n// NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the\n// from* methods on which they depend.\n\n\n/**\n * A cache of the Integer representations of small integer values.\n * @type {!Object<number, !goog.math.Integer>}\n * @private\n */\ngoog.math.Integer.IntCache_ = {};\n\n\n/**\n * Returns an Integer representing the given (32-bit) integer value.\n * @param {number} value A 32-bit integer value.\n * @return {!goog.math.Integer} The corresponding Integer value.\n */\ngoog.math.Integer.fromInt = function(value) {\n  'use strict';\n  if (-128 <= value && value < 128) {\n    return goog.reflect.cache(\n        goog.math.Integer.IntCache_, value, function(val) {\n          'use strict';\n          return new goog.math.Integer([val | 0], val < 0 ? -1 : 0);\n        });\n  }\n  return new goog.math.Integer([value | 0], value < 0 ? -1 : 0);\n};\n\n\n/**\n * Returns an Integer representing the given value, provided that it is a finite\n * number.  Otherwise, zero is returned.\n * @param {number} value The value in question.\n * @return {!goog.math.Integer} The corresponding Integer value.\n */\ngoog.math.Integer.fromNumber = function(value) {\n  'use strict';\n  if (isNaN(value) || !isFinite(value)) {\n    return goog.math.Integer.ZERO;\n  } else if (value < 0) {\n    return goog.math.Integer.fromNumber(-value).negate();\n  } else {\n    var bits = [];\n    var pow = 1;\n    for (var i = 0; value >= pow; i++) {\n      bits[i] = (value / pow) | 0;\n      pow *= goog.math.Integer.TWO_PWR_32_DBL_;\n    }\n    return new goog.math.Integer(bits, 0);\n  }\n};\n\n\n/**\n * Returns a Integer representing the value that comes by concatenating the\n * given entries, each is assumed to be 32 signed bits, given in little-endian\n * order (lowest order bits in the lowest index), and sign-extending the highest\n * order 32-bit value.\n * @param {Array<number>} bits The bits of the number, in 32-bit signed pieces,\n *     in little-endian order.\n * @return {!goog.math.Integer} The corresponding Integer value.\n */\ngoog.math.Integer.fromBits = function(bits) {\n  'use strict';\n  var high = bits[bits.length - 1];\n  return new goog.math.Integer(bits, high & (1 << 31) ? -1 : 0);\n};\n\n\n/**\n * Returns an Integer representation of the given string, written using the\n * given radix.\n * @param {string} str The textual representation of the Integer.\n * @param {number=} opt_radix The radix in which the text is written.\n * @return {!goog.math.Integer} The corresponding Integer value.\n */\ngoog.math.Integer.fromString = function(str, opt_radix) {\n  'use strict';\n  if (str.length == 0) {\n    throw new Error('number format error: empty string');\n  }\n\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw new Error('radix out of range: ' + radix);\n  }\n\n  if (str.charAt(0) == '-') {\n    return goog.math.Integer.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf('-') >= 0) {\n    throw new Error('number format error: interior \"-\" character');\n  }\n\n  // Do several (8) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 8));\n\n  var result = goog.math.Integer.ZERO;\n  for (var i = 0; i < str.length; i += 8) {\n    var size = Math.min(8, str.length - i);\n    var value = parseInt(str.substring(i, i + size), radix);\n    if (size < 8) {\n      var power = goog.math.Integer.fromNumber(Math.pow(radix, size));\n      result = result.multiply(power).add(goog.math.Integer.fromNumber(value));\n    } else {\n      result = result.multiply(radixToPower);\n      result = result.add(goog.math.Integer.fromNumber(value));\n    }\n  }\n  return result;\n};\n\n\n/**\n * A number used repeatedly in calculations.  This must appear before the first\n * call to the from* functions below.\n * @type {number}\n * @private\n */\ngoog.math.Integer.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);\n\n\n/**  @type {!goog.math.Integer} */\ngoog.math.Integer.ZERO = goog.math.Integer.fromInt(0);\n\n/**  @type {!goog.math.Integer} */\ngoog.math.Integer.ONE = goog.math.Integer.fromInt(1);\n\n\n/**\n * @const\n * @type {!goog.math.Integer}\n * @private\n */\ngoog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(1 << 24);\n\n/**\n * Returns the value, assuming it is a 32-bit integer.\n * @return {number} The corresponding int value.\n */\ngoog.math.Integer.prototype.toInt = function() {\n  'use strict';\n  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;\n};\n\n\n/** @return {number} The closest floating-point representation to this value. */\ngoog.math.Integer.prototype.toNumber = function() {\n  'use strict';\n  if (this.isNegative()) {\n    return -this.negate().toNumber();\n  } else {\n    var val = 0;\n    var pow = 1;\n    for (var i = 0; i < this.bits_.length; i++) {\n      val += this.getBitsUnsigned(i) * pow;\n      pow *= goog.math.Integer.TWO_PWR_32_DBL_;\n    }\n    return val;\n  }\n};\n\n\n/**\n * @param {number=} opt_radix The radix in which the text should be written.\n * @return {string} The textual representation of this value.\n * @override\n */\ngoog.math.Integer.prototype.toString = function(opt_radix) {\n  'use strict';\n  var radix = opt_radix || 10;\n  if (radix < 2 || 36 < radix) {\n    throw new Error('radix out of range: ' + radix);\n  }\n\n  if (this.isZero()) {\n    return '0';\n  } else if (this.isNegative()) {\n    return '-' + this.negate().toString(radix);\n  }\n\n  // Do several (6) digits each time through the loop, so as to\n  // minimize the calls to the very expensive emulated div.\n  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 6));\n\n  var rem = this;\n  var result = '';\n  while (true) {\n    var remDiv = rem.divide(radixToPower);\n    // The right shifting fixes negative values in the case when\n    // intval >= 2^31; for more details see\n    // https://github.com/google/closure-library/pull/498\n    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;\n    var digits = intval.toString(radix);\n\n    rem = remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length < 6) {\n        digits = '0' + digits;\n      }\n      result = '' + digits + result;\n    }\n  }\n};\n\n\n/**\n * Returns the index-th 32-bit (signed) piece of the Integer according to\n * little-endian order (i.e., index 0 contains the smallest bits).\n * @param {number} index The index in question.\n * @return {number} The requested 32-bits as a signed number.\n */\ngoog.math.Integer.prototype.getBits = function(index) {\n  'use strict';\n  if (index < 0) {\n    return 0;  // Allowing this simplifies bit shifting operations below...\n  } else if (index < this.bits_.length) {\n    return this.bits_[index];\n  } else {\n    return this.sign_;\n  }\n};\n\n\n/**\n * Returns the index-th 32-bit piece as an unsigned number.\n * @param {number} index The index in question.\n * @return {number} The requested 32-bits as an unsigned number.\n */\ngoog.math.Integer.prototype.getBitsUnsigned = function(index) {\n  'use strict';\n  var val = this.getBits(index);\n  return val >= 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;\n};\n\n\n/** @return {number} The sign bit of this number, -1 or 0. */\ngoog.math.Integer.prototype.getSign = function() {\n  'use strict';\n  return this.sign_;\n};\n\n\n/** @return {boolean} Whether this value is zero. */\ngoog.math.Integer.prototype.isZero = function() {\n  'use strict';\n  if (this.sign_ != 0) {\n    return false;\n  }\n  for (var i = 0; i < this.bits_.length; i++) {\n    if (this.bits_[i] != 0) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/** @return {boolean} Whether this value is negative. */\ngoog.math.Integer.prototype.isNegative = function() {\n  'use strict';\n  return this.sign_ == -1;\n};\n\n\n/** @return {boolean} Whether this value is odd. */\ngoog.math.Integer.prototype.isOdd = function() {\n  'use strict';\n  return (this.bits_.length == 0) && (this.sign_ == -1) ||\n      (this.bits_.length > 0) && ((this.bits_[0] & 1) != 0);\n};\n\n\n/**\n * @param {goog.math.Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer equals the other.\n */\ngoog.math.Integer.prototype.equals = function(other) {\n  'use strict';\n  if (this.sign_ != other.sign_) {\n    return false;\n  }\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  for (var i = 0; i < len; i++) {\n    if (this.getBits(i) != other.getBits(i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n\n/**\n * @param {goog.math.Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer does not equal the other.\n */\ngoog.math.Integer.prototype.notEquals = function(other) {\n  'use strict';\n  return !this.equals(other);\n};\n\n\n/**\n * @param {goog.math.Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is greater than the other.\n */\ngoog.math.Integer.prototype.greaterThan = function(other) {\n  'use strict';\n  return this.compare(other) > 0;\n};\n\n\n/**\n * @param {goog.math.Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is greater than or equal to the other.\n */\ngoog.math.Integer.prototype.greaterThanOrEqual = function(other) {\n  'use strict';\n  return this.compare(other) >= 0;\n};\n\n\n/**\n * @param {goog.math.Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is less than the other.\n */\ngoog.math.Integer.prototype.lessThan = function(other) {\n  'use strict';\n  return this.compare(other) < 0;\n};\n\n\n/**\n * @param {goog.math.Integer} other Integer to compare against.\n * @return {boolean} Whether this Integer is less than or equal to the other.\n */\ngoog.math.Integer.prototype.lessThanOrEqual = function(other) {\n  'use strict';\n  return this.compare(other) <= 0;\n};\n\n\n/**\n * Compares this Integer with the given one.\n * @param {goog.math.Integer} other Integer to compare against.\n * @return {number} 0 if they are the same, 1 if the this is greater, and -1\n *     if the given one is greater.\n */\ngoog.math.Integer.prototype.compare = function(other) {\n  'use strict';\n  var diff = this.subtract(other);\n  if (diff.isNegative()) {\n    return -1;\n  } else if (diff.isZero()) {\n    return 0;\n  } else {\n    return +1;\n  }\n};\n\n\n/**\n * Returns an integer with only the first numBits bits of this value, sign\n * extended from the final bit.\n * @param {number} numBits The number of bits by which to shift.\n * @return {!goog.math.Integer} The shorted integer value.\n */\ngoog.math.Integer.prototype.shorten = function(numBits) {\n  'use strict';\n  var arr_index = (numBits - 1) >> 5;\n  var bit_index = (numBits - 1) % 32;\n  var bits = [];\n  for (var i = 0; i < arr_index; i++) {\n    bits[i] = this.getBits(i);\n  }\n  var sigBits = bit_index == 31 ? 0xFFFFFFFF : (1 << (bit_index + 1)) - 1;\n  var val = this.getBits(arr_index) & sigBits;\n  if (val & (1 << bit_index)) {\n    val |= 0xFFFFFFFF - sigBits;\n    bits[arr_index] = val;\n    return new goog.math.Integer(bits, -1);\n  } else {\n    bits[arr_index] = val;\n    return new goog.math.Integer(bits, 0);\n  }\n};\n\n\n/** @return {!goog.math.Integer} The negation of this value. */\ngoog.math.Integer.prototype.negate = function() {\n  'use strict';\n  return this.not().add(goog.math.Integer.ONE);\n};\n\n\n/** @return {!goog.math.Integer} The absolute value of this value. */\ngoog.math.Integer.prototype.abs = function() {\n  'use strict';\n  return this.isNegative() ? this.negate() : this;\n};\n\n\n/**\n * Returns the sum of this and the given Integer.\n * @param {goog.math.Integer} other The Integer to add to this.\n * @return {!goog.math.Integer} The Integer result.\n */\ngoog.math.Integer.prototype.add = function(other) {\n  'use strict';\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  var carry = 0;\n\n  for (var i = 0; i <= len; i++) {\n    var a1 = this.getBits(i) >>> 16;\n    var a0 = this.getBits(i) & 0xFFFF;\n\n    var b1 = other.getBits(i) >>> 16;\n    var b0 = other.getBits(i) & 0xFFFF;\n\n    var c0 = carry + a0 + b0;\n    var c1 = (c0 >>> 16) + a1 + b1;\n    carry = c1 >>> 16;\n    c0 &= 0xFFFF;\n    c1 &= 0xFFFF;\n    arr[i] = (c1 << 16) | c0;\n  }\n  return goog.math.Integer.fromBits(arr);\n};\n\n\n/**\n * Returns the difference of this and the given Integer.\n * @param {goog.math.Integer} other The Integer to subtract from this.\n * @return {!goog.math.Integer} The Integer result.\n */\ngoog.math.Integer.prototype.subtract = function(other) {\n  'use strict';\n  return this.add(other.negate());\n};\n\n\n/**\n * Returns the product of this and the given Integer.\n * @param {goog.math.Integer} other The Integer to multiply against this.\n * @return {!goog.math.Integer} The product of this and the other.\n */\ngoog.math.Integer.prototype.multiply = function(other) {\n  'use strict';\n  if (this.isZero()) {\n    return goog.math.Integer.ZERO;\n  } else if (other.isZero()) {\n    return goog.math.Integer.ZERO;\n  }\n\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n\n  // If both numbers are small, use float multiplication\n  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) &&\n      other.lessThan(goog.math.Integer.TWO_PWR_24_)) {\n    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());\n  }\n\n  // Fill in an array of 16-bit products.\n  var len = this.bits_.length + other.bits_.length;\n  var arr = [];\n  for (var i = 0; i < 2 * len; i++) {\n    arr[i] = 0;\n  }\n  for (var i = 0; i < this.bits_.length; i++) {\n    for (var j = 0; j < other.bits_.length; j++) {\n      var a1 = this.getBits(i) >>> 16;\n      var a0 = this.getBits(i) & 0xFFFF;\n\n      var b1 = other.getBits(j) >>> 16;\n      var b0 = other.getBits(j) & 0xFFFF;\n\n      arr[2 * i + 2 * j] += a0 * b0;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);\n      arr[2 * i + 2 * j + 1] += a1 * b0;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);\n      arr[2 * i + 2 * j + 1] += a0 * b1;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);\n      arr[2 * i + 2 * j + 2] += a1 * b1;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);\n    }\n  }\n\n  // Combine the 16-bit values into 32-bit values.\n  for (var i = 0; i < len; i++) {\n    arr[i] = (arr[2 * i + 1] << 16) | arr[2 * i];\n  }\n  for (var i = len; i < 2 * len; i++) {\n    arr[i] = 0;\n  }\n  return new goog.math.Integer(arr, 0);\n};\n\n\n/**\n * Carries any overflow from the given index into later entries.\n * @param {Array<number>} bits Array of 16-bit values in little-endian order.\n * @param {number} index The index in question.\n * @private\n */\ngoog.math.Integer.carry16_ = function(bits, index) {\n  'use strict';\n  while ((bits[index] & 0xFFFF) != bits[index]) {\n    bits[index + 1] += bits[index] >>> 16;\n    bits[index] &= 0xFFFF;\n    index++;\n  }\n};\n\n\n/**\n * Returns \"this\" Integer divided by the given one. Both \"this\" and the given\n * Integer MUST be positive.\n *\n * This method is only needed for very large numbers (>10^308),\n * for which the original division algorithm gets into an infinite\n * loop (see https://github.com/google/closure-library/issues/500).\n *\n * The algorithm has some possible performance enhancements (or\n * could be rewritten entirely), it's just an initial solution for\n * the issue linked above.\n *\n * @param {!goog.math.Integer} other The Integer to divide \"this\" by.\n * @return {!goog.math.Integer.DivisionResult}\n * @private\n */\ngoog.math.Integer.prototype.slowDivide_ = function(other) {\n  'use strict';\n  if (this.isNegative() || other.isNegative()) {\n    throw new Error('slowDivide_ only works with positive integers.');\n  }\n\n  var twoPower = goog.math.Integer.ONE;\n  var multiple = other;\n\n  // First we have to figure out what the highest bit of the result\n  // is, so we increase \"twoPower\" and \"multiple\" until \"multiple\"\n  // exceeds \"this\".\n  while (multiple.lessThanOrEqual(this)) {\n    twoPower = twoPower.shiftLeft(1);\n    multiple = multiple.shiftLeft(1);\n  }\n\n  // Rewind by one power of two, giving us the highest bit of the\n  // result.\n  var res = twoPower.shiftRight(1);\n  var total = multiple.shiftRight(1);\n\n  // Now we starting decreasing \"multiple\" and \"twoPower\" to find the\n  // rest of the bits of the result.\n  var total2;\n  multiple = multiple.shiftRight(2);\n  twoPower = twoPower.shiftRight(2);\n  while (!multiple.isZero()) {\n    // whenever we can add \"multiple\" to the total and not exceed\n    // \"this\", that means we've found a 1 bit. Else we've found a 0\n    // and don't need to add to the result.\n    total2 = total.add(multiple);\n    if (total2.lessThanOrEqual(this)) {\n      res = res.add(twoPower);\n      total = total2;\n    }\n    multiple = multiple.shiftRight(1);\n    twoPower = twoPower.shiftRight(1);\n  }\n\n\n  // TODO(user): Calculate this more efficiently during the division.\n  // This is kind of a waste since it isn't always needed, but it keeps the\n  // API smooth. Since this is already a slow path it probably isn't a big deal.\n  var remainder = this.subtract(res.multiply(other));\n  return new goog.math.Integer.DivisionResult(res, remainder);\n};\n\n\n/**\n * Returns this Integer divided by the given one.\n * @param {!goog.math.Integer} other The Integer to divide this by.\n * @return {!goog.math.Integer} This value divided by the given one.\n */\ngoog.math.Integer.prototype.divide = function(other) {\n  'use strict';\n  return this.divideAndRemainder(other).quotient;\n};\n\n\n/**\n * A struct for holding the quotient and remainder of a division.\n *\n * @constructor\n * @final\n * @struct\n *\n * @param {!goog.math.Integer} quotient\n * @param {!goog.math.Integer} remainder\n */\ngoog.math.Integer.DivisionResult = function(quotient, remainder) {\n  'use strict';\n  /** @const */\n  this.quotient = quotient;\n\n  /** @const */\n  this.remainder = remainder;\n};\n\n\n/**\n * Returns this Integer divided by the given one, as well as the remainder of\n * that division.\n *\n * @param {!goog.math.Integer} other The Integer to divide this by.\n * @return {!goog.math.Integer.DivisionResult}\n */\ngoog.math.Integer.prototype.divideAndRemainder = function(other) {\n  'use strict';\n  if (other.isZero()) {\n    throw new Error('division by zero');\n  } else if (this.isZero()) {\n    return new goog.math.Integer.DivisionResult(\n        goog.math.Integer.ZERO, goog.math.Integer.ZERO);\n  }\n\n  if (this.isNegative()) {\n    // Do the division on the negative of the numerator...\n    var result = this.negate().divideAndRemainder(other);\n    return new goog.math.Integer.DivisionResult(\n        // ...and flip the sign back after.\n        result.quotient.negate(),\n        // The remainder must always have the same sign as the numerator.\n        result.remainder.negate());\n  } else if (other.isNegative()) {\n    // Do the division on the negative of the denominator...\n    var result = this.divideAndRemainder(other.negate());\n    return new goog.math.Integer.DivisionResult(\n        // ...and flip the sign back after.\n        result.quotient.negate(),\n        // The remainder must always have the same sign as the numerator.\n        result.remainder);\n  }\n\n  // Have to degrade to slowDivide for Very Large Numbers, because\n  // they're out of range for the floating-point approximation\n  // technique used below.\n  if (this.bits_.length > 30) {\n    return this.slowDivide_(other);\n  }\n\n  // Repeat the following until the remainder is less than other:  find a\n  // floating-point that approximates remainder / other *from below*, add this\n  // into the result, and subtract it from the remainder.  It is critical that\n  // the approximate value is less than or equal to the real value so that the\n  // remainder never becomes negative.\n  var res = goog.math.Integer.ZERO;\n  var rem = this;\n  while (rem.greaterThanOrEqual(other)) {\n    // Approximate the result of division. This may be a little greater or\n    // smaller than the actual value.\n    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n\n    // We will tweak the approximate result by changing it in the 48-th digit or\n    // the smallest non-fractional digit, whichever is larger.\n    var log2 = Math.ceil(Math.log(approx) / Math.LN2);\n    var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);\n\n    // Decrease the approximation until it is smaller than the remainder.  Note\n    // that if it is too large, the product overflows and is negative.\n    var approxRes = goog.math.Integer.fromNumber(approx);\n    var approxRem = approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -= delta;\n      approxRes = goog.math.Integer.fromNumber(approx);\n      approxRem = approxRes.multiply(other);\n    }\n\n    // We know the answer can't be zero... and actually, zero would cause\n    // infinite recursion since we would make no progress.\n    if (approxRes.isZero()) {\n      approxRes = goog.math.Integer.ONE;\n    }\n\n    res = res.add(approxRes);\n    rem = rem.subtract(approxRem);\n  }\n  return new goog.math.Integer.DivisionResult(res, rem);\n};\n\n\n/**\n * Returns this Integer modulo the given one.\n * @param {!goog.math.Integer} other The Integer by which to mod.\n * @return {!goog.math.Integer} This value modulo the given one.\n */\ngoog.math.Integer.prototype.modulo = function(other) {\n  'use strict';\n  return this.divideAndRemainder(other).remainder;\n};\n\n\n/** @return {!goog.math.Integer} The bitwise-NOT of this value. */\ngoog.math.Integer.prototype.not = function() {\n  'use strict';\n  var len = this.bits_.length;\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = ~this.bits_[i];\n  }\n  return new goog.math.Integer(arr, ~this.sign_);\n};\n\n\n/**\n * Returns the bitwise-AND of this Integer and the given one.\n * @param {goog.math.Integer} other The Integer to AND with this.\n * @return {!goog.math.Integer} The bitwise-AND of this and the other.\n */\ngoog.math.Integer.prototype.and = function(other) {\n  'use strict';\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = this.getBits(i) & other.getBits(i);\n  }\n  return new goog.math.Integer(arr, this.sign_ & other.sign_);\n};\n\n\n/**\n * Returns the bitwise-OR of this Integer and the given one.\n * @param {goog.math.Integer} other The Integer to OR with this.\n * @return {!goog.math.Integer} The bitwise-OR of this and the other.\n */\ngoog.math.Integer.prototype.or = function(other) {\n  'use strict';\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = this.getBits(i) | other.getBits(i);\n  }\n  return new goog.math.Integer(arr, this.sign_ | other.sign_);\n};\n\n\n/**\n * Returns the bitwise-XOR of this Integer and the given one.\n * @param {goog.math.Integer} other The Integer to XOR with this.\n * @return {!goog.math.Integer} The bitwise-XOR of this and the other.\n */\ngoog.math.Integer.prototype.xor = function(other) {\n  'use strict';\n  var len = Math.max(this.bits_.length, other.bits_.length);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    arr[i] = this.getBits(i) ^ other.getBits(i);\n  }\n  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);\n};\n\n\n/**\n * Returns this value with bits shifted to the left by the given amount.\n * @param {number} numBits The number of bits by which to shift.\n * @return {!goog.math.Integer} This shifted to the left by the given amount.\n */\ngoog.math.Integer.prototype.shiftLeft = function(numBits) {\n  'use strict';\n  var arr_delta = numBits >> 5;\n  var bit_delta = numBits % 32;\n  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    if (bit_delta > 0) {\n      arr[i] = (this.getBits(i - arr_delta) << bit_delta) |\n          (this.getBits(i - arr_delta - 1) >>> (32 - bit_delta));\n    } else {\n      arr[i] = this.getBits(i - arr_delta);\n    }\n  }\n  return new goog.math.Integer(arr, this.sign_);\n};\n\n\n/**\n * Returns this value with bits shifted to the right by the given amount.\n * @param {number} numBits The number of bits by which to shift.\n * @return {!goog.math.Integer} This shifted to the right by the given amount.\n */\ngoog.math.Integer.prototype.shiftRight = function(numBits) {\n  'use strict';\n  var arr_delta = numBits >> 5;\n  var bit_delta = numBits % 32;\n  var len = this.bits_.length - arr_delta;\n  var arr = [];\n  for (var i = 0; i < len; i++) {\n    if (bit_delta > 0) {\n      arr[i] = (this.getBits(i + arr_delta) >>> bit_delta) |\n          (this.getBits(i + arr_delta + 1) << (32 - bit_delta));\n    } else {\n      arr[i] = this.getBits(i + arr_delta);\n    }\n  }\n  return new goog.math.Integer(arr, this.sign_);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Bring in closure-library dependencies\n */\n\ngoog.provide('firebase.webchannel.wrapper');\n\n// goog.net.WebChannelTransport\ngoog.require('goog.net.createWebChannelTransport');\ngoog.require('goog.net.FetchXmlHttpFactory');\ngoog.require('goog.labs.net.webChannel.requestStats');\ngoog.require('goog.labs.net.webChannel.WebChannelBaseTransport');\n\n/**\n * NOTE: The `createWebChannel` function takes an options object as a second param\n * whose properties are typically mangled. We override these in externs/overrides.js\n * Without those externs, this does not function properly.\n */\ngoog.labs.net.webChannel.WebChannelBaseTransport.prototype['createWebChannel'] =\n  goog.labs.net.webChannel.WebChannelBaseTransport.prototype.createWebChannel;\ngoog.labs.net.webChannel.WebChannelBaseTransport.Channel.prototype['send'] =\n  goog.labs.net.webChannel.WebChannelBaseTransport.Channel.prototype.send;\ngoog.labs.net.webChannel.WebChannelBaseTransport.Channel.prototype['open'] =\n  goog.labs.net.webChannel.WebChannelBaseTransport.Channel.prototype.open;\ngoog.labs.net.webChannel.WebChannelBaseTransport.Channel.prototype['close'] =\n  goog.labs.net.webChannel.WebChannelBaseTransport.Channel.prototype.close;\n\n// goog.net.ErrorCode\ngoog.require('goog.net.ErrorCode');\ngoog.net.ErrorCode['NO_ERROR'] = goog.net.ErrorCode.NO_ERROR;\ngoog.net.ErrorCode['TIMEOUT'] = goog.net.ErrorCode.TIMEOUT;\ngoog.net.ErrorCode['HTTP_ERROR'] = goog.net.ErrorCode.HTTP_ERROR;\n\n// goog.net.ErrorType\ngoog.require('goog.net.EventType');\ngoog.net.EventType['COMPLETE'] = goog.net.EventType.COMPLETE;\n\n// goog.net.WebChannel\ngoog.require('goog.net.WebChannel');\ngoog.require('goog.events.EventTarget');\ngoog.net.WebChannel['EventType'] = goog.net.WebChannel.EventType;\ngoog.net.WebChannel.EventType['OPEN'] = goog.net.WebChannel.EventType.OPEN;\ngoog.net.WebChannel.EventType['CLOSE'] = goog.net.WebChannel.EventType.CLOSE;\ngoog.net.WebChannel.EventType['ERROR'] = goog.net.WebChannel.EventType.ERROR;\ngoog.net.WebChannel.EventType['MESSAGE'] =\n  goog.net.WebChannel.EventType.MESSAGE;\ngoog.events.EventTarget.prototype['listen'] =\n  goog.events.EventTarget.prototype.listen;\n\ngoog.require('goog.net.XhrIo');\ngoog.net.XhrIo.prototype['listenOnce'] = goog.net.XhrIo.prototype.listenOnce;\ngoog.net.XhrIo.prototype['getLastError'] =\n  goog.net.XhrIo.prototype.getLastError;\ngoog.net.XhrIo.prototype['getLastErrorCode'] =\n  goog.net.XhrIo.prototype.getLastErrorCode;\ngoog.net.XhrIo.prototype['getStatus'] = goog.net.XhrIo.prototype.getStatus;\ngoog.net.XhrIo.prototype['getResponseJson'] =\n  goog.net.XhrIo.prototype.getResponseJson;\ngoog.net.XhrIo.prototype['getResponseText'] =\n  goog.net.XhrIo.prototype.getResponseText;\ngoog.net.XhrIo.prototype['send'] = goog.net.XhrIo.prototype.send;\ngoog.net.XhrIo.prototype['setWithCredentials'] =\n  goog.net.XhrIo.prototype.setWithCredentials;\n\ngoog.require('goog.crypt.Md5');\ngoog.crypt.Md5.prototype['digest'] = goog.crypt.Md5.prototype.digest;\ngoog.crypt.Md5.prototype['reset'] = goog.crypt.Md5.prototype.reset;\ngoog.crypt.Md5.prototype['update'] = goog.crypt.Md5.prototype.update;\n\ngoog.require('goog.math.Integer');\ngoog.math.Integer.prototype['add'] = goog.math.Integer.prototype.add;\ngoog.math.Integer.prototype['multiply'] = goog.math.Integer.prototype.multiply;\ngoog.math.Integer.prototype['modulo'] = goog.math.Integer.prototype.modulo;\ngoog.math.Integer.prototype['compare'] = goog.math.Integer.prototype.compare;\ngoog.math.Integer.prototype['toNumber'] = goog.math.Integer.prototype.toNumber;\ngoog.math.Integer.prototype['toString'] = goog.math.Integer.prototype.toString;\ngoog.math.Integer.prototype['getBits'] = goog.math.Integer.prototype.getBits;\ngoog.math.Integer['fromNumber'] = goog.math.Integer.fromNumber;\ngoog.math.Integer['fromString'] = goog.math.Integer.fromString;\n\nmodule['exports']['createWebChannelTransport'] =\n  goog.net.createWebChannelTransport;\nmodule['exports']['getStatEventTarget'] =\n  goog.labs.net.webChannel.requestStats.getStatEventTarget;\nmodule['exports']['ErrorCode'] = goog.net.ErrorCode;\nmodule['exports']['EventType'] = goog.net.EventType;\nmodule['exports']['Event'] = goog.labs.net.webChannel.requestStats.Event;\nmodule['exports']['Stat'] = goog.labs.net.webChannel.requestStats.Stat;\nmodule['exports']['FetchXmlHttpFactory'] = goog.net.FetchXmlHttpFactory;\nmodule['exports']['WebChannel'] = goog.net.WebChannel;\nmodule['exports']['XhrIo'] = goog.net.XhrIo;\nmodule['exports']['Md5'] = goog.crypt.Md5;\nmodule['exports']['Integer'] = goog.math.Integer;\n","/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Default factory for <code>WebChannelTransport</code> to\n * avoid exposing concrete classes to clients.\n */\n\ngoog.provide('goog.net.createWebChannelTransport');\n\ngoog.require('goog.labs.net.webChannel.WebChannelBaseTransport');\ngoog.requireType('goog.net.WebChannelTransport');\n\n\n/**\n * Create a new WebChannelTransport instance using the default implementation.\n * Throws an error message if no default transport available in the current\n * environment.\n *\n * @return {!goog.net.WebChannelTransport} the newly created transport instance.\n */\ngoog.net.createWebChannelTransport = function() {\n  'use strict';\n  return new goog.labs.net.webChannel.WebChannelBaseTransport();\n};\n"],"mappings":"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"}