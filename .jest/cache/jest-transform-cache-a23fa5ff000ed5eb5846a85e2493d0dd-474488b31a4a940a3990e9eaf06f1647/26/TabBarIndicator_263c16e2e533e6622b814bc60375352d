8677ea855fdb7302d9926c9b4a9e9003
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabBarIndicator = TabBarIndicator;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _useAnimatedValue = require("./useAnimatedValue");
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
var getTranslateX = function getTranslateX(position, routes, getTabWidth, gap) {
  var inputRange = routes.map(function (_, i) {
    return i;
  });
  var outputRange = routes.reduce(function (acc, _, i) {
    if (i === 0) return [0];
    return [].concat((0, _toConsumableArray2.default)(acc), [acc[i - 1] + getTabWidth(i - 1) + (gap != null ? gap : 0)]);
  }, []);
  var translateX = position.interpolate({
    inputRange: inputRange,
    outputRange: outputRange,
    extrapolate: 'clamp'
  });
  return _reactNative.Animated.multiply(translateX, _reactNative.I18nManager.isRTL ? -1 : 1);
};
function TabBarIndicator(_ref) {
  var getTabWidth = _ref.getTabWidth,
    layout = _ref.layout,
    navigationState = _ref.navigationState,
    position = _ref.position,
    width = _ref.width,
    gap = _ref.gap,
    style = _ref.style;
  var isIndicatorShown = React.useRef(false);
  var isWidthDynamic = width === 'auto';
  var opacity = (0, _useAnimatedValue.useAnimatedValue)(isWidthDynamic ? 0 : 1);
  var indicatorVisible = isWidthDynamic ? layout.width && navigationState.routes.slice(0, navigationState.index).every(function (_, r) {
    return getTabWidth(r);
  }) : true;
  React.useEffect(function () {
    var fadeInIndicator = function fadeInIndicator() {
      if (!isIndicatorShown.current && isWidthDynamic && indicatorVisible) {
        isIndicatorShown.current = true;
        _reactNative.Animated.timing(opacity, {
          toValue: 1,
          duration: 150,
          easing: _reactNative.Easing.in(_reactNative.Easing.linear),
          useNativeDriver: true
        }).start();
      }
    };
    fadeInIndicator();
    return function () {
      return opacity.stopAnimation();
    };
  }, [indicatorVisible, isWidthDynamic, opacity]);
  var routes = navigationState.routes;
  var transform = [];
  if (layout.width) {
    var translateX = routes.length > 1 ? getTranslateX(position, routes, getTabWidth, gap) : 0;
    transform.push({
      translateX: translateX
    });
  }
  if (width === 'auto') {
    var inputRange = routes.map(function (_, i) {
      return i;
    });
    var outputRange = inputRange.map(getTabWidth);
    transform.push({
      scaleX: routes.length > 1 ? position.interpolate({
        inputRange: inputRange,
        outputRange: outputRange,
        extrapolate: 'clamp'
      }) : outputRange[0]
    }, {
      translateX: 0.5
    });
  }
  return React.createElement(_reactNative.Animated.View, {
    style: [styles.indicator, {
      width: width === 'auto' ? 1 : width
    }, layout.width && _reactNative.Platform.OS !== 'macos' ? {
      left: 0
    } : {
      left: 100 / routes.length * navigationState.index + "%"
    }, {
      transform: transform
    }, width === 'auto' ? {
      opacity: opacity
    } : null, style]
  });
}
var styles = _reactNative.StyleSheet.create({
  indicator: {
    backgroundColor: '#ffeb3b',
    position: 'absolute',
    left: 0,
    bottom: 0,
    right: 0,
    height: 2
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl91c2VBbmltYXRlZFZhbHVlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsImdldFRyYW5zbGF0ZVgiLCJwb3NpdGlvbiIsInJvdXRlcyIsImdldFRhYldpZHRoIiwiZ2FwIiwiaW5wdXRSYW5nZSIsIm1hcCIsIl8iLCJpIiwib3V0cHV0UmFuZ2UiLCJyZWR1Y2UiLCJhY2MiLCJjb25jYXQiLCJfdG9Db25zdW1hYmxlQXJyYXkyIiwidHJhbnNsYXRlWCIsImludGVycG9sYXRlIiwiZXh0cmFwb2xhdGUiLCJBbmltYXRlZCIsIm11bHRpcGx5IiwiSTE4bk1hbmFnZXIiLCJpc1JUTCIsIlRhYkJhckluZGljYXRvciIsIl9yZWYiLCJsYXlvdXQiLCJuYXZpZ2F0aW9uU3RhdGUiLCJ3aWR0aCIsInN0eWxlIiwiaXNJbmRpY2F0b3JTaG93biIsInVzZVJlZiIsImlzV2lkdGhEeW5hbWljIiwib3BhY2l0eSIsInVzZUFuaW1hdGVkVmFsdWUiLCJpbmRpY2F0b3JWaXNpYmxlIiwic2xpY2UiLCJpbmRleCIsImV2ZXJ5IiwiciIsInVzZUVmZmVjdCIsImZhZGVJbkluZGljYXRvciIsImN1cnJlbnQiLCJ0aW1pbmciLCJ0b1ZhbHVlIiwiZHVyYXRpb24iLCJlYXNpbmciLCJFYXNpbmciLCJpbiIsImxpbmVhciIsInVzZU5hdGl2ZURyaXZlciIsInN0YXJ0Iiwic3RvcEFuaW1hdGlvbiIsInRyYW5zZm9ybSIsImxlbmd0aCIsInB1c2giLCJzY2FsZVgiLCJjcmVhdGVFbGVtZW50IiwiVmlldyIsInN0eWxlcyIsImluZGljYXRvciIsIlBsYXRmb3JtIiwiT1MiLCJsZWZ0IiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImJhY2tncm91bmRDb2xvciIsImJvdHRvbSIsInJpZ2h0IiwiaGVpZ2h0Il0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL1RhYkJhckluZGljYXRvci50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBV0EsSUFBQUUsaUJBQUEsR0FBQUYsT0FBQTtBQUFzRCxTQUFBRyx5QkFBQUMsV0FBQTtFQUFBLFdBQUFDLE9BQUE7RUFBQSxJQUFBQyxpQkFBQSxPQUFBRCxPQUFBO0VBQUEsSUFBQUUsZ0JBQUEsT0FBQUYsT0FBQTtFQUFBLFFBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxXQUFBO0lBQUEsT0FBQUEsV0FBQSxHQUFBRyxnQkFBQSxHQUFBRCxpQkFBQTtFQUFBLEdBQUFGLFdBQUE7QUFBQTtBQUFBLFNBQUFMLHdCQUFBUyxHQUFBLEVBQUFKLFdBQUE7RUFBQSxLQUFBQSxXQUFBLElBQUFJLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBO0lBQUEsT0FBQUQsR0FBQTtFQUFBO0VBQUEsSUFBQUEsR0FBQSxvQkFBQUEsR0FBQSx3QkFBQUEsR0FBQTtJQUFBO01BQUFFLE9BQUEsRUFBQUY7SUFBQTtFQUFBO0VBQUEsSUFBQUcsS0FBQSxHQUFBUix3QkFBQSxDQUFBQyxXQUFBO0VBQUEsSUFBQU8sS0FBQSxJQUFBQSxLQUFBLENBQUFDLEdBQUEsQ0FBQUosR0FBQTtJQUFBLE9BQUFHLEtBQUEsQ0FBQUUsR0FBQSxDQUFBTCxHQUFBO0VBQUE7RUFBQSxJ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