0ef5fa00b0199307dba1fcf771d1c651
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ForceTouchGesture = void 0;
var _gesture = require("./gesture");
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
var _worklet_1817400999830_init_data = {
  code: "function changeEventCalculator(current, previous) {\n  let changePayload;\n  if (previous === undefined) {\n    changePayload = {\n      forceChange: current.force\n    };\n  } else {\n    changePayload = {\n      forceChange: current.force - previous.force\n    };\n  }\n  return {\n    ...current,\n    ...changePayload\n  };\n}",
  location: "node_modules\\react-native-gesture-handler\\lib\\commonjs\\handlers\\gestures\\forceTouchGesture.js",
  sourceMap: "{\"version\":3,\"names\":[\"changeEventCalculator\",\"current\",\"previous\",\"changePayload\",\"undefined\",\"forceChange\",\"force\"],\"sources\":[\"C:/Users/ishas/Web Technology - Copy/ReactNative/Final Project/MoneyWise/node_modules/react-native-gesture-handler/lib/commonjs/handlers/gestures/forceTouchGesture.js\"],\"mappings\":\"AAWA,SAAAA,qBAASA,CAAsBC,OAAA,EAAOC,QAAE,EAAQ;EAG9C,IAAIC,aAAa;EAEjB,IAAID,QAAQ,KAAKE,SAAS,EAAE;IAC1BD,aAAa,GAAG;MACdE,WAAW,EAAEJ,OAAO,CAACK;IACvB,CAAC;EACH,CAAC,MAAM;IACLH,aAAa,GAAG;MACdE,WAAW,EAAEJ,OAAO,CAACK,KAAK,GAAGJ,QAAQ,CAACI;IACxC,CAAC;EACH;EAEA,OAAO;IAAE,GAAGL,OAAO;IACjB,GAAGE;EACL,CAAC;AACH\"}"
};
var changeEventCalculator = function () {
  var _e = [new global.Error(), 1, -27];
  var _f = function _f(current, previous) {
    var changePayload;
    if (previous === undefined) {
      changePayload = {
        forceChange: current.force
      };
    } else {
      changePayload = {
        forceChange: current.force - previous.force
      };
    }
    return Object.assign({}, current, changePayload);
  };
  _f._closure = {};
  _f.__initData = _worklet_1817400999830_init_data;
  _f.__workletHash = 1817400999830;
  _f.__stackDetails = _e;
  _f.__version = "3.1.0";
  return _f;
}();
var ForceTouchGesture = function (_gesture$ContinousBas) {
  (0, _inherits2.default)(ForceTouchGesture, _gesture$ContinousBas);
  var _super = _createSuper(ForceTouchGesture);
  function ForceTouchGesture() {
    var _this;
    (0, _classCallCheck2.default)(this, ForceTouchGesture);
    _this = _super.call(this);
    _defineProperty((0, _assertThisInitialized2.default)(_this), "config", {});
    _this.handlerName = 'ForceTouchGestureHandler';
    return _this;
  }
  (0, _createClass2.default)(ForceTouchGesture, [{
    key: "minForce",
    value: function minForce(force) {
      this.config.minForce = force;
      return this;
    }
  }, {
    key: "maxForce",
    value: function maxForce(force) {
      this.config.maxForce = force;
      return this;
    }
  }, {
    key: "feedbackOnActivation",
    value: function feedbackOnActivation(value) {
      this.config.feedbackOnActivation = value;
      return this;
    }
  }, {
    key: "onChange",
    value: function onChange(callback) {
      this.handlers.changeEventCalculator = changeEventCalculator;
      return (0, _get2.default)((0, _getPrototypeOf2.default)(ForceTouchGesture.prototype), "onChange", this).call(this, callback);
    }
  }]);
  return ForceTouchGesture;
}(_gesture.ContinousBaseGesture);
exports.ForceTouchGesture = ForceTouchGesture;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2VzdHVyZSIsInJlcXVpcmUiLCJjaGFuZ2VFdmVudENhbGN1bGF0b3IiLCJfZSIsImdsb2JhbCIsIkVycm9yIiwiX2YiLCJjdXJyZW50IiwicHJldmlvdXMiLCJjaGFuZ2VQYXlsb2FkIiwidW5kZWZpbmVkIiwiZm9yY2VDaGFuZ2UiLCJmb3JjZSIsIk9iamVjdCIsImFzc2lnbiIsIl9jbG9zdXJlIiwiX19pbml0RGF0YSIsIl93b3JrbGV0XzE4MTc0MDA5OTk4MzBfaW5pdF9kYXRhIiwiX193b3JrbGV0SGFzaCIsIl9fc3RhY2tEZXRhaWxzIiwiX192ZXJzaW9uIiwiRm9yY2VUb3VjaEdlc3R1cmUiLCJfZ2VzdHVyZSRDb250aW5vdXNCYXMiLCJfaW5oZXJpdHMyIiwiZGVmYXVsdCIsIl9zdXBlciIsIl9jcmVhdGVTdXBlciIsIl90aGlzIiwiX2NsYXNzQ2FsbENoZWNrMiIsImNhbGwiLCJfZGVmaW5lUHJvcGVydHkiLCJfYXNzZXJ0VGhpc0luaXRpYWxpemVkMiIsImhhbmRsZXJOYW1lIiwiX2NyZWF0ZUNsYXNzMiIsImtleSIsInZhbHVlIiwibWluRm9yY2UiLCJjb25maWciLCJtYXhGb3JjZSIsImZlZWRiYWNrT25BY3RpdmF0aW9uIiwib25DaGFuZ2UiLCJjYWxsYmFjayIsImhhbmRsZXJzIiwiX2dldDIiLCJfZ2V0UHJvdG90eXBlT2YyIiwicHJvdG90eXBlIiwiQ29udGlub3VzQmFzZUdlc3R1cmUiXSwic291cmNlcyI6WyJmb3JjZVRvdWNoR2VzdHVyZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlR2VzdHVyZUNvbmZpZywgQ29udGlub3VzQmFzZUdlc3R1cmUgfSBmcm9tICcuL2dlc3R1cmUnO1xuaW1wb3J0IHtcbiAgRm9yY2VUb3VjaEdlc3R1cmVDb25maWcsXG4gIEZvcmNlVG91Y2hHZXN0dXJlSGFuZGxlckV2ZW50UGF5bG9hZCxcbn0gZnJvbSAnLi4vRm9yY2VUb3VjaEdlc3R1cmVIYW5kbGVyJztcbmltcG9ydCB7IEdlc3R1cmVVcGRhdGVFdmVudCB9IGZyb20gJy4uL2dlc3R1cmVIYW5kbGVyQ29tbW9uJztcblxuZXhwb3J0IHR5cGUgRm9yY2VUb3VjaEdlc3R1cmVDaGFuZ2VFdmVudFBheWxvYWQgPSB7XG4gIGZvcmNlQ2hhbmdlOiBudW1iZXI7XG59O1xuXG5mdW5jdGlvbiBjaGFuZ2VFdmVudENhbGN1bGF0b3IoXG4gIGN1cnJlbnQ6IEdlc3R1cmVVcGRhdGVFdmVudDxGb3JjZVRvdWNoR2VzdHVyZUhhbmRsZXJFdmVudFBheWxvYWQ+LFxuICBwcmV2aW91cz86IEdlc3R1cmVVcGRhdGVFdmVudDxGb3JjZVRvdWNoR2VzdHVyZUhhbmRsZXJFdmVudFBheWxvYWQ+XG4pIHtcbiAgJ3dvcmtsZXQnO1xuICBsZXQgY2hhbmdlUGF5bG9hZDogRm9yY2VUb3VjaEdlc3R1cmVDaGFuZ2VFdmVudFBheWxvYWQ7XG4gIGlmIChwcmV2aW91cyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY2hhbmdlUGF5bG9hZCA9IHtcbiAgICAgIGZvcmNlQ2hhbmdlOiBjdXJyZW50LmZvcmNlLFxuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgY2hhbmdlUGF5bG9hZCA9IHtcbiAgICAgIGZvcmNlQ2hhbmdlOiBjdXJyZW50LmZvcmNlIC0gcHJldmlvdXMuZm9yY2UsXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7IC4uLmN1cnJlbnQsIC4uLmNoYW5nZVBheWxvYWQgfTtcbn1cblxuZXhwb3J0IGNsYXNzIEZvcmNlVG91Y2hHZXN0dXJlIGV4dGVuZHMgQ29udGlub3VzQmFzZUdlc3R1cmU8XG4gIEZvcmNlVG91Y2hHZXN0dXJlSGFuZGxlckV2ZW50UGF5bG9hZCxcbiAgRm9yY2VUb3VjaEdlc3R1cmVDaGFuZ2VFdmVudFBheWxvYWRcbj4ge1xuICBwdWJsaWMgY29uZmlnOiBCYXNlR2VzdHVyZUNvbmZpZyAmIEZvcmNlVG91Y2hHZXN0dXJlQ29uZmlnID0ge307XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuaGFuZGxlck5hbWUgPSAnRm9yY2VUb3VjaEdlc3R1cmVIYW5kbGVyJztcbiAgfVxuXG4gIG1pbkZvcmNlKGZvcmNlOiBudW1iZXIpIHtcbiAgICB0aGlzLmNvbmZpZy5taW5Gb3JjZSA9IGZvcmNlO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgbWF4Rm9yY2UoZm9yY2U6IG51bWJlcikge1xuICAgIHRoaXMuY29uZmlnLm1heEZvcmNlID0gZm9yY2U7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBmZWVkYmFja09uQWN0aXZhdGlvbih2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuY29uZmlnLmZlZWRiYWNrT25BY3RpdmF0aW9uID0gdmFsdWU7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBvbkNoYW5nZShcbiAgICBjYWxsYmFjazogKFxuICAgICAgZXZlbnQ6IEdlc3R1cmVVcGRhdGVFdmVudDxcbiAgICAgICAgR2VzdHVyZVVwZGF0ZUV2ZW50PFxuICAgICAgICAgIEZvcmNlVG91Y2hHZXN0dXJlSGFuZGxlckV2ZW50UGF5bG9hZCAmXG4gICAgICAgICAgICBGb3JjZVRvdWNoR2VzdHVyZUNoYW5nZUV2ZW50UGF5bG9hZFxuICAgICAgICA+XG4gICAgICA+XG4gICAgKSA9PiB2b2lkXG4gICkge1xuICAgIC8vIEB0cy1pZ25vcmUgVFMgYmVpbmcgb3ZlcnByb3RlY3RpdmUsIEZvcmNlVG91Y2hHZXN0dXJlSGFuZGxlckV2ZW50UGF5bG9hZCBpcyBSZWNvcmRcbiAgICB0aGlzLmhhbmRsZXJzLmNoYW5nZUV2ZW50Q2FsY3VsYXRvciA9IGNoYW5nZUV2ZW50Q2FsY3VsYXRvcjtcbiAgICByZXR1cm4gc3VwZXIub25DaGFuZ2UoY2FsbGJhY2spO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIEZvcmNlVG91Y2hHZXN0dXJlVHlwZSA9IEluc3RhbmNlVHlwZTx0eXBlb2YgRm9yY2VUb3VjaEdlc3R1cmU+O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFB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