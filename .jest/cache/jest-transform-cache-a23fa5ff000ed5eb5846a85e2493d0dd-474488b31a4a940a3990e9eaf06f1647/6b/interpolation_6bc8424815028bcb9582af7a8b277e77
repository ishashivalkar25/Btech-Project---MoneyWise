a33ed0a6051368bdaa334800516ef2e7
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Extrapolation = void 0;
exports.interpolate = interpolate;
var Extrapolation = function (Extrapolation) {
  Extrapolation["IDENTITY"] = "identity";
  Extrapolation["CLAMP"] = "clamp";
  Extrapolation["EXTEND"] = "extend";
  return Extrapolation;
}({});
exports.Extrapolation = Extrapolation;
var _worklet_15627513880224_init_data = {
  code: "function getVal(type, coef, val, leftEdgeOutput, rightEdgeOutput, x) {\n  const {\n    Extrapolation\n  } = this._closure;\n  switch (type) {\n    case Extrapolation.IDENTITY:\n      return x;\n    case Extrapolation.CLAMP:\n      if (coef * val < coef * leftEdgeOutput) {\n        return leftEdgeOutput;\n      }\n      return rightEdgeOutput;\n    case Extrapolation.EXTEND:\n    default:\n      return val;\n  }\n}",
  location: "node_modules\\react-native-reanimated\\lib\\commonjs\\reanimated2\\interpolation.js",
  sourceMap: "{\"version\":3,\"names\":[\"getVal\",\"type\",\"coef\",\"val\",\"leftEdgeOutput\",\"rightEdgeOutput\",\"x\",\"Extrapolation\",\"_closure\",\"IDENTITY\",\"CLAMP\",\"EXTEND\"],\"sources\":[\"C:/Users/ishas/Web Technology - Copy/ReactNative/Final Project/MoneyWise/node_modules/react-native-reanimated/lib/commonjs/reanimated2/interpolation.js\"],\"mappings\":\"AAcA,SAAAA,MAASA,CAAOC,IAAA,EAAIC,IAAE,EAAIC,GAAE,EAAGC,cAAE,EAAcC,eAAE,EAAeC,CAAG;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGjE,QAAQP,IAAI;IACV,KAAKM,aAAa,CAACE,QAAQ;MACzB,OAAOH,CAAC;IACV,KAAKC,aAAa,CAACG,KAAK;MACtB,IAAIR,IAAI,GAAGC,GAAG,GAAGD,IAAI,GAAGE,cAAc,EAAE;QACtC,OAAOA,cAAc;MACvB;MACA,OAAOC,eAAe;IACxB,KAAKE,aAAa,CAACI,MAAM;IACzB;MACE,OAAOR,GAAG;EACd;AACF\"}"
};
var getVal = function () {
  var _e = [new global.Error(), -2, -27];
  var _f = function _f(type, coef, val, leftEdgeOutput, rightEdgeOutput, x) {
    switch (type) {
      case Extrapolation.IDENTITY:
        return x;
      case Extrapolation.CLAMP:
        if (coef * val < coef * leftEdgeOutput) {
          return leftEdgeOutput;
        }
        return rightEdgeOutput;
      case Extrapolation.EXTEND:
      default:
        return val;
    }
  };
  _f._closure = {
    Extrapolation: Extrapolation
  };
  _f.__initData = _worklet_15627513880224_init_data;
  _f.__workletHash = 15627513880224;
  _f.__stackDetails = _e;
  _f.__version = "3.1.0";
  return _f;
}();
var _worklet_4592001914569_init_data = {
  code: "function isExtrapolate(value) {\n  const {\n    Extrapolation\n  } = this._closure;\n  return value === Extrapolation.EXTEND || value === Extrapolation.CLAMP || value === Extrapolation.IDENTITY;\n}",
  location: "node_modules\\react-native-reanimated\\lib\\commonjs\\reanimated2\\interpolation.js",
  sourceMap: "{\"version\":3,\"names\":[\"isExtrapolate\",\"value\",\"Extrapolation\",\"_closure\",\"EXTEND\",\"CLAMP\",\"IDENTITY\"],\"sources\":[\"C:/Users/ishas/Web Technology - Copy/ReactNative/Final Project/MoneyWise/node_modules/react-native-reanimated/lib/commonjs/reanimated2/interpolation.js\"],\"mappings\":\"AA8BA,SAAAA,aAASA,CAAcC,KAAA,EAAK;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAG1B,OAAOF,KAAK,KAAKC,aAAa,CAACE,MAAM,IAAIH,KAAK,KAAKC,aAAa,CAACG,KAAK,IAAIJ,KAAK,KAAKC,aAAa,CAACI,QAAQ;AAC5G\"}"
};
var isExtrapolate = function () {
  var _e = [new global.Error(), -2, -27];
  var _f = function _f(value) {
    return value === Extrapolation.EXTEND || value === Extrapolation.CLAMP || value === Extrapolation.IDENTITY;
  };
  _f._closure = {
    Extrapolation: Extrapolation
  };
  _f.__initData = _worklet_4592001914569_init_data;
  _f.__workletHash = 4592001914569;
  _f.__stackDetails = _e;
  _f.__version = "3.1.0";
  return _f;
}();
var _worklet_10443529399311_init_data = {
  code: "function validateType(type) {\n  const {\n    Extrapolation,\n    isExtrapolate\n  } = this._closure;\n  const extrapolationConfig = {\n    extrapolateLeft: Extrapolation.EXTEND,\n    extrapolateRight: Extrapolation.EXTEND\n  };\n  if (!type) {\n    return extrapolationConfig;\n  }\n  if (typeof type === 'string') {\n    if (!isExtrapolate(type)) {\n      throw new Error(\"Reanimated: not supported value for \\\"interpolate\\\" \\nSupported values: [\\\"extend\\\", \\\"clamp\\\", \\\"identity\\\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\n Valid example:\\n        interpolate(value, [inputRange], [outputRange], \\\"clamp\\\")\");\n    }\n    extrapolationConfig.extrapolateLeft = type;\n    extrapolationConfig.extrapolateRight = type;\n    return extrapolationConfig;\n  }\n  if (type.extrapolateLeft && !isExtrapolate(type.extrapolateLeft) || type.extrapolateRight && !isExtrapolate(type.extrapolateRight)) {\n    throw new Error(\"Reanimated: not supported value for \\\"interpolate\\\" \\nSupported values: [\\\"extend\\\", \\\"clamp\\\", \\\"identity\\\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\\n Valid example:\\n      interpolate(value, [inputRange], [outputRange], {\\n        extrapolateLeft: Extrapolation.CLAMP,\\n        extrapolateRight: Extrapolation.IDENTITY\\n      }})\");\n  }\n  Object.assign(extrapolationConfig, type);\n  return extrapolationConfig;\n}",
  location: "node_modules\\react-native-reanimated\\lib\\commonjs\\reanimated2\\interpolation.js",
  sourceMap: "{\"version\":3,\"names\":[\"validateType\",\"type\",\"Extrapolation\",\"isExtrapolate\",\"_closure\",\"extrapolationConfig\",\"extrapolateLeft\",\"EXTEND\",\"extrapolateRight\",\"Error\",\"Object\",\"assign\"],\"sources\":[\"C:/Users/ishas/Web Technology - Copy/ReactNative/Final Project/MoneyWise/node_modules/react-native-reanimated/lib/commonjs/reanimated2/interpolation.js\"],\"mappings\":\"AAoCA,SAAAA,aAAAC,IAAA;EAAA;IAAAC,aAAA;IAAAC;EAAA,SAAAC,QAAA;EACA,MAAAC,mBAAA;IACAC,eAAS,EAAYJ,aAAO,CAAAK,MAAA;IAG1BC,gBAAA,EAAAN,aAAA,CAAAK;EACA;MACE,CAAAN,IAAA;IACA,OAAAI,mBAAkB;EACpB;EACA,IAAI,OAAOJ,IAAA;IACT,KAAAE,aAAO,CAAAF,IAAA,GAAmB;MAC5B,UAAAQ,KAAA;IACA;IACEJ,mBAAmB,CAAAC,eAAO,GAAAL,IAAA;uBACT,CAAAO,gBAAA,GAAAP,IAAA;IAEjB,OAAAI,mBAAA;;EAIF,IAAAJ,IAAA,CAAAK,eAAA,KAAAH,aAAA,CAAAF,IAAA,CAAAK,eAAA,KAAAL,IAAA,CAAAO,gBAAA,KAAAL,aAAA,CAAAF,IAAA,CAAAO,gBAAA;;EAEA;EACAE,MAAI,CAAAC,MAAK,CAAAN,mBAAoB,EAAAJ,IAAA;SAC3BI,mBAAe\"}"
};
var validateType = function () {
  var _e = [new global.Error(), -3, -27];
  var _f = function _f(type) {
    var extrapolationConfig = {
      extrapolateLeft: Extrapolation.EXTEND,
      extrapolateRight: Extrapolation.EXTEND
    };
    if (!type) {
      return extrapolationConfig;
    }
    if (typeof type === 'string') {
      if (!isExtrapolate(type)) {
        throw new Error("Reanimated: not supported value for \"interpolate\" \nSupported values: [\"extend\", \"clamp\", \"identity\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\n Valid example:\n        interpolate(value, [inputRange], [outputRange], \"clamp\")");
      }
      extrapolationConfig.extrapolateLeft = type;
      extrapolationConfig.extrapolateRight = type;
      return extrapolationConfig;
    }
    if (type.extrapolateLeft && !isExtrapolate(type.extrapolateLeft) || type.extrapolateRight && !isExtrapolate(type.extrapolateRight)) {
      throw new Error("Reanimated: not supported value for \"interpolate\" \nSupported values: [\"extend\", \"clamp\", \"identity\", Extrapolatation.CLAMP, Extrapolatation.EXTEND, Extrapolatation.IDENTITY]\n Valid example:\n      interpolate(value, [inputRange], [outputRange], {\n        extrapolateLeft: Extrapolation.CLAMP,\n        extrapolateRight: Extrapolation.IDENTITY\n      }})");
    }
    Object.assign(extrapolationConfig, type);
    return extrapolationConfig;
  };
  _f._closure = {
    Extrapolation: Extrapolation,
    isExtrapolate: isExtrapolate
  };
  _f.__initData = _worklet_10443529399311_init_data;
  _f.__workletHash = 10443529399311;
  _f.__stackDetails = _e;
  _f.__version = "3.1.0";
  return _f;
}();
var _worklet_8807172494339_init_data = {
  code: "function internalInterpolate(x, narrowedInput, extrapolationConfig) {\n  const {\n    getVal\n  } = this._closure;\n  const {\n    leftEdgeInput: leftEdgeInput,\n    rightEdgeInput: rightEdgeInput,\n    leftEdgeOutput: leftEdgeOutput,\n    rightEdgeOutput: rightEdgeOutput\n  } = narrowedInput;\n  if (rightEdgeInput - leftEdgeInput === 0) return leftEdgeOutput;\n  const progress = (x - leftEdgeInput) / (rightEdgeInput - leftEdgeInput);\n  const val = leftEdgeOutput + progress * (rightEdgeOutput - leftEdgeOutput);\n  const coef = rightEdgeOutput >= leftEdgeOutput ? 1 : -1;\n  if (coef * val < coef * leftEdgeOutput) {\n    return getVal(extrapolationConfig.extrapolateLeft, coef, val, leftEdgeOutput, rightEdgeOutput, x);\n  } else if (coef * val > coef * rightEdgeOutput) {\n    return getVal(extrapolationConfig.extrapolateRight, coef, val, leftEdgeOutput, rightEdgeOutput, x);\n  }\n  return val;\n}",
  location: "node_modules\\react-native-reanimated\\lib\\commonjs\\reanimated2\\interpolation.js",
  sourceMap: "{\"version\":3,\"names\":[\"internalInterpolate\",\"x\",\"narrowedInput\",\"extrapolationConfig\",\"getVal\",\"_closure\",\"leftEdgeInput\",\"rightEdgeInput\",\"leftEdgeOutput\",\"rightEdgeOutput\",\"progress\",\"val\",\"coef\",\"extrapolateLeft\",\"extrapolateRight\"],\"sources\":[\"C:/Users/ishas/Web Technology - Copy/ReactNative/Final Project/MoneyWise/node_modules/react-native-reanimated/lib/commonjs/reanimated2/interpolation.js\"],\"mappings\":\"AAsEA,SAAAA,mBAASA,CAAoBC,CAAC,EAAAC,aAAE,EAAaC,mBAAE,EAAmB;EAAA;IAAAC;EAAA,SAAAC,QAAA;EAGhE,MAAM;IACJC,aAAa,EAAbA,aAAa;IACbC,cAAc,EAAdA,cAAc;IACdC,cAAc,EAAdA,cAAc;IACdC,eAAA,EAAAA;EACF,CAAC,GAAGP,aAAa;EACjB,IAAIK,cAAc,GAAGD,aAAa,KAAK,CAAC,EAAE,OAAOE,cAAc;EAC/D,MAAME,QAAQ,GAAG,CAACT,CAAC,GAAGK,aAAa,KAAKC,cAAc,GAAGD,aAAa,CAAC;EACvE,MAAMK,GAAG,GAAGH,cAAc,GAAGE,QAAQ,IAAID,eAAe,GAAGD,cAAc,CAAC;EAC1E,MAAMI,IAAI,GAAGH,eAAe,IAAID,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;EACvD,IAAII,IAAI,GAAGD,GAAG,GAAGC,IAAI,GAAGJ,cAAc,EAAE;IACtC,OAAOJ,MAAM,CAACD,mBAAmB,CAACU,eAAe,EAAED,IAAI,EAAED,GAAG,EAAEH,cAAc,EAAEC,eAAe,EAAER,CAAC,CAAC;EACnG,CAAC,MAAM,IAAIW,IAAI,GAAGD,GAAG,GAAGC,IAAI,GAAGH,eAAe,EAAE;IAC9C,OAAOL,MAAM,CAACD,mBAAmB,CAACW,gBAAgB,EAAEF,IAAI,EAAED,GAAG,EAAEH,cAAc,EAAEC,eAAe,EAAER,CAAC,CAAC;EACpG;EACA,OAAOU,GAAG;AACZ\"}"
};
var internalInterpolate = function () {
  var _e = [new global.Error(), -2, -27];
  var _f = function _f(x, narrowedInput, extrapolationConfig) {
    var leftEdgeInput = narrowedInput.leftEdgeInput,
      rightEdgeInput = narrowedInput.rightEdgeInput,
      leftEdgeOutput = narrowedInput.leftEdgeOutput,
      rightEdgeOutput = narrowedInput.rightEdgeOutput;
    if (rightEdgeInput - leftEdgeInput === 0) return leftEdgeOutput;
    var progress = (x - leftEdgeInput) / (rightEdgeInput - leftEdgeInput);
    var val = leftEdgeOutput + progress * (rightEdgeOutput - leftEdgeOutput);
    var coef = rightEdgeOutput >= leftEdgeOutput ? 1 : -1;
    if (coef * val < coef * leftEdgeOutput) {
      return getVal(extrapolationConfig.extrapolateLeft, coef, val, leftEdgeOutput, rightEdgeOutput, x);
    } else if (coef * val > coef * rightEdgeOutput) {
      return getVal(extrapolationConfig.extrapolateRight, coef, val, leftEdgeOutput, rightEdgeOutput, x);
    }
    return val;
  };
  _f._closure = {
    getVal: getVal
  };
  _f.__initData = _worklet_8807172494339_init_data;
  _f.__workletHash = 8807172494339;
  _f.__stackDetails = _e;
  _f.__version = "3.1.0";
  return _f;
}();
var _worklet_4383905646518_init_data = {
  code: "function interpolate(x, input, output, type) {\n  const {\n    validateType,\n    internalInterpolate\n  } = this._closure;\n  if (input.length < 2 || output.length < 2) {\n    throw Error('Interpolation input and output should contain at least two values.');\n  }\n  const extrapolationConfig = validateType(type);\n  const length = input.length;\n  const narrowedInput = {\n    leftEdgeInput: input[0],\n    rightEdgeInput: input[1],\n    leftEdgeOutput: output[0],\n    rightEdgeOutput: output[1]\n  };\n  if (length > 2) {\n    if (x > input[length - 1]) {\n      narrowedInput.leftEdgeInput = input[length - 2];\n      narrowedInput.rightEdgeInput = input[length - 1];\n      narrowedInput.leftEdgeOutput = output[length - 2];\n      narrowedInput.rightEdgeOutput = output[length - 1];\n    } else {\n      for (let i = 1; i < length; ++i) {\n        if (x <= input[i]) {\n          narrowedInput.leftEdgeInput = input[i - 1];\n          narrowedInput.rightEdgeInput = input[i];\n          narrowedInput.leftEdgeOutput = output[i - 1];\n          narrowedInput.rightEdgeOutput = output[i];\n          break;\n        }\n      }\n    }\n  }\n  return internalInterpolate(x, narrowedInput, extrapolationConfig);\n}",
  location: "node_modules\\react-native-reanimated\\lib\\commonjs\\reanimated2\\interpolation.js",
  sourceMap: "{\"version\":3,\"names\":[\"interpolate\",\"x\",\"input\",\"output\",\"type\",\"validateType\",\"internalInterpolate\",\"_closure\",\"length\",\"Error\",\"extrapolationConfig\",\"narrowedInput\",\"leftEdgeInput\",\"rightEdgeInput\",\"leftEdgeOutput\",\"rightEdgeOutput\",\"i\"],\"sources\":[\"C:/Users/ishas/Web Technology - Copy/ReactNative/Final Project/MoneyWise/node_modules/react-native-reanimated/lib/commonjs/reanimated2/interpolation.js\"],\"mappings\":\"AA2FA,SAAAA,YAAAC,CAAA,EAAAC,KAAA,EAAAC,MAAA,EAAAC,IAAA;EAAA;IAAAC,YAAA;IAAAC;EAAA,SAAAC,QAAA;EAAA,IAAAL,KAAA,CAAAM,MAAA,QAAAL,MAAA,CAAAK,MAAA;IACA,MAAAC,KAAA;EACA;EAGE,MAAIC,mBAAoB,GAAAL,YAAgB,CAACD,IAAE;QACzCI,MAAM,GAAMN,KAAA,CAAAM,MAAA;EACd,MAAAG,aAAA;IACAC,aAAM,EAAAV,KAAA,GAAmB;IACzBW,cAAe,EAAAX,KAAM;IACrBY,cAAM,EAAAX,MAAgB;IACpBY,eAAe,EAAAZ,MAAQ;;MAEvBK,MAAA,MAAc;IACd,IAAAP,CAAA,GAAAC,KAAA,CAAAM,MAAiB,GAAM,CAAC,CAAC;MAC1BG,aAAA,CAAAC,aAAA,GAAAV,KAAA,CAAAM,MAAA;MACGG,aAAY,CAAAE,cAAA,GAAAX,KAAA,CAAAM,MAAA;MACdG,aAAc,CAAAG,cAAa,GAAAX,MAAA,CAAAK,MAAA;MACzBG,aAAa,CAACI,eAAa,GAAGZ,MAAM,CAAAK,MAAS,GAAE;WAC/C;MACA,SAAAQ,CAAA,GAAa,CAAC,EAAAA,CAAA,GAAAR,MAAA,EAAc,EAAAQ,CAAG;QAC/B,IAAAf,CAAA,IAAAC,KAAc,CAAAc,CAAA;UACfL,aAAM,CAAAC,aAAA,GAAAV,KAAA,CAAAc,CAAA;UACLL,aAAiB,CAAAE,cAAc,GAAEX,KAAA,CAAAc,CAAA;UAC/BL,aAAe,CAACG,cAAG,GAAAX,MAAA,CAAAa,CAAA;UACjBL,aAAa,CAACI,eAAa,GAAGZ,MAAO,CAAAa,CAAG,CAAC;UACzC;;;;;SAKJV,mBAAA,CAAAL,CAAA,EAAAU,aAAA,EAAAD,mBAAA\"}"
};
var interpolate = function () {
  var _e = [new global.Error(), -3, -27];
  var _f = function _f(x, input, output, type) {
    if (input.length < 2 || output.length < 2) {
      throw Error('Interpolation input and output should contain at least two values.');
    }
    var extrapolationConfig = validateType(type);
    var length = input.length;
    var narrowedInput = {
      leftEdgeInput: input[0],
      rightEdgeInput: input[1],
      leftEdgeOutput: output[0],
      rightEdgeOutput: output[1]
    };
    if (length > 2) {
      if (x > input[length - 1]) {
        narrowedInput.leftEdgeInput = input[length - 2];
        narrowedInput.rightEdgeInput = input[length - 1];
        narrowedInput.leftEdgeOutput = output[length - 2];
        narrowedInput.rightEdgeOutput = output[length - 1];
      } else {
        for (var i = 1; i < length; ++i) {
          if (x <= input[i]) {
            narrowedInput.leftEdgeInput = input[i - 1];
            narrowedInput.rightEdgeInput = input[i];
            narrowedInput.leftEdgeOutput = output[i - 1];
            narrowedInput.rightEdgeOutput = output[i];
            break;
          }
        }
      }
    }
    return internalInterpolate(x, narrowedInput, extrapolationConfig);
  };
  _f._closure = {
    validateType: validateType,
    internalInterpolate: internalInterpolate
  };
  _f.__initData = _worklet_4383905646518_init_data;
  _f.__workletHash = 4383905646518;
  _f.__stackDetails = _e;
  _f.__version = "3.1.0";
  return _f;
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,