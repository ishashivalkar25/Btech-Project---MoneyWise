{"version":3,"names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_reactNative","_ensureNativeModuleAvailable","_createIconSourceCache","_iconButton","_jsxRuntime","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","NativeIconAPI","NativeModules","RNVectorIconsManager","RNVectorIconsModule","exports","DEFAULT_ICON_SIZE","DEFAULT_ICON_COLOR","createIconSet","glyphMap","fontFamily","fontFile","fontStyle","fontBasename","replace","fontReference","Platform","select","windows","android","web","IconNamePropType","PropTypes","oneOf","keys","Icon","_PureComponent","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","root","handleRef","ref","_createClass2","value","setNativeProps","nativeProps","render","_this$props","props","name","size","color","style","children","_objectWithoutProperties2","glyph","String","fromCodePoint","styleDefaults","fontSize","styleOverrides","fontWeight","jsxs","Text","assign","selectable","PureComponent","propTypes","allowFontScaling","bool","number","any","node","defaultProps","imageSourceCache","createIconSourceCache","resolveGlyph","getImageSourceSync","undefined","ensureNativeModuleAvailable","processedColor","processColor","cacheKey","imagePath","getImageForFontSync","uri","scale","PixelRatio","setValue","error","setError","getImageSource","_x","_getImageSource","_asyncToGenerator2","getImageForFont","loadFont","_loadFont","file","OS","Error","loadFontWithFileName","_toConsumableArray2","split","hasIcon","getRawGlyphMap","getFontFamily","Button","createIconButtonComponent"],"sources":["create-icon-set.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  NativeModules,\n  Platform,\n  PixelRatio,\n  processColor,\n  Text,\n} from 'react-native';\n\nimport ensureNativeModuleAvailable from './ensure-native-module-available';\nimport createIconSourceCache from './create-icon-source-cache';\nimport createIconButtonComponent from './icon-button';\n\nexport const NativeIconAPI =\n  NativeModules.RNVectorIconsManager || NativeModules.RNVectorIconsModule;\n\nexport const DEFAULT_ICON_SIZE = 12;\nexport const DEFAULT_ICON_COLOR = 'black';\n\nexport default function createIconSet(\n  glyphMap,\n  fontFamily,\n  fontFile,\n  fontStyle\n) {\n  // Android doesn't care about actual fontFamily name, it will only look in fonts folder.\n  const fontBasename = fontFile\n    ? fontFile.replace(/\\.(otf|ttf)$/, '')\n    : fontFamily;\n\n  const fontReference = Platform.select({\n    windows: `/Assets/${fontFile}#${fontFamily}`,\n    android: fontBasename,\n    web: fontBasename,\n    default: fontFamily,\n  });\n\n  const IconNamePropType = PropTypes.oneOf(Object.keys(glyphMap));\n\n  class Icon extends PureComponent {\n    root = null;\n\n    static propTypes = {\n      allowFontScaling: PropTypes.bool,\n      name: IconNamePropType,\n      size: PropTypes.number,\n      color: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    };\n\n    static defaultProps = {\n      size: DEFAULT_ICON_SIZE,\n      allowFontScaling: false,\n    };\n\n    setNativeProps(nativeProps) {\n      if (this.root) {\n        this.root.setNativeProps(nativeProps);\n      }\n    }\n\n    handleRef = ref => {\n      this.root = ref;\n    };\n\n    render() {\n      const { name, size, color, style, children, ...props } = this.props;\n\n      let glyph = name ? glyphMap[name] || '?' : '';\n      if (typeof glyph === 'number') {\n        glyph = String.fromCodePoint(glyph);\n      }\n\n      const styleDefaults = {\n        fontSize: size,\n        color,\n      };\n\n      const styleOverrides = {\n        fontFamily: fontReference,\n        fontWeight: 'normal',\n        fontStyle: 'normal',\n      };\n\n      props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];\n      props.ref = this.handleRef;\n\n      return (\n        <Text selectable={false} {...props}>\n          {glyph}\n          {children}\n        </Text>\n      );\n    }\n  }\n\n  const imageSourceCache = createIconSourceCache();\n\n  function resolveGlyph(name) {\n    const glyph = glyphMap[name] || '?';\n    if (typeof glyph === 'number') {\n      return String.fromCodePoint(glyph);\n    }\n    return glyph;\n  }\n\n  function getImageSourceSync(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR\n  ) {\n    ensureNativeModuleAvailable();\n\n    const glyph = resolveGlyph(name);\n    const processedColor = processColor(color);\n    const cacheKey = `${glyph}:${size}:${processedColor}`;\n\n    if (imageSourceCache.has(cacheKey)) {\n      return imageSourceCache.get(cacheKey);\n    }\n    try {\n      const imagePath = NativeIconAPI.getImageForFontSync(\n        fontReference,\n        glyph,\n        size,\n        processedColor\n      );\n      const value = { uri: imagePath, scale: PixelRatio.get() };\n      imageSourceCache.setValue(cacheKey, value);\n      return value;\n    } catch (error) {\n      imageSourceCache.setError(cacheKey, error);\n      throw error;\n    }\n  }\n\n  async function getImageSource(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR\n  ) {\n    ensureNativeModuleAvailable();\n\n    const glyph = resolveGlyph(name);\n    const processedColor = processColor(color);\n    const cacheKey = `${glyph}:${size}:${processedColor}`;\n\n    if (imageSourceCache.has(cacheKey)) {\n      return imageSourceCache.get(cacheKey);\n    }\n    try {\n      const imagePath = await NativeIconAPI.getImageForFont(\n        fontReference,\n        glyph,\n        size,\n        processedColor\n      );\n      const value = { uri: imagePath, scale: PixelRatio.get() };\n      imageSourceCache.setValue(cacheKey, value);\n      return value;\n    } catch (error) {\n      imageSourceCache.setError(cacheKey, error);\n      throw error;\n    }\n  }\n\n  async function loadFont(file = fontFile) {\n    if (Platform.OS === 'ios') {\n      ensureNativeModuleAvailable();\n      if (!file) {\n        throw new Error('Unable to load font, because no file was specified. ');\n      }\n      await NativeIconAPI.loadFontWithFileName(...file.split('.'));\n    }\n  }\n\n  function hasIcon(name) {\n    return Object.prototype.hasOwnProperty.call(glyphMap, name);\n  }\n\n  function getRawGlyphMap() {\n    return glyphMap;\n  }\n\n  function getFontFamily() {\n    return fontReference;\n  }\n\n  Icon.Button = createIconButtonComponent(Icon);\n  Icon.getImageSource = getImageSource;\n  Icon.getImageSourceSync = getImageSourceSync;\n  Icon.loadFont = loadFont;\n  Icon.hasIcon = hasIcon;\n  Icon.getRawGlyphMap = getRawGlyphMap;\n  Icon.getFontFamily = getFontFamily;\n\n  return Icon;\n}\n"],"mappings":";;;;;;;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AAQA,IAAAI,4BAAA,GAAAF,sBAAA,CAAAF,OAAA;AACA,IAAAK,sBAAA,GAAAH,sBAAA,CAAAF,OAAA;AACA,IAAAM,WAAA,GAAAJ,sBAAA,CAAAF,OAAA;AAAsD,IAAAO,WAAA,GAAAP,OAAA;AAAA,IAAAQ,SAAA;AAAA,SAAAC,yBAAAC,WAAA,eAAAC,OAAA,kCAAAC,iBAAA,OAAAD,OAAA,QAAAE,gBAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,WAAA,WAAAA,WAAA,GAAAG,gBAAA,GAAAD,iBAAA,KAAAF,WAAA;AAAA,SAAAX,wBAAAe,GAAA,EAAAJ,WAAA,SAAAA,WAAA,IAAAI,GAAA,IAAAA,GAAA,CAAAC,UAAA,WAAAD,GAAA,QAAAA,GAAA,oBAAAA,GAAA,wBAAAA,GAAA,4BAAAE,OAAA,EAAAF,GAAA,UAAAG,KAAA,GAAAR,wBAAA,CAAAC,WAAA,OAAAO,KAAA,IAAAA,KAAA,CAAAC,GAAA,CAAAJ,GAAA,YAAAG,KAAA,CAAAE,GAAA,CAAAL,GAAA,SAAAM,MAAA,WAAAC,qBAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,GAAA,IAAAX,GAAA,QAAAW,GAAA,kBAAAH,MAAA,CAAAI,SAAA,CAAAC,cAAA,CAAAC,IAAA,CAAAd,GAAA,EAAAW,GAAA,SAAAI,IAAA,GAAAR,qBAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAV,GAAA,EAAAW,GAAA,cAAAI,IAAA,KAAAA,IAAA,CAAAV,GAAA,IAAAU,IAAA,CAAAC,GAAA,KAAAR,MAAA,CAAAC,cAAA,CAAAH,MAAA,EAAAK,GAAA,EAAAI,IAAA,YAAAT,MAAA,CAAAK,GAAA,IAAAX,GAAA,CAAAW,GAAA,SAAAL,MAAA,CAAAJ,OAAA,GAAAF,GAAA,MAAAG,KAAA,IAAAA,KAAA,CAAAa,GAAA,CAAAhB,GAAA,EAAAM,MAAA,YAAAA,MAAA;AAAA,SAAAW,aAAAC,OAAA,QAAAC,yBAAA,GAAAC,yBAAA,oBAAAC,qBAAA,QAAAC,KAAA,OAAAC,gBAAA,CAAArB,OAAA,EAAAgB,OAAA,GAAAM,MAAA,MAAAL,yBAAA,QAAAM,SAAA,OAAAF,gBAAA,CAAArB,OAAA,QAAAwB,WAAA,EAAAF,MAAA,GAAAG,OAAA,CAAAC,SAAA,CAAAN,KAAA,EAAAO,SAAA,EAAAJ,SAAA,YAAAD,MAAA,GAAAF,KAAA,CAAAQ,KAAA,OAAAD,SAAA,gBAAAE,2BAAA,CAAA7B,OAAA,QAAAsB,MAAA;AAAA,SAAAJ,0BAAA,eAAAO,OAAA,qBAAAA,OAAA,CAAAC,SAAA,oBAAAD,OAAA,CAAAC,SAAA,CAAAI,IAAA,2BAAAC,KAAA,oCAAAC,OAAA,CAAAtB,SAAA,CAAAuB,OAAA,CAAArB,IAAA,CAAAa,OAAA,CAAAC,SAAA,CAAAM,OAAA,8CAAAE,CAAA;AAE/C,IAAMC,aAAa,GACxBC,0BAAa,CAACC,oBAAoB,IAAID,0BAAa,CAACE,mBAAmB;AAACC,OAAA,CAAAJ,aAAA,GAAAA,aAAA;AAEnE,IAAMK,iBAAiB,GAAG,EAAE;AAACD,OAAA,CAAAC,iBAAA,GAAAA,iBAAA;AAC7B,IAAMC,kBAAkB,GAAG,OAAO;AAACF,OAAA,CAAAE,kBAAA,GAAAA,kBAAA;AAE3B,SAASC,aAAaA,CACnCC,QAAQ,EACRC,UAAU,EACVC,QAAQ,EACRC,SAAS,EACT;EAEA,IAAMC,YAAY,GAAGF,QAAQ,GACzBA,QAAQ,CAACG,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,GACpCJ,UAAU;EAEd,IAAMK,aAAa,GAAGC,qBAAQ,CAACC,MAAM,CAAC;IACpCC,OAAO,eAAaP,QAAQ,SAAID,UAAY;IAC5CS,OAAO,EAAEN,YAAY;IACrBO,GAAG,EAAEP,YAAY;IACjB/C,OAAO,EAAE4C;EACX,CAAC,CAAC;EAEF,IAAMW,gBAAgB,GAAGC,kBAAS,CAACC,KAAK,CAACnD,MAAM,CAACoD,IAAI,CAACf,QAAQ,CAAC,CAAC;EAAC,IAE1DgB,IAAI,aAAAC,cAAA;IAAA,IAAAC,UAAA,CAAA7D,OAAA,EAAA2D,IAAA,EAAAC,cAAA;IAAA,IAAAE,MAAA,GAAA/C,YAAA,CAAA4C,IAAA;IAAA,SAAAA,KAAA;MAAA,IAAAI,KAAA;MAAA,IAAAC,gBAAA,CAAAhE,OAAA,QAAA2D,IAAA;MAAA,SAAAM,IAAA,GAAAtC,SAAA,CAAAuC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;QAAAF,IAAA,CAAAE,IAAA,IAAA1C,SAAA,CAAA0C,IAAA;MAAA;MAAAN,KAAA,GAAAD,MAAA,CAAAlD,IAAA,CAAAgB,KAAA,CAAAkC,MAAA,SAAAQ,MAAA,CAAAH,IAAA;MAAAJ,KAAA,CACRQ,IAAI,GAAG,IAAI;MAAAR,KAAA,CAsBXS,SAAS,GAAG,UAAAC,GAAG,EAAI;QACjBV,KAAA,CAAKQ,IAAI,GAAGE,GAAG;MACjB,CAAC;MAAA,OAAAV,KAAA;IAAA;IAAA,IAAAW,aAAA,CAAA1E,OAAA,EAAA2D,IAAA;MAAAlD,GAAA;MAAAkE,KAAA,EARD,SAAAC,eAAeC,WAAW,EAAE;QAC1B,IAAI,IAAI,CAACN,IAAI,EAAE;UACb,IAAI,CAACA,IAAI,CAACK,cAAc,CAACC,WAAW,CAAC;QACvC;MACF;IAAC;MAAApE,GAAA;MAAAkE,KAAA,EAMD,SAAAG,OAAA,EAAS;QACP,IAAAC,WAAA,GAAyD,IAAI,CAACC,KAAK;UAA3DC,IAAI,GAAAF,WAAA,CAAJE,IAAI;UAAEC,IAAI,GAAAH,WAAA,CAAJG,IAAI;UAAEC,KAAK,GAAAJ,WAAA,CAALI,KAAK;UAAEC,KAAK,GAAAL,WAAA,CAALK,KAAK;UAAEC,QAAQ,GAAAN,WAAA,CAARM,QAAQ;UAAKL,KAAK,OAAAM,yBAAA,CAAAtF,OAAA,EAAA+E,WAAA,EAAAvF,SAAA;QAEpD,IAAI+F,KAAK,GAAGN,IAAI,GAAGtC,QAAQ,CAACsC,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE;QAC7C,IAAI,OAAOM,KAAK,KAAK,QAAQ,EAAE;UAC7BA,KAAK,GAAGC,MAAM,CAACC,aAAa,CAACF,KAAK,CAAC;QACrC;QAEA,IAAMG,aAAa,GAAG;UACpBC,QAAQ,EAAET,IAAI;UACdC,KAAK,EAALA;QACF,CAAC;QAED,IAAMS,cAAc,GAAG;UACrBhD,UAAU,EAAEK,aAAa;UACzB4C,UAAU,EAAE,QAAQ;UACpB/C,SAAS,EAAE;QACb,CAAC;QAEDkC,KAAK,CAACI,KAAK,GAAG,CAACM,aAAa,EAAEN,KAAK,EAAEQ,cAAc,EAAE9C,SAAS,IAAI,CAAC,CAAC,CAAC;QACrEkC,KAAK,CAACP,GAAG,GAAG,IAAI,CAACD,SAAS;QAE1B,OACE,IAAAjF,WAAA,CAAAuG,IAAA,EAAC3G,YAAA,CAAA4G,IAAI,EAAAzF,MAAA,CAAA0F,MAAA;UAACC,UAAU,EAAE;QAAM,GAAKjB,KAAK;UAAAK,QAAA,GAC/BE,KAAK,EACLF,QAAQ;QAAA,EACL,CAAC;MAEX;IAAC;IAAA,OAAA1B,IAAA;EAAA,EAvDgBuC,oBAAa;EAA1BvC,IAAI,CAGDwC,SAAS,GAAG;IACjBC,gBAAgB,EAAE5C,kBAAS,CAAC6C,IAAI;IAChCpB,IAAI,EAAE1B,gBAAgB;IACtB2B,IAAI,EAAE1B,kBAAS,CAAC8C,MAAM;IACtBnB,KAAK,EAAE3B,kBAAS,CAAC+C,GAAG;IACpBlB,QAAQ,EAAE7B,kBAAS,CAACgD,IAAI;IACxBpB,KAAK,EAAE5B,kBAAS,CAAC+C;EACnB,CAAC;EAVG5C,IAAI,CAYD8C,YAAY,GAAG;IACpBvB,IAAI,EAAE1C,iBAAiB;IACvB4D,gBAAgB,EAAE;EACpB,CAAC;EA2CH,IAAMM,gBAAgB,GAAG,IAAAC,8BAAqB,EAAC,CAAC;EAEhD,SAASC,YAAYA,CAAC3B,IAAI,EAAE;IAC1B,IAAMM,KAAK,GAAG5C,QAAQ,CAACsC,IAAI,CAAC,IAAI,GAAG;IACnC,IAAI,OAAOM,KAAK,KAAK,QAAQ,EAAE;MAC7B,OAAOC,MAAM,CAACC,aAAa,CAACF,KAAK,CAAC;IACpC;IACA,OAAOA,KAAK;EACd;EAEA,SAASsB,kBAAkBA,CACzB5B,IAAI,EAGJ;IAAA,IAFAC,IAAI,GAAAvD,SAAA,CAAAuC,MAAA,QAAAvC,SAAA,QAAAmF,SAAA,GAAAnF,SAAA,MAAGa,iBAAiB;IAAA,IACxB2C,KAAK,GAAAxD,SAAA,CAAAuC,MAAA,QAAAvC,SAAA,QAAAmF,SAAA,GAAAnF,SAAA,MAAGc,kBAAkB;IAE1B,IAAAsE,oCAA2B,EAAC,CAAC;IAE7B,IAAMxB,KAAK,GAAGqB,YAAY,CAAC3B,IAAI,CAAC;IAChC,IAAM+B,cAAc,GAAG,IAAAC,yBAAY,EAAC9B,KAAK,CAAC;IAC1C,IAAM+B,QAAQ,GAAM3B,KAAK,SAAIL,IAAI,SAAI8B,cAAgB;IAErD,IAAIN,gBAAgB,CAACxG,GAAG,CAACgH,QAAQ,CAAC,EAAE;MAClC,OAAOR,gBAAgB,CAACvG,GAAG,CAAC+G,QAAQ,CAAC;IACvC;IACA,IAAI;MACF,IAAMC,SAAS,GAAGhF,aAAa,CAACiF,mBAAmB,CACjDnE,aAAa,EACbsC,KAAK,EACLL,IAAI,EACJ8B,cACF,CAAC;MACD,IAAMrC,KAAK,GAAG;QAAE0C,GAAG,EAAEF,SAAS;QAAEG,KAAK,EAAEC,uBAAU,CAACpH,GAAG,CAAC;MAAE,CAAC;MACzDuG,gBAAgB,CAACc,QAAQ,CAACN,QAAQ,EAAEvC,KAAK,CAAC;MAC1C,OAAOA,KAAK;IACd,CAAC,CAAC,OAAO8C,KAAK,EAAE;MACdf,gBAAgB,CAACgB,QAAQ,CAACR,QAAQ,EAAEO,KAAK,CAAC;MAC1C,MAAMA,KAAK;IACb;EACF;EAAC,SAEcE,cAAcA,CAAAC,EAAA;IAAA,OAAAC,eAAA,CAAAjG,KAAA,OAAAD,SAAA;EAAA;EAAA,SAAAkG,gBAAA;IAAAA,eAAA,OAAAC,kBAAA,CAAA9H,OAAA,EAA7B,WACEiF,IAAI,EAGJ;MAAA,IAFAC,IAAI,GAAAvD,SAAA,CAAAuC,MAAA,QAAAvC,SAAA,QAAAmF,SAAA,GAAAnF,SAAA,MAAGa,iBAAiB;MAAA,IACxB2C,KAAK,GAAAxD,SAAA,CAAAuC,MAAA,QAAAvC,SAAA,QAAAmF,SAAA,GAAAnF,SAAA,MAAGc,kBAAkB;MAE1B,IAAAsE,oCAA2B,EAAC,CAAC;MAE7B,IAAMxB,KAAK,GAAGqB,YAAY,CAAC3B,IAAI,CAAC;MAChC,IAAM+B,cAAc,GAAG,IAAAC,yBAAY,EAAC9B,KAAK,CAAC;MAC1C,IAAM+B,QAAQ,GAAM3B,KAAK,SAAIL,IAAI,SAAI8B,cAAgB;MAErD,IAAIN,gBAAgB,CAACxG,GAAG,CAACgH,QAAQ,CAAC,EAAE;QAClC,OAAOR,gBAAgB,CAACvG,GAAG,CAAC+G,QAAQ,CAAC;MACvC;MACA,IAAI;QACF,IAAMC,SAAS,SAAShF,aAAa,CAAC4F,eAAe,CACnD9E,aAAa,EACbsC,KAAK,EACLL,IAAI,EACJ8B,cACF,CAAC;QACD,IAAMrC,KAAK,GAAG;UAAE0C,GAAG,EAAEF,SAAS;UAAEG,KAAK,EAAEC,uBAAU,CAACpH,GAAG,CAAC;QAAE,CAAC;QACzDuG,gBAAgB,CAACc,QAAQ,CAACN,QAAQ,EAAEvC,KAAK,CAAC;QAC1C,OAAOA,KAAK;MACd,CAAC,CAAC,OAAO8C,KAAK,EAAE;QACdf,gBAAgB,CAACgB,QAAQ,CAACR,QAAQ,EAAEO,KAAK,CAAC;QAC1C,MAAMA,KAAK;MACb;IACF,CAAC;IAAA,OAAAI,eAAA,CAAAjG,KAAA,OAAAD,SAAA;EAAA;EAAA,SAEcqG,QAAQA,CAAA;IAAA,OAAAC,SAAA,CAAArG,KAAA,OAAAD,SAAA;EAAA;EAAA,SAAAsG,UAAA;IAAAA,SAAA,OAAAH,kBAAA,CAAA9H,OAAA,EAAvB,aAAyC;MAAA,IAAjBkI,IAAI,GAAAvG,SAAA,CAAAuC,MAAA,QAAAvC,SAAA,QAAAmF,SAAA,GAAAnF,SAAA,MAAGkB,QAAQ;MACrC,IAAIK,qBAAQ,CAACiF,EAAE,KAAK,KAAK,EAAE;QACzB,IAAApB,oCAA2B,EAAC,CAAC;QAC7B,IAAI,CAACmB,IAAI,EAAE;UACT,MAAM,IAAIE,KAAK,CAAC,sDAAsD,CAAC;QACzE;QACA,MAAMjG,aAAa,CAACkG,oBAAoB,CAAAzG,KAAA,CAAlCO,aAAa,MAAAmG,mBAAA,CAAAtI,OAAA,EAAyBkI,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC,EAAC;MAC9D;IACF,CAAC;IAAA,OAAAN,SAAA,CAAArG,KAAA,OAAAD,SAAA;EAAA;EAED,SAAS6G,OAAOA,CAACvD,IAAI,EAAE;IACrB,OAAO3E,MAAM,CAACI,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC+B,QAAQ,EAAEsC,IAAI,CAAC;EAC7D;EAEA,SAASwD,cAAcA,CAAA,EAAG;IACxB,OAAO9F,QAAQ;EACjB;EAEA,SAAS+F,aAAaA,CAAA,EAAG;IACvB,OAAOzF,aAAa;EACtB;EAEAU,IAAI,CAACgF,MAAM,GAAG,IAAAC,mBAAyB,EAACjF,IAAI,CAAC;EAC7CA,IAAI,CAACgE,cAAc,GAAGA,cAAc;EACpChE,IAAI,CAACkD,kBAAkB,GAAGA,kBAAkB;EAC5ClD,IAAI,CAACqE,QAAQ,GAAGA,QAAQ;EACxBrE,IAAI,CAAC6E,OAAO,GAAGA,OAAO;EACtB7E,IAAI,CAAC8E,cAAc,GAAGA,cAAc;EACpC9E,IAAI,CAAC+E,aAAa,GAAGA,aAAa;EAElC,OAAO/E,IAAI;AACb"}