{"version":3,"names":["_util","require","_worklet_14255776442978_init_data","code","location","sourceMap","_worklet_17075624323206_init_data","withSequence","_e","global","Error","_f","_len","arguments","length","_animations","Array","_key","defineAnimation","animations","map","a","result","finished","firstAnimation","callback","forEach","animation","sequence","now","currentAnim","animationIndex","onFrame","current","nextAnim","onStart","value","previousAnimation","undefined","isHigherOrder","_closure"],"sources":["sequence.ts"],"sourcesContent":["import { defineAnimation } from './util';\nimport { NextAnimation, SequenceAnimation } from './commonTypes';\nimport {\n  Animation,\n  AnimatableValue,\n  AnimationObject,\n  Timestamp,\n} from '../commonTypes';\n\nexport function withSequence(\n  ..._animations: NextAnimation<AnimationObject>[]\n): Animation<SequenceAnimation> {\n  'worklet';\n  return defineAnimation<SequenceAnimation>(\n    _animations[0] as SequenceAnimation,\n    () => {\n      'worklet';\n      const animations = _animations.map((a) => {\n        const result = typeof a === 'function' ? a() : a;\n        result.finished = false;\n        return result;\n      });\n      const firstAnimation = animations[0];\n\n      const callback = (finished: boolean): void => {\n        if (finished) {\n          // we want to call the callback after every single animation\n          // not after all of them\n          return;\n        }\n        // this is going to be called only if sequence has been cancelled\n        animations.forEach((animation) => {\n          if (typeof animation.callback === 'function' && !animation.finished) {\n            animation.callback(finished);\n          }\n        });\n      };\n\n      function sequence(animation: SequenceAnimation, now: Timestamp): boolean {\n        const currentAnim = animations[animation.animationIndex];\n        const finished = currentAnim.onFrame(currentAnim, now);\n        animation.current = currentAnim.current;\n        if (finished) {\n          // we want to call the callback after every single animation\n          if (currentAnim.callback) {\n            currentAnim.callback(true /* finished */);\n          }\n          currentAnim.finished = true;\n          animation.animationIndex += 1;\n          if (animation.animationIndex < animations.length) {\n            const nextAnim = animations[animation.animationIndex];\n            nextAnim.onStart(nextAnim, currentAnim.current, now, currentAnim);\n            return false;\n          }\n          return true;\n        }\n        return false;\n      }\n\n      function onStart(\n        animation: SequenceAnimation,\n        value: AnimatableValue,\n        now: Timestamp,\n        previousAnimation: SequenceAnimation\n      ): void {\n        animation.animationIndex = 0;\n        if (previousAnimation === undefined) {\n          previousAnimation = animations[\n            animations.length - 1\n          ] as SequenceAnimation;\n        }\n        firstAnimation.onStart(firstAnimation, value, now, previousAnimation);\n      }\n\n      return {\n        isHigherOrder: true,\n        onFrame: sequence,\n        onStart,\n        animationIndex: 0,\n        current: firstAnimation.current,\n        callback,\n      } as SequenceAnimation;\n    }\n  );\n}\n"],"mappings":"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"}