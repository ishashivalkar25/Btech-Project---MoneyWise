a6a792bec72564415c16273c170d24eb
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = validatePathConfig;
var formatToList = function formatToList(items) {
  return items.map(function (key) {
    return "- " + key;
  }).join('\n');
};
function validatePathConfig(config) {
  var root = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var validKeys = ['initialRouteName', 'screens'];
  if (!root) {
    validKeys.push('path', 'exact', 'stringify', 'parse');
  }
  var invalidKeys = Object.keys(config).filter(function (key) {
    return !validKeys.includes(key);
  });
  if (invalidKeys.length) {
    throw new Error("Found invalid properties in the configuration:\n" + formatToList(invalidKeys) + "\n\nDid you forget to specify them under a 'screens' property?\n\nYou can only specify the following properties:\n" + formatToList(validKeys) + "\n\nSee https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.");
  }
  if (config.screens) {
    Object.entries(config.screens).forEach(function (_ref) {
      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
        _ = _ref2[0],
        value = _ref2[1];
      if (typeof value !== 'string') {
        validatePathConfig(value, false);
      }
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmb3JtYXRUb0xpc3QiLCJpdGVtcyIsIm1hcCIsImtleSIsImpvaW4iLCJ2YWxpZGF0ZVBhdGhDb25maWciLCJjb25maWciLCJyb290IiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwidmFsaWRLZXlzIiwicHVzaCIsImludmFsaWRLZXlzIiwiT2JqZWN0Iiwia2V5cyIsImZpbHRlciIsImluY2x1ZGVzIiwiRXJyb3IiLCJzY3JlZW5zIiwiZW50cmllcyIsImZvckVhY2giLCJfcmVmIiwiX3JlZjIiLCJfc2xpY2VkVG9BcnJheTIiLCJkZWZhdWx0IiwiXyIsInZhbHVlIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL3ZhbGlkYXRlUGF0aENvbmZpZy50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsSUFBTUEsWUFBWSxHQUFJLFNBQWhCQSxZQUFZQSxDQUFJQyxLQUFlO0VBQUEsT0FDbkNBLEtBQUssQ0FBQ0MsR0FBRyxDQUFFLFVBQUFDLEdBQUc7SUFBQSxjQUFVQSxHQUFJO0VBQUEsQ0FBQyxDQUFDLENBQUNDLElBQUksQ0FBQyxJQUFJLENBQUM7QUFBQTtBQUU1QixTQUFTQyxrQkFBa0JBLENBQUNDLE1BQVcsRUFBZTtFQUFBLElBQWJDLElBQUksR0FBQUMsU0FBQSxDQUFBQyxNQUFBLFFBQUFELFNBQUEsUUFBQUUsU0FBQSxHQUFBRixTQUFBLE1BQUcsSUFBSTtFQUNqRSxJQUFNRyxTQUFTLEdBQUcsQ0FBQyxrQkFBa0IsRUFBRSxTQUFTLENBQUM7RUFFakQsSUFBSSxDQUFDSixJQUFJLEVBQUU7SUFDVEksU0FBUyxDQUFDQyxJQUFJLENBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsT0FBTyxDQUFDO0VBQ3ZEO0VBRUEsSUFBTUMsV0FBVyxHQUFHQyxNQUFNLENBQUNDLElBQUksQ0FBQ1QsTUFBTSxDQUFDLENBQUNVLE1BQU0sQ0FDM0MsVUFBQWIsR0FBRztJQUFBLE9BQUssQ0FBQ1EsU0FBUyxDQUFDTSxRQUFRLENBQUNkLEdBQUcsQ0FBQztFQUFBLEVBQ2xDO0VBRUQsSUFBSVUsV0FBVyxDQUFDSixNQUFNLEVBQUU7SUFDdEIsTUFBTSxJQUFJUyxLQUFLLHNEQUNzQ2xCLFlBQVksQ0FDN0RhLFdBQVcsQ0FDWCwwSEFBb0hiLFlBQVksQ0FDaElXLFNBQVMsQ0FDVCwySEFBdUgsQ0FDMUg7RUFDSDtFQUVBLElBQUlMLE1BQU0sQ0FBQ2EsT0FBTyxFQUFFO0lBQ2xCTCxNQUFNLENBQUNNLE9BQU8sQ0FBQ2QsTUFBTSxDQUFDYSxPQUFPLENBQUMsQ0FBQ0UsT0FBTyxDQUFDLFVBQUFDLElBQUEsRUFBZ0I7TUFBQSxJQUFBQyxLQUFBLE9BQUFDLGVBQUEsQ0FBQUMsT0FBQSxFQUFMSCxJQUFBO1FBQVRJLENBQUMsR0FBQUgsS0FBQTtRQUFFSSxLQUFLLEdBQUFKLEtBQUE7TUFDL0MsSUFBSSxPQUFPSSxLQUFLLEtBQUssUUFBUSxFQUFFO1FBQzdCdEIsa0JBQWtCLENBQUNzQixLQUFLLEVBQUUsS0FBSyxDQUFDO01BQ2xDO0lBQ0YsQ0FBQyxDQUFDO0VBQ0o7QUFDRiJ9