{"version":3,"names":["findHostInstance_DEPRECATED","getShadowNodeFromRef","ref","undefined","require","e","_ref","_internalInstanceHandle","stateNode","node"],"sources":["getShadowNodeFromRef.ts"],"sourcesContent":["// Used by GestureDetector (unsupported on web at the moment) to check whether the\n// attached view may get flattened on Fabric. This implementation causes errors\n// on web due to the static resolution of `require` statements by webpack breaking\n// the conditional importing. Solved by making .web file.\nlet findHostInstance_DEPRECATED: (ref: any) => void;\n\nexport function getShadowNodeFromRef(ref: any) {\n  // load findHostInstance_DEPRECATED lazily because it may not be available before render\n  if (findHostInstance_DEPRECATED === undefined) {\n    try {\n      findHostInstance_DEPRECATED =\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        require('react-native/Libraries/Renderer/shims/ReactFabric').findHostInstance_DEPRECATED;\n    } catch (e) {\n      findHostInstance_DEPRECATED = (_ref: any) => null;\n    }\n  }\n\n  // @ts-ignore Fabric\n  return findHostInstance_DEPRECATED(ref)._internalInstanceHandle.stateNode\n    .node;\n}\n"],"mappings":";;;;;;AAIA,IAAIA,2BAAJ;AAEO,SAASC,oBAATA,CAA8BC,GAA9B,EAAwC;EAE7C,IAAIF,2BAA2B,KAAKG,SAApC,EAA+C;IAC7C,IAAI;MACFH,2BAA2B,GAEzBI,OAAO,CAAC,mDAAD,CAAP,CAA6DJ,2BAF/D;IAGD,CAJD,CAIE,OAAOK,CAAP,EAAU;MACVL,2BAA2B,GAAI,SAAAA,4BAAAM,IAAD;QAAA,OAAe,IAA7C;MAAA;IACD;EACF;EAGD,OAAON,2BAA2B,CAACE,GAAD,CAA3B,CAAiCK,uBAAjC,CAAyDC,SAAzD,CACJC,IADH;AAED"}