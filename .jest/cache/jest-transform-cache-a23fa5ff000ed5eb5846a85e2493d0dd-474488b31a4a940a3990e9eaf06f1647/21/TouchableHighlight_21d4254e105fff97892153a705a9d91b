314843c58320990dd9f320e0160554e4
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _assertThisInitialized2 = _interopRequireDefault(require("@babel/runtime/helpers/assertThisInitialized"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _excluded = ["style"];
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _GenericTouchable = _interopRequireWildcard(require("./GenericTouchable"));
var _reactNative = require("react-native");
function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();
  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };
  return cache;
}
function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache();
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
var TouchableHighlight = function (_React$Component) {
  (0, _inherits2.default)(TouchableHighlight, _React$Component);
  var _super = _createSuper(TouchableHighlight);
  function TouchableHighlight(props) {
    var _this;
    (0, _classCallCheck2.default)(this, TouchableHighlight);
    _this = _super.call(this, props);
    _defineProperty((0, _assertThisInitialized2.default)(_this), "showUnderlay", function () {
      var _this$props$onShowUnd, _this$props;
      if (!_this.hasPressHandler()) {
        return;
      }
      _this.setState({
        extraChildStyle: {
          opacity: _this.props.activeOpacity
        },
        extraUnderlayStyle: {
          backgroundColor: _this.props.underlayColor
        }
      });
      (_this$props$onShowUnd = (_this$props = _this.props).onShowUnderlay) === null || _this$props$onShowUnd === void 0 ? void 0 : _this$props$onShowUnd.call(_this$props);
    });
    _defineProperty((0, _assertThisInitialized2.default)(_this), "hasPressHandler", function () {
      return _this.props.onPress || _this.props.onPressIn || _this.props.onPressOut || _this.props.onLongPress;
    });
    _defineProperty((0, _assertThisInitialized2.default)(_this), "hideUnderlay", function () {
      var _this$props$onHideUnd, _this$props2;
      _this.setState({
        extraChildStyle: null,
        extraUnderlayStyle: null
      });
      (_this$props$onHideUnd = (_this$props2 = _this.props).onHideUnderlay) === null || _this$props$onHideUnd === void 0 ? void 0 : _this$props$onHideUnd.call(_this$props2);
    });
    _defineProperty((0, _assertThisInitialized2.default)(_this), "onStateChange", function (_from, to) {
      if (to === _GenericTouchable.TOUCHABLE_STATE.BEGAN) {
        _this.showUnderlay();
      } else if (to === _GenericTouchable.TOUCHABLE_STATE.UNDETERMINED || to === _GenericTouchable.TOUCHABLE_STATE.MOVED_OUTSIDE) {
        _this.hideUnderlay();
      }
    });
    _this.state = {
      extraChildStyle: null,
      extraUnderlayStyle: null
    };
    return _this;
  }
  (0, _createClass2.default)(TouchableHighlight, [{
    key: "renderChildren",
    value: function renderChildren() {
      if (!this.props.children) {
        return React.createElement(_reactNative.View, null);
      }
      var child = React.Children.only(this.props.children);
      return React.cloneElement(child, {
        style: _reactNative.StyleSheet.compose(child.props.style, this.state.extraChildStyle)
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props3 = this.props,
        _this$props3$style = _this$props3.style,
        style = _this$props3$style === void 0 ? {} : _this$props3$style,
        rest = (0, _objectWithoutProperties2.default)(_this$props3, _excluded);
      var extraUnderlayStyle = this.state.extraUnderlayStyle;
      return React.createElement(_GenericTouchable.default, _extends({}, rest, {
        style: [style, extraUnderlayStyle],
        onStateChange: this.onStateChange
      }), this.renderChildren());
    }
  }]);
  return TouchableHighlight;
}(React.Component);
exports.default = TouchableHighlight;
_defineProperty(TouchableHighlight, "defaultProps", Object.assign({}, _GenericTouchable.default.defaultProps, {
  activeOpacity: 0.85,
  delayPressOut: 100,
  underlayColor: 'black'
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,