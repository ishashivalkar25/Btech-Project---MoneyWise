6c612755ae94fdbd17b446d8fe24dac2
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _styles = require("./styles");
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var ic_close = require('../../assets/close.png');
var defaultProps = {
  style: {},
  value: '',
  showIcon: true,
  currency: false,
  numeric: false
};
var TextInputComponent = function TextInputComponent(props) {
  var fontFamily = props.fontFamily,
    style = props.style,
    value = props.value,
    _props$placeholderTex = props.placeholderTextColor,
    placeholderTextColor = _props$placeholderTex === void 0 ? '#000' : _props$placeholderTex,
    _props$placeholder = props.placeholder,
    placeholder = _props$placeholder === void 0 ? '' : _props$placeholder,
    showIcon = props.showIcon,
    inputStyle = props.inputStyle,
    iconStyle = props.iconStyle,
    _props$onChangeText = props.onChangeText,
    onChangeText = _props$onChangeText === void 0 ? function (_value) {} : _props$onChangeText,
    renderLeftIcon = props.renderLeftIcon,
    renderRightIcon = props.renderRightIcon;
  var _ref = (0, _react.useState)(''),
    _ref2 = (0, _slicedToArray2.default)(_ref, 2),
    text = _ref2[0],
    setText = _ref2[1];
  (0, _react.useEffect)(function () {
    if (value) {
      setText(value);
    }
  }, [value]);
  var onChange = function onChange(text) {
    setText(text);
    onChangeText(text);
  };
  var _renderRightIcon = function _renderRightIcon() {
    if (showIcon) {
      if (renderRightIcon) {
        return renderRightIcon();
      }
      if (text.length > 0) {
        return _react.default.createElement(_reactNative.TouchableOpacity, {
          onPress: function onPress() {
            return onChange('');
          }
        }, _react.default.createElement(_reactNative.Image, {
          source: ic_close,
          style: _reactNative.StyleSheet.flatten([_styles.styles.icon, iconStyle])
        }));
      }
      return null;
    }
    return null;
  };
  var font = function font() {
    if (fontFamily) {
      return {
        fontFamily: fontFamily
      };
    } else {
      return {};
    }
  };
  return _react.default.createElement(_reactNative.TouchableWithoutFeedback, null, _react.default.createElement(_reactNative.View, {
    style: [style]
  }, _react.default.createElement(_reactNative.View, {
    style: _styles.styles.textInput
  }, renderLeftIcon === null || renderLeftIcon === void 0 ? void 0 : renderLeftIcon(), _react.default.createElement(_reactNative.TextInput, _extends({}, props, {
    style: _reactNative.StyleSheet.flatten([_styles.styles.input, inputStyle, font()]),
    value: text,
    placeholder: placeholder,
    placeholderTextColor: placeholderTextColor,
    onChangeText: onChange
  })), _renderRightIcon())));
};
TextInputComponent.defaultProps = defaultProps;
var _default = TextInputComponent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcmVhY3ROYXRpdmUiLCJfc3R5bGVzIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIl9leHRlbmRzIiwiYXNzaWduIiwiYmluZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJhcHBseSIsImljX2Nsb3NlIiwiZGVmYXVsdFByb3BzIiwic3R5bGUiLCJ2YWx1ZSIsInNob3dJY29uIiwiY3VycmVuY3kiLCJudW1lcmljIiwiVGV4dElucHV0Q29tcG9uZW50IiwicHJvcHMiLCJmb250RmFtaWx5IiwiX3Byb3BzJHBsYWNlaG9sZGVyVGV4IiwicGxhY2Vob2xkZXJUZXh0Q29sb3IiLCJfcHJvcHMkcGxhY2Vob2xkZXIiLCJwbGFjZWhvbGRlciIsImlucHV0U3R5bGUiLCJpY29uU3R5bGUiLCJfcHJvcHMkb25DaGFuZ2VUZXh0Iiwib25DaGFuZ2VUZXh0IiwiX3ZhbHVlIiwicmVuZGVyTGVmdEljb24iLCJyZW5kZXJSaWdodEljb24iLCJfcmVmIiwidXNlU3RhdGUiLCJfcmVmMiIsIl9zbGljZWRUb0FycmF5MiIsInRleHQiLCJzZXRUZXh0IiwidXNlRWZmZWN0Iiwib25DaGFuZ2UiLCJfcmVuZGVyUmlnaHRJY29uIiwiY3JlYXRlRWxlbWVudCIsIlRvdWNoYWJsZU9wYWNpdHkiLCJvblByZXNzIiwiSW1hZ2UiLCJTdHlsZVNoZWV0IiwiZmxhdHRlbiIsInN0eWxlcyIsImljb24iLCJmb250IiwiVG91Y2hhYmxlV2l0aG91dEZlZWRiYWNrIiwiVmlldyIsInRleHRJbnB1dCIsIlRleHRJbnB1dCIsImlucHV0IiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVGV4dElucHV0L2luZGV4LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFDQSxJQUFBQSxNQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFTQSxJQUFBRSxPQUFBLEdBQUFGLE9BQUE7QUFBa0MsU0FBQUcseUJBQUFDLFdBQUE7RUFBQSxXQUFBQyxPQUFBO0VBQUEsSUFBQUMsaUJBQUEsT0FBQUQsT0FBQTtFQUFBLElBQUFFLGdCQUFBLE9BQUFGLE9BQUE7RUFBQSxRQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsV0FBQTtJQUFBLE9BQUFBLFdBQUEsR0FBQUcsZ0JBQUEsR0FBQUQsaUJBQUE7RUFBQSxHQUFBRixXQUFBO0FBQUE7QUFBQSxTQUFBTCx3QkFBQVMsR0FBQSxFQUFBSixXQUFBO0VBQUEsS0FBQUEsV0FBQSxJQUFBSSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQTtJQUFBLE9BQUFELEdBQUE7RUFBQTtFQUFBLElBQUFBLEdBQUEsb0JBQUFBLEdBQUEsd0JBQUFBLEdBQUE7SUFBQTtNQUFBRSxPQUFBLEVBQUFGO0lBQUE7RUFBQTtFQUFBLElBQUFHLEtBQUEsR0FBQVIsd0JBQUEsQ0FBQUMsV0FBQTtFQUFBLElBQUFPLEtBQUEsSUFBQUEsS0FBQSxDQUFBQyxHQUFBLENBQUFKLEdBQUE7SUFBQSxPQUFBRyxLQUFBLENBQUFFLEdBQUEsQ0FBQUwsR0FBQTtFQUFBO0VBQUEsSUFBQU0sTUFBQTtFQUFBLElBQUFDLHFCQUFBLEdBQUFDLE1BQUEsQ0FBQUMsY0FBQSxJQUFB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