867d2cf263cfdff5470a6acc61e3248d
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["tabBar", "state", "navigation", "descriptors", "sceneContainerStyle"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = MaterialTopTabView;
var _native = require("@react-navigation/native");
var React = _interopRequireWildcard(require("react"));
var _reactNativeTabView = require("react-native-tab-view");
var _MaterialTopTabBar = _interopRequireDefault(require("./MaterialTopTabBar"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function MaterialTopTabView(_ref) {
  var _ref$tabBar = _ref.tabBar,
    tabBar = _ref$tabBar === void 0 ? function (props) {
      return React.createElement(_MaterialTopTabBar.default, props);
    } : _ref$tabBar,
    state = _ref.state,
    navigation = _ref.navigation,
    descriptors = _ref.descriptors,
    sceneContainerStyle = _ref.sceneContainerStyle,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var _ref5 = (0, _native.useTheme)(),
    colors = _ref5.colors;
  var renderTabBar = function renderTabBar(props) {
    return tabBar(Object.assign({}, props, {
      state: state,
      navigation: navigation,
      descriptors: descriptors
    }));
  };
  var focusedOptions = descriptors[state.routes[state.index].key].options;
  return React.createElement(_reactNativeTabView.TabView, _extends({}, rest, {
    onIndexChange: function onIndexChange(index) {
      return navigation.dispatch(Object.assign({}, _native.CommonActions.navigate({
        name: state.routes[index].name,
        merge: true
      }), {
        target: state.key
      }));
    },
    renderScene: function renderScene(_ref2) {
      var route = _ref2.route;
      return descriptors[route.key].render();
    },
    navigationState: state,
    renderTabBar: renderTabBar,
    renderLazyPlaceholder: function renderLazyPlaceholder(_ref3) {
      var _ref6;
      var _descriptors$route$ke, _descriptors$route$ke2;
      var route = _ref3.route;
      return (_ref6 = (_descriptors$route$ke = (_descriptors$route$ke2 = descriptors[route.key].options).lazyPlaceholder) === null || _descriptors$route$ke === void 0 ? void 0 : _descriptors$route$ke.call(_descriptors$route$ke2)) != null ? _ref6 : null;
    },
    lazy: function lazy(_ref4) {
      var route = _ref4.route;
      return descriptors[route.key].options.lazy === true;
    },
    lazyPreloadDistance: focusedOptions.lazyPreloadDistance,
    swipeEnabled: focusedOptions.swipeEnabled,
    animationEnabled: focusedOptions.animationEnabled,
    onSwipeStart: function onSwipeStart() {
      return navigation.emit({
        type: 'swipeStart'
      });
    },
    onSwipeEnd: function onSwipeEnd() {
      return navigation.emit({
        type: 'swipeEnd'
      });
    },
    sceneContainerStyle: [{
      backgroundColor: colors.background
    }, sceneContainerStyle]
  }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfbmF0aXZlIiwicmVxdWlyZSIsIlJlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfcmVhY3ROYXRpdmVUYWJWaWV3IiwiX01hdGVyaWFsVG9wVGFiQmFyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwiYXBwbHkiLCJNYXRlcmlhbFRvcFRhYlZpZXciLCJfcmVmIiwiX3JlZiR0YWJCYXIiLCJ0YWJCYXIiLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJzdGF0ZSIsIm5hdmlnYXRpb24iLCJkZXNjcmlwdG9ycyIsInNjZW5lQ29udGFpbmVyU3R5bGUiLCJyZXN0IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiIsIl9leGNsdWRlZCIsIl9yZWY1IiwidXNlVGhlbWUiLCJjb2xvcnMiLCJyZW5kZXJUYWJCYXIiLCJmb2N1c2VkT3B0aW9ucyIsInJvdXRlcyIsImluZGV4Iiwib3B0aW9ucyIsIlRhYlZpZXciLCJvbkluZGV4Q2hhbmdlIiwiZGlzcGF0Y2giLCJDb21tb25BY3Rpb25zIiwibmF2aWdhdGUiLCJuYW1lIiwibWVyZ2UiLCJyZW5kZXJTY2VuZSIsIl9yZWYyIiwicm91dGUiLCJyZW5kZXIiLCJuYXZpZ2F0aW9uU3RhdGUiLCJyZW5kZXJMYXp5UGxhY2Vob2xkZXIiLCJfcmVmMyIsIl9yZWY2IiwiX2Rlc2NyaXB0b3JzJHJvdXRlJGtlIiwiX2Rlc2NyaXB0b3JzJHJvdXRlJGtlMiIsImxhenlQbGFjZWhvbGRlciIsImxhenkiLCJfcmVmNCIsImxhenlQcmVsb2FkRGlzdGFuY2UiLCJzd2lwZUVuYWJsZWQiLCJhbmltYXRpb25FbmFibGVkIiwib25Td2lwZVN0YXJ0IiwiZW1pdCIsInR5cGUiLCJvblN3aXBlRW5kIiwiYmFja2dyb3VuZENvbG9yIiwiYmFja2dyb3VuZCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy92aWV3cy9NYXRlcmlhbFRvcFRhYlZpZXcudHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxJQUFBQSxPQUFBLEdBQUFDLE9BQUE7QUFPQSxJQUFBQyxLQUFBLEdBQUFDLHVCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBRyxtQkFBQSxHQUFBSCxPQUFBO0FBUUEsSUFBQUksa0JBQUEsR0FBQUMsc0JBQUEsQ0FBQUwsT0FBQTtBQUFvRCxTQUFBSyx1QkFBQUMsR0FBQTtFQUFBLE9BQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUE7SUFBQUUsT0FBQSxFQUFBRjtFQUFBO0FBQUE7QUFBQSxTQUFBRyx5QkFBQUMsV0FBQTtFQUFBLFdBQUFDLE9BQUE7RUFBQSxJQUFBQyxpQkFBQSxPQUFBRCxPQUFBO0VBQUEsSUFBQUUsZ0JBQUEsT0FBQUYsT0FBQTtFQUFBLFFBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxXQUFBO0lBQUEsT0FBQUEsV0FBQSxHQUFBRyxnQkFBQSxHQUFBRCxpQkFBQTtFQUFBLEdBQUFGLFdBQUE7QUFBQTtBQUFBLFNBQUFSLHdCQUFBSSxHQUFBLEVBQUFJLFdBQUE7RUFBQSxLQUFBQSxXQUFBLElBQUFKLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBO0lBQUEsT0FBQUQsR0FBQTtFQUFBO0VBQUEsSUFBQUEsR0FB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