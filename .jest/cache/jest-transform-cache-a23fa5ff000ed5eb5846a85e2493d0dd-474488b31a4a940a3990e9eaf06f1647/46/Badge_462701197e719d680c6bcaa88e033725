b305a776d64f25f254a4a491b247f4df
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["children", "style", "visible", "size"],
  _excluded2 = ["backgroundColor"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Badge;
var _native = require("@react-navigation/native");
var _color = _interopRequireDefault(require("color"));
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function Badge(_ref) {
  var children = _ref.children,
    style = _ref.style,
    _ref$visible = _ref.visible,
    visible = _ref$visible === void 0 ? true : _ref$visible,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 18 : _ref$size,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var _React$useState = React.useState(function () {
      return new _reactNative.Animated.Value(visible ? 1 : 0);
    }),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),
    opacity = _React$useState2[0];
  var _React$useState3 = React.useState(visible),
    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),
    rendered = _React$useState4[0],
    setRendered = _React$useState4[1];
  var theme = (0, _native.useTheme)();
  React.useEffect(function () {
    if (!rendered) {
      return;
    }
    _reactNative.Animated.timing(opacity, {
      toValue: visible ? 1 : 0,
      duration: 150,
      useNativeDriver: true
    }).start(function (_ref2) {
      var finished = _ref2.finished;
      if (finished && !visible) {
        setRendered(false);
      }
    });
    return function () {
      return opacity.stopAnimation();
    };
  }, [opacity, rendered, visible]);
  if (!rendered) {
    if (visible) {
      setRendered(true);
    } else {
      return null;
    }
  }
  var _ref3 = _reactNative.StyleSheet.flatten(style) || {},
    _ref3$backgroundColor = _ref3.backgroundColor,
    backgroundColor = _ref3$backgroundColor === void 0 ? theme.colors.notification : _ref3$backgroundColor,
    restStyle = (0, _objectWithoutProperties2.default)(_ref3, _excluded2);
  var textColor = (0, _color.default)(backgroundColor).isLight() ? 'black' : 'white';
  var borderRadius = size / 2;
  var fontSize = Math.floor(size * 3 / 4);
  return React.createElement(_reactNative.Animated.Text, _extends({
    numberOfLines: 1,
    style: [{
      transform: [{
        scale: opacity.interpolate({
          inputRange: [0, 1],
          outputRange: [0.5, 1]
        })
      }],
      color: textColor,
      lineHeight: size - 1,
      height: size,
      minWidth: size,
      opacity: opacity,
      backgroundColor: backgroundColor,
      fontSize: fontSize,
      borderRadius: borderRadius
    }, styles.container, restStyle]
  }, rest), children);
}
var styles = _reactNative.StyleSheet.create({
  container: {
    alignSelf: 'flex-end',
    textAlign: 'center',
    paddingHorizontal: 4,
    overflow: 'hidden'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfbmF0aXZlIiwicmVxdWlyZSIsIl9jb2xvciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX3JlYWN0TmF0aXZlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIl9leHRlbmRzIiwiYXNzaWduIiwiYmluZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJhcHBseSIsIkJhZGdlIiwiX3JlZiIsImNoaWxkcmVuIiwic3R5bGUiLCJfcmVmJHZpc2libGUiLCJ2aXNpYmxlIiwiX3JlZiRzaXplIiwic2l6ZSIsInJlc3QiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMyIiwiX2V4Y2x1ZGVkIiwiX1JlYWN0JHVzZVN0YXRlIiwidXNlU3RhdGUiLCJBbmltYXRlZCIsIlZhbHVlIiwiX1JlYWN0JHVzZVN0YXRlMiIsIl9zbGljZWRUb0FycmF5MiIsIm9wYWNpdHkiLCJfUmVhY3QkdXNlU3RhdGUzIiwiX1JlYWN0JHVzZVN0YXRlNCIsInJlbmRlcmVkIiwic2V0UmVuZGVyZWQiLCJ0aGVtZSIsInVzZVRoZW1lIiwidXNlRWZmZWN0IiwidGltaW5nIiwidG9WYWx1ZSIsImR1cmF0aW9uIiwidXNlTmF0aXZlRHJpdmVyIiwic3RhcnQiLCJfcmVmMiIsImZpbmlzaGVkIiwic3RvcEFuaW1hdGlvbiIsIl9yZWYzIiwiU3R5bGVTaGVldCIsImZsYXR0ZW4iLCJfcmVmMyRiYWNrZ3JvdW5kQ29sb3IiLCJiYWNrZ3JvdW5kQ29sb3IiLCJjb2xvcnMiLCJub3RpZmljYXRpb24iLCJyZXN0U3R5bGUiLCJfZXhjbHVkZWQyIiwidGV4dENvbG9yIiwiaXNMaWdodCIsImJvcmRlclJhZGl1cyIsImZvbnRTaXplIiwiTWF0aCIsImZsb29yIiwiY3JlYXRlRWxlbWVudCIsIlRleHQiLCJudW1iZXJPZkxpbmVzIiwidHJhbnNmb3JtIiwic2NhbGUiLCJpbnRlcnBvbGF0ZSIsImlucHV0UmFuZ2UiLCJvdXRwdXRSYW5nZSIsImNvbG9yIiwibGluZUhlaWdodCIsImhlaWdodCIsIm1pbldpZHRoIiwic3R5bGVzIiwiY29udGFpbmVyIiwiY3JlYXRlIiwiYWxpZ25TZWxmIiwidGV4dEFsaWduIiwicGFkZGluZ0hvcml6b250YWwiLCJvdmVyZmxvdyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy92aWV3cy9CYWRnZS50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsT0FBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsTUFBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUcsS0FBQSxHQUFBQyx1QkFBQSxDQUFBSixPQUFBO0FBQ0EsSUFBQUssWUFBQSxHQUFBTCxPQUFBO0FBQTBFLFNBQUFNLHlCQUFBQyxXQUFBO0VBQUEsV0FBQUMsT0FBQTtFQUFBLElBQUFDLGlCQUFBLE9BQUFELE9BQUE7RUFBQSxJQUFBRSxnQkFBQSxPQUFBRixPQUFBO0VBQUEsUUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLFdBQUE7SUFBQSxPQUFBQSxXQUFBLEdBQUFHLGdCQUFBLEdBQUFELGlCQUFBO0VBQUEsR0FBQUYsV0FBQTtBQUFBO0FBQUEsU0FBQUgsd0JBQUFPLEdBQUEsRUFBQUosV0FBQTtFQUFBLEtBQUFBLFdBQUEsSUFBQUksR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUE7SUFB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