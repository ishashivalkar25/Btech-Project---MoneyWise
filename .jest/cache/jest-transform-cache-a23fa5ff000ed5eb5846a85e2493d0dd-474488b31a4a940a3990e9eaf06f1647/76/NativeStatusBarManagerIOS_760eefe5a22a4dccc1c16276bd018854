03fb0bfa523856cfa1a9a62d39bbf158
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var TurboModuleRegistry = _interopRequireWildcard(require("../../TurboModule/TurboModuleRegistry"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var NativeModule = TurboModuleRegistry.getEnforcing('StatusBarManager');
var constants = null;
var NativeStatusBarManager = {
  getConstants: function getConstants() {
    if (constants == null) {
      constants = NativeModule.getConstants();
    }
    return constants;
  },
  getHeight: function getHeight(callback) {
    NativeModule.getHeight(callback);
  },
  setNetworkActivityIndicatorVisible: function setNetworkActivityIndicatorVisible(visible) {
    NativeModule.setNetworkActivityIndicatorVisible(visible);
  },
  addListener: function addListener(eventType) {
    NativeModule.addListener(eventType);
  },
  removeListeners: function removeListeners(count) {
    NativeModule.removeListeners(count);
  },
  setStyle: function setStyle(statusBarStyle, animated) {
    NativeModule.setStyle(statusBarStyle, animated);
  },
  setHidden: function setHidden(hidden, withAnimation) {
    NativeModule.setHidden(hidden, withAnimation);
  }
};
var _default = NativeStatusBarManager;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUdXJib01vZHVsZVJlZ2lzdHJ5IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJyZXF1aXJlIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIk5hdGl2ZU1vZHVsZSIsImdldEVuZm9yY2luZyIsImNvbnN0YW50cyIsIk5hdGl2ZVN0YXR1c0Jhck1hbmFnZXIiLCJnZXRDb25zdGFudHMiLCJnZXRIZWlnaHQiLCJjYWxsYmFjayIsInNldE5ldHdvcmtBY3Rpdml0eUluZGljYXRvclZpc2libGUiLCJ2aXNpYmxlIiwiYWRkTGlzdGVuZXIiLCJldmVudFR5cGUiLCJyZW1vdmVMaXN0ZW5lcnMiLCJjb3VudCIsInNldFN0eWxlIiwic3RhdHVzQmFyU3R5bGUiLCJhbmltYXRlZCIsInNldEhpZGRlbiIsImhpZGRlbiIsIndpdGhBbmltYXRpb24iLCJfZGVmYXVsdCIsImV4cG9ydHMiXSwic291cmNlcyI6WyJOYXRpdmVTdGF0dXNCYXJNYW5hZ2VySU9TLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3RcbiAqIEBmb3JtYXRcbiAqL1xuXG5pbXBvcnQgdHlwZSB7VHVyYm9Nb2R1bGV9IGZyb20gJy4uLy4uL1R1cmJvTW9kdWxlL1JDVEV4cG9ydCc7XG5cbmltcG9ydCAqIGFzIFR1cmJvTW9kdWxlUmVnaXN0cnkgZnJvbSAnLi4vLi4vVHVyYm9Nb2R1bGUvVHVyYm9Nb2R1bGVSZWdpc3RyeSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3BlYyBleHRlbmRzIFR1cmJvTW9kdWxlIHtcbiAgK2dldENvbnN0YW50czogKCkgPT4ge3xcbiAgICArSEVJR0hUOiBudW1iZXIsXG4gICAgK0RFRkFVTFRfQkFDS0dST1VORF9DT0xPUj86IG51bWJlcixcbiAgfH07XG5cbiAgLy8gVE9ETyhUNDc3NTQyNzIpIENhbiB3ZSByZW1vdmUgdGhpcyBtZXRob2Q/XG4gICtnZXRIZWlnaHQ6IChjYWxsYmFjazogKHJlc3VsdDoge3xoZWlnaHQ6IG51bWJlcnx9KSA9PiB2b2lkKSA9PiB2b2lkO1xuICArc2V0TmV0d29ya0FjdGl2aXR5SW5kaWNhdG9yVmlzaWJsZTogKHZpc2libGU6IGJvb2xlYW4pID0+IHZvaWQ7XG4gICthZGRMaXN0ZW5lcjogKGV2ZW50VHlwZTogc3RyaW5nKSA9PiB2b2lkO1xuICArcmVtb3ZlTGlzdGVuZXJzOiAoY291bnQ6IG51bWJlcikgPT4gdm9pZDtcblxuICAvKipcbiAgICogIC0gc3RhdHVzQmFyU3R5bGVzIGNhbiBiZTpcbiAgICogICAgLSAnZGVmYXVsdCdcbiAgICogICAgLSAnZGFyay1jb250ZW50J1xuICAgKiAgICAtICdsaWdodC1jb250ZW50J1xuICAgKi9cbiAgK3NldFN0eWxlOiAoc3RhdHVzQmFyU3R5bGU/OiA/c3RyaW5nLCBhbmltYXRlZDogYm9vbGVhbikgPT4gdm9pZDtcbiAgLyoqXG4gICAqICAtIHdpdGhBbmltYXRpb24gY2FuIGJlOiAnbm9uZScgfCAnZmFkZScgfCAnc2xpZGUnXG4gICAqL1xuICArc2V0SGlkZGVuOiAoaGlkZGVuOiBib29sZWFuLCB3aXRoQW5pbWF0aW9uOiBzdHJpbmcpID0+IHZvaWQ7XG59XG5cbmNvbnN0IE5hdGl2ZU1vZHVsZSA9IFR1cmJvTW9kdWxlUmVnaXN0cnkuZ2V0RW5mb3JjaW5nPFNwZWM+KCdTdGF0dXNCYXJNYW5hZ2VyJyk7XG5sZXQgY29uc3RhbnRzID0gbnVsbDtcblxuY29uc3QgTmF0aXZlU3RhdHVzQmFyTWFuYWdlciA9IHtcbiAgZ2V0Q29uc3RhbnRzKCk6IHt8XG4gICAgK0hFSUdIVDogbnVtYmVyLFxuICAgICtERUZBVUxUX0JBQ0tHUk9VTkRfQ09MT1I/OiBudW1iZXIsXG4gIHx9IHtcbiAgICBpZiAoY29uc3RhbnRzID09IG51bGwpIHtcbiAgICAgIGNvbnN0YW50cyA9IE5hdGl2ZU1vZHVsZS5nZXRDb25zdGFudHMoKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnN0YW50cztcbiAgfSxcblxuICAvLyBUT0RPKFQ0Nzc1NDI3MikgQ2FuIHdlIHJlbW92ZSB0aGlzIG1ldGhvZD9cbiAgZ2V0SGVpZ2h0KGNhbGxiYWNrOiAocmVzdWx0OiB7fGhlaWdodDogbnVtYmVyfH0pID0+IHZvaWQpOiB2b2lkIHtcbiAgICBOYXRpdmVNb2R1bGUuZ2V0SGVpZ2h0KGNhbGxiYWNrKTtcbiAgfSxcblxuICBzZXROZXR3b3JrQWN0aXZpdHlJbmRpY2F0b3JWaXNpYmxlKHZpc2libGU6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICBOYXRpdmVNb2R1bGUuc2V0TmV0d29ya0FjdGl2aXR5SW5kaWNhdG9yVmlzaWJsZSh2aXNpYmxlKTtcbiAgfSxcblxuICBhZGRMaXN0ZW5lcihldmVudFR5cGU6IHN0cmluZyk6IHZvaWQge1xuICAgIE5hdGl2ZU1vZHVsZS5hZGRMaXN0ZW5lcihldmVudFR5cGUpO1xuICB9LFxuXG4gIHJlbW92ZUxpc3RlbmVycyhjb3VudDogbnVtYmVyKTogdm9pZCB7XG4gICAgTmF0aXZlTW9kdWxlLnJlbW92ZUxpc3RlbmVycyhjb3VudCk7XG4gIH0sXG5cbiAgLyoqXG4gICAqICAtIHN0YXR1c0JhclN0eWxlcyBjYW4gYmU6XG4gICAqICAgIC0gJ2RlZmF1bHQnXG4gICAqICAgIC0gJ2RhcmstY29udGVudCdcbiAgICogICAgLSAnbGlnaHQtY29udGVudCdcbiAgICovXG4gIHNldFN0eWxlKHN0YXR1c0JhclN0eWxlPzogP3N0cmluZywgYW5pbWF0ZWQ6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICBOYXRpdmVNb2R1bGUuc2V0U3R5bGUoc3RhdHVzQmFyU3R5bGUsIGFuaW1hdGVkKTtcbiAgfSxcblxuICAvKipcbiAgICogIC0gd2l0aEFuaW1hdGlvbiBjYW4gYmU6ICdub25lJyB8ICdmYWRlJyB8ICdzbGlkZSdcbiAgICovXG4gIHNldEhpZGRlbihoaWRkZW46IGJvb2xlYW4sIHdpdGhBbmltYXRpb246IHN0cmluZyk6IHZvaWQge1xuICAgIE5hdGl2ZU1vZHVsZS5zZXRIaWRkZW4oaGlkZGVuLCB3aXRoQW5pbWF0aW9uKTtcbiAgfSxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE5hdGl2ZVN0YXR1c0Jhck1hbmFnZXI7XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFZQSxJQUFBQSxtQkFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQTZFLFNBQUFDLHlCQUFBQyxXQUFBLGVBQUFDLE9BQUEsa0NBQUFDLGlCQUFBLE9BQUFELE9BQUEsUUFBQUUsZ0JBQUEsT0FBQUYsT0FBQSxZQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsV0FBQSxXQUFBQSxXQUFBLEdBQUFHLGdCQUFBLEdBQUFELGlCQUFBLEtBQUFGLFdBQUE7QUFBQSxTQUFBSCx3QkFBQU8sR0FBQSxFQUFBSixXQUFBLFNBQUFBLFdBQUEsSUFBQUksR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsV0FBQUQsR0FBQSxRQUFBQSxHQUFBLG9CQUFBQSxHQUFBLHdCQUFBQSxHQUFBLDRCQUFBRSxPQUFBLEVBQUFGLEdBQUEsVUFBQUcsS0FBQSxHQUFBUix3QkFBQSxDQUFBQyxXQUFBLE9BQUFPLEtBQUEsSUFBQUEsS0FBQSxDQUFBQyxHQUFBLENBQUFKLEdBQUEsWUFBQUcsS0FBQSxDQUFBRSxHQUFBLENBQUFMLEdBQUEsU0FBQU0sTUFBQSxXQUFBQyxxQkFBQSxHQUFBQyxNQUFBLENBQUFDLGNBQUEsSUFBQUQsTUFBQSxDQUFBRSx3QkFBQSxXQUFBQyxHQUFBLElBQUFYLEdBQUEsUUFBQVcsR0FBQSxrQkFBQUgsTUFBQSxDQUFBSSxTQUFBLENBQUFDLGNBQUEsQ0FBQUMsSUFBQSxDQUFBZCxHQUFBLEVBQUFXLEdBQUEsU0FBQUksSUFBQSxHQUFBUixxQkFBQSxHQUFBQyxNQUFBLENBQUFFLHdCQUFBLENBQUFWLEdBQUEsRUFBQVcsR0FBQSxjQUFBSSxJQUFBLEtBQUFBLElBQUEsQ0FBQVYsR0FBQSxJQUFBVSxJQUFBLENBQUFDLEdBQUEsS0FBQVIsTUFBQSxDQUFBQyxjQUFBLENBQUFILE1BQUEsRUFBQUssR0FBQSxFQUFBSSxJQUFBLFlBQUFULE1BQUEsQ0FBQUssR0FBQSxJQUFBWCxHQUFBLENBQUFXLEdBQUEsU0FBQUwsTUFBQSxDQUFBSixPQUFBLEdBQUFGLEdBQUEsTUFBQUcsS0FBQSxJQUFBQSxLQUFBLENBQUFhLEdBQUEsQ0FBQWhCLEdBQUEsRUFBQU0sTUFBQSxZQUFBQSxNQUFBO0FBMkI3RSxJQUFNVyxZQUFZLEdBQUd6QixtQkFBbUIsQ0FBQzBCLFlBQVksQ0FBTyxrQkFBa0IsQ0FBQztBQUMvRSxJQUFJQyxTQUFTLEdBQUcsSUFBSTtBQUVwQixJQUFNQyxzQkFBc0IsR0FBRztFQUM3QkMsWUFBWSxXQUFBQSxhQUFBLEVBR1Q7SUFDRCxJQUFJRixTQUFTLElBQUksSUFBSSxFQUFFO01BQ3JCQSxTQUFTLEdBQUdGLFlBQVksQ0FBQ0ksWUFBWSxDQUFDLENBQUM7SUFDekM7SUFDQSxPQUFPRixTQUFTO0VBQ2xCLENBQUM7RUFHREcsU0FBUyxXQUFBQSxVQUFDQyxRQUE4QyxFQUFRO0lBQzlETixZQUFZLENBQUNLLFNBQVMsQ0FBQ0MsUUFBUSxDQUFDO0VBQ2xDLENBQUM7RUFFREMsa0NBQWtDLFdBQUFBLG1DQUFDQyxPQUFnQixFQUFRO0lBQ3pEUixZQUFZLENBQUNPLGtDQUFrQyxDQUFDQyxPQUFPLENBQUM7RUFDMUQsQ0FBQztFQUVEQyxXQUFXLFdBQUFBLFlBQUNDLFNBQWlCLEVBQVE7SUFDbkNWLFlBQVksQ0FBQ1MsV0FBVyxDQUFDQyxTQUFTLENBQUM7RUFDckMsQ0FBQztFQUVEQyxlQUFlLFdBQUFBLGdCQUFDQyxLQUFhLEVBQVE7SUFDbkNaLFlBQVksQ0FBQ1csZUFBZSxDQUFDQyxLQUFLLENBQUM7RUFDckMsQ0FBQztFQVFEQyxRQUFRLFdBQUFBLFNBQUNDLGNBQXdCLEVBQUVDLFFBQWlCLEVBQVE7SUFDMURmLFlBQVksQ0FBQ2EsUUFBUSxDQUFDQyxjQUFjLEVBQUVDLFFBQVEsQ0FBQztFQUNqRCxDQUFDO0VBS0RDLFNBQVMsV0FBQUEsVUFBQ0MsTUFBZSxFQUFFQyxhQUFxQixFQUFRO0lBQ3REbEIsWUFBWSxDQUFDZ0IsU0FBUyxDQUFDQyxNQUFNLEVBQUVDLGFBQWEsQ0FBQztFQUMvQztBQUNGLENBQUM7QUFBQyxJQUFBQyxRQUFBLEdBRWFoQixzQkFBc0I7QUFBQWlCLE9BQUEsQ0FBQW5DLE9BQUEsR0FBQWtDLFFBQUEifQ==