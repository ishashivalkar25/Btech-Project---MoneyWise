{"version":3,"names":["_gesture","require","changeEventCalculator","_e","global","Error","_f","current","previous","changePayload","undefined","forceChange","force","Object","assign","_closure","__initData","_worklet_1817400999830_init_data","__workletHash","__stackDetails","__version","ForceTouchGesture","_gesture$ContinousBas","_inherits2","default","_super","_createSuper","_this","_classCallCheck2","call","_defineProperty","_assertThisInitialized2","handlerName","_createClass2","key","value","minForce","config","maxForce","feedbackOnActivation","onChange","callback","handlers","_get2","_getPrototypeOf2","prototype","ContinousBaseGesture"],"sources":["forceTouchGesture.ts"],"sourcesContent":["import { BaseGestureConfig, ContinousBaseGesture } from './gesture';\nimport {\n  ForceTouchGestureConfig,\n  ForceTouchGestureHandlerEventPayload,\n} from '../ForceTouchGestureHandler';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\n\nexport type ForceTouchGestureChangeEventPayload = {\n  forceChange: number;\n};\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<ForceTouchGestureHandlerEventPayload>,\n  previous?: GestureUpdateEvent<ForceTouchGestureHandlerEventPayload>\n) {\n  'worklet';\n  let changePayload: ForceTouchGestureChangeEventPayload;\n  if (previous === undefined) {\n    changePayload = {\n      forceChange: current.force,\n    };\n  } else {\n    changePayload = {\n      forceChange: current.force - previous.force,\n    };\n  }\n\n  return { ...current, ...changePayload };\n}\n\nexport class ForceTouchGesture extends ContinousBaseGesture<\n  ForceTouchGestureHandlerEventPayload,\n  ForceTouchGestureChangeEventPayload\n> {\n  public config: BaseGestureConfig & ForceTouchGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'ForceTouchGestureHandler';\n  }\n\n  minForce(force: number) {\n    this.config.minForce = force;\n    return this;\n  }\n\n  maxForce(force: number) {\n    this.config.maxForce = force;\n    return this;\n  }\n\n  feedbackOnActivation(value: boolean) {\n    this.config.feedbackOnActivation = value;\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<\n        GestureUpdateEvent<\n          ForceTouchGestureHandlerEventPayload &\n            ForceTouchGestureChangeEventPayload\n        >\n      >\n    ) => void\n  ) {\n    // @ts-ignore TS being overprotective, ForceTouchGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type ForceTouchGestureType = InstanceType<typeof ForceTouchGesture>;\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;;;;;;;;;;;;;;;;;;;IAWSC,qBAAT;EAAA,IAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;EAAA,IAAAC,EAAA,YAAAA,GACEC,OADF,EAEEC,QAFF,EAGE;IAEA,IAAIC,aAAJ;IACA,IAAID,QAAQ,KAAKE,SAAjB,EAA4B;MAC1BD,aAAa,GAAG;QACdE,WAAW,EAAEJ,OAAO,CAACK;MADP,CAAhB;IAGD,CAJD,MAIO;MACLH,aAAa,GAAG;QACdE,WAAW,EAAEJ,OAAO,CAACK,KAAR,GAAgBJ,QAAQ,CAACI;MADxB,CAAhB;IAGD;IAED,OAAAC,MAAA,CAAAC,MAAA,KAAYP,OAAL,EAAiBE,aAAA;EACzB;EAAAH,EAAA,CAAAS,QAAA;EAAAT,EAAA,CAAAU,UAAA,GAAAC,gCAAA;EAAAX,EAAA,CAAAY,aAAA;EAAAZ,EAAA,CAAAa,cAAA,GAAAhB,EAAA;EAAAG,EAAA,CAAAc,SAAA;EAAA,OAAAd,EAAA;AAAA;AAAA,IAEYe,iBAAN,aAAAC,qBAAA;EAAA,IAAAC,UAAA,CAAAC,OAAA,EAAAH,iBAAA,EAAAC,qBAAA;EAAA,IAAAG,MAAA,GAAAC,YAAA,CAAAL,iBAAA;EAML,SAAAA,kBAAA,EAAc;IAAA,IAAAM,KAAA;IAAA,IAAAC,gBAAA,CAAAJ,OAAA,QAAAH,iBAAA;IACZM,KAAA,GAAAF,MAAA,CAAAI,IAAA;IADYC,eAAA,KAAAC,uBAAA,CAAAP,OAAA,EAAAG,KAAA,aAF+C,EAE/C;IAGZA,KAAA,CAAKK,WAAL,GAAmB,0BAAnB;IAAA,OAAAL,KAAA;EACD;EAAA,IAAAM,aAAA,CAAAT,OAAA,EAAAH,iBAAA;IAAAa,GAAA;IAAAC,KAAA,EAED,SAAAC,SAASxB,KAAD,EAAgB;MACtB,KAAKyB,MAAL,CAAYD,QAAZ,GAAuBxB,KAAvB;MACA,OAAO,IAAP;IACD;EAAA;IAAAsB,GAAA;IAAAC,KAAA,EAED,SAAAG,SAAS1B,KAAD,EAAgB;MACtB,KAAKyB,MAAL,CAAYC,QAAZ,GAAuB1B,KAAvB;MACA,OAAO,IAAP;IACD;EAAA;IAAAsB,GAAA;IAAAC,KAAA,EAED,SAAAI,qBAAqBJ,KAAD,EAAiB;MACnC,KAAKE,MAAL,CAAYE,oBAAZ,GAAmCJ,KAAnC;MACA,OAAO,IAAP;IACD;EAAA;IAAAD,GAAA;IAAAC,KAAA,EAED,SAAAK,SACEC,QADM,EASN;MAEA,KAAKC,QAAL,CAAcxC,qBAAd,GAAsCA,qBAAtC;MACA,WAAAyC,KAAA,CAAAnB,OAAA,MAAAoB,gBAAA,CAAApB,OAAA,EAAAH,iBAAA,CAAAwB,SAAA,qBAAAhB,IAAA,OAAsBY,QAAf;IACR;EAAA;EAAA,OAAApB,iBAAA;AAAA,EAxCoCrB,QAAA,CAAA8C,oBAAhC"}