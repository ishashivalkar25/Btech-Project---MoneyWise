d11208e9e3e7df768b436235c938e7f1
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _toConsumableArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/toConsumableArray"));
var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _lodash = _interopRequireDefault(require("lodash"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _toolkits = require("../../toolkits");
var _useDeviceOrientation = require("../../useDeviceOrientation");
var _TextInput = _interopRequireDefault(require("../TextInput"));
var _styles = require("./styles");
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var isTablet = _toolkits.useDetectDevice.isTablet;
var ic_down = require('../../assets/down.png');
var statusBarHeight = _reactNative.StatusBar.currentHeight || 0;
var MultiSelectComponent = _react.default.forwardRef(function (props, currentRef) {
  var orientation = (0, _useDeviceOrientation.useDeviceOrientation)();
  var testID = props.testID,
    itemTestIDField = props.itemTestIDField,
    onChange = props.onChange,
    _props$data = props.data,
    data = _props$data === void 0 ? [] : _props$data,
    value = props.value,
    _props$style = props.style,
    style = _props$style === void 0 ? {} : _props$style,
    labelField = props.labelField,
    valueField = props.valueField,
    searchField = props.searchField,
    selectedStyle = props.selectedStyle,
    selectedTextStyle = props.selectedTextStyle,
    itemContainerStyle = props.itemContainerStyle,
    itemTextStyle = props.itemTextStyle,
    iconStyle = props.iconStyle,
    _props$activeColor = props.activeColor,
    activeColor = _props$activeColor === void 0 ? '#F6F7F8' : _props$activeColor,
    containerStyle = props.containerStyle,
    fontFamily = props.fontFamily,
    placeholderStyle = props.placeholderStyle,
    _props$iconColor = props.iconColor,
    iconColor = _props$iconColor === void 0 ? 'gray' : _props$iconColor,
    inputSearchStyle = props.inputSearchStyle,
    searchPlaceholder = props.searchPlaceholder,
    _props$placeholder = props.placeholder,
    placeholder = _props$placeholder === void 0 ? 'Select item' : _props$placeholder,
    _props$search = props.search,
    search = _props$search === void 0 ? false : _props$search,
    _props$maxHeight = props.maxHeight,
    maxHeight = _props$maxHeight === void 0 ? 340 : _props$maxHeight,
    _props$minHeight = props.minHeight,
    minHeight = _props$minHeight === void 0 ? 0 : _props$minHeight,
    maxSelect = props.maxSelect,
    _props$disable = props.disable,
    disable = _props$disable === void 0 ? false : _props$disable,
    _props$keyboardAvoidi = props.keyboardAvoiding,
    keyboardAvoiding = _props$keyboardAvoidi === void 0 ? true : _props$keyboardAvoidi,
    _props$inside = props.inside,
    inside = _props$inside === void 0 ? false : _props$inside,
    _props$inverted = props.inverted,
    inverted = _props$inverted === void 0 ? true : _props$inverted,
    renderItem = props.renderItem,
    renderLeftIcon = props.renderLeftIcon,
    renderRightIcon = props.renderRightIcon,
    renderSelectedItem = props.renderSelectedItem,
    renderInputSearch = props.renderInputSearch,
    onFocus = props.onFocus,
    onBlur = props.onBlur,
    _props$showsVerticalS = props.showsVerticalScrollIndicator,
    showsVerticalScrollIndicator = _props$showsVerticalS === void 0 ? true : _props$showsVerticalS,
    _props$dropdownPositi = props.dropdownPosition,
    dropdownPosition = _props$dropdownPositi === void 0 ? 'auto' : _props$dropdownPositi,
    flatListProps = props.flatListProps,
    _props$alwaysRenderSe = props.alwaysRenderSelectedItem,
    alwaysRenderSelectedItem = _props$alwaysRenderSe === void 0 ? false : _props$alwaysRenderSe,
    searchQuery = props.searchQuery,
    backgroundColor = props.backgroundColor,
    _onChangeText = props.onChangeText,
    confirmSelectItem = props.confirmSelectItem,
    confirmUnSelectItem = props.confirmUnSelectItem,
    onConfirmSelectItem = props.onConfirmSelectItem,
    accessibilityLabel = props.accessibilityLabel,
    itemAccessibilityLabelField = props.itemAccessibilityLabelField,
    _props$visibleSelecte = props.visibleSelectedItem,
    visibleSelectedItem = _props$visibleSelecte === void 0 ? true : _props$visibleSelecte,
    _props$mode = props.mode,
    mode = _props$mode === void 0 ? 'default' : _props$mode;
  var ref = (0, _react.useRef)(null);
  var _ref2 = (0, _react.useState)(false),
    _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
    visible = _ref3[0],
    setVisible = _ref3[1];
  var _ref4 = (0, _react.useState)([]),
    _ref5 = (0, _slicedToArray2.default)(_ref4, 2),
    currentValue = _ref5[0],
    setCurrentValue = _ref5[1];
  var _ref6 = (0, _react.useState)(data),
    _ref7 = (0, _slicedToArray2.default)(_ref6, 2),
    listData = _ref7[0],
    setListData = _ref7[1];
  var _ref8 = (0, _react.useState)(Math.random()),
    _ref9 = (0, _slicedToArray2.default)(_ref8, 2),
    setKey = _ref9[1];
  var _ref10 = (0, _react.useState)(),
    _ref11 = (0, _slicedToArray2.default)(_ref10, 2),
    position = _ref11[0],
    setPosition = _ref11[1];
  var _ref12 = (0, _react.useState)(0),
    _ref13 = (0, _slicedToArray2.default)(_ref12, 2),
    keyboardHeight = _ref13[0],
    setKeyboardHeight = _ref13[1];
  var _ref14 = (0, _react.useState)(''),
    _ref15 = (0, _slicedToArray2.default)(_ref14, 2),
    searchText = _ref15[0],
    setSearchText = _ref15[1];
  var _reactNative$Dimensio = _reactNative.Dimensions.get('window'),
    W = _reactNative$Dimensio.width,
    H = _reactNative$Dimensio.height;
  var styleContainerVertical = (0, _react.useMemo)(function () {
    return {
      backgroundColor: 'rgba(0,0,0,0.1)',
      alignItems: 'center'
    };
  }, []);
  var styleHorizontal = (0, _react.useMemo)(function () {
    return {
      width: orientation === 'LANDSCAPE' ? W / 2 : '100%',
      alignSelf: 'center'
    };
  }, [W, orientation]);
  (0, _react.useImperativeHandle)(currentRef, function () {
    return {
      open: eventOpen,
      close: eventClose
    };
  });
  (0, _react.useEffect)(function () {
    setListData((0, _toConsumableArray2.default)(data));
    if (searchText) {
      onSearch(searchText);
    }
  }, [data, searchText]);
  var eventOpen = function eventOpen() {
    if (!disable) {
      setVisible(true);
      if (onFocus) {
        onFocus();
      }
      if (searchText.length > 0) {
        onSearch(searchText);
      }
    }
  };
  var eventClose = function eventClose() {
    if (!disable) {
      setVisible(false);
      if (onBlur) {
        onBlur();
      }
    }
  };
  var font = (0, _react.useCallback)(function () {
    if (fontFamily) {
      return {
        fontFamily: fontFamily
      };
    } else {
      return {};
    }
  }, [fontFamily]);
  var getValue = (0, _react.useCallback)(function () {
    setCurrentValue(value ? (0, _toConsumableArray2.default)(value) : []);
  }, [value]);
  var _measure = (0, _react.useCallback)(function () {
    if (ref && ref !== null && ref !== void 0 && ref.current) {
      ref.current.measureInWindow(function (pageX, pageY, width, height) {
        var isFull = isTablet ? false : mode === 'modal' || orientation === 'LANDSCAPE';
        var top = isFull ? 20 : height + pageY + 2;
        var bottom = H - top + height;
        var left = _reactNative.I18nManager.isRTL ? W - width - pageX : pageX;
        setPosition({
          isFull: isFull,
          width: Math.floor(width),
          top: Math.floor(top + statusBarHeight),
          bottom: Math.floor(bottom - statusBarHeight),
          left: Math.floor(left),
          height: Math.floor(height)
        });
      });
    }
  }, [H, W, orientation, mode]);
  var onKeyboardDidShow = (0, _react.useCallback)(function (e) {
    _measure();
    setKeyboardHeight(e.endCoordinates.height);
  }, [_measure]);
  var onKeyboardDidHide = (0, _react.useCallback)(function () {
    setKeyboardHeight(0);
    _measure();
  }, [_measure]);
  (0, _react.useEffect)(function () {
    var susbcriptionKeyboardDidShow = _reactNative.Keyboard.addListener('keyboardDidShow', onKeyboardDidShow);
    var susbcriptionKeyboardDidHide = _reactNative.Keyboard.addListener('keyboardDidHide', onKeyboardDidHide);
    return function () {
      if (typeof (susbcriptionKeyboardDidShow === null || susbcriptionKeyboardDidShow === void 0 ? void 0 : susbcriptionKeyboardDidShow.remove) === 'function') {
        susbcriptionKeyboardDidShow.remove();
      }
      if (typeof (susbcriptionKeyboardDidHide === null || susbcriptionKeyboardDidHide === void 0 ? void 0 : susbcriptionKeyboardDidHide.remove) === 'function') {
        susbcriptionKeyboardDidHide.remove();
      }
    };
  }, [onKeyboardDidHide, onKeyboardDidShow]);
  (0, _react.useEffect)(function () {
    getValue();
  }, [getValue, value]);
  var showOrClose = (0, _react.useCallback)(function () {
    if (!disable) {
      if (keyboardHeight > 0 && visible) {
        return _reactNative.Keyboard.dismiss();
      }
      _measure();
      setVisible(!visible);
      setListData(data);
      if (!visible) {
        if (onFocus) {
          onFocus();
        }
      } else {
        if (onBlur) {
          onBlur();
        }
      }
      if (searchText.length > 0) {
        onSearch(searchText);
      }
    }
  }, [disable, keyboardHeight, visible, _measure, data, searchText, onFocus, onBlur]);
  var onSearch = (0, _react.useCallback)(function (text) {
    if (text.length > 0) {
      var defaultFilterFunction = function defaultFilterFunction(e) {
        var _$get;
        var item = (_$get = _lodash.default.get(e, searchField || labelField)) === null || _$get === void 0 ? void 0 : _$get.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\u0300-\u036f]/g, '');
        var key = text.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\u0300-\u036f]/g, '');
        return item.indexOf(key) >= 0;
      };
      var propSearchFunction = function propSearchFunction(e) {
        var labelText = _lodash.default.get(e, searchField || labelField);
        return searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery(text, labelText);
      };
      var dataSearch = data.filter(searchQuery ? propSearchFunction : defaultFilterFunction);
      setListData(dataSearch);
    } else {
      setListData(data);
    }
  }, [data, searchField, labelField, searchQuery]);
  var onSelect = (0, _react.useCallback)(function (item) {
    var newCurrentValue = (0, _toConsumableArray2.default)(currentValue);
    var index = newCurrentValue.findIndex(function (e) {
      return e === _lodash.default.get(item, valueField);
    });
    if (index > -1) {
      newCurrentValue.splice(index, 1);
    } else {
      if (maxSelect) {
        if (newCurrentValue.length < maxSelect) {
          newCurrentValue.push(_lodash.default.get(item, valueField));
        }
      } else {
        newCurrentValue.push(_lodash.default.get(item, valueField));
      }
    }
    if (onConfirmSelectItem) {
      if (index > -1) {
        if (confirmUnSelectItem) {
          onConfirmSelectItem(newCurrentValue);
        } else {
          onChange(newCurrentValue);
        }
      } else {
        if (confirmSelectItem) {
          onConfirmSelectItem(newCurrentValue);
        } else {
          onChange(newCurrentValue);
        }
      }
    } else {
      onChange(newCurrentValue);
    }
    setKey(Math.random());
  }, [confirmSelectItem, confirmUnSelectItem, currentValue, maxSelect, onChange, onConfirmSelectItem, valueField]);
  var _renderDropdown = function _renderDropdown() {
    return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
      testID: testID,
      accessible: !!accessibilityLabel,
      accessibilityLabel: accessibilityLabel,
      onPress: showOrClose
    }, _react.default.createElement(_reactNative.View, {
      style: _styles.styles.dropdown
    }, renderLeftIcon === null || renderLeftIcon === void 0 ? void 0 : renderLeftIcon(visible), _react.default.createElement(_reactNative.Text, {
      style: _reactNative.StyleSheet.flatten([_styles.styles.textItem, placeholderStyle, font()])
    }, placeholder), renderRightIcon ? renderRightIcon(visible) : _react.default.createElement(_reactNative.Image, {
      source: ic_down,
      style: _reactNative.StyleSheet.flatten([_styles.styles.icon, {
        tintColor: iconColor
      }, iconStyle])
    })));
  };
  var checkSelected = (0, _react.useCallback)(function (item) {
    var index = currentValue.findIndex(function (e) {
      return e === _lodash.default.get(item, valueField);
    });
    return index > -1;
  }, [currentValue, valueField]);
  var _renderItem = (0, _react.useCallback)(function (_ref) {
    var item = _ref.item,
      index = _ref.index;
    var selected = checkSelected(item);
    _lodash.default.assign(item, {
      _index: index
    });
    return _react.default.createElement(_reactNative.TouchableHighlight, {
      key: index.toString(),
      testID: _lodash.default.get(item, itemTestIDField || labelField),
      accessible: !!accessibilityLabel,
      accessibilityLabel: _lodash.default.get(item, itemAccessibilityLabelField || labelField),
      underlayColor: activeColor,
      onPress: function onPress() {
        return onSelect(item);
      }
    }, _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([itemContainerStyle, selected && Object.assign({
        backgroundColor: activeColor
      }, _styles.styles.wrapItem)])
    }, renderItem ? renderItem(item, selected) : _react.default.createElement(_reactNative.View, {
      style: _styles.styles.item
    }, _react.default.createElement(_reactNative.Text, {
      style: _reactNative.StyleSheet.flatten([_styles.styles.textItem, itemTextStyle, font()])
    }, _lodash.default.get(item, labelField)))));
  }, [accessibilityLabel, activeColor, checkSelected, font, itemAccessibilityLabelField, itemContainerStyle, itemTestIDField, itemTextStyle, labelField, onSelect, renderItem]);
  var renderSearch = (0, _react.useCallback)(function () {
    if (search) {
      if (renderInputSearch) {
        return renderInputSearch(function (text) {
          if (_onChangeText) {
            setSearchText(text);
            _onChangeText(text);
          }
          onSearch(text);
        });
      } else {
        return _react.default.createElement(_TextInput.default, {
          testID: testID + ' input',
          accessibilityLabel: accessibilityLabel + ' input',
          style: [_styles.styles.input, inputSearchStyle],
          inputStyle: [inputSearchStyle, font()],
          autoCorrect: false,
          placeholder: searchPlaceholder,
          onChangeText: function onChangeText(e) {
            if (_onChangeText) {
              setSearchText(e);
              _onChangeText(e);
            }
            onSearch(e);
          },
          placeholderTextColor: "gray",
          iconStyle: [{
            tintColor: iconColor
          }, iconStyle]
        });
      }
    }
    return null;
  }, [accessibilityLabel, font, iconColor, iconStyle, inputSearchStyle, _onChangeText, onSearch, renderInputSearch, search, searchPlaceholder, testID]);
  var _renderList = (0, _react.useCallback)(function (isTopPosition) {
    var isInverted = !inverted ? false : isTopPosition;
    var _renderListHelper = function _renderListHelper() {
      return _react.default.createElement(_reactNative.FlatList, _extends({
        testID: testID + ' flatlist',
        accessibilityLabel: accessibilityLabel + ' flatlist'
      }, flatListProps, {
        keyboardShouldPersistTaps: "handled",
        data: listData,
        inverted: isTopPosition ? inverted : false,
        renderItem: _renderItem,
        keyExtractor: function keyExtractor(_item, index) {
          return index.toString();
        },
        showsVerticalScrollIndicator: showsVerticalScrollIndicator
      }));
    };
    return _react.default.createElement(_reactNative.TouchableWithoutFeedback, null, _react.default.createElement(_reactNative.View, {
      style: _styles.styles.flexShrink
    }, isInverted && _renderListHelper(), renderSearch(), !isInverted && _renderListHelper()));
  }, [_renderItem, accessibilityLabel, flatListProps, listData, inverted, renderSearch, showsVerticalScrollIndicator, testID]);
  var _renderModal = (0, _react.useCallback)(function () {
    if (visible && position) {
      var isFull = position.isFull,
        width = position.width,
        height = position.height,
        top = position.top,
        bottom = position.bottom,
        left = position.left;
      var onAutoPosition = function onAutoPosition() {
        if (keyboardHeight > 0) {
          return bottom < keyboardHeight + height;
        }
        return bottom < (search ? 150 : 100);
      };
      if (width && top && bottom) {
        var styleVertical = {
          left: left,
          maxHeight: maxHeight,
          minHeight: minHeight
        };
        var isTopPosition = dropdownPosition === 'auto' ? onAutoPosition() : dropdownPosition === 'top';
        var keyboardStyle = {};
        var extendHeight = !isTopPosition ? top : bottom;
        if (keyboardAvoiding && keyboardHeight > 0 && isTopPosition && dropdownPosition === 'auto') {
          extendHeight = keyboardHeight;
        }
        return _react.default.createElement(_reactNative.Modal, {
          transparent: true,
          statusBarTranslucent: true,
          visible: visible,
          supportedOrientations: ['landscape', 'portrait'],
          onRequestClose: showOrClose
        }, _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          onPress: showOrClose
        }, _react.default.createElement(_reactNative.View, {
          style: _reactNative.StyleSheet.flatten([_styles.styles.flex1, isFull && styleContainerVertical, backgroundColor && {
            backgroundColor: backgroundColor
          }, keyboardStyle])
        }, _react.default.createElement(_reactNative.View, {
          style: _reactNative.StyleSheet.flatten([_styles.styles.flex1, {
            width: width
          }, !isTopPosition ? {
            paddingTop: extendHeight
          } : {
            justifyContent: 'flex-end',
            paddingBottom: extendHeight
          }, isFull && _styles.styles.fullScreen])
        }, _react.default.createElement(_reactNative.View, {
          style: _reactNative.StyleSheet.flatten([_styles.styles.container, isFull ? styleHorizontal : styleVertical, containerStyle])
        }, _renderList(isTopPosition))))));
      }
      return null;
    }
    return null;
  }, [visible, search, position, keyboardHeight, maxHeight, minHeight, dropdownPosition, keyboardAvoiding, showOrClose, styleContainerVertical, backgroundColor, containerStyle, styleHorizontal, _renderList]);
  var unSelect = function unSelect(item) {
    if (!disable) {
      onSelect(item);
    }
  };
  var _renderItemSelected = function _renderItemSelected(inside) {
    var list = data.filter(function (e) {
      var check = value === null || value === void 0 ? void 0 : value.indexOf(_lodash.default.get(e, valueField));
      if (check !== -1) {
        return e;
      }
    });
    return _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([_styles.styles.rowSelectedItem, inside && _styles.styles.flex1])
    }, list.map(function (e) {
      if (renderSelectedItem) {
        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          testID: _lodash.default.get(e, itemTestIDField || labelField),
          accessible: !!accessibilityLabel,
          accessibilityLabel: _lodash.default.get(e, itemAccessibilityLabelField || labelField),
          key: _lodash.default.get(e, labelField),
          onPress: function onPress() {
            return unSelect(e);
          }
        }, renderSelectedItem(e, function () {
          unSelect(e);
        }));
      } else {
        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
          testID: _lodash.default.get(e, itemTestIDField || labelField),
          accessible: !!accessibilityLabel,
          accessibilityLabel: _lodash.default.get(e, itemAccessibilityLabelField || labelField),
          key: _lodash.default.get(e, labelField),
          onPress: function onPress() {
            return unSelect(e);
          }
        }, _react.default.createElement(_reactNative.View, {
          style: _reactNative.StyleSheet.flatten([_styles.styles.selectedItem, selectedStyle])
        }, _react.default.createElement(_reactNative.Text, {
          style: _reactNative.StyleSheet.flatten([_styles.styles.selectedTextLeftItem, selectedTextStyle, font()])
        }, _lodash.default.get(e, labelField)), _react.default.createElement(_reactNative.Text, {
          style: _reactNative.StyleSheet.flatten([_styles.styles.selectedTextItem, selectedTextStyle])
        }, "\u24E7")));
      }
    }));
  };
  var _renderInside = function _renderInside() {
    return _react.default.createElement(_reactNative.View, {
      style: _reactNative.StyleSheet.flatten([_styles.styles.mainWrap, style]),
      ref: ref,
      onLayout: _measure
    }, _renderDropdownInside(), _renderModal());
  };
  var _renderDropdownInside = function _renderDropdownInside() {
    return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {
      testID: testID,
      accessible: !!accessibilityLabel,
      accessibilityLabel: accessibilityLabel,
      onPress: showOrClose
    }, _react.default.createElement(_reactNative.View, {
      style: _styles.styles.dropdownInside
    }, renderLeftIcon === null || renderLeftIcon === void 0 ? void 0 : renderLeftIcon(), value && (value === null || value === void 0 ? void 0 : value.length) > 0 ? _renderItemSelected(true) : _react.default.createElement(_reactNative.Text, {
      style: _reactNative.StyleSheet.flatten([_styles.styles.textItem, placeholderStyle, font()])
    }, placeholder), renderRightIcon ? renderRightIcon() : _react.default.createElement(_reactNative.Image, {
      source: ic_down,
      style: _reactNative.StyleSheet.flatten([_styles.styles.icon, {
        tintColor: iconColor
      }, iconStyle])
    })));
  };
  if (inside) {
    return _renderInside();
  }
  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_reactNative.View, {
    style: _reactNative.StyleSheet.flatten([_styles.styles.mainWrap, style]),
    ref: ref,
    onLayout: _measure
  }, _renderDropdown(), _renderModal()), (!visible || alwaysRenderSelectedItem) && visibleSelectedItem && _renderItemSelected(false));
});
var _default = MultiSelectComponent;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,