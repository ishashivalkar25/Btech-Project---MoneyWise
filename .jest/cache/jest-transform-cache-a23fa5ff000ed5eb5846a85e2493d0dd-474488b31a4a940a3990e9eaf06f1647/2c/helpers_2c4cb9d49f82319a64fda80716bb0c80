8411aeea3589660a1865b7b837e25460
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getChipColors = void 0;
var _color = _interopRequireDefault(require("color"));
var _colors = require("../../styles/themes/v2/colors");
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
var getBorderColor = function getBorderColor(_ref) {
  var theme = _ref.theme,
    isOutlined = _ref.isOutlined,
    disabled = _ref.disabled,
    selectedColor = _ref.selectedColor,
    backgroundColor = _ref.backgroundColor;
  var isSelectedColor = selectedColor !== undefined;
  if (theme.isV3) {
    if (disabled) {
      return (0, _color.default)(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();
    }
    if (isSelectedColor) {
      return (0, _color.default)(selectedColor).alpha(0.29).rgb().string();
    }
    return theme.colors.outline;
  }
  if (isOutlined) {
    if (isSelectedColor) {
      return (0, _color.default)(selectedColor).alpha(0.29).rgb().string();
    }
    if (theme.dark) {
      return (0, _color.default)(_colors.white).alpha(0.29).rgb().string();
    }
    return (0, _color.default)(_colors.black).alpha(0.29).rgb().string();
  }
  return backgroundColor;
};
var getTextColor = function getTextColor(_ref2) {
  var theme = _ref2.theme,
    isOutlined = _ref2.isOutlined,
    disabled = _ref2.disabled,
    selectedColor = _ref2.selectedColor;
  var isSelectedColor = selectedColor !== undefined;
  if (theme.isV3) {
    if (disabled) {
      return theme.colors.onSurfaceDisabled;
    }
    if (isSelectedColor) {
      return selectedColor;
    }
    if (isOutlined) {
      return theme.colors.onSurfaceVariant;
    }
    return theme.colors.onSecondaryContainer;
  }
  if (disabled) {
    return theme.colors.disabled;
  }
  if (isSelectedColor) {
    return (0, _color.default)(selectedColor).alpha(0.87).rgb().string();
  }
  return (0, _color.default)(theme.colors.text).alpha(0.87).rgb().string();
};
var getDefaultBackgroundColor = function getDefaultBackgroundColor(_ref3) {
  var theme = _ref3.theme,
    isOutlined = _ref3.isOutlined;
  if (theme.isV3) {
    if (isOutlined) {
      return theme.colors.surface;
    }
    return theme.colors.secondaryContainer;
  }
  if (isOutlined) {
    var _theme$colors;
    return (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.surface;
  }
  if (theme.dark) {
    return '#383838';
  }
  return '#ebebeb';
};
var getBackgroundColor = function getBackgroundColor(_ref4) {
  var theme = _ref4.theme,
    isOutlined = _ref4.isOutlined,
    disabled = _ref4.disabled,
    customBackgroundColor = _ref4.customBackgroundColor;
  if (typeof customBackgroundColor === 'string') {
    return customBackgroundColor;
  }
  if (theme.isV3) {
    if (disabled) {
      if (isOutlined) {
        return 'transparent';
      }
      return (0, _color.default)(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();
    }
  }
  return getDefaultBackgroundColor({
    theme: theme,
    isOutlined: isOutlined
  });
};
var getSelectedBackgroundColor = function getSelectedBackgroundColor(_ref5) {
  var theme = _ref5.theme,
    isOutlined = _ref5.isOutlined,
    disabled = _ref5.disabled,
    customBackgroundColor = _ref5.customBackgroundColor,
    showSelectedOverlay = _ref5.showSelectedOverlay;
  var backgroundColor = getBackgroundColor({
    theme: theme,
    disabled: disabled,
    isOutlined: isOutlined,
    customBackgroundColor: customBackgroundColor
  });
  if (theme.isV3) {
    if (isOutlined) {
      if (showSelectedOverlay) {
        return (0, _color.default)(backgroundColor).mix((0, _color.default)(theme.colors.onSurfaceVariant), 0.12).rgb().string();
      }
      return (0, _color.default)(backgroundColor).mix((0, _color.default)(theme.colors.onSurfaceVariant), 0).rgb().string();
    }
    if (showSelectedOverlay) {
      return (0, _color.default)(backgroundColor).mix((0, _color.default)(theme.colors.onSecondaryContainer), 0.12).rgb().string();
    }
    return (0, _color.default)(backgroundColor).mix((0, _color.default)(theme.colors.onSecondaryContainer), 0).rgb().string();
  }
  if (theme.dark) {
    if (isOutlined) {
      return (0, _color.default)(backgroundColor).lighten(0.2).rgb().string();
    }
    return (0, _color.default)(backgroundColor).lighten(0.4).rgb().string();
  }
  if (isOutlined) {
    return (0, _color.default)(backgroundColor).darken(0.08).rgb().string();
  }
  return (0, _color.default)(backgroundColor).darken(0.2).rgb().string();
};
var getIconColor = function getIconColor(_ref6) {
  var theme = _ref6.theme,
    isOutlined = _ref6.isOutlined,
    disabled = _ref6.disabled,
    selectedColor = _ref6.selectedColor;
  var isSelectedColor = selectedColor !== undefined;
  if (theme.isV3) {
    if (disabled) {
      return theme.colors.onSurfaceDisabled;
    }
    if (isSelectedColor) {
      return selectedColor;
    }
    if (isOutlined) {
      return theme.colors.onSurfaceVariant;
    }
    return theme.colors.onSecondaryContainer;
  }
  if (disabled) {
    return theme.colors.disabled;
  }
  if (isSelectedColor) {
    return (0, _color.default)(selectedColor).alpha(0.54).rgb().string();
  }
  return (0, _color.default)(theme.colors.text).alpha(0.54).rgb().string();
};
var getUnderlayColor = function getUnderlayColor(_ref7) {
  var theme = _ref7.theme,
    isOutlined = _ref7.isOutlined,
    disabled = _ref7.disabled,
    selectedColor = _ref7.selectedColor,
    selectedBackgroundColor = _ref7.selectedBackgroundColor;
  var isSelectedColor = selectedColor !== undefined;
  var textColor = getTextColor({
    theme: theme,
    disabled: disabled,
    selectedColor: selectedColor,
    isOutlined: isOutlined
  });
  if (theme.isV3) {
    if (isSelectedColor) {
      return (0, _color.default)(selectedColor).alpha(0.12).rgb().string();
    }
    return (0, _color.default)(textColor).alpha(0.12).rgb().string();
  }
  if (isSelectedColor) {
    return (0, _color.default)(selectedColor).fade(0.5).rgb().string();
  }
  return selectedBackgroundColor;
};
var getChipColors = function getChipColors(_ref8) {
  var isOutlined = _ref8.isOutlined,
    theme = _ref8.theme,
    selectedColor = _ref8.selectedColor,
    showSelectedOverlay = _ref8.showSelectedOverlay,
    customBackgroundColor = _ref8.customBackgroundColor,
    disabled = _ref8.disabled;
  var baseChipColorProps = {
    theme: theme,
    isOutlined: isOutlined,
    disabled: disabled
  };
  var backgroundColor = getBackgroundColor(Object.assign({}, baseChipColorProps, {
    customBackgroundColor: customBackgroundColor
  }));
  var selectedBackgroundColor = getSelectedBackgroundColor(Object.assign({}, baseChipColorProps, {
    customBackgroundColor: customBackgroundColor,
    showSelectedOverlay: showSelectedOverlay
  }));
  return {
    borderColor: getBorderColor(Object.assign({}, baseChipColorProps, {
      selectedColor: selectedColor,
      backgroundColor: backgroundColor
    })),
    textColor: getTextColor(Object.assign({}, baseChipColorProps, {
      selectedColor: selectedColor
    })),
    iconColor: getIconColor(Object.assign({}, baseChipColorProps, {
      selectedColor: selectedColor
    })),
    underlayColor: getUnderlayColor(Object.assign({}, baseChipColorProps, {
      selectedColor: selectedColor,
      selectedBackgroundColor: selectedBackgroundColor
    })),
    backgroundColor: backgroundColor,
    selectedBackgroundColor: selectedBackgroundColor
  };
};
exports.getChipColors = getChipColors;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29sb3IiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jb2xvcnMiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImdldEJvcmRlckNvbG9yIiwiX3JlZiIsInRoZW1lIiwiaXNPdXRsaW5lZCIsImRpc2FibGVkIiwic2VsZWN0ZWRDb2xvciIsImJhY2tncm91bmRDb2xvciIsImlzU2VsZWN0ZWRDb2xvciIsInVuZGVmaW5lZCIsImlzVjMiLCJjb2xvcnMiLCJvblN1cmZhY2VWYXJpYW50IiwiYWxwaGEiLCJyZ2IiLCJzdHJpbmciLCJvdXRsaW5lIiwiZGFyayIsIndoaXRlIiwiYmxhY2siLCJnZXRUZXh0Q29sb3IiLCJfcmVmMiIsIm9uU3VyZmFjZURpc2FibGVkIiwib25TZWNvbmRhcnlDb250YWluZXIiLCJ0ZXh0IiwiZ2V0RGVmYXVsdEJhY2tncm91bmRDb2xvciIsIl9yZWYzIiwic3VyZmFjZSIsInNlY29uZGFyeUNvbnRhaW5lciIsIl90aGVtZSRjb2xvcnMiLCJnZXRCYWNrZ3JvdW5kQ29sb3IiLCJfcmVmNCIsImN1c3RvbUJhY2tncm91bmRDb2xvciIsImdldFNlbGVjdGVkQmFja2dyb3VuZENvbG9yIiwiX3JlZjUiLCJzaG93U2VsZWN0ZWRPdmVybGF5IiwibWl4IiwibGlnaHRlbiIsImRhcmtlbiIsImdldEljb25Db2xvciIsIl9yZWY2IiwiZ2V0VW5kZXJsYXlDb2xvciIsIl9yZWY3Iiwic2VsZWN0ZWRCYWNrZ3JvdW5kQ29sb3IiLCJ0ZXh0Q29sb3IiLCJmYWRlIiwiZ2V0Q2hpcENvbG9ycyIsIl9yZWY4IiwiYmFzZUNoaXBDb2xvclByb3BzIiwiT2JqZWN0IiwiYXNzaWduIiwiYm9yZGVyQ29sb3IiLCJpY29uQ29sb3IiLCJ1bmRlcmxheUNvbG9yIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0NoaXAvaGVscGVycy50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxs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