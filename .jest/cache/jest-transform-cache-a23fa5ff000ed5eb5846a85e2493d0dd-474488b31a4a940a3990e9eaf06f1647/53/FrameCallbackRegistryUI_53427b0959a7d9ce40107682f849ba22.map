{"version":3,"names":["_threads","require","_worklet_1814162711565_init_data","code","location","sourceMap","prepareUIRegistry","runOnUIImmediately","_e","global","Error","_f","frameCallbackRegistry","Map","activeFrameCallbacks","Set","previousFrameTimestamp","nextCallId","runCallbacks","callId","_this","loop","timestamp","delta","forEach","callbackId","callbackDetails","get","startTime","callback","timeSincePreviousFrame","timeSinceFirstFrame","size","requestAnimationFrame","registerFrameCallback","set","unregisterFrameCallback","manageStateFrameCallback","delete","state","add","_frameCallbackRegistry","_closure","__initData","__workletHash","__stackDetails","__version","exports"],"sources":["FrameCallbackRegistryUI.ts"],"sourcesContent":["import { runOnUIImmediately } from '../threads';\n\ntype CallbackDetails = {\n  callback: (frameInfo: FrameInfo) => void;\n  startTime: number | null;\n};\n\nexport type FrameInfo = {\n  timestamp: number;\n  timeSincePreviousFrame: number | null;\n  timeSinceFirstFrame: number;\n};\n\nexport interface FrameCallbackRegistryUI {\n  frameCallbackRegistry: Map<number, CallbackDetails>;\n  activeFrameCallbacks: Set<number>;\n  previousFrameTimestamp: number | null;\n  runCallbacks: (callId: number) => void;\n  nextCallId: number;\n  registerFrameCallback: (\n    callback: (frameInfo: FrameInfo) => void,\n    callbackId: number\n  ) => void;\n  unregisterFrameCallback: (callbackId: number) => void;\n  manageStateFrameCallback: (callbackId: number, state: boolean) => void;\n}\n\nexport const prepareUIRegistry = runOnUIImmediately(() => {\n  'worklet';\n\n  const frameCallbackRegistry: FrameCallbackRegistryUI = {\n    frameCallbackRegistry: new Map<number, CallbackDetails>(),\n    activeFrameCallbacks: new Set<number>(),\n    previousFrameTimestamp: null,\n    nextCallId: 0,\n\n    runCallbacks(callId) {\n      const loop = (timestamp: number) => {\n        if (callId !== this.nextCallId) {\n          return;\n        }\n        if (this.previousFrameTimestamp === null) {\n          this.previousFrameTimestamp = timestamp;\n        }\n\n        const delta = timestamp - this.previousFrameTimestamp;\n\n        this.activeFrameCallbacks.forEach((callbackId: number) => {\n          const callbackDetails = this.frameCallbackRegistry.get(callbackId)!;\n\n          const { startTime } = callbackDetails;\n\n          if (startTime === null) {\n            // First frame\n            callbackDetails.startTime = timestamp;\n\n            callbackDetails.callback({\n              timestamp,\n              timeSincePreviousFrame: null,\n              timeSinceFirstFrame: 0,\n            });\n          } else {\n            // Next frame\n            callbackDetails.callback({\n              timestamp,\n              timeSincePreviousFrame: delta,\n              timeSinceFirstFrame: timestamp - startTime,\n            });\n          }\n        });\n\n        if (this.activeFrameCallbacks.size > 0) {\n          this.previousFrameTimestamp = timestamp;\n          requestAnimationFrame(loop);\n        } else {\n          this.previousFrameTimestamp = null;\n        }\n      };\n\n      // runCallback() should only be called after registering a callback,\n      // so if there is only one active callback, then it means that there were\n      // zero previously and the loop isn't running yet.\n      if (this.activeFrameCallbacks.size === 1 && callId === this.nextCallId) {\n        requestAnimationFrame(loop);\n      }\n    },\n\n    registerFrameCallback(\n      callback: (frameInfo: FrameInfo) => void,\n      callbackId: number\n    ) {\n      this.frameCallbackRegistry.set(callbackId, {\n        callback: callback,\n        startTime: null,\n      });\n    },\n\n    unregisterFrameCallback(callbackId: number) {\n      this.manageStateFrameCallback(callbackId, false);\n      this.frameCallbackRegistry.delete(callbackId);\n    },\n\n    manageStateFrameCallback(callbackId: number, state: boolean) {\n      if (callbackId === -1) {\n        return;\n      }\n      if (state) {\n        this.activeFrameCallbacks.add(callbackId);\n        this.runCallbacks(this.nextCallId);\n      } else {\n        const callback = this.frameCallbackRegistry.get(callbackId)!;\n        callback.startTime = null;\n\n        this.activeFrameCallbacks.delete(callbackId);\n        if (this.activeFrameCallbacks.size === 0) {\n          this.nextCallId += 1;\n        }\n      }\n    },\n  };\n\n  global._frameCallbackRegistry = frameCallbackRegistry;\n});\n"],"mappings":"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"}