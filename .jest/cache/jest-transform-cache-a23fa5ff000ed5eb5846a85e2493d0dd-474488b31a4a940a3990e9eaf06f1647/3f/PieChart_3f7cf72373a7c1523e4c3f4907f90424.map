{"version":3,"names":["_pie","_interopRequireDefault","require","_react","_reactNative","_reactNativeSvg","_AbstractChart","_jsxRuntime","PieChart","_super","__extends","prototype","render","_this","_a","props","_b","style","backgroundColor","_c","absolute","_d","hasLegend","_e","avoidFalseZero","_f","borderRadius","chart","Pie","center","r","R","height","data","accessor","x","total","reduce","sum","item","slices","curves","map","c","i","value","percentage","Math","round","jsxs","G","children","jsx","Path","d","sector","path","print","fill","color","Rect","width","rx","ry","y","length","Text","legendFontColor","fontSize","legendFontSize","fontFamily","legendFontFamily","name","random","View","__assign","padding","Svg","renderDefs","chartConfig","Number","paddingLeft","AbstractChart","_default","exports","default"],"sources":["../src/PieChart.tsx"],"sourcesContent":["import Pie from \"paths-js/pie\";\nimport React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport { G, Path, Rect, Svg, Text } from \"react-native-svg\";\n\nimport AbstractChart, { AbstractChartProps } from \"./AbstractChart\";\n\nexport interface PieChartProps extends AbstractChartProps {\n  data: Array<any>;\n  width: number;\n  height: number;\n  accessor: string;\n  backgroundColor: string;\n  paddingLeft: string;\n  center?: Array<number>;\n  absolute?: boolean;\n  hasLegend?: boolean;\n  style?: Partial<ViewStyle>;\n  avoidFalseZero?: boolean;\n}\n\ntype PieChartState = {};\n\nclass PieChart extends AbstractChart<PieChartProps, PieChartState> {\n  render() {\n    const {\n      style = {},\n      backgroundColor,\n      absolute = false,\n      hasLegend = true,\n      avoidFalseZero = false\n    } = this.props;\n\n    const { borderRadius = 0 } = style;\n\n    const chart = Pie({\n      center: this.props.center || [0, 0],\n      r: 0,\n      R: this.props.height / 2.5,\n      data: this.props.data,\n      accessor: x => {\n        return x[this.props.accessor];\n      }\n    });\n\n    const total = this.props.data.reduce((sum, item) => {\n      return sum + item[this.props.accessor];\n    }, 0);\n\n    const slices = chart.curves.map((c, i) => {\n      let value: string;\n\n      if (absolute) {\n        value = c.item[this.props.accessor];\n      } else {\n        if (total === 0) {\n          value = 0 + \"%\";\n        } else {\n          const percentage = Math.round(\n            (100 / total) * c.item[this.props.accessor]\n          );\n          value = Math.round((100 / total) * c.item[this.props.accessor]) + \"%\";\n          if (avoidFalseZero && percentage === 0) {\n            value = \"<1%\";\n          } else {\n            value = percentage + \"%\";\n          }\n        }\n      }\n\n      return (\n        <G key={Math.random()}>\n          <Path d={c.sector.path.print()} fill={c.item.color} />\n          {hasLegend ? (\n            <Rect\n              width=\"16px\"\n              height=\"16px\"\n              fill={c.item.color}\n              rx={8}\n              ry={8}\n              x={this.props.width / 2.5 - 24}\n              y={\n                -(this.props.height / 2.5) +\n                ((this.props.height * 0.8) / this.props.data.length) * i +\n                12\n              }\n            />\n          ) : null}\n          {hasLegend ? (\n            <Text\n              fill={c.item.legendFontColor}\n              fontSize={c.item.legendFontSize}\n              fontFamily={c.item.legendFontFamily}\n              x={this.props.width / 2.5}\n              y={\n                -(this.props.height / 2.5) +\n                ((this.props.height * 0.8) / this.props.data.length) * i +\n                12 * 2\n              }\n            >\n              {`${value} ${c.item.name}`}\n            </Text>\n          ) : null}\n        </G>\n      );\n    });\n\n    return (\n      <View\n        style={{\n          width: this.props.width,\n          height: this.props.height,\n          padding: 0,\n          ...style\n        }}\n      >\n        <Svg width={this.props.width} height={this.props.height}>\n          <G>\n            {this.renderDefs({\n              width: this.props.height,\n              height: this.props.height,\n              ...this.props.chartConfig\n            })}\n          </G>\n          <Rect\n            width=\"100%\"\n            height={this.props.height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill={backgroundColor}\n          />\n          <G\n            x={\n              this.props.width / 2 / 2 +\n              Number(this.props.paddingLeft ? this.props.paddingLeft : 0)\n            }\n            y={this.props.height / 2}\n          >\n            {slices}\n          </G>\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default PieChart;\n"],"mappings":";;;;;AAAA,IAAAA,IAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAH,OAAA;AAEA,IAAAI,cAAA,GAAAL,sBAAA,CAAAC,OAAA;AAAoE,IAAAK,WAAA,GAAAL,OAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBpE,IAAAM,QAAA,aAAAC,MAAA;EAAuBC,SAAA,CAAAF,QAAA,EAAAC,MAAA;EAAvB,SAAAD,SAAA;;EAyHA;EAxHEA,QAAA,CAAAG,SAAA,CAAAC,MAAM,GAAN;IAAA,IAAAC,KAAA;IACQ,IAAAC,EAAA,GAMF,IAAI,CAACC,KAAK;MALZC,EAAA,GAAAF,EAAA,CAAAG,KAAU;MAAVA,KAAK,GAAAD,EAAA,cAAG,EAAE,GAAAA,EAAA;MACVE,eAAe,GAAAJ,EAAA,CAAAI,eAAA;MACfC,EAAA,GAAAL,EAAA,CAAAM,QAAgB;MAAhBA,QAAQ,GAAAD,EAAA,cAAG,KAAK,GAAAA,EAAA;MAChBE,EAAA,GAAAP,EAAA,CAAAQ,SAAgB;MAAhBA,SAAS,GAAAD,EAAA,cAAG,IAAI,GAAAA,EAAA;MAChBE,EAAA,GAAAT,EAAA,CAAAU,cAAsB;MAAtBA,cAAc,GAAAD,EAAA,cAAG,KAAK,GAAAA,EACV;IAEN,IAAAE,EAAA,GAAqBR,KAAK,CAAAS,YAAV;MAAhBA,YAAY,GAAAD,EAAA,cAAG,CAAC,GAAAA,EAAA;IAExB,IAAME,KAAK,GAAG,IAAAC,YAAG,EAAC;MAChBC,MAAM,EAAE,IAAI,CAACd,KAAK,CAACc,MAAM,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;MACnCC,CAAC,EAAE,CAAC;MACJC,CAAC,EAAE,IAAI,CAAChB,KAAK,CAACiB,MAAM,GAAG,GAAG;MAC1BC,IAAI,EAAE,IAAI,CAAClB,KAAK,CAACkB,IAAI;MACrBC,QAAQ,EAAE,SAAAA,SAAAC,CAAC;QACT,OAAOA,CAAC,CAACtB,KAAI,CAACE,KAAK,CAACmB,QAAQ,CAAC;MAC/B;KACD,CAAC;IAEF,IAAME,KAAK,GAAG,IAAI,CAACrB,KAAK,CAACkB,IAAI,CAACI,MAAM,CAAC,UAACC,GAAG,EAAEC,IAAI;MAC7C,OAAOD,GAAG,GAAGC,IAAI,CAAC1B,KAAI,CAACE,KAAK,CAACmB,QAAQ,CAAC;IACxC,CAAC,EAAE,CAAC,CAAC;IAEL,IAAMM,MAAM,GAAGb,KAAK,CAACc,MAAM,CAACC,GAAG,CAAC,UAACC,CAAC,EAAEC,CAAC;MACnC,IAAIC,KAAa;MAEjB,IAAIzB,QAAQ,EAAE;QACZyB,KAAK,GAAGF,CAAC,CAACJ,IAAI,CAAC1B,KAAI,CAACE,KAAK,CAACmB,QAAQ,CAAC;OACpC,MAAM;QACL,IAAIE,KAAK,KAAK,CAAC,EAAE;UACfS,KAAK,GAAG,CAAC,GAAG,GAAG;SAChB,MAAM;UACL,IAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAC1B,GAAG,GAAGZ,KAAK,GAAIO,CAAC,CAACJ,IAAI,CAAC1B,KAAI,CAACE,KAAK,CAACmB,QAAQ,CAAC,CAC5C;UACDW,KAAK,GAAGE,IAAI,CAACC,KAAK,CAAE,GAAG,GAAGZ,KAAK,GAAIO,CAAC,CAACJ,IAAI,CAAC1B,KAAI,CAACE,KAAK,CAACmB,QAAQ,CAAC,CAAC,GAAG,GAAG;UACrE,IAAIV,cAAc,IAAIsB,UAAU,KAAK,CAAC,EAAE;YACtCD,KAAK,GAAG,KAAK;WACd,MAAM;YACLA,KAAK,GAAGC,UAAU,GAAG,GAAG;;;;MAK9B,OACE,IAAAvC,WAAA,CAAA0C,IAAA,EAAC5C,eAAA,CAAA6C,CAAC;QAAAC,QAAA,GACA,IAAA5C,WAAA,CAAA6C,GAAA,EAAC/C,eAAA,CAAAgD,IAAI;UAACC,CAAC,EAAEX,CAAC,CAACY,MAAM,CAACC,IAAI,CAACC,KAAK,EAAG;UAACC,IAAI,EAAEf,CAAC,CAACJ,IAAI,CAACoB;QAAM,EACnD,EAACrC,SAAS,GACR,IAAAf,WAAA,CAAA6C,GAAA,EAAC/C,eAAA,CAAAuD,IAAI;UACHC,KAAK,EAAC,MAAM;UACZ7B,MAAM,EAAC,MAAM;UACb0B,IAAI,EAAEf,CAAC,CAACJ,IAAI,CAACoB,KAAM;UACnBG,EAAE,EAAE,CAAE;UACNC,EAAE,EAAE,CAAE;UACN5B,CAAC,EAAEtB,KAAI,CAACE,KAAK,CAAC8C,KAAK,GAAG,GAAG,GAAG,EAAG;UAC/BG,CAAC,EACC,EAAEnD,KAAI,CAACE,KAAK,CAACiB,MAAM,GAAG,GAAG,CAAC,GACxBnB,KAAI,CAACE,KAAK,CAACiB,MAAM,GAAG,GAAG,GAAInB,KAAI,CAACE,KAAK,CAACkB,IAAI,CAACgC,MAAM,GAAIrB,CAAC,GACxD;QACD,EACD,GACA,IAAI,EACPtB,SAAS,GACR,IAAAf,WAAA,CAAA6C,GAAA,EAAC/C,eAAA,CAAA6D,IAAI;UACHR,IAAI,EAAEf,CAAC,CAACJ,IAAI,CAAC4B,eAAgB;UAC7BC,QAAQ,EAAEzB,CAAC,CAACJ,IAAI,CAAC8B,cAAe;UAChCC,UAAU,EAAE3B,CAAC,CAACJ,IAAI,CAACgC,gBAAiB;UACpCpC,CAAC,EAAEtB,KAAI,CAACE,KAAK,CAAC8C,KAAK,GAAG,GAAI;UAC1BG,CAAC,EACC,EAAEnD,KAAI,CAACE,KAAK,CAACiB,MAAM,GAAG,GAAG,CAAC,GACxBnB,KAAI,CAACE,KAAK,CAACiB,MAAM,GAAG,GAAG,GAAInB,KAAI,CAACE,KAAK,CAACkB,IAAI,CAACgC,MAAM,GAAIrB,CAAC,GACxD,EAAE,GAAG,CACN;UAAAO,QAAA,EAEGN,KAAK,SAAIF,CAAC,CAACJ,IAAI,CAACiC;QAAM,CACtB,CAAC,GACL,IAAI;MAAA,GA/BFzB,IAAI,CAAC0B,MAAM,EAgChB,CAAC;IAER,CAAC,CAAC;IAEF,OACE,IAAAlE,WAAA,CAAA6C,GAAA,EAAChD,YAAA,CAAAsE,IAAI;MACHzD,KAAK,EAAC0D,QAAA;QACJd,KAAK,EAAE,IAAI,CAAC9C,KAAK,CAAC8C,KAAK;QACvB7B,MAAM,EAAE,IAAI,CAACjB,KAAK,CAACiB,MAAM;QACzB4C,OAAO,EAAE;MAAC,GACP3D,KAAK,CACR;MAAAkC,QAAA,EAEF,IAAA5C,WAAA,CAAA0C,IAAA,EAAC5C,eAAA,CAAAwE,GAAG;QAAChB,KAAK,EAAE,IAAI,CAAC9C,KAAK,CAAC8C,KAAM;QAAC7B,MAAM,EAAE,IAAI,CAACjB,KAAK,CAACiB,MAAO;QAAAmB,QAAA,GACtD,IAAA5C,WAAA,CAAA6C,GAAA,EAAC/C,eAAA,CAAA6C,CAAC;UAAAC,QAAA,EACC,IAAI,CAAC2B,UAAU,CAAAH,QAAA;YACdd,KAAK,EAAE,IAAI,CAAC9C,KAAK,CAACiB,MAAM;YACxBA,MAAM,EAAE,IAAI,CAACjB,KAAK,CAACiB;UAAM,GACtB,IAAI,CAACjB,KAAK,CAACgE,WAAW;QACzB,CACD,CACH,MAAAxE,WAAA,CAAA6C,GAAA,EAAC/C,eAAA,CAAAuD,IAAI;UACHC,KAAK,EAAC,MAAM;UACZ7B,MAAM,EAAE,IAAI,CAACjB,KAAK,CAACiB,MAAO;UAC1B8B,EAAE,EAAEpC,YAAa;UACjBqC,EAAE,EAAErC,YAAa;UACjBgC,IAAI,EAAExC;QAAgB,EAExB,MAAAX,WAAA,CAAA6C,GAAA,EAAC/C,eAAA,CAAA6C,CAAC;UACAf,CAAC,EACC,IAAI,CAACpB,KAAK,CAAC8C,KAAK,GAAG,CAAC,GAAG,CAAC,GACxBmB,MAAM,CAAC,IAAI,CAACjE,KAAK,CAACkE,WAAW,GAAG,IAAI,CAAClE,KAAK,CAACkE,WAAW,GAAG,CAAC,CAC3D;UACDjB,CAAC,EAAE,IAAI,CAACjD,KAAK,CAACiB,MAAM,GAAG,CAAE;UAAAmB,QAAA,EAExBX;QAAM,CACN,CACL;MAAA,CAAK;IACP,CAAM,CAAC;EAEX,CAAC;EACH,OAAAhC,QAAC;AAAD,CAAC,CAzHsB0E,sBAAa;AAyHnC,IAAAC,QAAA,GAEc3E,QAAQ;AAAA4E,OAAA,CAAAC,OAAA,GAAAF,QAAA"}