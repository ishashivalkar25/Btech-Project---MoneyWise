dd9cb464471385e87efa22ef286fc076
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _jsxRuntime = require("react/jsx-runtime");
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var React = require('react');
var View = require('../Libraries/Components/View/View');
var requireNativeComponent = require('../Libraries/ReactNative/requireNativeComponent');
var RCTScrollView = requireNativeComponent('RCTScrollView');
function mockScrollView(BaseComponent) {
  var ScrollViewMock = function (_BaseComponent) {
    (0, _inherits2.default)(ScrollViewMock, _BaseComponent);
    var _super = _createSuper(ScrollViewMock);
    function ScrollViewMock() {
      (0, _classCallCheck2.default)(this, ScrollViewMock);
      return _super.apply(this, arguments);
    }
    (0, _createClass2.default)(ScrollViewMock, [{
      key: "render",
      value: function render() {
        return (0, _jsxRuntime.jsxs)(RCTScrollView, Object.assign({}, this.props, {
          children: [this.props.refreshControl, (0, _jsxRuntime.jsx)(View, {
            children: this.props.children
          })]
        }));
      }
    }]);
    return ScrollViewMock;
  }(BaseComponent);
  return ScrollViewMock;
}
module.exports = mockScrollView;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiX2luaGVyaXRzMiIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMiIsIl9nZXRQcm90b3R5cGVPZjIiLCJfanN4UnVudGltZSIsIl9jcmVhdGVTdXBlciIsIkRlcml2ZWQiLCJoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIl9jcmVhdGVTdXBlckludGVybmFsIiwiU3VwZXIiLCJkZWZhdWx0IiwicmVzdWx0IiwiTmV3VGFyZ2V0IiwiY29uc3RydWN0b3IiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiYXJndW1lbnRzIiwiYXBwbHkiLCJzaGFtIiwiUHJveHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsImNhbGwiLCJlIiwiUmVhY3QiLCJWaWV3IiwicmVxdWlyZU5hdGl2ZUNvbXBvbmVudCIsIlJDVFNjcm9sbFZpZXciLCJtb2NrU2Nyb2xsVmlldyIsIkJhc2VDb21wb25lbnQiLCJTY3JvbGxWaWV3TW9jayIsIl9CYXNlQ29tcG9uZW50IiwiX3N1cGVyIiwia2V5IiwidmFsdWUiLCJyZW5kZXIiLCJqc3hzIiwiT2JqZWN0IiwiYXNzaWduIiwicHJvcHMiLCJjaGlsZHJlbiIsInJlZnJlc2hDb250cm9sIiwianN4IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIm1vY2tTY3JvbGxWaWV3LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqL1xuXG4vKiBlc2xpbnQtZW52IGplc3QgKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCBWaWV3ID0gcmVxdWlyZSgnLi4vTGlicmFyaWVzL0NvbXBvbmVudHMvVmlldy9WaWV3Jyk7XG5cbmNvbnN0IHJlcXVpcmVOYXRpdmVDb21wb25lbnQgPSByZXF1aXJlKCcuLi9MaWJyYXJpZXMvUmVhY3ROYXRpdmUvcmVxdWlyZU5hdGl2ZUNvbXBvbmVudCcpO1xuY29uc3QgUkNUU2Nyb2xsVmlldzogJEZsb3dGaXhNZSA9IHJlcXVpcmVOYXRpdmVDb21wb25lbnQoJ1JDVFNjcm9sbFZpZXcnKTtcblxuZnVuY3Rpb24gbW9ja1Njcm9sbFZpZXcoQmFzZUNvbXBvbmVudDogJEZsb3dGaXhNZSkge1xuICBjbGFzcyBTY3JvbGxWaWV3TW9jayBleHRlbmRzIEJhc2VDb21wb25lbnQge1xuICAgIHJlbmRlcigpOiBSZWFjdC5FbGVtZW50PHR5cGVvZiBSQ1RTY3JvbGxWaWV3PiB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8UkNUU2Nyb2xsVmlldyB7Li4udGhpcy5wcm9wc30+XG4gICAgICAgICAge3RoaXMucHJvcHMucmVmcmVzaENvbnRyb2x9XG4gICAgICAgICAgPFZpZXc+e3RoaXMucHJvcHMuY2hpbGRyZW59PC9WaWV3PlxuICAgICAgICA8L1JDVFNjcm9sbFZpZXc+XG4gICAgICApO1xuICAgIH1cbiAgfVxuICByZXR1cm4gU2Nyb2xsVmlld01vY2s7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gKG1vY2tTY3JvbGxWaWV3OiAkRmxvd0ZpeE1lKTtcbiJdLCJtYXBwaW5ncyI6IkFBWUEsWUFBWTs7QUFBQyxJQUFBQSxzQkFBQSxHQUFBQyxPQUFBO0FBQUEsSUFBQUMsZ0JBQUEsR0FBQUYsc0JBQUEsQ0FBQUMsT0FBQTtBQUFBLElBQUFFLGFBQUEsR0FB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