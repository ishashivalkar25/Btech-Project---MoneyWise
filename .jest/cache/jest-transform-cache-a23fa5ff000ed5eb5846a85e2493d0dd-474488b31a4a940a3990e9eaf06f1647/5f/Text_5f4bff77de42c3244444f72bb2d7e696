03c44aa4f98f19f142cc975b803e9ee0
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["style", "theme"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _theming = require("../../../core/theming");
var _forwardRef = require("../../../utils/forwardRef");
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var Text = function Text(_ref, ref) {
  var _theme$fonts, _theme$colors;
  var style = _ref.style,
    overrideTheme = _ref.theme,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var root = React.useRef(null);
  var theme = (0, _theming.useInternalTheme)(overrideTheme);
  React.useImperativeHandle(ref, function () {
    return {
      setNativeProps: function setNativeProps(args) {
        var _root$current;
        return (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.setNativeProps(args);
      }
    };
  });
  return React.createElement(_reactNative.Text, _extends({}, rest, {
    ref: root,
    style: [Object.assign({}, !theme.isV3 && ((_theme$fonts = theme.fonts) === null || _theme$fonts === void 0 ? void 0 : _theme$fonts.regular), {
      color: theme.isV3 ? (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.onSurface : theme.colors.text
    }), styles.text, style]
  }));
};
var styles = _reactNative.StyleSheet.create({
  text: {
    textAlign: 'left'
  }
});
var _default = (0, _forwardRef.forwardRef)(Text);
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl90aGVtaW5nIiwiX2ZvcndhcmRSZWYiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0IiwiX2V4dGVuZHMiLCJhc3NpZ24iLCJiaW5kIiwidGFyZ2V0IiwiaSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInNvdXJjZSIsImFwcGx5IiwiVGV4dCIsIl9yZWYiLCJyZWYiLCJfdGhlbWUkZm9udHMiLCJfdGhlbWUkY29sb3JzIiwic3R5bGUiLCJvdmVycmlkZVRoZW1lIiwidGhlbWUiLCJyZXN0IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiIsIl9leGNsdWRlZCIsInJvb3QiLCJ1c2VSZWYiLCJ1c2VJbnRlcm5hbFRoZW1lIiwidXNlSW1wZXJhdGl2ZUhhbmRsZSIsInNldE5hdGl2ZVByb3BzIiwiYXJncyIsIl9yb290JGN1cnJlbnQiLCJjdXJyZW50IiwiY3JlYXRlRWxlbWVudCIsImlzVjMiLCJmb250cyIsInJlZ3VsYXIiLCJjb2xvciIsImNvbG9ycyIsIm9uU3VyZmFjZSIsInRleHQiLCJzdHlsZXMiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwidGV4dEFsaWduIiwiX2RlZmF1bHQiLCJmb3J3YXJkUmVmIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL1R5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