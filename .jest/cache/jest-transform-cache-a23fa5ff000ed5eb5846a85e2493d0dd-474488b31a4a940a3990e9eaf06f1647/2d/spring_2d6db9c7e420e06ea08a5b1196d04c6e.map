{"version":3,"names":["_util","require","_worklet_13045008740772_init_data","code","location","sourceMap","_worklet_720321806976_init_data","withSpring","_e","global","Error","_f","toValue","userConfig","callback","defineAnimation","config","damping","mass","stiffness","overshootClamping","restDisplacementThreshold","restSpeedThreshold","velocity","Object","keys","forEach","key","spring","animation","now","lastTimestamp","current","deltaTime","Math","min","c","m","k","v0","x0","zeta","sqrt","omega0","omega1","t","sin1","sin","cos1","cos","underDampedEnvelope","exp","underDampedFrag1","underDampedPosition","underDampedVelocity","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","isOvershooting","isVelocity","abs","isDisplacement","onStart","value","previousAnimation","onFrame","_closure","__initData","__workletHash","__stackDetails","__version"],"sources":["spring.ts"],"sourcesContent":["import { defineAnimation } from './util';\nimport {\n  Animation,\n  AnimationCallback,\n  AnimatableValue,\n  Timestamp,\n} from '../commonTypes';\n\ninterface SpringConfig {\n  mass?: number;\n  stiffness?: number;\n  overshootClamping?: boolean;\n  restDisplacementThreshold?: number;\n  restSpeedThreshold?: number;\n  velocity?: number;\n  damping?: number;\n}\n\nexport interface SpringAnimation extends Animation<SpringAnimation> {\n  current: AnimatableValue;\n  toValue: AnimatableValue;\n  velocity: number;\n  lastTimestamp: Timestamp;\n}\n\nexport interface InnerSpringAnimation\n  extends Omit<SpringAnimation, 'toValue' | 'current'> {\n  toValue: number;\n  current: number;\n}\n\nexport function withSpring(\n  toValue: AnimatableValue,\n  userConfig?: SpringConfig,\n  callback?: AnimationCallback\n): Animation<SpringAnimation> {\n  'worklet';\n\n  return defineAnimation<SpringAnimation>(toValue, () => {\n    'worklet';\n\n    // TODO: figure out why we can't use spread or Object.assign here\n    // when user config is \"frozen object\" we can't enumerate it (perhaps\n    // something is wrong with the object prototype).\n    const config: Required<SpringConfig> = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n      overshootClamping: false,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 2,\n      velocity: 0,\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach(\n        (key) =>\n          ((config as any)[key] = userConfig[key as keyof typeof userConfig])\n      );\n    }\n\n    function spring(animation: InnerSpringAnimation, now: Timestamp): boolean {\n      const { toValue, lastTimestamp, current, velocity } = animation;\n\n      const deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n\n      const c = config.damping;\n      const m = config.mass;\n      const k = config.stiffness;\n\n      const v0 = -velocity;\n      const x0 = toValue - current;\n\n      const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n      const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n      const omega1 = omega0 * Math.sqrt(1 - zeta ** 2); // exponential decay\n\n      const t = deltaTime / 1000;\n\n      const sin1 = Math.sin(omega1 * t);\n      const cos1 = Math.cos(omega1 * t);\n\n      // under damped\n      const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n      const underDampedFrag1 =\n        underDampedEnvelope *\n        (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n\n      const underDampedPosition = toValue - underDampedFrag1;\n      // This looks crazy -- it's actually just the derivative of the oscillation function\n      const underDampedVelocity =\n        zeta * omega0 * underDampedFrag1 -\n        underDampedEnvelope *\n          (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n\n      // critically damped\n      const criticallyDampedEnvelope = Math.exp(-omega0 * t);\n      const criticallyDampedPosition =\n        toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n\n      const criticallyDampedVelocity =\n        criticallyDampedEnvelope *\n        (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n\n      const isOvershooting = () => {\n        if (config.overshootClamping && config.stiffness !== 0) {\n          return current < toValue\n            ? animation.current > toValue\n            : animation.current < toValue;\n        } else {\n          return false;\n        }\n      };\n\n      const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n      const isDisplacement =\n        config.stiffness === 0 ||\n        Math.abs(toValue - current) < config.restDisplacementThreshold;\n\n      if (zeta < 1) {\n        animation.current = underDampedPosition;\n        animation.velocity = underDampedVelocity;\n      } else {\n        animation.current = criticallyDampedPosition;\n        animation.velocity = criticallyDampedVelocity;\n      }\n\n      if (isOvershooting() || (isVelocity && isDisplacement)) {\n        if (config.stiffness !== 0) {\n          animation.velocity = 0;\n          animation.current = toValue;\n        }\n        // clear lastTimestamp to avoid using stale value by the next spring animation that starts after this one\n        animation.lastTimestamp = 0;\n        return true;\n      }\n      return false;\n    }\n\n    function onStart(\n      animation: SpringAnimation,\n      value: number,\n      now: Timestamp,\n      previousAnimation: SpringAnimation\n    ): void {\n      animation.current = value;\n      if (previousAnimation) {\n        animation.velocity =\n          previousAnimation.velocity || animation.velocity || 0;\n        animation.lastTimestamp = previousAnimation.lastTimestamp || now;\n      } else {\n        animation.lastTimestamp = now;\n      }\n    }\n\n    return {\n      onFrame: spring,\n      onStart,\n      toValue,\n      velocity: config.velocity || 0,\n      current: toValue,\n      callback,\n      lastTimestamp: 0,\n    } as SpringAnimation;\n  });\n}\n"],"mappings":"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"}